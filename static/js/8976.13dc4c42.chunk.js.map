{"version":3,"file":"static/js/8976.13dc4c42.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/CreateCollectionModal/CreateCollectionModal.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { Modal } from 'react-bootstrap';\nimport { createCollection } from '../../../../Services/Actions/homeActions'\nimport { getCollectionList } from '../../../../Services/Actions/homeActions';\nclass CreateCollectionModal extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        collectioName: null,\n        isRequesting: false\n    };\n\n    onClickCreate = event => this.onEventCreate()\n\n\n    onEnterCreate = event => {\n        if (event.key === \"Enter\") this.onEventCreate()\n    }\n    onEventCreate = () => {\n        var self = this\n        const { collectionData } = this.props\n        const { collectioName } = this.state;\n        this.setState({ isRequesting: true })\n        if (collectioName && String(collectioName).length > 0) {\n            var toastID = toast.loading(\"Loading...\")\n            if (collectionData && Object.keys(collectionData).length > 0 && collectionData.collectionList && collectionData.collectionList.length > 0) {\n                const existsCollection = collectionData.collectionList.filter(collection => String(collection.name).toLowerCase() == String(collectioName).toLowerCase());\n                if (existsCollection && existsCollection.length > 0) {\n                    toast.update(toastID, { render: \"Collection already exists.\", type: \"error\", isLoading: false, autoClose: 3000 })\n                    self.setState({ isRequesting: false });\n                }\n                else {\n                    this.onCreateLoad(toastID)\n                }\n            }\n            else this.onCreateLoad(toastID)\n        }\n    }\n    onCreateLoad = (toastID) => {\n        var self = this\n        const { collectioName } = this.state;\n        createCollection({ name: collectioName }).then((response) => {\n            self.setState({ isRequesting: false })\n            toast.update(toastID, { render: \"Collection has been successfully created.\", type: \"success\", isLoading: false, autoClose: 3000 });\n            self.props.addCollectionCallbackWithAPI(false)\n            getCollectionList().then((response) => {\n                const { responseData } = response.data;\n                if (responseData && Object.keys(responseData).length > 0) {\n                    self.props.dispatch({ type: \"COLLECTIONS\", payload: { collection: responseData.collection, assetsCount: responseData.assets } })\n                }\n            })\n\n        }).catch((ex) => {\n            self.setState({ isRequesting: false })\n        })\n    }\n    onChangeCollectionName = event => {\n        this.setState({ collectioName: event.target.value })\n    }\n\n    handleClose = event => this.setState({ collectioName: \"\" }, () => this.props.addCollectionCallback(false))\n\n\n    render() {\n        const { addCollectionModal } = this.props\n        const { collectioName, isRequesting } = this.state\n        return <Modal show={addCollectionModal} onHide={this.handleClose}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Create New Collection</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0 pt-4\">\n                    <div className=\"row mb-4 mb-xl-5\">\n                        <label className=\"col-sm-3 text-muted mb-2\">Collection Name</label>\n                        <div className=\"col-sm-9\">\n                            <input type=\"text\" name=\"company\" className=\"form-control\" placeholder=\"Enter collection name...\" onChange={this.onChangeCollectionName} value={collectioName} onKeyUp={this.onEnterCreate} />\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer className=\"p-3\">\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0\">\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm btn-min-w me-3\" onClick={this.handleClose}>Cancel</button>\n                    <button type=\"button\" className={`btn btn-primary btn-sm btn-min-w${isRequesting ? ` spinner disabled` : ``}`} onClick={this.onClickCreate}>Create</button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        collectionData: state.collection\n    }\n}\nexport default connect(mapStateToProps)(CreateCollectionModal);\n"],"names":["CreateCollectionModal","props","state","collectioName","isRequesting","onClickCreate","event","onEventCreate","onEnterCreate","key","self","collectionData","setState","String","length","toastID","toast","Object","keys","collectionList","existsCollection","filter","collection","name","toLowerCase","render","type","isLoading","autoClose","onCreateLoad","createCollection","then","response","addCollectionCallbackWithAPI","getCollectionList","responseData","data","dispatch","payload","assetsCount","assets","catch","ex","onChangeCollectionName","target","value","handleClose","addCollectionCallback","addCollectionModal","this","show","onHide","centered","closeButton","className","placeholder","onChange","onKeyUp","onClick","Component","connect"],"sourceRoot":""}