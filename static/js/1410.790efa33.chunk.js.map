{"version":3,"file":"static/js/1410.790efa33.chunk.js","mappings":"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","sources":["Layouts/Main/SocialLogin/YouTube/index.js","Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import { Component, useState, useCallback } from 'react';\r\nimport {\r\n    LoginSocialGoogle,\r\n\r\n} from 'reactjs-social-login';\r\nimport {\r\n    GoogleLoginButton,\r\n} from 'react-social-login-buttons';\r\nimport { baseUrl } from \"../../../../Assets/AssetsHelper\";\r\nimport { GET_NETWORK_ICON } from '../../../../Services/Utils/utils'\r\n\r\nconst REDIRECT_URI = 'https://ugc.taggbox.com/login';\r\nconst SocialGoogleLogin = (props) => {\r\n    const [provider, setProvider] = useState('');\r\n    const [profile, setProfile] = useState();\r\n\r\n    const onLoginStart = useCallback(() => {\r\n        alert('login start');\r\n    }, []);\r\n\r\n    const onLogoutSuccess = useCallback(() => {\r\n        setProfile(null);\r\n        setProvider('');\r\n        alert('logout success');\r\n    }, []);\r\n\r\n    const onLogout = useCallback(() => { }, []);\r\n    console.log(\"provider\", provider, profile)\r\n    return (\r\n        <>\r\n            <LoginSocialGoogle\r\n                client_id={'95564504779-0hejo69vc4apo6p0avpafasvbcfhlvom.apps.googleusercontent.com'}\r\n                redirect_uri={REDIRECT_URI}\r\n                scope=\"openid profile email\"\r\n                discoveryDocs=\"claims_supported\"\r\n                access_type=\"offline\"\r\n                onResolve={({ provider, data }) => props.onUpdateData(provider, data)}\r\n                onReject={err => {\r\n                    console.log(err);\r\n                }}\r\n            >\r\n                <div className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\">\r\n                    <div className=\"d-flex align-items-center flex-grow-1 w-75\">\r\n                        <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                        <div className=\"w-75 overflow-hidden\">\r\n                            <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                        <span className=\"h-20px w-20px\">\r\n                            <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(7)}.svg`)} alt=\"network\" style={{ filter: 'grayscale(1)', opacity: '.5' }} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </LoginSocialGoogle>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SocialGoogleLogin;","import React, { Component } from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport { HOST_DOMAIN, INSTA_CLIENT_ID } from '../../../../../../Services/Api'\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\nimport SocialLoginFacebook from '../../../../SocialLogin/Facebook'\r\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\r\nimport { GET_NETWORK_ICON } from '../../../../../../Services/Utils/utils'\r\nimport { twitterConnect, flickrConnect, yammerConnect, tumblerConnect, vimeoConnect, facebookConnect } from '../../../../SocialLogin/auth'\r\nimport { getTwitterAuthUrl, getFbAuthUrl, getYammerAuthUrl, getVimeoAuthUrl } from '../../../../../../Layouts/Main/AuthCallback/AuthSocialAcc'\r\nimport { addFacebookAccount, addInstaAccount } from '../../../../../../Layouts/Main/AuthCallback/connectSocialAcc'\r\nimport { addUserRights } from '../../../../../../Services/Actions/addFeedAction'\r\nimport { sendPublishRequest, publishDeleteRequest, getInstagramDetails, InstagramPostPublish, getFacebookDetails, FacebookPublish } from '../../../../../../Services/Actions/publishActions'\r\nconst channel = new BroadcastChannel('connect');\r\nclass GetRightsSocialAccount extends Component {\r\n    state = {\r\n        connected: null,\r\n        showConfirm: false\r\n    }\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId, type } = response;\r\n\r\n        var self = this\r\n        if (type == \"get-rights\") {\r\n\r\n            const responseToken = JSON.parse(event.data);\r\n            const { modalAssetData } = this.props\r\n            //getFacebookDetails, FacebookPublish\r\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\r\n                if (modalAssetData.networkId == 18) {\r\n                    addFacebookAccount(data, networkId, (data) => {\r\n                        getInstagramDetails({ access_token: data.token }).then((response) => {\r\n                            const { accounts } = response.data\r\n                            console.log(\"response.data\", response.data, accounts)\r\n                            var accountsData = [];\r\n                            if (accounts && accounts.length > 0) {\r\n                                accounts.map((item) => {\r\n                                    accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n                                })\r\n                            }\r\n\r\n                            self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\r\n                        })\r\n                    })\r\n                }\r\n                else if (modalAssetData.networkId == 2) {\r\n                    addInstaAccount(data, networkId, (data) => {\r\n                        getInstagramDetails({ access_token: data.token }).then((response) => {\r\n                            const { accounts } = response.data\r\n                            console.log(\"response.data\", response.data, accounts)\r\n                            var accountsData = [];\r\n                            if (accounts && accounts.length > 0) {\r\n                                accounts.map((item) => {\r\n                                    accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n                                })\r\n                            }\r\n\r\n                            self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\r\n                        })\r\n                    })\r\n                }\r\n\r\n            }\r\n            else if (modalAssetData.networkId == 3) {\r\n                addFacebookAccount(data, networkId, (data) => {\r\n                    getFacebookDetails({ access_token: data.token }).then((response) => {\r\n                        const { pages } = response.data\r\n                        console.log(\"response.data\", response.data, pages)\r\n                        var accountsData = [];\r\n                        if (pages && pages.length > 0) {\r\n                            pages.map((item) => {\r\n                                accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n                            })\r\n                        }\r\n\r\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\r\n                    })\r\n                })\r\n            }\r\n            // else if (modalAssetData.networkId == 1) {\r\n            //     getInstagramDetails({ access_token: data.token }).then((response) => {\r\n            //         const { accounts } = response.data\r\n            //         console.log(\"response.data\", response.data, accounts[0].id)\r\n            //         var accountsData = [];\r\n            //         if (accounts && accounts.length > 0) {\r\n            //             accounts.map((item) => {\r\n            //                 accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n            //             })\r\n            //         }\r\n\r\n            //         self.setState({ access_token: responseToken.data.access_token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\r\n            //     })\r\n            // }\r\n            else {\r\n                addUserRights(data, networkId, (data) => {\r\n                    console.log(\"addUserRights data\", data)\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n    handleYes = event => {\r\n        this.setState({ showConfirm: true })\r\n    }\r\n    handleNo = event => {\r\n        this.setState({ showConfirm: true })\r\n    }\r\n    onClickSocialConnect = (data) => event => {\r\n        if (data && Object.keys(data).length > 0) {\r\n            Swal.fire({\r\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\r\n                title: `<strong>${GET_NETWORK_ICON(data.networkId)}</strong>`,\r\n                html: `Connect to ${GET_NETWORK_ICON(data.networkId)} and start collecting assets.`,\r\n                showCloseButton: true,\r\n                showCancelButton: false,\r\n                focusConfirm: true,\r\n                confirmButtonText: `Continue with ${GET_NETWORK_ICON(data.networkId)}`,\r\n                confirmButtonAriaLabel: `Continue with ${GET_NETWORK_ICON(data.networkId)}`,\r\n                cancelButtonText: '<i className=\"fa fa-thumbs-down\"></i>',\r\n                cancelButtonAriaLabel: 'Thumbs down'\r\n            }).then((result) => {\r\n                localStorage.setItem(\"networkId\", data.networkId);\r\n                localStorage.setItem(\"connectionType\", \"get-rights\");\r\n                switch (data.networkId) {\r\n                    case 1:\r\n                        getTwitterAuthUrl();\r\n                        break;\r\n                    case 6:\r\n                        flickrConnect(6);\r\n                        break;\r\n                    case 21:\r\n                        getYammerAuthUrl()\r\n                        break;\r\n                    case 11:\r\n                        tumblerConnect(11);\r\n                        break;\r\n                    case 8:\r\n                        getVimeoAuthUrl()\r\n                        break;\r\n                    case 3:\r\n                        getFbAuthUrl(3);\r\n                        break;\r\n                    case 2:\r\n                        const url = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\r\n                        window.open(url, '_blank', \"width=786,height=786\");\r\n                        break;\r\n                    case 18:\r\n                        getFbAuthUrl(18)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { showConfirm } = this.state\r\n        const { modalAssetData, connectedAccount } = this.props;\r\n        console.log(\"modalAssetData social account\", this.props)\r\n        return <><div className=\"p-lg-6 p-3\">\r\n            <div className=\"m-auto\">\r\n                {\r\n                    connectedAccount && connectedAccount.data.length > 0 ? <><h3 className=\"mb-2 pb-2 fs-7 pt-1\">\r\n                        <span className=\"fw-medium\">Connect Account</span>\r\n                    </h3>\r\n                        <div className=\"mb-8\">\r\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 border border-dark bg-white w-100\">\r\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\r\n                                    <div className=\"symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden\">\r\n                                        <img className=\"object-center-cover\" src={connectedAccount.data[0].picture} height={40} width={40} alt=\"instagram\" />\r\n                                    </div>\r\n                                    <div className=\"w-75 overflow-hidden\">\r\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                    <span className=\"h-20px w-20px\">\r\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} alt=\"\" />\r\n                                    </span>\r\n                                </div>\r\n                            </button>\r\n                            <span className=\"fw-medium\">You are logged in with this account</span>\r\n                        </div></> : <>{\r\n                            modalAssetData.networkId == 7 ? <SocialGoogleLogin onUpdateData={this.props.onUpdateData} /> : <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\r\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\r\n                                    <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                                    <div className=\"w-75 overflow-hidden\">\r\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\r\n                                    </div>\r\n                                </div>\r\n                                {modalAssetData.networkId ?\r\n                                    <div className=\"d-flex\">\r\n                                        <span className=\"h-20px w-20px\">\r\n                                            <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} alt=\"network\" style={{ filter: 'grayscale(1)', opacity: '.5' }} />\r\n                                        </span>\r\n                                    </div>\r\n                                    : null}\r\n                            </button>\r\n                        }</>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default GetRightsSocialAccount;"],"names":["props","useState","provider","setProvider","profile","setProfile","useCallback","alert","console","log","client_id","redirect_uri","scope","discoveryDocs","access_type","onResolve","data","onUpdateData","onReject","err","className","src","baseUrl","GET_NETWORK_ICON","alt","style","filter","opacity","channel","BroadcastChannel","GetRightsSocialAccount","state","connected","showConfirm","readAuthenticationCode","event","response","JSON","parse","networkId","type","self","modalAssetData","addFacebookAccount","getInstagramDetails","access_token","token","then","accounts","accountsData","length","map","item","push","id","name","username","picture","setState","socialData","addInstaAccount","getFacebookDetails","pages","addUserRights","handleYes","handleNo","onClickSocialConnect","Object","keys","Swal","imageUrl","title","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","result","localStorage","setItem","getTwitterAuthUrl","flickrConnect","getYammerAuthUrl","tumblerConnect","getVimeoAuthUrl","getFbAuthUrl","url","INSTA_CLIENT_ID","HOST_DOMAIN","window","open","addEventListener","this","removeEventListener","connectedAccount","height","width","onClick","Component"],"sourceRoot":""}