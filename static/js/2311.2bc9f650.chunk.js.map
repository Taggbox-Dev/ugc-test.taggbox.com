{"version":3,"file":"static/js/2311.2bc9f650.chunk.js","mappings":"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","sources":["Layouts/Main/HashtagCampaign/Components/HashtagCampaignAside.js","Layouts/Main/WebEmbed/Components/Template/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\r\nimport SVG from 'react-inlinesvg'\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\r\nimport Filters from '../../WebEmbed/Components/Filters';\r\nimport Templates from '../../WebEmbed/Components/Template';\r\nimport EmbedList from '../../WebEmbed/Components/HasTagEmbedList'\r\nclass HashtagCampaignAside extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            campaignType: 'HashtagCampaign',\r\n            publishList: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const clickResetFilter = document.querySelector(\"#web_hashtag_panel-tab-aside-assets_filter\")\r\n        if (clickResetFilter) {\r\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\r\n        }\r\n    }\r\n\r\n    campaignTypeFun = event => this.props.campaignTypeCallback(event)\r\n\r\n\r\n    render() {\r\n        const { setValue } = this.state\r\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList, onSubmit, templatNameError, isHide, onSelectActive } = this.props\r\n\r\n        return <>\r\n\r\n            <label className=\"text-gray-800 mb-1 fw-medium\" htmlFor='filterLabel'>Campaign Name <strong className=\"text-danger\">*</strong></label>\r\n            <input type=\"text\" className={`form-control form-control-sm mb-3 ${templatNameError ? 'is-invalid' : ''}`} id=\"filterLabel\" placeholder=\"Please enter hashtag campaign name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n            {templatNameError ? <div className=\"invalid-feedback\">Please provide template name</div> : null}\r\n\r\n            <div className='filter_wrapper hashtag_campaign__' data-button={isHide ? \"0\" : \"1\"}>\r\n                <Accordion defaultActiveKey={1} activeKey={state.activeKey} onSelect={onSelectActive(1) ? onSelectActive(1) : null}>\r\n\r\n                    <Accordion.Item eventKey={1} className=\"pb-3\">\r\n                        <Accordion.Header className=\"add_fillter_btn\">\r\n                            <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-folder-4-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Collection</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Network</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Connections</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-image-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Assets Type</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-price-tag-3-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Tag</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>UGC Rights</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n\r\n                </Accordion>\r\n                {\r\n                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                }\r\n                <Accordion defaultActiveKey={''}>\r\n                    <Templates {...this.props} key={templeteList.length} />\r\n                </Accordion>\r\n\r\n            </div>\r\n\r\n            <div className='filter_actions_'>\r\n                <Button variant='primary' className={`w-100  ${state.isRequesting ? `spinner` : ``}`} onClick={onSubmit}>Save Campaign</Button>\r\n                {!isHide ? <Button variant='link' className='w-100 text-decoration-none fw-medium' onClick={onResetFilter}>Back</Button> : null}\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(HashtagCampaignAside);\r\n\r\n{\r\n    /*\r\n    <div className=\"card-body\">\r\n            <div className=\"innerAsideWrapper\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                    <h6 className=\"fs-7 fw-bolder mb-0\">Select Filter</h6>\r\n                </div>\r\n                <Tab.Container id={`${isPublishEdit ? `edit_hashtag_tab_panel` : `web_hashtag_panel`}`} defaultActiveKey=\"aside-assets_filter\">\r\n                    <Nav variant=\"underline\" className=\"border-bottom mb-3\">\r\n                        <Nav.Item className=\"\">\r\n                            <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\">Assets Filter</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"\">\r\n                            <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"aside-assets_filter\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"text-gray-800 mb-2\">Campaign Name <strong className=\"text-danger\">*</strong></label>\r\n                                <input type=\"text\" className={`form-control form-control-sm ${templatNameError ? 'is-invalid' : ''}`} placeholder=\"Please enter hashtag campaign name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n                                {templatNameError ? <div className=\"invalid-feedback\">Please provide template name</div> : null}\r\n                            </div>\r\n                            <div className=\"publish_aside_inner\">\r\n                                <Accordion defaultActiveKey=\"0\">\r\n                                    {\r\n                                        state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} />)\r\n                                    }\r\n                                    <Accordion.Item eventKey=\"0\" className=\"pb-3\">\r\n                                        <Accordion.Header className=\"add_fillter_btn\">\r\n                                            <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                                        </Accordion.Header>\r\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-image-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n\r\n                                    <Templates {...this.props} key={templeteList.length > 0} />\r\n                                </Accordion>\r\n                            </div>\r\n                            <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n                                <button type=\"button\" className={`btn btn-primary w-100 ${state.isRequesting ? `spinner` : ``}`} onClick={onSubmit}>Save Changes</button>\r\n                            </div>\r\n                            <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n                                <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"filter-assets_published\">\r\n                            <EmbedList {...this.props} />\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Tab.Container>\r\n            </div>\r\n        </div>\r\n    \r\n    */\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport SVG from 'react-inlinesvg';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\r\n\r\nconst removeDuplicate = (data) => {\r\n    try {\r\n        var updateFilter = []\r\n        var updateKey = {}\r\n        data.map((item) => {\r\n            if (!updateKey[item.id]) {\r\n                updateFilter.push(item)\r\n                updateKey[item.id] = true\r\n            }\r\n\r\n        })\r\n        return updateFilter\r\n    }\r\n    catch (ex) {\r\n        return data\r\n    }\r\n}\r\n\r\nclass Templates extends Component {\r\n    state = {\r\n        templeteList: [],\r\n        isUpdate: false,\r\n        selectTemp:null\r\n    }\r\n    componentWillMount() {setTimeout(() => {this.onLoad()}, 100)}\r\n    componentDidMount() {setTimeout(() => {this.onLoad()}, 100)}\r\n    onLoad = () => {\r\n        var self = this\r\n        const { templeteList, state } = this.props\r\n        //if (templeteList && templeteList.length > 0) {\r\n        self.setState({ templeteList: removeDuplicate(templeteList), selectTemp: state.selectedTemplate })\r\n        // }\r\n        // else {\r\n        //     getTemplateList({ type: 1 }).then((Response) => {\r\n        //         const { responseData } = Response.data\r\n        //         self.setState({ templeteList: removeDuplicate(responseData.templates) })\r\n        //         self.props.getTemplateListDispatch(removeDuplicate(responseData.templates))\r\n        //     })\r\n        // }\r\n    }\r\n    onFiltertemplateName = (id) => {\r\n        const { templeteList } = this.state;\r\n\r\n        if (templeteList && templeteList.length > 0) {\r\n            const updated = templeteList.filter((item) => item.id == id)\r\n            if (updated && updated.length > 0) {\r\n                return updated[0].name\r\n            }\r\n            else return \"\"\r\n        }\r\n        else return \"\"\r\n\r\n    }\r\n\r\n    render() {\r\n        const { templeteList, selectTemp } = this.state;\r\n        const { onSelectTemplate, state } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-2\">Select Template <strong className=\"text-danger\">*</strong></label>\r\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">{selectTemp ? selectTemp.name ? selectTemp.name : this.onFiltertemplateName(selectTemp.id) : `Please select template.`}</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    {templeteList && templeteList.length > 0 ?\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\">\r\n                            {templeteList.map((temp, index) => {\r\n                                return <><ToggleButton key={`template_id_${index}`} className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={()=>{this.setState({selectTemp:temp},()=>{onSelectTemplate(temp)})}}>\r\n                                    <div className=\"card-body p-2\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\r\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height=\"40\" width=\"40\" alt={temp.name} />\r\n                                            </div>\r\n                                            <div className=\"overflow-hidden text-start\">\r\n                                                <p className={`fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start`}>{temp.name}</p>\r\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ToggleButton></>\r\n                            })}\r\n                        </ToggleButtonGroup>\r\n                        : null}\r\n                    <div className=\"text-center\">\r\n                        <Link to={'/template/add'} className=\"btn btn-link text-decoration-none btn-sm p-0 btn-min-w\">\r\n                            <i className=\"ri-add-line\"></i>\r\n                            Create New Template\r\n                        </Link>\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);"],"names":["HashtagCampaignAside","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","campaignTypeFun","event","campaignTypeCallback","state","showModal","campaignType","publishList","_createClass","key","value","_this2","clickResetFilter","document","querySelector","addEventListener","onUpdateReponseData","_this3","_this$props","this","setValue","filterApply","onResetFilter","genratedCodeModal","onClickToDelete","onChangeName","activeFilter","history","templeteList","isPublishEdit","onSubmit","templatNameError","isHide","onSelectActive","_jsxs","_Fragment","children","className","htmlFor","_jsx","type","concat","id","placeholder","publishCodeName","onChange","Accordion","defaultActiveKey","activeKey","onSelect","eventKey","Object","keys","chooseFilter","includes","onClick","SVG","src","baseUrl","height","width","map","filterKey","indexFilter","Filters","_objectSpread","isLast","length","_createElement","Templates","Button","variant","isRequesting","Component","connect","templates","removeDuplicate","data","updateFilter","updateKey","item","push","ex","_len","arguments","args","Array","_key","apply","isUpdate","selectTemp","onLoad","self","_assertThisInitialized","setState","selectedTemplate","onFiltertemplateName","updated","filter","name","setTimeout","_this4","_this$state","_this$props2","onSelectTemplate","ToggleButtonGroup","temp","index","ToggleButton","Theme","alt","Link","to","dispatch","getTemplateListDispatch"],"sourceRoot":""}