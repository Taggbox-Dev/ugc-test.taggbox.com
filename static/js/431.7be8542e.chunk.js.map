{"version":3,"file":"static/js/431.7be8542e.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport { Cookies } from \"react-cookie\";\r\nimport { HOST_DOMAIN, INSTA_CLIENT_ID } from '../../../../../../Services/Api'\r\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\r\nimport { ToggleButtonGroup, ToggleButton, Form } from \"react-bootstrap\";\r\nimport ProfileImage from \"../../../../CommonComponents/ProfileImage/ProfileImage\";\r\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\r\nimport { GET_NETWORK_ICON, CAPITALIZE_FIRST_LETTER, GET_NETWORK_NAME } from '../../../../../../Services/Utils/utils'\r\nimport { flickrConnect, tumblerConnect } from '../../../../SocialLogin/auth'\r\nimport { getFbAuthUrl, getYammerAuthUrl, getVimeoAuthUrl, tiktokAuthentication } from '../../../../../../Layouts/Main/AuthCallback/AuthSocialAcc'\r\nimport { addFacebookAccount, addInstaAccount } from '../../../../../../Layouts/Main/AuthCallback/connectSocialAcc'\r\nimport { addUserRights } from '../../../../../../Services/Actions/addFeedAction'\r\nimport { getRightsInstagramDetails, getFacebookDetails } from '../../../../../../Services/Actions/publishActions'\r\nimport { getTwitterCode } from '../../../../../../Services/Actions/loginActions'\r\nconst channel = new BroadcastChannel('connect');\r\nconst cookies = new Cookies();\r\nclass GetRightsSocialAccount extends Component {\r\n    state = {\r\n        connected: null,\r\n        showConfirm: false,\r\n        rightsVia: ''\r\n    }\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n        this.onLoadSocialAccount()\r\n    }\r\n    onLoadSocialAccount = () => {\r\n        try {\r\n            const { modalAssetData } = this.props\r\n            if (cookies.get(`ugcRights${modalAssetData.networkId}`)) {\r\n                const accountsData = cookies.get(`ugcRights${modalAssetData.networkId}`)\r\n                if (accountsData && accountsData.length > 0) {\r\n                    this.setState({ access_token: \"\", socialData: null, accountsData }, () => this.props.onUpdateData(String(GET_NETWORK_ICON(modalAssetData.networkId)).toLowerCase(), accountsData))\r\n                }\r\n\r\n            }\r\n        }\r\n        catch (ex) {\r\n\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId, type } = response;\r\n\r\n        var self = this\r\n        if (type == \"get-rights\") {\r\n            const responseToken = JSON.parse(event.data);\r\n            const { modalAssetData } = this.props\r\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\r\n                addInstaAccount(data, (data) => {\r\n                    getRightsInstagramDetails({ access_token: data.token }).then((response) => {\r\n\r\n                        const { data } = response\r\n                        var accountsData = [];\r\n                        if (data && Object.keys(data).length > 0) {\r\n                            accountsData.push({ id: data.id, name: data.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n                        }\r\n                        cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\r\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\r\n                    })\r\n                })\r\n            }\r\n            else if (modalAssetData.networkId == 3) {\r\n                addFacebookAccount(data, networkId, (data) => {\r\n                    getFacebookDetails({ access_token: data.token }).then((response) => {\r\n                        const { pages } = response.data\r\n                        var accountsData = [];\r\n                        if (pages && pages.length > 0) {\r\n                            pages.map((item) => {\r\n                                accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n                            })\r\n                        }\r\n                        cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\r\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\r\n                    })\r\n                })\r\n            }\r\n            else if (modalAssetData.networkId == 1) {\r\n                var accountsData = [];\r\n                if (data && Object.keys(data).length > 0) {\r\n                    accountsData.push({ id: data.id_str, name: data.name, picture: data.picture ? data.picture : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n                }\r\n                cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\r\n                self.setState({ access_token: localStorage.getItem(\"tokenSecret\"), socialData: data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\r\n            }\r\n            else if (modalAssetData.networkId == 28) {\r\n                var accountsData = [];\r\n                if (data && Object.keys(data).length > 0) {\r\n                    accountsData.push({ id: data.display_name, name: data.display_name, picture: data.avatar ? data.avatar : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\r\n                }\r\n                cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\r\n                self.setState({ access_token: data.client_key, socialData: data, accountsData }, () => this.props.onUpdateData(\"tiktok\", accountsData))\r\n            }\r\n            else {\r\n                addUserRights(data, networkId, (data) => {\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n    handleYes = event => {\r\n        this.setState({ showConfirm: true })\r\n    }\r\n    handleNo = event => {\r\n        this.setState({ showConfirm: true })\r\n    }\r\n    onClickSocialConnect = (data) => event => {\r\n        if (data && Object.keys(data).length > 0) {\r\n            Swal.fire({\r\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\r\n                imageHeight: 40,\r\n                imageWidth: 40,\r\n                title: `<strong>${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}</strong>`,\r\n                html: `Add an account to continue`,\r\n                showCloseButton: true,\r\n                showCancelButton: false,\r\n                focusConfirm: true,\r\n                confirmButtonText: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\r\n                confirmButtonAriaLabel: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    localStorage.setItem(\"networkId\", data.networkId);\r\n                    localStorage.setItem(\"connectionType\", \"get-rights\");\r\n                    switch (data.networkId) {\r\n                        case 1:\r\n                            getTwitterCode();\r\n                            break;\r\n                        case 6:\r\n                            flickrConnect(6);\r\n                            break;\r\n                        case 21:\r\n                            getYammerAuthUrl()\r\n                            break;\r\n                        case 11:\r\n                            tumblerConnect(11);\r\n                            break;\r\n                        case 8:\r\n                            getVimeoAuthUrl()\r\n                            break;\r\n                        case 3:\r\n                            getFbAuthUrl(3);\r\n                            break;\r\n                        case 28:\r\n                            tiktokAuthentication();\r\n                            break;\r\n\r\n                        case 2:\r\n                            const url1 = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\r\n                            window.open(url1, '_blank', \"width=786,height=786\");\r\n                            break;\r\n                        case 18:\r\n                            const url = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\r\n                            window.open(url, '_blank', \"width=786,height=786\");\r\n                            break;\r\n                        // case 18:\r\n                        //     getFbAuthUrl(18)\r\n                        //     break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    handleChangeOption = event => {\r\n        console.log('event', event)\r\n        this.setState({\r\n            rightsVia: event\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { modalAssetData, connectedAccount, rightsViaOption, rightsVia } = this.props;\r\n        console.log(\"modalAssetData\",modalAssetData.networkId)\r\n        const isInstagram=modalAssetData && Object.keys(modalAssetData).length>0 && (modalAssetData.networkId==2 ||modalAssetData.networkId==18)?true:false\r\n        return <div className=\"p-lg-6 p-3\">\r\n            <div className=\"m-auto\">\r\n                <h3 className=\"mb-1 fs-7 pt-1\">Select the mode for Right Request</h3>\r\n                <p>Tagbox offers {isInstagram?`two`:`one`} distinct modes to request rights. {isInstagram?`Comment Request and DM Request`:`DM Request`}. </p>\r\n                <div key={`inline-radio`} className=\"mb-3 d-flex flex-column\">\r\n\r\n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={rightsVia} className=\"flex-column\" onChange={rightsViaOption}>\r\n                        {isInstagram?<ToggleButton variant=\"outline-secondary\" id=\"rightsVia-2\" value={'viaComments'} className={`mb-2 d-flex bg-transparent justify-content-between py-4 ${rightsVia == 'viaComments' ? 'border-success' : ''}`}>\r\n                            <div className=\"d-flex me-3 fw-normal\">\r\n                                <i class=\"ri-message-line icon-3 mt-1 me-2 fw-normal\"></i>\r\n                                <span className=\"text-start\">\r\n                                    <p className=\"h6 mb-0 fw-medium\">Comment Request</p>\r\n                                    <span className=\"fs-10\">Request rights by commenting under the post you desire the rights for! </span>\r\n                                </span>\r\n                            </div>\r\n                            <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                            <span className=\"w-20px\">\r\n                                {rightsVia == 'viaComments' ? <i class=\"ri-checkbox-circle-fill icon-5 me-0 text-success\"></i> : null}\r\n                            </span>\r\n                        </ToggleButton>:null}\r\n                        <ToggleButton variant=\"outline-secondary\" id=\"rightsVia-3\" value={'viaDM'} className={`mb-2 d-flex bg-transparent justify-content-between py-4 ${rightsVia == 'viaDM' ? 'border-success' : ''}`}>\r\n                            <div className=\"d-flex me-3 fw-normal\">\r\n                                <i class=\"ri-discuss-line icon-3 mt-1 me-2 fw-normal\"></i>\r\n                                <span className=\"text-start\">\r\n                                    <p className=\"h6 mb-0 fw-medium\">DM Request</p>\r\n                                    <span className=\"fs-10\">Send a Rights request directly into the DM of the creators! </span>\r\n                                </span>\r\n                            </div>\r\n                            <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\r\n                            <span className=\"w-20px\">\r\n                                {rightsVia == 'viaDM' ? <i class=\"ri-checkbox-circle-fill icon-5 me-0 text-success\"></i> : null}\r\n                            </span>\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n\r\n                {/* {connectedAccount && connectedAccount.data.length > 0 ?\r\n                    <>\r\n                        <h3 className=\"mb-2 fs-7 pt-1\">\r\n                            <span className=\"fw-medium\">Connect Account</span>\r\n                        </h3>\r\n                        <div className=\"mb-3\">\r\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\">\r\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\r\n                                    <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                        imageSize={40}\r\n                                        symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\r\n                                        name={connectedAccount.data[0].name} profileUrl={''} networkId={modalAssetData.networkId} />\r\n                                    <div className=\"w-75 overflow-hidden\">\r\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                    <span className=\"h-20px w-20px\">\r\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(connectedAccount.provider)} />\r\n                                    </span>\r\n                                </div>\r\n                            </button>\r\n                            <span className=\"fw-medium\">You are logged in with this account</span>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center w-75 mb-3 mx-auto\">\r\n                            <span className=\"border-bottom d-flex flex-grow-1\"></span>\r\n                            <span className=\"d-flex flex-shrink-0 mx-5 fs-6 fw-semibold text-gray-400\">Or</span>\r\n                            <span className=\"border-bottom d-flex flex-grow-1\"></span>\r\n                        </div>\r\n                    </> : null\r\n                }\r\n\r\n                {modalAssetData.networkId == 7 ?\r\n                    <SocialGoogleLogin onUpdateData={this.props.onUpdateData} />\r\n                    :\r\n                    <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\r\n                        <div className=\"d-flex align-items-center flex-grow-1 w-75\">\r\n                            <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\r\n                            <div className=\"w-75 overflow-hidden\">\r\n                                <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\r\n                            </div>\r\n                        </div>\r\n                        {modalAssetData.networkId ?\r\n                            <div className=\"d-flex\">\r\n                                <span className=\"h-20px w-20px\">\r\n                                    <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(modalAssetData.networkId)} style={{ filter: 'grayscale(1)', opacity: '.5' }} />\r\n                                </span>\r\n                            </div>\r\n                            : null}\r\n                    </button>\r\n                } */}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default GetRightsSocialAccount;"],"names":["channel","BroadcastChannel","cookies","Cookies","GetRightsSocialAccount","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","connected","showConfirm","rightsVia","onLoadSocialAccount","modalAssetData","props","get","networkId","accountsData","setState","access_token","socialData","onUpdateData","String","GET_NETWORK_ICON","toLowerCase","ex","readAuthenticationCode","event","response","JSON","parse","data","type","self","_assertThisInitialized","addInstaAccount","getRightsInstagramDetails","token","then","Object","keys","push","id","name","username","picture","baseUrl","set","stringify","path","addFacebookAccount","getFacebookDetails","pages","map","item","id_str","localStorage","getItem","display_name","avatar","client_key","addUserRights","handleYes","handleNo","onClickSocialConnect","Swal","imageUrl","imageHeight","imageWidth","title","CAPITALIZE_FIRST_LETTER","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","result","isConfirmed","setItem","getTwitterCode","flickrConnect","getYammerAuthUrl","tumblerConnect","getVimeoAuthUrl","getFbAuthUrl","tiktokAuthentication","url1","INSTA_CLIENT_ID","HOST_DOMAIN","window","open","url","handleChangeOption","console","log","_createClass","key","value","addEventListener","this","removeEventListener","_this$props","rightsViaOption","connectedAccount","isInstagram","_jsx","className","children","_jsxs","ToggleButtonGroup","defaultValue","onChange","ToggleButton","variant","class","Form","Component"],"sourceRoot":""}