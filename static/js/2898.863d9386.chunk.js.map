{"version":3,"file":"static/js/2898.863d9386.chunk.js","mappings":"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","sources":["Layouts/Main/CommonComponents/AssetsFilterAside/AssetsFilterAside.js","Layouts/Main/WebEmbed/Components/Template/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport SVG from 'react-inlinesvg'\r\nimport { Button,Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\r\nimport Filters from '../../WebEmbed/Components/Filters';\r\nimport Templates from '../../WebEmbed/Components/Template';\r\nimport PrintMediaList from '../../PrintMedia/Components/PrintMediaList'\r\n\r\n\r\nconst selectedPlatform = (platform) => {\r\n    switch (platform) {\r\n        case 'p-html':\r\n            return 'HTML'\r\n        case 'p-wordpress':\r\n            return 'Wordpress'\r\n        case 'p-wix':\r\n            return 'Wix'\r\n        case 'p-squarespace':\r\n            return 'Squarespace'\r\n        case 'p-shopify':\r\n            return 'Shopify'\r\n        case 'p-other':\r\n            return 'Other'\r\n        default:\r\n            return `HTML`\r\n    }\r\n}\r\n\r\nclass AssetsFilterAside extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        showModal: false,\r\n        //setValue : '',\r\n        publishList: []\r\n    };\r\n    componentDidMount() {\r\n        this.onLoadPublish()\r\n    }\r\n    onLoadPublish = () => {\r\n        var self = this\r\n        getPublishList().then((loadReponse) => {\r\n            self.setState({ publishList: loadReponse.data })\r\n        })\r\n    }\r\n    handleSelect(date) {\r\n\r\n    }\r\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\r\n\r\n\r\n    render() {\r\n        //const { setValue } = this.state\r\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName } = this.props\r\n        return <>\r\n        \r\n        <label className=\"text-gray-800 mb-1 fw-medium\" htmlFor='filterLabel'>Print Media Name <strong className=\"text-danger\">*</strong></label>\r\n            <input type=\"text\" className=\"form-control form-control-sm mb-3\" id=\"filterLabel\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n\r\n            <Accordion defaultActiveKey={1} className='filter_wrapper'>\r\n                {\r\n                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                }\r\n                <Accordion.Item eventKey={1} className=\"pb-3\">\r\n                    <Accordion.Header className=\"add_fillter_btn\">\r\n                        <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                        <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                        <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <i className=\"ri-folder-4-line icon-7 text-gray-800\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Collection</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                        <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Network</p>\r\n                                <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                        <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Connections</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <i className=\"ri-image-line icon-7 text-gray-800\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Assets Type</p>\r\n                                <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <i className=\"ri-price-tag-3-line icon-7 text-gray-800\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Tag</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                        <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>UGC Rights</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n            \r\n\r\n        \r\n       \r\n        </>\r\n\r\n    }\r\n}\r\n\r\nexport default AssetsFilterAside;\r\n\r\n{\r\n    /*\r\n    \r\n     <div className=\"card-body\">\r\n            <div className=\"innerAsideWrapper\">\r\n                <div className=\"d-flex align-items-start justify-content-between\">\r\n                    <h6 className=\"fs-7 fw-bolder mb-0\">Add Filter</h6>\r\n                   \r\n                    </div>\r\n                    <Tab.Container id=\"billing_tab_panel\" defaultActiveKey=\"aside-assets_filter\">\r\n                        <Nav variant=\"underline\" className=\"border-bottom mb-3\">\r\n                            <Nav.Item className=\"\">\r\n                                <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\">Assets Filter</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"\">\r\n                                <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aside-assets_filter\">\r\n                                <label className=\"text-gray-800 mb-2\">Print Media Name <strong className=\"text-danger\">*</strong></label>\r\n                                <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter print media name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n    \r\n                                <div className=\"print_aside_inner\">\r\n                                {\r\n                                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                                }\r\n    \r\n                                <Accordion defaultActiveKey={\"0\"}>\r\n                                    <Accordion.Item eventKey=\"0\" className=\"pb-3\">\r\n                                        <Accordion.Header className=\"add_fillter_btn\">\r\n                                            <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                                        </Accordion.Header>\r\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-image-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                </div>\r\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n                                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\r\n                                </div>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"filter-assets_published\">\r\n                                <PrintMediaList {...this.props} />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Tab.Container>\r\n                </div>\r\n            </div>\r\n    \r\n    */\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport SVG from 'react-inlinesvg';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\r\n\r\nconst removeDuplicate = (data) => {\r\n    try {\r\n        var updateFilter = []\r\n        var updateKey = {}\r\n        data.map((item) => {\r\n            if (!updateKey[item.id]) {\r\n                updateFilter.push(item)\r\n                updateKey[item.id] = true\r\n            }\r\n\r\n        })\r\n        return updateFilter\r\n    }\r\n    catch (ex) {\r\n        return data\r\n    }\r\n}\r\n\r\nclass Templates extends Component {\r\n    state = {\r\n        templeteList: [],\r\n        isUpdate: false,\r\n        selectTemp:null\r\n    }\r\n    componentWillMount() {setTimeout(() => {this.onLoad()}, 100)}\r\n    componentDidMount() {setTimeout(() => {this.onLoad()}, 100)}\r\n    onLoad = () => {\r\n        var self = this\r\n        const { templeteList, state } = this.props\r\n        //if (templeteList && templeteList.length > 0) {\r\n        self.setState({ templeteList: removeDuplicate(templeteList), selectTemp: state.selectedTemplate })\r\n        // }\r\n        // else {\r\n        //     getTemplateList({ type: 1 }).then((Response) => {\r\n        //         const { responseData } = Response.data\r\n        //         self.setState({ templeteList: removeDuplicate(responseData.templates) })\r\n        //         self.props.getTemplateListDispatch(removeDuplicate(responseData.templates))\r\n        //     })\r\n        // }\r\n    }\r\n    onFiltertemplateName = (id) => {\r\n        const { templeteList } = this.state;\r\n\r\n        if (templeteList && templeteList.length > 0) {\r\n            const updated = templeteList.filter((item) => item.id == id)\r\n            if (updated && updated.length > 0) {\r\n                return updated[0].name\r\n            }\r\n            else return \"\"\r\n        }\r\n        else return \"\"\r\n\r\n    }\r\n\r\n    render() {\r\n        const { templeteList, selectTemp } = this.state;\r\n        const { onSelectTemplate, state } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-2\">Select Template <strong className=\"text-danger\">*</strong></label>\r\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">{selectTemp ? selectTemp.name ? selectTemp.name : this.onFiltertemplateName(selectTemp.id) : `Please select template.`}</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    {templeteList && templeteList.length > 0 ?\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\">\r\n                            {templeteList.map((temp, index) => {\r\n                                return <><ToggleButton key={`template_id_${index}`} className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={()=>{this.setState({selectTemp:temp},()=>{onSelectTemplate(temp)})}}>\r\n                                    <div className=\"card-body p-2\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\r\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height=\"40\" width=\"40\" alt={temp.name} />\r\n                                            </div>\r\n                                            <div className=\"overflow-hidden text-start\">\r\n                                                <p className={`fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start`}>{temp.name}</p>\r\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ToggleButton></>\r\n                            })}\r\n                        </ToggleButtonGroup>\r\n                        : null}\r\n                    <div className=\"text-center\">\r\n                        <Link to={'/template/add'} className=\"btn btn-link text-decoration-none btn-sm p-0 btn-min-w\">\r\n                            <i className=\"ri-add-line\"></i>\r\n                            Create New Template\r\n                        </Link>\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);"],"names":["AssetsFilterAside","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","showModal","publishList","onLoadPublish","self","_assertThisInitialized","getPublishList","then","loadReponse","setState","data","embedCodeCallback","event","genratedCodeCallback","_createClass","key","value","this","date","_this2","_this$props","filterApply","onChangeName","genratedCodeModal","onClickToDelete","onResetFilter","activeFilter","history","_jsxs","_Fragment","children","className","htmlFor","_jsx","type","id","placeholder","publishCodeName","onChange","Accordion","defaultActiveKey","chooseFilter","Object","keys","map","filterKey","indexFilter","Filters","_objectSpread","isLast","length","eventKey","concat","includes","onClick","SVG","src","baseUrl","height","width","Component","removeDuplicate","updateFilter","updateKey","item","push","ex","Templates","_len","arguments","args","Array","_key","apply","templeteList","isUpdate","selectTemp","onLoad","selectedTemplate","onFiltertemplateName","updated","filter","name","setTimeout","_this3","_this4","_this$state","_this$props2","onSelectTemplate","ToggleButtonGroup","temp","index","ToggleButton","variant","Theme","alt","Link","to","connect","templates","dispatch","getTemplateListDispatch"],"sourceRoot":""}