{"version":3,"file":"static/js/2923.70e13d4a.chunk.js","mappings":"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","sources":["Layouts/Main/Templates/ThemeTemplates/Components/WidgetOnsiteButton.js","Layouts/Main/Templates/TemplateAside/TemplatePreview.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport SVG from 'react-inlinesvg';\nclass WidgetOnsiteButton extends Component {\n    render() {\n        const { onSiteUpload  } = this.props.templateFormData\n        const ButtonBgStyle = {\n            fontFamily: onSiteUpload.onsite_css_font_btn,\n            backgroundColor: onSiteUpload.bgColor\n        }\n      \n        const QRButtonText = onSiteUpload.qrCodeStatus || onSiteUpload.buttonText != '' ? onSiteUpload.buttonText : ''\n      \n        const buttonStyle = {\n            fontFamily: onSiteUpload.fontFamily.family,\n            color: onSiteUpload.textColor,\n            fontSize: onSiteUpload.fontSize+'px',\n            textAlign: onSiteUpload.qrCodeStatus === 1 ? 'left' : 'center'\n        }\n        return  onSiteUpload.buttonStatus && (onSiteUpload.qrCodeStatus == 1 || QRButtonText !== '') ?  <div className=\"tb_onsite_upload_btn_wrap\">\n                    <div className=\"tb_onsite_upload_btn\">\n                        <div style={ButtonBgStyle} className='tb_onsite_btn'>\n                            <div className=\"tb_onsite_qr_btn_wrap\">\n                            {onSiteUpload.qrCodeStatus == 1 ? <div className='tb_onsite_qr_code'>\n                                <SVG src={baseUrl('media/icons/svg-icons/qr-code.svg')} height={60} width={60} />\n                            </div> : null}\n                            {QRButtonText !== '' ?\n                                <div className={`tb_onsite_btn_txt tb-cTBfont-${onSiteUpload.fontVarient}`} style={buttonStyle}>\n                                {QRButtonText}\n                                </div> : ''}\n                            </div>\n                        </div>\n                    </div>\n                </div>:null\n    }\n}\n\nexport default WidgetOnsiteButton;","import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Accordion, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg';\nimport WidgetOnsiteButton from '../ThemeTemplates/Components/WidgetOnsiteButton';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport ModernWaterfallTemplate from './Components/ModernWaterfallTemplate';\nimport ModernSlideshowTemplate from './Components/ModernSlideshowTemplate';\nimport AtmosphereTemplate from './Components/AtmosphereTemplate';\n\nimport SquarePhoto from '../ThemeTemplates/SquarePhoto';\nimport ModernCard from '../ThemeTemplates/ModernCard';\nimport HorizontalColumns from '../ThemeTemplates/HorizontalColumns';\nimport ModernSlideShow from '../ThemeTemplates/ModernSlideShow';\nimport Atmosphere from '../ThemeTemplates/Atmosphere';\nimport GalleryPhoto from '../ThemeTemplates/GalleryPhoto';\nimport ModernWaterfall from '../ThemeTemplates/ModernWaterfall';\nimport FontHead from './FontHead';\n\nimport { createTemplate } from '../../../../Services/Actions/templateAction'\n\nconst ModernCardTemplate = React.lazy(() => import('./Components/ModernCardTemplate'));\nconst SquarePhotoTemplate = React.lazy(() => import('./Components/SquarePhotoTemplate'));\nconst HorizontalColumnTemplate = React.lazy(() => import('./Components/HorizontalColumnTemplate'));\nconst GalleryPhotoTemplate = React.lazy(() => import('./Components/GalleryPhotoTemplate'));\n\nconst ThemesPreview = ({ themeName, templateFormData }) => {\n    switch (themeName) {\n        case 20:\n            return <ModernCard {...templateFormData} />;\n        case 4:\n            return <SquarePhoto {...templateFormData} />;\n        case 47:\n            return <HorizontalColumns  {...templateFormData} />;\n        case 21:\n            return <ModernSlideShow {...templateFormData} />;\n        case 44:\n            return <Atmosphere {...templateFormData} />;\n        case 50:\n            return <GalleryPhoto {...templateFormData} />;\n        case 58:\n            return <ModernWaterfall {...templateFormData} />;\n        default:\n            return <ModernCard {...templateFormData} />;\n    }\n\n}\n\nclass TemplatePreview extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            templateName: \"\",\n            selectedTheme: props.defaultTheme ? { name: props.defaultTheme.name, themeId: props.defaultTheme.themeId } : {},\n            selectedThemeData: props.defaultTheme ? props.defaultTheme : null,\n            templateFormData: null,\n            isRequesting: false,\n            tempError: false\n        }\n    }\n\n    onChooseTheme = (theme, selectedThemeData) => event => {\n        this.setState({ selectedTheme: theme, selectedThemeData: selectedThemeData })\n    }\n    onTextTemplateName = event => {\n        this.setState({ templateName: event.target.value, tempError: false })\n    }\n    tempFormData = (data) => {\n        this.setState({ templateFormData: data })\n    }\n    onClickSaveChanges = event => {\n        const { templateFormData, templateName, selectedThemeData } = this.state\n        const { onSiteSetting } = this.props\n        if (templateFormData && Object.keys(templateFormData).length > 0 && String(templateName).length > 0) {\n            var self = this\n\n            const onsite_settings = {\n                network: onSiteSetting.network,\n                filter: onSiteSetting.filter,\n                moderation: onSiteSetting.moderation,\n                onsite_qr_code_btn_text: templateFormData.onSiteUpload.buttonText,\n                onsite_btn_color: templateFormData.onSiteUpload.bgColor,\n                onsite_btn_txt_color: templateFormData.onSiteUpload.textColor,\n                onsite_link_font_btn: onSiteSetting.onsite_link_font_btn,\n                onsite_css_font_btn: onSiteSetting.onsite_css_font_btn,\n                onsite_font_varient_btn: onSiteSetting.onsite_font_varient_btn,\n                btn_fontSize: templateFormData.onSiteUpload.fontSize,\n                onsite_qr_code_status: templateFormData.onSiteUpload.qrCodeStatus,\n                onsite_popup_title: onSiteSetting.onsite_popup_title,\n                onsite_popup_btn_txt: onSiteSetting.onsite_popup_btn_txt,\n                onsite_popup_sub_heading: onSiteSetting.onsite_popup_sub_heading,\n                onsite_term_url: onSiteSetting.onsite_term_url,\n                onsiteImgBack: onSiteSetting.onsiteImgBack,\n                onsite_logo: onSiteSetting.onsite_logo,\n                Onsite_logoImageValue: onSiteSetting.Onsite_logoImageValue,\n                onsite_bg_color_wg: onSiteSetting.onsite_bg_color_wg,\n                onsiteBackImage: onSiteSetting.onsiteBackImage,\n                onsite_bg_image_wg: onSiteSetting.onsite_bg_image_wg,\n                Onsite_backImageValue: onSiteSetting.Onsite_backImageValue,\n                onsite_succ_msg: onSiteSetting.onsite_succ_msg,\n                onsite_thank_txt_color: onSiteSetting.onsite_thank_txt_color,\n                onsite_link_font_msg: onSiteSetting.onsite_link_font_msg,\n                onsite_css_font_msg: onSiteSetting.onsite_css_font_msg,\n                onsite_font_varient_msg: onSiteSetting.onsite_font_varient_msg,\n                onsite_thank_fontSize: onSiteSetting.onsite_thank_fontSize,\n                onsite_status: templateFormData.onSiteUpload.buttonStatus,\n                btn_radius: templateFormData.onSiteUpload.borderRadius\n            };\n            const data = {\n                \"action\": 1,\n                \"name\": templateName,\n                \"theme\": selectedThemeData.themeId,\n                \"cssStatus\": templateFormData.customCss.cssStatus ? 1 : 0,\n                \"css\": templateFormData.customCss.css,\n                \"backgroundColor\": templateFormData.background.status ? templateFormData.background.color : \"\",\n                \"transparent\": templateFormData.background.transparent ? 1 : 0,\n                \"backgroundImage\": templateFormData.background.image ? templateFormData.background.image : \"\",\n                \"backgroundImageId\": 0,\n                \"link_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"css_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"font_varient\": templateFormData.cardStyle.fontVarient && Object.keys(templateFormData.cardStyle.fontVarient).length > 0 ? templateFormData.cardStyle.fontVarient.value : \"\",\n                \"fontColor\": templateFormData.cardStyle.textColor,\n                \"cardColor\": templateFormData.cardStyle.cardColor,\n                \"postText\": 0,\n                \"postAuthor\": templateFormData.advanced.author ? 1 : 0,\n                \"postTime\": templateFormData.advanced.time ? 1 : 0,\n                \"postFeatured\": templateFormData.themeSettings.postPopUp ? 1 : 0,\n                \"minimumPostWidth\": templateFormData.themeSettings.minPostWitdh,\n                \"padding\": templateFormData.themeSettings.postPadding,\n                \"scrollDelay\": templateFormData.themeSettings.scrollSpeed,\n                \"slideDelay\": templateFormData.themeSettings.timePerSlide,\n                \"numberOfPosts\": templateFormData.themeSettings.numberOfPosts,\n                \"trimcontent\": templateFormData.themeSettings.trimContent ? 1 : 0,\n                \"playFullVideo\": 1,\n                \"randomizePost\": templateFormData.themeSettings.suffleAssets ? 1 : 0,\n                \"hideUrls\": templateFormData.themeSettings.hideUrls ? 1 : 0,\n                \"fitRow\": templateFormData.themeSettings.bestFit ? 1 : 0,\n                \"roundEdge\": 5,\n                \"cardType\": 1,\n                \"socialAction\": templateFormData.cardStyle.socialActions ? 1 : 0,\n                \"timeForPopup\": templateFormData.themeSettings.popUpduration,\n                \"authorColor\": templateFormData.cardStyle.authorColor,\n                \"iconType\": templateFormData.cardStyle.iconType ? 1 : 505,\n                \"iconColor\": templateFormData.cardStyle.socialIconColor,\n                \"fontSize\": parseInt(templateFormData.cardStyle.fontSize),\n                \"shareOption\": templateFormData.cardStyle.shareOptions ? 1 : 0,\n                \"hideContent\": templateFormData.advanced.hideContent ? 1 : 0,\n                \"numberOfCoumn\": templateFormData.themeSettings.columns && Object.keys(templateFormData.themeSettings.columns).length > 0 ? templateFormData.themeSettings.columns.value : 0,\n                \"slideDuration\": 0,\n                \"slidePost\": 0,\n                \"autoPlay\": 0,\n                \"popupSlideShow\": 0,\n                \"customUrl\": templateFormData.themeSettings.popUpUrl && String(templateFormData.themeSettings.popUpUrl).length > 0 ? templateFormData.themeSettings.popUpUrl : \"\",\n                \"showHideOldPost\": templateFormData.themeSettings.hideOldAssets.range == 8 ? templateFormData.themeSettings.hideOldAssets.showHideOldPost : 0,\n                \"showHideOlderPost\": templateFormData.themeSettings.hideOldAssets.range ? templateFormData.themeSettings.hideOldAssets.range : 0,\n                \"loadMoreStatus\": templateFormData.themeSettings.showmore ? 1 : 0,\n                \"autoScrollStatus\": templateFormData.themeSettings.autoLoad ? 1 : 0,\n                \"hidePosts\": templateFormData.themeSettings.hideOldAssets.status ? 1 : 0,\n                \"onsite_settings\": JSON.stringify(onsite_settings)\n            }\n            this.setState({ isRequesting: true, tempError: false })\n            createTemplate(data).then((response) => {\n                self.setState({ isRequesting: false, tempError: false })\n                toast.success(\"New template has been successfully created.\")\n                self.props.history(\"/template\")\n            })\n        }\n        else {\n            if (String(templateName).length == 0) this.setState({ tempError: true })\n            toast.error(\"Please check all required fields.\")\n        }\n    }\n\n\n\n\n    render() {\n\n        const { themeList, fonts, onSiteSetting } = this.props\n        const { selectedTheme, selectedThemeData, templateName, templateFormData, isRequesting, tempError } = this.state\n        return <>\n            <FontHead fonts={fonts} />\n            <div className=\"innerAside flex-shrink-0\">\n                <div className=\"card mb-4\">\n                    <div className=\"card-body p-0\">\n                        <div className=\"p-3\">\n                            <div className=\"pb-3\">\n                                <label className=\"text-gray-800 mb-2\">Template Name <strong className=\"text-danger\">*</strong></label>\n                                <div className=\"\">\n                                    <input type=\"text\" name=\"templateName\" className={`form-control form-control-sm ${tempError ? `is-invalid` : ``}`} placeholder=\"Enter Template name...\" onChange={this.onTextTemplateName} value={templateName} />\n                                    {tempError ? <div className=\"invalid-feedback\">Please provide template name</div> : null}\n                                </div>\n                            </div>\n                            <div className=\"template_aside_inner\">\n                                <Accordion defaultActiveKey=\"1\">\n                                    <Accordion.Item eventKey=\"1\" className=\"pb-3\">\n                                        <Accordion.Header className=\"w-100\">\n                                            <span className=\"fs-9 fw-medium\">{selectedTheme && selectedTheme.name ? selectedTheme.name : `Choose Theme`}</span>\n                                        </Accordion.Header>\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                                            <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"themeName\">\n                                                {themeList.map((item) => {\n                                                    return <ToggleButton key={`theme_${item.themeId}`} id={`theme-${item.themeId}`} className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${item.themeId == selectedTheme.themeId ? `border-primary` : ``}`}\n                                                        onClick={this.onChooseTheme({ name: item.name, themeId: item.themeId }, item)} value={item.themeId}>\n                                                        <div className=\"card-body p-2\">\n                                                            <div className=\"d-flex align-items-center\">\n                                                                <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\n                                                                    <SVG src={baseUrl(`media/images/themes/${item.themeId}.svg`)} />\n                                                                </div>\n                                                                <div className=\"overflow-hidden\">\n                                                                    <p className=\"fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start\">{item.name}</p>\n                                                                    <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis text-start\">{item.product_type == 1 ? `Widget` : item.product_type == 2 ? `Display` : ``}</p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </ToggleButton>\n                                                })\n                                                }\n                                            </ToggleButtonGroup>\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                </Accordion>\n                                {\n                                    selectedTheme && Object.keys(selectedTheme).length > 0 ? <>{selectedTheme.themeId == 4 ? <Suspense fallback={<></>}>\n                                        <SquarePhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 21 ? <Suspense fallback={<></>}>\n                                        <ModernSlideshowTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 20 ? <Suspense fallback={<></>}>\n                                        <ModernCardTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 44 ? <Suspense fallback={<></>}>\n                                        <AtmosphereTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 50 ? <Suspense fallback={<></>}>\n                                        <GalleryPhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 47 ? <Suspense fallback={<></>}>\n                                        <HorizontalColumnTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 58 ? <Suspense fallback={<></>}>\n                                        <ModernWaterfallTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : null}</> : null\n                                }\n                            </div>\n                        </div>\n                        <div className=\"bg-white pt-2 w-100 p-3 rounded-2\">\n                            <button type=\"button\" className={`btn btn-primary w-100 ${isRequesting ? `spinner` : ``}`} onClick={selectedTheme ? this.onClickSaveChanges : null}>Save Changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex flex-column overflow-hidden w-100\">\n                <div className=\"card\">\n                    <div className=\"card-body content_wrapper\">\n                        <div className=\"tb_app_container\">\n                            {templateFormData && Object.keys(templateFormData).length > 0 ? <div className=\"tb_app_wrapper\" key={selectedTheme.themeId}>\n                                <WidgetOnsiteButton themeName={selectedTheme.themeId} templateFormData={this.state.templateFormData} />\n                                <ThemesPreview themeName={selectedTheme.themeId} templateFormData={this.state.templateFormData} />\n                            </div> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default TemplatePreview;"],"names":["WidgetOnsiteButton","onSiteUpload","this","props","templateFormData","ButtonBgStyle","fontFamily","onsite_css_font_btn","backgroundColor","bgColor","QRButtonText","qrCodeStatus","buttonText","buttonStyle","family","color","textColor","fontSize","textAlign","buttonStatus","className","style","src","baseUrl","height","width","fontVarient","Component","ModernCardTemplate","React","SquarePhotoTemplate","HorizontalColumnTemplate","GalleryPhotoTemplate","ThemesPreview","themeName","ModernCard","SquarePhoto","HorizontalColumns","ModernSlideShow","Atmosphere","GalleryPhoto","ModernWaterfall","TemplatePreview","onChooseTheme","theme","selectedThemeData","event","setState","selectedTheme","onTextTemplateName","templateName","target","value","tempError","tempFormData","data","onClickSaveChanges","state","onSiteSetting","Object","keys","length","String","self","onsite_settings","network","filter","moderation","onsite_qr_code_btn_text","onsite_btn_color","onsite_btn_txt_color","onsite_link_font_btn","onsite_font_varient_btn","btn_fontSize","onsite_qr_code_status","onsite_popup_title","onsite_popup_btn_txt","onsite_popup_sub_heading","onsite_term_url","onsiteImgBack","onsite_logo","Onsite_logoImageValue","onsite_bg_color_wg","onsiteBackImage","onsite_bg_image_wg","Onsite_backImageValue","onsite_succ_msg","onsite_thank_txt_color","onsite_link_font_msg","onsite_css_font_msg","onsite_font_varient_msg","onsite_thank_fontSize","onsite_status","btn_radius","borderRadius","themeId","customCss","cssStatus","css","background","status","transparent","image","cardStyle","cardColor","advanced","author","time","themeSettings","postPopUp","minPostWitdh","postPadding","scrollSpeed","timePerSlide","numberOfPosts","trimContent","suffleAssets","hideUrls","bestFit","socialActions","popUpduration","authorColor","iconType","socialIconColor","parseInt","shareOptions","hideContent","columns","popUpUrl","hideOldAssets","range","showHideOldPost","showmore","autoLoad","JSON","stringify","isRequesting","createTemplate","then","response","toast","history","defaultTheme","name","themeList","fonts","FontHead","type","placeholder","onChange","Accordion","defaultActiveKey","eventKey","ToggleButtonGroup","map","item","ToggleButton","id","onClick","product_type","Suspense","fallback","ModernSlideshowTemplate","AtmosphereTemplate","ModernWaterfallTemplate"],"sourceRoot":""}