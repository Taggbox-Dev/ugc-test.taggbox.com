{"version":3,"file":"static/js/4462.742ac9e8.chunk.js","mappings":"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","sources":["Layouts/Header/Components/HeaderManu.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { connect } from \"react-redux\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../../Assets/AssetsHelper';\nimport SVG from 'react-inlinesvg';\nimport { MEDIA_REPLACE_URL } from '../../../Services/Utils/utils'\nimport { logOutUser } from '../../../Services/Actions/loginActions'\nimport { uploadModalClick } from '../../../Services/Actions/homeActions'\nimport ProfileImage from '../../Main/CommonComponents/ProfileImage/ProfileImage';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\n\nconst AddAssetsModal = React.lazy(() => import('../../Main/MyAssets/AddAssetsModal/AddAssetsModal'));\nconst Notifications = React.lazy(() => import('./Elements/Notifications'));\n\nclass HeaderManu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isActiveAside: false, appThemeSkin: props.cookies ? props.cookies : 'light', editMediaShowModal: false, logOutSpinner: false };\n        if (props.cookies) {\n            const htmlTag = document.getElementsByTagName(\"html\")[0];\n            htmlTag.setAttribute(\"data-theme\", props.cookies);\n        }\n    }\n    setMode = (ele) => {\n        const htmlTag = document.getElementsByTagName(\"html\")[0];\n        htmlTag.setAttribute(\"data-theme\", ele);\n        this.setState({ appThemeSkin: ele }, () => this.props.setAppThemeSkin(ele));\n    };\n\n    editMediaHandleModalShow = () => {\n        this.setState({\n            editMediaShowModal: true\n        })\n    }\n\n    editMediaHandleCallback = (editMediaEvent) => {\n\n        this.setState({\n            editMediaShowModal: editMediaEvent\n        })\n        this.props.uploadModalClick(false)\n    }\n    onClickSignOut = event => {\n        this.setState({\n            logOutSpinner: true\n        })\n        this.props.logOutUser()\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.uploadStatus != this.state.editMediaShowModal) {\n            const { uploadStatus } = nextProps\n            if (uploadStatus) {\n                this.setState({ editMediaShowModal: true })\n            }\n            else this.setState({ editMediaShowModal: false })\n        }\n    }\n    onEmailCopy = (id) => event => COPY_TO_CLIPBOARD(id)\n    render() {\n        const { appThemeSkin, editMediaShowModal, logOutSpinner } = this.state;\n        const { userData, notificationList, history } = this.props\n        return (\n            <div className=\"header-menu d-flex align-items-center justify-content-end w-xs-100 h-100\">\n                <div className=\"d-flex align-items-center h-100 flex-shrink-0\">\n                    <Dropdown id=\"head_skin_\" align=\"end\" className=\"block-center position-relative head_skin_\">\n                        <Dropdown.Toggle variant=\"\" className=\"btn btn-icon btn-active-light btn-active-color-primary p-0 transition-none arrow_disabled\">\n                            {appThemeSkin === 'light' ?\n                                <i className=\"ri-sun-fill icon-6\"></i>\n                                : null}\n                            {appThemeSkin === 'dark' ?\n                                <i className=\"ri-moon-clear-fill icon-6\"></i>\n                                : null}\n                            {appThemeSkin === 'system' ?\n                                <span className=\"svg-icon me-0 text-dark\">\n                                    <SVG src={baseUrl('media/icons/svg-icons/computer-setting.svg')} height={16} width={16} />\n                                </span>\n                                : null}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <div className=\"menu-item\">\n                                <Dropdown.Item className={`${appThemeSkin === 'light' ? 'active ' : ''}px-3 py-2`} onClick={() => this.setMode(\"light\")}>\n                                    <i className=\"ri-sun-fill icon-6 me-2 text-dark\"></i>\n                                    <span className=\"menu-title\">Light</span>\n                                </Dropdown.Item>\n                            </div>\n                            <div className=\"menu-item\">\n                                <Dropdown.Item className={`${appThemeSkin === 'dark' ? 'active ' : ''}px-3 py-2`} onClick={() => this.setMode(\"dark\")}>\n                                    <i className=\"ri-moon-clear-fill icon-6 me-2 text-dark\"></i>\n                                    <span className=\"menu-title\">Dark</span>\n                                </Dropdown.Item>\n                            </div>\n                            <div className=\"menu-item\">\n                                <Dropdown.Item className={`${appThemeSkin === 'system' ? 'active ' : ''}px-3 py-2`} onClick={() => this.setMode(\"system\")}>\n                                    <span className=\"svg-icon svg-icon-5\">\n                                        <SVG src={baseUrl('media/icons/svg-icons/computer-setting.svg')} height={16} width={16} />\n                                    </span>\n                                    <span className=\"menu-title\">System</span>\n                                </Dropdown.Item>\n                            </div>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <div className=\"head_upload_ block-center border-end\">\n                        <button type=\"button\" className={`btn btn-primary d-flex align-items-center ${localStorage.getItem(\"expired\") ? `disabled` : ``}`} onClick={this.editMediaHandleModalShow}>\n                            <span className=\"svg-icon svg-icon-5 me-lg-2 me-0\">\n                                <SVG src={baseUrl('media/icons/svg-icons/cloud-upload.svg')} />\n                            </span>\n                            <span className=\"d-lg-flex d-none fw-medium fs-8\">Upload</span>\n                        </button>\n                    </div>\n                    <Dropdown className=\"block-center head_notifications_\" align=\"end\">\n                        <Dropdown.Toggle variant=\"\" id=\"head_notifications_\" className=\"btn btn-icon btn-active-light btn-active-color-primary p-0 position-relative arrow_disabled\">\n                            <span className=\"d-flex align-items-center justify-content-center\">\n                                <span className=\"notifications_count bg-primary text-light-alt position-absolute rounded-circle\" id=\"notificationCount\" style={{ display: 'none' }} > 0</span>\n                                <i className=\"ri-notification-4-line icon-4\"></i>\n                            </span>\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu className=\"p-0\">\n                            <Suspense fallback={<></>}>\n                                <Notifications notificationList={notificationList} />\n                            </Suspense>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n\n                    <Dropdown className=\"block-center user_profile_\" align=\"end\" autoClose={true}>\n                        <Dropdown.Toggle variant=\"\" id=\"user_profile_\" className=\"btn author_profile p-0 border-0 d-block rounded-circle overflow-hidden arrow_disabled\">\n                            {userData && Object.keys(userData).length > 0 ? <ProfileImage className={'symbol symbol-38 rounded-circle bg-light'}\n                                imageSize={38}\n                                symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\n                                name={userData.user.name} profileUrl={MEDIA_REPLACE_URL(userData.user.picture)} networkId={0} /> : null}\n                        </Dropdown.Toggle>\n\n                        {userData && Object.keys(userData).length > 0 ? <Dropdown.Menu className=\"p-0\">\n                            <div className=\"d-flex align-items-center justify-content-between w-100 p-3 border-bottom\">\n                                <div className=\"d-flex align-items-center me-2\">\n                                    <Link to={\"/profile\"} className=\"text-decoration-none\">\n                                        <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden bg-light'}\n                                            imageSize={40}\n                                            symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\n                                            name={userData.user.name} profileUrl={MEDIA_REPLACE_URL(userData.user.picture)} networkId={0} />\n                                    </Link>\n                                    <div className=\"\">\n                                        <p className=\"text-dark mb-0\">\n                                            <Link to={\"/profile\"} className=\"text-decoration-none\"><strong className=\"fs-6 fw-bold text-break text-gray-800\">{userData.user.name}</strong></Link>\n                                        </p>\n                                        <span className=\"mb-0 text-gray-600 text-break fs-8 cursor-pointer\" id=\"headerProfileEmail\" onClick={this.onEmailCopy(\"headerProfileEmail\")}>{userData.user.emailId}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"px-5 mb-3\">\n                                <Dropdown.Item className=\"navi-item px-0 py-2 py-xxl-3 border-bottom dropdown-item rounded-0\" onClick={event => history(\"/profile\")}>\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\n                                        <div className=\"symbol-label text-dark\">\n                                            <i className=\"ri-user-3-line icon-6 me-0\"></i>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <div className=\"fs-7 fw-semibold mb-1\">My Profile</div>\n                                        <div className=\"text-gray-600 fs-8\">View/Edit your personal information </div>\n                                    </div>\n                                </Dropdown.Item>\n                                <Dropdown.Item className=\"navi-item px-0 py-2 py-xxl-3 border-bottom dropdown-item rounded-0\" onClick={event => history(\"/billing\")}>\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\n                                        <div className=\"symbol-label text-dark\">\n                                            <i className=\"ri-contacts-line icon-6 me-0\"></i>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <div className=\"fs-7 fw-semibold mb-1\">My Account</div>\n                                        <div className=\"text-gray-600 fs-8\">Account info and plan</div>\n                                    </div>\n                                </Dropdown.Item>\n                                <button type=\"button\" onClick={this.onClickSignOut} className={`navi-item px-0 py-2 py-xxl-3 dropdown-item rounded-0 ${logOutSpinner ? 'disabled' : ''}`}>\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\n                                        <div className={`symbol-label ${logOutSpinner ? 'text-gray-500' : 'text-dark'}`}>\n                                            <i className=\"ri-logout-circle-r-line icon-6 me-0\"></i>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <div className={`fs-7 fw-semibold mb-1 ${logOutSpinner ? 'spinner spinner-gray text-gray-500' : ''}`}>Sign Out</div>\n                                    </div>\n                                </button>\n                            </div>\n                        </Dropdown.Menu> : null}\n                    </Dropdown>\n                </div>\n                <Suspense fallback={<></>}>\n                    {editMediaShowModal ? <AddAssetsModal editMediaHandleCallback={this.editMediaHandleCallback} editMediaToggle={editMediaShowModal} {...this.props} /> : null}\n                </Suspense>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n\n    return {\n        userData: state.authenticated.userData,\n        uploadStatus: state.modalstatus.uploadStatus,\n        notificationList: state.notifications.notificationList\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logOutUser: () => dispatch(logOutUser()),\n        uploadModalClick: (status) => dispatch(uploadModalClick(status))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderManu);"],"names":["AddAssetsModal","React","Notifications","HeaderManu","props","setMode","ele","document","getElementsByTagName","setAttribute","setState","appThemeSkin","setAppThemeSkin","editMediaHandleModalShow","editMediaShowModal","editMediaHandleCallback","editMediaEvent","uploadModalClick","onClickSignOut","event","logOutSpinner","logOutUser","onEmailCopy","id","COPY_TO_CLIPBOARD","state","isActiveAside","cookies","nextProps","uploadStatus","this","userData","notificationList","history","className","align","variant","src","baseUrl","height","width","onClick","type","localStorage","getItem","style","display","Suspense","fallback","autoClose","Object","keys","length","imageSize","symbolClass","name","user","profileUrl","MEDIA_REPLACE_URL","picture","networkId","to","emailId","editMediaToggle","Component","connect","authenticated","modalstatus","notifications","dispatch","status"],"sourceRoot":""}