{"version":3,"file":"static/js/4804.55cf8c17.chunk.js","mappings":"2PAKMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAQD,OARCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAMFC,WAAa,SAACA,EAAWC,GACrB,EAAKC,MAAMC,mBAAmBH,EAAWC,EAC5C,IA+BA,OA/BA,8BACD,WAAU,IAAD,OACL,EAA0CG,KAAKF,MAAvCG,EAAR,EAAQA,YAAYC,EAApB,EAAoBA,kBACpB,OAAO,SAAC,IAAD,WACH,iBAAKC,UAAU,4BAAf,WACI,gBAAKA,UAAU,OAAf,UACI,kBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,8BAE5D,oBAAQD,KAAK,SAASD,UAAU,2EAA2EG,QAAS,kBAAM,EAAKV,WAAW,eAAe,KAArC,EAApH,WACI,iBAAMO,UAAU,WAAhB,UACI,gBAAKI,MAAM,6BAA6BC,MAAM,SAASC,OAAO,SAASC,QAAQ,oBAA/E,UACI,cAAGC,GAAG,aAAa,YAAU,aAAaC,UAAU,+BAApD,UACI,cAAGD,GAAG,sBAAsBC,UAAU,6BAAtC,UACI,iBAAMD,GAAG,YAAY,YAAU,YAAYE,EAAE,+TAA+TD,UAAU,iCAAiCE,KAAK,yBALhb,wBAYIb,GAAeA,EAAYc,OAAS,EAAId,EAAYe,KAAI,SAACnB,EAASoB,GAC9D,OAAO,oBAAqCb,KAAK,SAASD,UAAS,qGAAgGD,IAAoBL,EAAQc,GAAG,SAAS,IAAML,QAAS,kBAAM,EAAKV,WAAwB,KAAbC,EAAQc,GAAQ,gBAAgB,YAAYd,EAAlE,EAAnN,WACH,iBAAMM,UAAU,wBAAhB,UACI,gBAAKA,UAAU,wBAAwBe,KAAKC,EAAAA,EAAAA,GAAQ,mCAAD,QAAoCC,EAAAA,EAAAA,IAAiBvB,EAAQc,IAA7D,SAAyEU,IAAI,GAAGZ,OAAQ,GAAID,MAAO,OAEzJX,EAAQyB,OAJN,iBAAuBzB,EAAQc,IAMzC,IAAI,SAIpB,OAvCChB,CAAiB4B,EAAAA,WAgDvB,WAAeC,EAAAA,EAAAA,KALS,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAME,SAASD,YAEnC,GACD,CAAwC/B,E","sources":["Layouts/Main/MyAssets/AddAssetsModal/Compontnets/Elements/Networks.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { baseUrl } from '../../../../../../Assets/AssetsHelper';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { GET_NETWORK_ICON } from '../../../../../../Services/Utils/utils';\nclass Networks extends Component {\n    // constructor() {\n    //     super();\n    //     //this.state = {showModalType:'addFeed' };\n    // }\n\n    uploadType = (uploadType,network) => {\n        this.props.uploadTypeCallback(uploadType,network)\n    };\n    render() {\n        const { networkList,selectedNetworkId } = this.props;\n        return <PerfectScrollbar>\n            <div className=\"addSourceNetworkList px-3\">\n                <div className=\"mb-4\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search your network...\" />\n                </div>\n                <button type=\"button\" className=\"btn btn-active-light border border-dashed py-3 w-100 mb-2 fs-7 fw-medium\" onClick={() => this.uploadType(\"uploadAssets\",null)}>\n                    <span className=\"svg-icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18.674\" height=\"15.244\" viewBox=\"0 0 18.674 15.244\">\n                            <g id=\"Group_9862\" data-name=\"Group 9862\" transform=\"translate(-1638.727 -23.184)\">\n                                <g id=\"noun-upload-5032244\" transform=\"translate(1638.726 23.184)\">\n                                    <path id=\"Path_7162\" data-name=\"Path 7162\" d=\"M13962.508-3301.471a2.465,2.465,0,0,1-2.461-2.464v-3.51h1.56v3.51a.9.9,0,0,0,.9.9h13.748a.9.9,0,0,0,.9-.9v-3.51h1.563v3.51a2.452,2.452,0,0,1-.724,1.742,2.453,2.453,0,0,1-1.741.722Zm6.1-3.34v-9.241l-3.354,3.353-1.1-1.1,4.681-4.685a.792.792,0,0,1,.552-.227.783.783,0,0,1,.554.227l4.684,4.685-1.1,1.1-3.351-3.353v9.241Z\" transform=\"translate(-13960.047 3316.716)\" fill=\"currentColor\" />\n                                </g>\n                            </g>\n                        </svg>\n                    </span>Browse From Device\n                </button>\n                {\n                    networkList && networkList.length > 0 ? networkList.map((network, index) => {\n                        return <button key={`network${network.id}`} type=\"button\" className={`btn w-100 btn-active-light btn-sm mb-1 fs-7 fw-medium text-start d-flex align-items-center ${selectedNetworkId===network.id?'active':''}`} onClick={() => this.uploadType(network.id===29?'onsite-upload':'byNetwork',network)}>\n                            <span className=\"symbol symbol-24 me-2\">\n                                <img className=\"object-center-contain\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.id)}.svg`)} alt=\"\" height={30} width={30} />\n                            </span>\n                            {network.name}\n                        </button>\n                    }) : null\n                }\n            </div>\n        </PerfectScrollbar>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state.networks.networkData\n    }\n}\nexport default connect(mapStateToProps)(Networks);"],"names":["Networks","uploadType","network","props","uploadTypeCallback","this","networkList","selectedNetworkId","className","type","placeholder","onClick","xmlns","width","height","viewBox","id","transform","d","fill","length","map","index","src","baseUrl","GET_NETWORK_ICON","alt","name","Component","connect","state","networkData","networks"],"sourceRoot":""}