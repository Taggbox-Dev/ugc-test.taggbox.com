{"version":3,"file":"static/js/9694.a48ca083.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsModalAside.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\nimport $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport FileSaver from \"file-saver\";\nimport moment from 'moment'\nimport { Nav, Tab } from 'react-bootstrap';\nimport { baseUrl } from \"../../../../../Assets/AssetsHelper\";\nimport { Uppy } from \"@uppy/core\";\nimport { ugcActionRquest, getLastUgcRequest } from '../../../../../Services/Actions/ugcRightsActions'\nimport { loadAssetsDataWithDispatch } from '../../../../../Services/Actions/assetsActions'\nimport { getURLFromVideo } from '../../../../../Services/Utils/utils'\n\n//import FileInput from \"@uppy/react/lib/FileInput\";\nimport Transloadit from \"@uppy/transloadit\";\nimport GoogleDrive from '@uppy/google-drive';\nimport Url from '@uppy/url';\nconst GetRightsGenralRequest = React.lazy(() => import('./GetRightsSteps/GetRightsGenralRequest'));\nconst GetRightsSocialAccount = React.lazy(() => import('./GetRightsSteps/GetRightsSocialAccount'));\nconst GetRightsCopyUrl = React.lazy(() => import('./GetRightsSteps/GetRightsCopyUrl'));\nconst GetRightsPendingAndExpire = React.lazy(() => import('./GetRightsStatus/GetRightsPendingAndExpire'));\nconst GetRightsDownload = React.lazy(() => import('./GetRightsStatus/GetRightsDownload'));\nconst GetRightsRejected = React.lazy(() => import('./GetRightsStatus/GetRightsRejected'));\n\nconst uppyConfig = {\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\n    uppyBucket: 'cloud.taggbox.com',\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\n    companionUrl: 'https://test.taggbox.com'\n}\n\n\n\nclass AssetsModalAside extends Component {\n    constructor(props) {\n        super(props)\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\n            .use(Transloadit, {\n                target: '#a',\n                params: {\n                    auth: {\n                        key: uppyConfig.uppyKey\n                    },\n                    steps: {\n                        store: {\n                            robot: \"/wasabi/store\",\n                            bucket_region: \"us-west-1\",\n                            bucket: uppyConfig.uppyBucket,\n                            key: uppyConfig.uppyAwsKey,\n                            secret: uppyConfig.uppyAwsSecret,\n                            path: 'postimage/${file.id}'\n                        }\n                    }\n                },\n                waitForEncoding: true\n            })\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n\n        this.uppyPostEdit = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'] } })\n            .use(Transloadit, {\n                target: '#a',\n                params: {\n                    auth: {\n                        key: uppyConfig.uppyKey\n                    },\n                    steps: {\n                        store: {\n                            robot: \"/wasabi/store\",\n                            bucket_region: \"us-west-1\",\n                            bucket: uppyConfig.uppyBucket,\n                            key: uppyConfig.uppyAwsKey,\n                            secret: uppyConfig.uppyAwsSecret,\n                            path: 'test/${file.id}'\n                        }\n                    }\n                },\n                waitForEncoding: true\n            })\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n    }\n    state = {\n        step: 1,\n        client_logo: null,\n        client_logo_name: null,\n        comment: 'We loved your creative brilliance! Can we showcase your incredible work and give you the recognition you deserve? ✨📸🙌. Please approve our request so we can use your content in our marketing campaign.',\n        tncName: \"TermsAndConditions.docx\",\n        tncUrl: \"TermsAndConditions.docx\",\n        tnc: false,\n        logoModal: false,\n        fileModal: false,\n        activeKey: 'ugc-genralRequest',\n        connectedAccount: null,\n        commentError: null,\n        tncUrlError: null,\n        tncError: null,\n        requestedRespone: null\n\n    }\n\n    onClickToChange = (step) => event => {\n        if (this.state.step == 1) {\n            // ugc-copyUrl\n            if (this.state.comment && this.state.tncUrl && this.state.tnc) {\n                this.setState({ step, activeKey: \"ugc-socialAccount\" })\n            }\n            else {\n\n                if (!this.state.comment || String(this.state.comment).length == 0) this.setState({ commentError: true })\n                if (!this.state.tncUrl) this.setState({ tncUrlError: true })\n                if (!this.state.tnc) this.setState({ tncError: true })\n            }\n        }\n        else if (this.state.step == 2) {\n            if (this.state.connectedAccount) {\n                this.onClicktoSendRequest({ step, activeKey: \"ugc-copyUrl\" })\n            }\n        }\n        else if (this.state.step == 3) {\n\n        }\n\n    }\n    onClickToRemoveLogo = event => this.setState({\n        client_logo: null, client_logo_name: null,\n    })\n\n\n    componentDidMount() {\n        this.uppyPostEdit.on('transloadit:result', (stepName, result) => {\n            var imgpath = result.url.split('/');\n            var imglength = imgpath.length;\n            var filename = imgpath[imglength - 1];\n            let { tncName, tncUrl } = this.state;\n            tncUrl = result.id\n            tncName = result.name\n            this.setState({ tncName, tncUrl, selectedFile: result.id, filename: `https://cloud.taggbox.com/test/${result.id}`, selected: `https://cloud.taggbox.com/test/${result.id}` }, () => {\n                setTimeout(() => {\n                    this.uppyPostEdit.cancelAll()\n                    this.setState({ fileModal: false })\n                }, 300)\n            })\n\n        })\n\n        this.uppy.on('transloadit:result', (stepName, result) => {\n            let { client_logo, client_logo_name } = this.state\n\n            client_logo = `https://cloud.taggbox.com/postimage/${result.id}`\n            client_logo_name = result.name\n            this.setState({ client_logo, client_logo_name, selectedlogoFile: result.id, logofilename: `https://cloud.taggbox.com/postimage/${result.id}`, logoselected: `https://cloud.taggbox.com/postimage/${result.id}` }, () => {\n                setTimeout(() => {\n                    this.uppy.cancelAll()\n                    this.setState({ logoModal: false })\n                }, 300)\n            })\n\n        })\n        this.onLoadLastRequestData()\n    }\n    onLoadLastRequestData = () => {\n        var self = this;\n        getLastUgcRequest().then((response) => {\n            const { result } = response.data\n            var client_logo = {}; var comment = {}; var tncURL = {}\n            if (result.client_logo && String(result.client_logo).length > 0) {\n                client_logo = { client_logo: result.client_logo }\n            }\n            if (result.custom_message && String(result.custom_message).length > 0) {\n                comment = { comment: result.custom_message }\n            }\n\n            if (result.custom_term_type && String(result.custom_term_type).length > 0) {\n                tncURL = { tncName: result.custom_terms, tncUrl: result.custom_term_type }\n            }\n            self.setState({ ...client_logo, ...comment, ...tncURL })\n        })\n    }\n\n\n    onClickClearFile = event => {\n        this.setState({ tncName: \"\", tncUrl: \"\" })\n    }\n\n    componentWillUnmount() {\n        this.uppy.close();\n    }\n    termsFileDownload = () => {\n        //var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx'), \"Terms&ConditionsforuseofUGC.docx\");\n    }\n    modalClose = (step) => event => {\n        if (step == 2) this.setState({ step: 1, activeKey: \"ugc-genralRequest\" })\n        else this.props.modalClose(false)\n    }\n    onChangeComment = event => this.setState({ comment: event.target.value })\n    onClicktnc = event => {\n        const { tnc } = this.state\n        this.setState({ tnc: !tnc, tncError: null })\n    }\n\n    onLogoClose = event => {\n        this.uppy.cancelAll()\n        this.setState({ logoModal: false })\n    }\n    onLogoOpen = event => this.setState({ logoModal: true }, () => {\n        $(\".uppy-Dashboard-close\").click(() => {\n            this.uppy.cancelAll()\n            this.setState({ logoModal: false })\n        })\n    })\n\n    onFileOpen = event => {\n        this.setState({ fileModal: true }, () => {\n            $(\".uppy-Dashboard-close\").click(() => {\n                this.uppyPostEdit.cancelAll()\n                this.setState({ fileModal: false })\n            })\n        })\n\n    }\n\n    onFileClose = () => {\n        this.uppyPostEdit.cancelAll()\n        this.setState({ fileModal: false })\n    }\n    onSelected = (key) => {\n        this.setState({ activeKey: key })\n    }\n    onClicktoSendRequest = (updateStep) => {\n\n        const { modalAssetData, isBulkStatus, bulkRightsData } = this.props;\n        const { comment, tncUrl, tncName, client_logo, connectedAccount } = this.state;\n        var requestedAccount = {}\n        if (connectedAccount && connectedAccount.data.length > 0) {\n            requestedAccount = connectedAccount.data[0]\n        }\n        var self = this;\n        var assetsData = []\n        if (isBulkStatus) {\n            bulkRightsData.map((grItem) => {\n                assetsData.push({ \"referenceId\": grItem.referenceId, \"username\": grItem.username, \"media\": grItem.publishImage, \"video\": getURLFromVideo(grItem.mediaFile), ...requestedAccount, link: grItem.link, author: grItem.picture })\n            })\n\n        }\n        else {\n            assetsData.push({ \"referenceId\": modalAssetData.referenceId, \"username\": modalAssetData.username, \"media\": modalAssetData.publishImage, \"video\": getURLFromVideo(modalAssetData.mediaFile), ...requestedAccount, link: modalAssetData.link, author: modalAssetData.picture })\n        }\n        const requestedData = {\n            \"feedId\": modalAssetData.feedId,\n            \"custom_message\": comment,\n            \"networkId\": modalAssetData.networkId,\n            \"brandlink\": client_logo ? client_logo : \"\",\n            \"termslink\": tncUrl,\n            \"custom_term_type\": tncName,\n            \"assets\": assetsData\n        }\n        ugcActionRquest(requestedData).then((response) => {\n            self.props.loadAssetsDataWithDispatch()\n            //self.props.modalClose(false)\n            self.setState({ requestedRespone: response.data, ...updateStep })\n            //window.open(modalAssetData.link, '_blank')\n        })\n    }\n    onUpdateData = (provider, data) => {\n        this.setState({ connectedAccount: { provider, data } })\n    }\n    render() {\n        const { modalAssetData } = this.props\n        const { step, activeKey, connectedAccount, requestedRespone, comment } = this.state\n        return modalAssetData && Object.keys(modalAssetData).length > 0 ? <div className=\"rights_modal_sidebar position-relative\">\n            <div className=\"rights_modal_aside_wrap\">\n                {modalAssetData.ugcRights == null ? <Tab.Container activeKey={activeKey} onSelect={this.onSelected}>\n                    <div className=\"ugc-wizard-nav\">\n                        <Nav variant=\"nav\" className=\"bg-light justify-content-between row gx-0\">\n                            <Nav.Item className=\"col-4\">\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 1 || step == 2 || step == 3 ? `active` : ``}`} eventKey=\"ugc-genralRequest\" onClick={event => this.setState({ step: 1 })}>\n                                    <span className=\"d-flex me-1 text-success\">\n                                        <i className=\"ri-checkbox-circle-fill icon-5\"></i>\n                                    </span>\n                                    <span className=\"fw-bold text-nowrap\">Generate Request</span>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"col-4\">\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 2 || step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-socialAccount\">\n                                    <span className=\"d-flex me-1\">\n                                        <i className=\"checkIcoFilled ri-checkbox-circle-fill icon-5 text-success\"></i>\n                                        <i className=\"checkIco ri-checkbox-circle-line icon-5\"></i>\n                                    </span>\n                                    <span className=\"fw-bold text-nowrap\">Social Account</span>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"col-4\">\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-copyUrl\">\n                                    <span className=\"d-flex me-1\">\n                                        <i className=\"checkIcoFilled ri-checkbox-circle-fill icon-5 text-success\"></i>\n                                        <i className=\"checkIco ri-checkbox-circle-line icon-5\"></i>\n                                    </span>\n                                    <span className=\"fw-bold text-nowrap\">Copy URL</span>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </div>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"ugc-genralRequest\">\n                            <Suspense fallback={<></>}>\n                                <GetRightsGenralRequest state={this.state} onChangeComment={this.onChangeComment} onClicktnc={this.onClicktnc} onClickClearFile={this.onClickClearFile} uppyPostEdit={this.uppyPostEdit} uppy={this.uppy} onLogoClose={this.onLogoClose} onLogoOpen={this.onLogoOpen} onClickToRemoveLogo={this.onClickToRemoveLogo} onFileOpen={this.onFileOpen} onFileClose={this.onFileClose} />\n                            </Suspense>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"ugc-socialAccount\">\n                            <Suspense fallback={<></>}>\n                                <GetRightsSocialAccount modalAssetData={modalAssetData} onUpdateData={this.onUpdateData} connectedAccount={connectedAccount} />\n                            </Suspense>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"ugc-copyUrl\">\n                            <Suspense fallback={<></>}>\n                                <GetRightsCopyUrl modalAssetData={modalAssetData} requestedRespone={requestedRespone} comment={comment} />\n                            </Suspense>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n                    :\n                    modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 1 ?\n                        <Suspense fallback={<></>}>\n                            <GetRightsPendingAndExpire days={parseInt(30) - (parseInt((parseInt((moment().diff(moment(modalAssetData.ugcRights.created), 'days'))))) + parseInt(1))} expireStatus={true} modalAssetData={modalAssetData} />\n                        </Suspense>\n                        : modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 2 ?\n                            <Suspense fallback={<></>}>\n                                <GetRightsDownload modalAssetData={modalAssetData} />\n                            </Suspense> : modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 3 ? <Suspense fallback={<></>}>\n                                <GetRightsRejected modalAssetData={modalAssetData} onUpdateRejectedRightDetail={this.props.onUpdateRejectedRightDetail} />\n                            </Suspense> : null}\n            </div>\n            {modalAssetData.ugcRights == null ? <div className=\"rights_modal_actions text-center modal-footer w-100\">\n                {step == 1 || step == 2 ? <><button type=\"button\" className=\"btn btn-secondary me-2\" onClick={this.modalClose(step)}>{step == 1 ? `Cancel` : step == 2 ? `Back` : ``}</button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClickToChange(step == 1 ? 2 : step == 2 ? 3 : 4)}>Next Step</button>\n                </> : null}\n\n                {step == 3 ? <button type=\"button\" className=\"btn btn-secondary me-2\" onClick={this.modalClose(step)}>Done</button> : null}\n            </div> : null}\n        </div> : null\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        loadAssetsDataWithDispatch: () => dispatch(loadAssetsDataWithDispatch()),\n\n\n\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetsModalAside);"],"names":["GetRightsGenralRequest","React","GetRightsSocialAccount","GetRightsCopyUrl","GetRightsPendingAndExpire","GetRightsDownload","GetRightsRejected","uppyConfig","AssetsModalAside","props","state","step","client_logo","client_logo_name","comment","tncName","tncUrl","tnc","logoModal","fileModal","activeKey","connectedAccount","commentError","tncUrlError","tncError","requestedRespone","onClickToChange","event","setState","String","length","onClicktoSendRequest","onClickToRemoveLogo","onLoadLastRequestData","self","getLastUgcRequest","then","response","result","data","tncURL","custom_message","custom_term_type","custom_terms","onClickClearFile","termsFileDownload","FileSaver","baseUrl","modalClose","onChangeComment","target","value","onClicktnc","onLogoClose","uppy","cancelAll","onLogoOpen","$","click","onFileOpen","uppyPostEdit","onFileClose","onSelected","key","updateStep","modalAssetData","isBulkStatus","bulkRightsData","requestedAccount","assetsData","map","grItem","push","referenceId","username","publishImage","getURLFromVideo","mediaFile","link","author","picture","requestedData","feedId","networkId","ugcActionRquest","loadAssetsDataWithDispatch","onUpdateData","provider","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","params","auth","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","GoogleDrive","companionUrl","Url","this","on","stepName","imgpath","url","split","id","name","selectedFile","filename","selected","setTimeout","selectedlogoFile","logofilename","logoselected","close","Object","keys","className","ugcRights","onSelect","variant","eventKey","onClick","Suspense","fallback","status","days","parseInt","moment","diff","created","expireStatus","onUpdateRejectedRightDetail","type","Component","connect","dispatch"],"sourceRoot":""}