{"version":3,"file":"static/js/7713.47b90c68.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","Layouts/Main/PublishCommonComponents/EmbedCode.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { Component, Suspense } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\r\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\nimport { EmbedURL, EMBED_MIN } from '../../../Services/Api'\r\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\r\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\r\n\r\nclass EmbedCode extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\r\n    }\r\n    shareEmbedModal = (id) => event => this.setState({\r\n        showModal: true,\r\n        id: id\r\n    })\r\n    shareEmbedCallback = (shareEmbedEvent) => {\r\n        this.setState({\r\n            showModal: shareEmbedEvent\r\n        })\r\n    }\r\n\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    onClickToShare = (mailId) => event => {\r\n        var self = this;\r\n        const { id } = this.state\r\n        this.setState({ isLoading: true })\r\n        if (mailId && String(mailId).length > 0) {\r\n            mailSendRequest({ htmlCode: document.querySelector(id ? id : \"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\r\n                toast.success(\"Tagbox widget code successfully sent.\")\r\n                self.setState({ showModal: false, isLoading: false })\r\n            }).catch(ex=>{\r\n                toast.error(\"Some error occured, please try again later.\")\r\n            })\r\n\r\n        }\r\n        else {\r\n            toast.error(\"Please enter email id.\")\r\n        }\r\n    }\r\n    onChangeWidth = event => {\r\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ width: event.target.value > 100 ? 100 : event.target.value })\r\n    }\r\n    onChangeHeight = event => {\r\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ height: event.target.value > 100 ? 100 : event.target.value })\r\n    }\r\n    onClickToWidthSign = (value) => event => {\r\n        this.setState({ widthSign: value })\r\n    }\r\n    onClickToHeightSign = (value) => event => {\r\n        this.setState({ heightSign: value })\r\n    }\r\n    render() {\r\n        const { codeCopied, showModal, width, height, widthSign, heightSign } = this.state\r\n        const { copyText, data } = this.props\r\n\r\n        return <div className=\"embed_code\">\r\n            <div className=\"mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Width</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={width} value={width} onChange={this.onChangeWidth} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={widthSign}>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"%\")}>Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"px\")}>Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"vw\")} >Viewport Width (VW)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Height</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={height} value={height} onChange={this.onChangeHeight} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={heightSign}>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"%\")}>Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"px\")}>Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"vw\")}>Viewport Height (VH)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\r\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\r\n                    <Nav variant=\"underline\" className=\"mb-3 border-bottom\">\r\n                        <Nav.Item className=\"me-4\">\r\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Lite Code\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"\">\r\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Iframe\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\r\n                                    &lt;div class=\"taggbox\" data-widget-id=\"{data && Object.keys(data).length > 0 ? data.wallId : null}\" ugcSuite=\"1\" style=\"width:{width}{widthSign};height:{height}{heightSign};\"&gt;&lt;/div&gt;\r\n                                    &lt;script src=\"{EMBED_MIN}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\r\n                                            {!codeCopied ?\r\n                                                <i className=\"ri-file-copy-fill\"></i>\r\n                                                :\r\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCode_')}>\r\n                                            <i className=\"ri-mail-fill\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                    &lt;iframe src=\"{EmbedURL}{data && Object.keys(data).length > 0 ? data.wallId : null}?ugcSuite=1\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                            {!codeCopied ?\r\n                                                <i className=\"ri-file-copy-fill\"></i>\r\n                                                :\r\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCodeIframe_')}>\r\n                                            <i className=\"ri-mail-fill\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Tab.Container>\r\n            </div>\r\n            <Suspense fallback={<></>}>\r\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\r\n            </Suspense>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default EmbedCode;"],"names":["alignDirection","PropTypes","alignPropType","sm","md","lg","xl","xxl","propTypes","id","href","onClick","title","disabled","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","bsPrefix","variant","size","DropdownButton","React","_ref","ref","children","props","_objectWithoutProperties","_excluded","_jsxs","Dropdown","_objectSpread","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","ShareEmbedModal","_Component","_inherits","EmbedCode","_super","_createSuper","_this","_classCallCheck","call","shareEmbedModal","event","setState","showModal","shareEmbedCallback","shareEmbedEvent","codeCopy","codeCopied","setTimeout","COPY_TO_CLIPBOARD","onClickToShare","mailId","self","_assertThisInitialized","state","isLoading","String","length","mailSendRequest","htmlCode","document","querySelector","innerText","email","type","then","response","toast","catch","ex","onChangeWidth","target","value","parseInt","width","onChangeHeight","height","onClickToWidthSign","widthSign","onClickToHeightSign","heightSign","_createClass","key","_this2","_this$state","this","_this$props","copyText","data","className","InputGroup","Form","defaultValue","onChange","Tab","defaultActiveKey","Nav","eventKey","style","wordBreak","Object","keys","wallId","EMBED_MIN","OverlayTrigger","placement","overlay","Tooltip","color","EmbedURL","Suspense","fallback","_Fragment","text","heading","Component"],"sourceRoot":""}