{"version":3,"file":"static/js/9977.7a939d74.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/AddAssetsModal.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport $ from 'jquery'\nimport { Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { getAllConnectedAccounts, getAllNetworks } from '../../../../Services/Actions/addFeedAction';\nimport { GET_ALL_NETWORKS } from '../../../../Services/Constants/constants';\nimport Uppy from \"@uppy/core\";\nimport Transloadit from \"@uppy/transloadit\";\nimport GoogleDrive from \"@uppy/google-drive\";\nimport Instagram from \"@uppy/instagram\";\nimport Url from \"@uppy/url\";\nimport Webcam from \"@uppy/webcam\";\nimport { toast } from 'react-toastify';\n//import PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst UploadedAssets = React.lazy(() => import('./Compontnets/UploadedAssets'));\n\nconst UploadAssets = React.lazy(() => import('./Compontnets/UploadAssets'));\n\n\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\nconst uppyBucket = 'cloud.taggbox.com';\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\n\n\nconst companionUrl = 'https://app.taggbox.com';\n\nconst uppyPostEdit = new Uppy({\n    id: \"editA\",\n    debug: true,\n    autoProceed: true,\n    restrictions: {\n        maxFileSize: 5000000,\n        maxNumberOfFiles: 100,\n        minNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"],\n    },\n});\n\nuppyPostEdit.use(Transloadit, {\n    target: \"#a\",\n    params: {\n        auth: {\n            key: uppyKey,\n        },\n        steps: {\n            resize: {\n                robot: \"/image/resize\",\n                width: 500,\n                resize_strategy: \"fit\",\n                background: \"none\",\n            },\n            store: {\n                robot: \"/wasabi/store\",\n                bucket_region: \"us-west-1\",\n                bucket: uppyBucket,\n                key: uppyAwsKey,\n                secret: uppyAwsSecret,\n                path: 'onsiteupload/images/${file.id}'\n            },\n        },\n    },\n    waitForEncoding: true,\n});\nuppyPostEdit.use(Instagram, {\n    target: Uppy.Dashboard,\n    companionUrl: companionUrl,\n});\nuppyPostEdit.use(GoogleDrive, {\n    target: Uppy.Dashboard,\n    companionUrl: companionUrl,\n});\nuppyPostEdit.use(Url, { target: Uppy.Dashboard, companionUrl: companionUrl });\nuppyPostEdit.use(Webcam, {\n    target: Uppy.Dashboard,\n    companionUrl: companionUrl,\n});\n\nclass AddAssetsModal extends Component {\n    constructor() {\n        super();\n    }\n    state = {\n        collection: null,\n        showModalType: 'uploadAssets', isUploaded: false, uploadedData: [], selected: 0, checkAll: false,\n        captionStatus: false,\n        captionText: \"\",\n        tagsStatus: false,\n        tagstext: \"\",\n        copyrightStatus: false,\n        copyrightValue: false,\n        collectionError: false,\n        updateRequest: false,\n        isUpdate: false\n    };\n\n    updateStatusC = event => {\n        const { uploadedData, captionText } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.caption = captionText\n                else item.caption = item.caption\n            }\n            else {\n                item.caption = item.caption\n            }\n        })\n\n        this.setState({\n            captionStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusTag = event => {\n        const { uploadedData, tagstext } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.addTags = tagstext\n                else item.addTags = item.addTags\n            }\n            else {\n                item.addTags = item.addTags\n            }\n        })\n        this.setState({\n            tagsStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusCopy = event => {\n        const { uploadedData, copyrightValue } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.copyright = copyrightValue\n                else item.copyright = item.copyright\n            }\n            else {\n                item.copyright = item.copyright\n            }\n        })\n\n        this.setState({\n            copyrightStatus: event.target.checked, uploadedData\n        })\n    }\n\n    onChangeCaption = event => {\n        const { uploadedData, captionStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (captionStatus) item.caption = event.target.value\n                else item.caption = item.caption\n            }\n            else {\n                item.caption = item.caption\n            }\n        })\n        this.setState({ captionText: event.target.value, uploadedData })\n    }\n\n    onLoadAddCaption = () => {\n        var { uploadedData, captionText, captionStatus } = this.state;\n\n        if (captionStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    uploadedData[index].caption = captionText\n                    //item.caption = captionText\n                }\n                else {\n                    uploadedData[index].caption = \"\"\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n\n    }\n\n    onChangeTags = (value) => {\n\n\n        const { uploadedData, tagsStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (tagsStatus) item.addTags = value\n                else item.addTags = item.addTags\n            }\n            else {\n                item.addTags = item.addTags\n            }\n        })\n        this.setState({ tagstext: value, uploadedData })\n    }\n    onLoadTags = () => {\n        var { uploadedData, tagstext, tagsStatus } = this.state;\n        if (tagsStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n\n                    uploadedData[index].addTags = tagstext\n                    //item.addTags = tagstext\n                }\n                else {\n                    uploadedData[index].addTags = \"\"\n                }\n            })\n        }\n\n        this.setState({ uploadedData })\n    }\n    onChangeCopyRight = (value) => event => {\n        const { uploadedData, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (copyrightStatus) item.copyright = value\n                //else item.copyright = false changes by shlok\n            }\n            else {\n                item.copyright = item.copyright\n            }\n        })\n        this.setState({ copyrightValue: value, uploadedData })\n    }\n    onLoadCopyRight = () => {\n\n        var { uploadedData, copyrightValue, copyrightStatus } = this.state;\n        if (copyrightStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    //item.copyright = copyrightValue\n                    uploadedData[index].copyright = copyrightValue\n                }\n                else {\n                    uploadedData[index].copyright = false\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n    }\n\n    handleClose = () => {\n        const { uploadedData } = this.state\n\n        if (uploadedData && uploadedData.length > 0) {\n\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You want to  discard changes!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: 'Yes, discard changes!'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    if ($(\"#resetUppyUpload\")) {\n                        $(\"#resetUppyUpload\").click()\n                    }\n                    this.props.editMediaHandleCallback(false)\n                }\n            })\n        }\n        else {\n            this.props.editMediaHandleCallback(false)\n        }\n\n    };\n\n    showModalTypeCallback = (showModalType) => {\n        this.setState({\n            showModalType: showModalType\n        })\n    }\n    isUploaded = () => {\n        const { collection } = this.state\n        this.setState({\n            isUploaded: !this.state.isUploaded\n        })\n    }\n    onUploadedData = (newObject) => {\n        const { uploadedData, isUpdate } = this.state;\n        uploadedData.push(newObject)\n        this.setState({ uploadedData, isUpdate: !isUpdate }, () => this.onloadCheckedPostCount())\n    }\n    onDeleteUploadedData = (id) => {\n        let { uploadedData } = this.state;\n        uploadedData = uploadedData.filter(item => item.localId != id)\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n    onClearUPloadObject = (data) => {\n        this.setState({ uploadedData: data }, () => this.onloadCheckedPostCount())\n    }\n    onSelectedCollection = (newObject) => {\n        this.setState({ collection: newObject, collectionError: false })\n    }\n\n    onClickTORemovePost = (postIndex, localId) => event => {\n        let { uploadedData } = this.state;\n\n        if (postIndex > -1) {\n            uploadedData.splice(postIndex, 1);\n            if (localId) uppyPostEdit.removeFile(localId)\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n\n    }\n    onClickTOCheckPost = (postIndex) => event => {\n        let { uploadedData, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n\n\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            if (uploadedData[postIndex].checked) {\n                uploadedData[postIndex].checked = false\n                // uploadedData[postIndex].caption = \"\"\n                // uploadedData[postIndex].addTags = \"\"\n                // uploadedData[postIndex].copyright = false\n            }\n            else {\n                uploadedData[postIndex].checked = true\n                if (captionStatus) uploadedData[postIndex].caption = captionText\n                if (tagsStatus) uploadedData[postIndex].addTags = tagstext\n                if (copyrightStatus) uploadedData[postIndex].copyright = copyrightValue\n            }\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n\n    onloadCheckedPostCount = () => {\n        const { uploadedData } = this.state;\n        var count = uploadedData.filter((item) => item.checked == true).length;\n        this.setState({ selected: count, checkAll: uploadedData.length == count ? true : false })\n    }\n    onClickToAllCheck = event => {\n        const { uploadedData, checkAll, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            item.checked = !checkAll\n            if (!checkAll == true) {\n                if (captionStatus) item.caption = captionText\n                if (tagsStatus) item.addTags = tagstext\n                if (copyrightStatus) item.copyright = copyrightValue\n            }\n            else {\n                item.caption = \"\"\n                item.addTags = \"\"\n                item.copyright = \"\"\n            }\n\n        })\n\n\n        this.setState({\n            uploadedData, selected: !checkAll == true ? uploadedData.length : 0, checkAll: !checkAll\n        })\n    }\n\n    onCaptionSingle = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].checked = false\n            uploadedData[postIndex].captionSubmit = value\n            this.setState({ uploadedData, updateRequest: !updateRequest }, () => this.onloadCheckedPostCount())\n        }\n\n    }\n    onSubmitCaption = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].caption = value\n            uploadedData[postIndex].checked = false\n            this.setState({ uploadedData, updateRequest: !updateRequest }, () => this.onloadCheckedPostCount())\n        }\n\n    }\n\n    onResetCaption = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].caption = \"\"\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n\n    }\n    onAddTagSingle = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].addTagsSubmit = value\n            uploadedData[postIndex].checked = false\n            this.setState({ uploadedData, updateRequest: !updateRequest }, () => this.onloadCheckedPostCount())\n        }\n    }\n    onAddTagReset = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].addTags = \"\"\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n\n    }\n    onAddTagSubmit = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n\n            uploadedData[postIndex].addTags = value\n            uploadedData[postIndex].checked = false\n            this.setState({ uploadedData, updateRequest: !updateRequest }, () => this.onloadCheckedPostCount())\n        }\n\n    }\n    onCopyRightSingle = (postIndex, value) => event => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].copyright = value\n            uploadedData[postIndex].checked = false\n        }\n        this.setState({ uploadedData, updateRequest: !updateRequest }, () => this.onloadCheckedPostCount())\n    }\n\n    componentDidMount() {\n        getAllNetworks().then(response => {\n            const { response_code, networks, authRequire } = response.data;\n            if (response_code === 200) {\n                this.props.getNetworkList({ networks, authRequire });\n            }\n        }).catch(ex=>toast.error(\"Api failed\"));\n        this.props.getAllConnectedAccounts();\n        const overlay = document.querySelector(\".offcanvas-backdrop\")\n        if (overlay) {\n            overlay.click()\n        }\n    }\n\n\n    render() {\n        const { editMediaToggle, history } = this.props\n        const { isUploaded, uploadedData, collection } = this.state\n\n        return <Modal size={'full'} show={editMediaToggle} className=\"addAssetsModal border-0 p-0\" backdrop={false}>\n            <Modal.Header className={`py-0 px-lg-7 px-3 w-100 ${!isUploaded ? 'border-0' : ''}`}>\n                <div className=\"d-flex justify-content-between align-items-center bg-white w-100\">\n                    {!isUploaded ?\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            {/* <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Import Assets</h1> */}\n                        </div>\n                        :\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <Button variant='link' className=\"btn btn-icon btn-sm me-2 text-decoration-none\" onClick={() => this.isUploaded()}>\n                                <i className=\"ri-arrow-left-line icon-6\"></i>\n                            </Button>\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Fill required assets information</h1>\n                        </div>\n                    }\n                    <div className=\"d-flex align-items-center\">\n                        <Button variant='close' className=\"text-light\" onClick={this.handleClose}></Button>\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"p-0 d-flex align-items-start border-0 flex-wrap w-100\">\n                <div className=\"assetsModalScroll w-100 px-lg-5 px-3\">\n                    {!isUploaded ?\n                        <Suspense fallback={<></>}><UploadAssets getAssetsCallback={this.isUploaded} onUploadedData={this.onUploadedData} onClearUPloadObject={this.onClearUPloadObject} history={history} uploadedData={this.state.uploadedData} onSelectedCollection={this.onSelectedCollection} collection={collection} collectionError={this.state.collectionError} editMediaHandleCallback={this.props.editMediaHandleCallback} isUpdate={this.state.isUpdate} uppyPostEdit={uppyPostEdit} uploadClose={this.handleClose} onDeleteUploadedData={this.onDeleteUploadedData} /></Suspense>\n                        :\n                        <Suspense fallback={<></>}><UploadedAssets uploadedData={uploadedData} length={uploadedData.length} selected={this.state.selected} onClickTORemovePost={this.onClickTORemovePost} onClickTOCheckPost={this.onClickTOCheckPost} updateStatusC={this.updateStatusC} updateStatusTag={this.updateStatusTag} updateStatusCopy={this.updateStatusCopy} captionStatus={this.state.captionStatus} tagsStatus={this.state.tagsStatus} copyrightStatus={this.state.copyrightStatus} onChangeCaption={this.onChangeCaption} updateRequest={this.state.updateRequest}\n                            onChangeTags={this.onChangeTags}\n                            onChangeCopyRight={this.onChangeCopyRight} captionText={this.state.captionText} tagstext={this.state.tagstext} copyrightValue={this.state.copyrightValue} onClickToAllCheck={this.onClickToAllCheck} checkAll={this.state.checkAll} collection={collection} history={history} editMediaHandleCallback={this.props.editMediaHandleCallback} onCaptionSingle={this.onCaptionSingle} onAddTagSingle={this.onAddTagSingle} onCopyRightSingle={this.onCopyRightSingle} onAddTagSubmit={this.onAddTagSubmit} onSubmitCaption={this.onSubmitCaption} onAddTagReset={this.onAddTagReset} onResetCaption={this.onResetCaption} onClearUPloadObject={this.onClearUPloadObject} uppyPostEdit={uppyPostEdit} /></Suspense>\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n    }\n}\n\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getNetworkList: (networkData) => dispatch({ type: GET_ALL_NETWORKS, payload: networkData }),\n        getAllConnectedAccounts: () => dispatch(getAllConnectedAccounts())\n    }\n}\nexport default connect(null, mapDispatchToProps)(AddAssetsModal);"],"names":["UploadedAssets","React","UploadAssets","companionUrl","uppyPostEdit","Uppy","id","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","target","params","auth","key","steps","resize","robot","width","resize_strategy","background","store","bucket_region","bucket","secret","path","waitForEncoding","Instagram","GoogleDrive","Url","Webcam","AddAssetsModal","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","collection","showModalType","isUploaded","uploadedData","selected","checkAll","captionStatus","captionText","tagsStatus","tagstext","copyrightStatus","copyrightValue","collectionError","updateRequest","isUpdate","updateStatusC","event","_this$state","map","item","checked","caption","setState","updateStatusTag","_this$state2","addTags","updateStatusCopy","_this$state3","copyright","onChangeCaption","_this$state4","value","onLoadAddCaption","_this$state5","index","onChangeTags","_this$state6","onLoadTags","_this$state7","onChangeCopyRight","_this$state8","onLoadCopyRight","_this$state9","handleClose","length","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","$","click","props","editMediaHandleCallback","showModalTypeCallback","onUploadedData","newObject","_this$state10","push","onloadCheckedPostCount","onDeleteUploadedData","filter","localId","onClearUPloadObject","data","onSelectedCollection","onClickTORemovePost","postIndex","splice","removeFile","onClickTOCheckPost","_this$state11","count","onClickToAllCheck","_this$state12","onCaptionSingle","_this$state13","captionSubmit","onSubmitCaption","_this$state14","onResetCaption","_this$state15","onAddTagSingle","_this$state16","addTagsSubmit","onAddTagReset","_this$state17","onAddTagSubmit","_this$state18","onCopyRightSingle","_this$state19","_createClass","_this2","getAllNetworks","response","_response$data","response_code","networks","authRequire","getNetworkList","catch","ex","toast","this","getAllConnectedAccounts","overlay","document","querySelector","_this3","_this$props","editMediaToggle","history","_this$state20","_jsxs","Modal","size","show","className","backdrop","children","_jsx","concat","Button","variant","onClick","Suspense","fallback","_Fragment","getAssetsCallback","uploadClose","Component","connect","dispatch","networkData","type","GET_ALL_NETWORKS","payload"],"sourceRoot":""}