{"version":3,"file":"static/js/8341.00492ae1.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/DisplayUrlCopy.js","Layouts/Main/DisplayScreen/Components/DisplayPlatforms/VirtualHybridEvents.js","Layouts/Main/PublishCommonComponents/EmbedCode.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\n\r\nclass DisplayUrlCopy extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { codeCopied: false };\r\n    }\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    render() {\r\n        const { codeCopied } = this.state\r\n        const { url } = this.props\r\n        return <div className=\"d-flex align-items-start mb-3 flex-wrap\" style={{ maxWidth: 500 }}>\r\n                    <div className=\"d-flex flex-column flex-grow-1 pe-3 mb-2\">\r\n                        <div className=\"position-relative\">\r\n                            <input type=\"text\" name=\"displayUrl\" id=\"displayUrlCopy_\" onClick={() => { this.codeCopy('displayUrlCopy_') }} className=\"form-control form-control-lg fw-semibold text-ellipsis pe-5\" value={url} readOnly />\r\n                        </div>\r\n                        <label className=\"fw-semibold fs-8 text-muted\">Copy URL</label>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => { this.codeCopy('displayUrlCopy_') }} style={{minWidth:130}}>\r\n                        <span className=\"svg-icon svg-icon-6\">\r\n                            {!codeCopied ?\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 18.17 18.17\">\r\n                                    <path id=\"Path_2\" data-name=\"Path 2\" d=\"M-932.08-463.83a2.92,2.92,0,0,1-2.92-2.92v-9.086a2.924,2.924,0,0,1,1.947-2.752v9.567a3.245,3.245,0,0,0,3.245,3.244h9.567a2.924,2.924,0,0,1-2.753,1.947Zm3.245-3.244a2.92,2.92,0,0,1-2.92-2.921v-9.085a2.92,2.92,0,0,1,2.92-2.92h9.086a2.92,2.92,0,0,1,2.92,2.92V-470a2.92,2.92,0,0,1-2.92,2.921Z\" transform=\"translate(935 482)\" fill=\"currentColor\" />\r\n                                </svg>\r\n                                :\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\r\n                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                    <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" fill=\"currentColor\" />\r\n                                </svg>\r\n                            }\r\n                        </span>\r\n                        {!codeCopied ? 'Copy Url' : 'Url Copied'}\r\n                    </button>\r\n                </div>\r\n\r\n    }\r\n}\r\n\r\nexport default DisplayUrlCopy;","import React, { Component, Suspense } from 'react';\r\nimport DisplayUrlCopy from '../../../PublishCommonComponents/DisplayUrlCopy';\r\nimport EmbedCode from '../../../PublishCommonComponents/EmbedCode';\r\nimport { DisplayURL } from '../../../../../Services/Api'\r\nclass VirtualHybridEvents extends Component {\r\n\r\n    render() {\r\n        const {data} = this.props\r\n        return  <div className=\"card text-decoration-none\">\r\n                    <div className=\"card-body p-lg-7\">\r\n                        <div className=\"m-auto\">\r\n                            <div className=\"embed_code\">\r\n                                <h5 className=\"mb-5 fw-bolder\">Steps To Display Social Wall In Virtual / Hybrid Events</h5>\r\n                                <p>Follow these steps to showcase the Taggbox Display social wall in virtual / hybrid events:</p>\r\n                                <h6>Step 1: (Choose As Per Platform Requirement)</h6>\r\n                                <div className=\"ps-3\">\r\n                                    <h6>A. Generate the embed code for Social Wall</h6>\r\n                                    <EmbedCode copyText={'Copy the generated embed code'} data={data} />\r\n                                    <h6>OR</h6>\r\n                                    <h6>B. Copy The Display Wall URL</h6>\r\n                                    <DisplayUrlCopy url={`${DisplayURL}${data && Object.keys(data).length > 0 ? data.wallId : null}`}/> \r\n                                </div>\r\n                                <h6 className=\"mb-5\">Step 2: To Embed Taggbox Social Wall into Hubilo follow these steps:</h6>\r\n                                <ul className=\"list-unstyled list-points fs-7\">\r\n                                    <li className=\"mb-3\">Login to your Hubilo Virtual Event Platform</li>\r\n                                    <li className=\"mb-3\">Go to under Session Settings & in Advanced settings enable the toggle for <span className=\"fw-bold\">Custom iframe integration.</span></li>\r\n                                    <li className=\"mb-3\">Add button label as per your preference and paste the copied iframe code in the <span className=\"fw-bold\">Code Snippet</span> box, then click <span className=\"fw-bold\">Save</span></li>\r\n                                    <li className=\"mb-3\">Congratulations, you have successfully added the Taggbox Display Social Wall to the Hubilo virtual event platform!</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default VirtualHybridEvents;","import React, { Component, Suspense } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\r\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\nimport { EmbedURL } from '../../../Services/Api'\r\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\r\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\r\n\r\nclass EmbedCode extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { showModal: false, codeCopied: false, isLoading: false };\r\n    }\r\n    shareEmbedModal = event => this.setState({\r\n        showModal: true\r\n    })\r\n    shareEmbedCallback = (shareEmbedEvent) => {\r\n        this.setState({\r\n            showModal: shareEmbedEvent\r\n        })\r\n    }\r\n\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    onClickToShare = (mailId) => event => {\r\n        var self = this;\r\n        this.setState({ isLoading: true })\r\n        if (mailId && String(mailId).length > 0) {\r\n            mailSendRequest({ htmlCode: document.querySelector(\"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\r\n                toast.success(\"Taggbox widget code successfully sent.\")\r\n                self.setState({ showModal: false, isLoading: false })\r\n            })\r\n\r\n        }\r\n        else {\r\n            toast.error(\"Please enter email id.\")\r\n        }\r\n    }\r\n    render() {\r\n        const { codeCopied, showModal } = this.state\r\n        const { copyText, data } = this.props\r\n\r\n        return <div className=\"embed_code\">\r\n            <div className=\"mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Width</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={100} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\r\n                                <Dropdown.Item href=\"#\">Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Viewport Width (VW)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Height</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={100} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\r\n                                <Dropdown.Item href=\"#\">Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Viewport Height (VH)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\r\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\r\n                    <Nav variant=\"nav\" className=\"mb-3\">\r\n                        <Nav.Item className=\"me-4\">\r\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Lite Code\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"\">\r\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Iframe\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\r\n                                    &lt;div class=\"taggbox\" data-widget-id=\"{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:100%\"&gt;&lt;/div&gt;\r\n                                    &lt;script src=\"https://widget.taggbox.com/embed-lite.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\r\n                                            {!codeCopied ?\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 18.17 18.17\">\r\n                                                    <path id=\"Path_2\" data-name=\"Path 2\" d=\"M-932.08-463.83a2.92,2.92,0,0,1-2.92-2.92v-9.086a2.924,2.924,0,0,1,1.947-2.752v9.567a3.245,3.245,0,0,0,3.245,3.244h9.567a2.924,2.924,0,0,1-2.753,1.947Zm3.245-3.244a2.92,2.92,0,0,1-2.92-2.921v-9.085a2.92,2.92,0,0,1,2.92-2.92h9.086a2.92,2.92,0,0,1,2.92,2.92V-470a2.92,2.92,0,0,1-2.92,2.921Z\" transform=\"translate(935 482)\" fill=\"currentColor\" />\r\n                                                </svg>\r\n                                                :\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\r\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                    <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" fill=\"#6AC259\" />\r\n                                                </svg>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20.765 16.086\">\r\n                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-946.936-459.319A3.066,3.066,0,0,1-950-462.383V-471.3l9.755,5.956a1.179,1.179,0,0,0,1.227,0l9.783-5.956v8.917a3.066,3.066,0,0,1-3.065,3.065ZM-949.9-473a3.047,3.047,0,0,1,2.966-2.4H-932.3a3.045,3.045,0,0,1,2.965,2.4l-10.27,6.275Z\" transform=\"translate(950 475.404)\" fill=\"currentColor\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                    &lt;iframe src=\"{EmbedURL}{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                            {!codeCopied ?\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 18.17 18.17\">\r\n                                                    <path id=\"Path_2\" data-name=\"Path 2\" d=\"M-932.08-463.83a2.92,2.92,0,0,1-2.92-2.92v-9.086a2.924,2.924,0,0,1,1.947-2.752v9.567a3.245,3.245,0,0,0,3.245,3.244h9.567a2.924,2.924,0,0,1-2.753,1.947Zm3.245-3.244a2.92,2.92,0,0,1-2.92-2.921v-9.085a2.92,2.92,0,0,1,2.92-2.92h9.086a2.92,2.92,0,0,1,2.92,2.92V-470a2.92,2.92,0,0,1-2.92,2.921Z\" transform=\"translate(935 482)\" fill=\"currentColor\" />\r\n                                                </svg>\r\n                                                :\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\r\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                    <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" fill=\"#6AC259\" />\r\n                                                </svg>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20.765 16.086\">\r\n                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-946.936-459.319A3.066,3.066,0,0,1-950-462.383V-471.3l9.755,5.956a1.179,1.179,0,0,0,1.227,0l9.783-5.956v8.917a3.066,3.066,0,0,1-3.065,3.065ZM-949.9-473a3.047,3.047,0,0,1,2.966-2.4H-932.3a3.045,3.045,0,0,1,2.965,2.4l-10.27,6.275Z\" transform=\"translate(950 475.404)\" fill=\"currentColor\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Tab.Container>\r\n            </div>\r\n            <Suspense fallback={<></>}>\r\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} /> : null}\r\n            </Suspense>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default EmbedCode;"],"names":["DisplayUrlCopy","codeCopy","id","setState","codeCopied","setTimeout","COPY_TO_CLIPBOARD","state","this","url","props","className","style","maxWidth","type","name","onClick","value","readOnly","minWidth","xmlns","viewBox","width","height","fill","d","transform","Component","VirtualHybridEvents","data","EmbedCode","copyText","DisplayURL","Object","keys","length","wallId","ShareEmbedModal","React","shareEmbedModal","event","showModal","shareEmbedCallback","shareEmbedEvent","onClickToShare","mailId","self","isLoading","String","mailSendRequest","htmlCode","document","querySelector","innerText","email","then","response","toast","defaultValue","align","variant","title","href","defaultActiveKey","eventKey","wordBreak","placement","overlay","EmbedURL","Suspense","fallback"],"sourceRoot":""}