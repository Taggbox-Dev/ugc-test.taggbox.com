{"version":3,"file":"static/js/9977.b7a5d563.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/AddAssetsModal.js","Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport $ from 'jquery'\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport GetRightsCopyUrl from '../GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl';\nimport { getAllConnectedAccounts, getAllNetworks } from '../../../../Services/Actions/addFeedAction';\nimport { GET_ALL_NETWORKS } from '../../../../Services/Constants/constants';\nimport HttpClient from '../../../../Services/http-client';\nimport { GET_CONNECTED_ACCOUNTS } from '../../../../Services/Api';\nimport Uppy from \"@uppy/core\";\nimport Transloadit from \"@uppy/transloadit\";\nimport GoogleDrive from \"@uppy/google-drive\";\nimport Instagram from \"@uppy/instagram\";\nimport Url from \"@uppy/url\";\nimport Webcam from \"@uppy/webcam\";\n//import PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst UploadedAssets = React.lazy(() => import('./Compontnets/UploadedAssets'));\n\nconst UploadAssets = React.lazy(() => import('./Compontnets/UploadAssets'));\n\n\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\nconst uppyBucket = 'cloud.taggbox.com';\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\n\n\nconst companionUrl = 'https://test.taggbox.com';\n\nconst uppyPostEdit = new Uppy({\n    id: \"editA\",\n    debug: true,\n    autoProceed: true,\n    restrictions: {\n        maxFileSize: 5000000,\n        maxNumberOfFiles: 100,\n        minNumberOfFiles: 1,\n        allowedFileTypes: [\"image/*\"],\n    },\n});\n\nuppyPostEdit.use(Transloadit, {\n    target: \"#a\",\n    params: {\n        auth: {\n            key: uppyKey,\n        },\n        steps: {\n            resize: {\n                robot: \"/image/resize\",\n                width: 500,\n                resize_strategy: \"fit\",\n                background: \"none\",\n            },\n            store: {\n                robot: \"/wasabi/store\",\n                bucket_region: \"us-west-1\",\n                bucket: uppyBucket,\n                key: uppyAwsKey,\n                secret: uppyAwsSecret,\n                path: 'onsiteupload/images/${file.id}'\n            },\n        },\n    },\n    waitForEncoding: true,\n});\nuppyPostEdit.use(Instagram, {\n    target: Uppy.Dashboard,\n    companionUrl: companionUrl,\n});\nuppyPostEdit.use(GoogleDrive, {\n    target: Uppy.Dashboard,\n    companionUrl: companionUrl,\n});\nuppyPostEdit.use(Url, { target: Uppy.Dashboard, companionUrl: companionUrl });\nuppyPostEdit.use(Webcam, {\n    target: Uppy.Dashboard,\n    companionUrl: companionUrl,\n});\n\nclass AddAssetsModal extends Component {\n    constructor() {\n        super();\n    }\n    state = {\n        collection: null,\n        showModalType: 'uploadAssets', isUploaded: false, uploadedData: [], selected: 0, checkAll: false,\n        captionStatus: false,\n        captionText: \"\",\n        tagsStatus: false,\n        tagstext: \"\",\n        copyrightStatus: false,\n        copyrightValue: false,\n        collectionError: false,\n        updateRequest: false,\n        isUpdate: false\n    };\n\n    updateStatusC = event => {\n        const { uploadedData, captionText } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.caption = captionText\n                else item.caption = item.caption\n            }\n            else {\n                item.caption = item.caption\n            }\n        })\n\n        this.setState({\n            captionStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusTag = event => {\n        const { uploadedData, tagstext } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.addTags = tagstext\n                else item.addTags = item.addTags\n            }\n            else {\n                item.addTags = item.addTags\n            }\n        })\n        this.setState({\n            tagsStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusCopy = event => {\n        const { uploadedData, copyrightValue } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.copyright = copyrightValue\n                else item.copyright = item.copyright\n            }\n            else {\n                item.copyright = item.copyright\n            }\n        })\n\n        this.setState({\n            copyrightStatus: event.target.checked, uploadedData\n        })\n    }\n\n    onChangeCaption = event => {\n        const { uploadedData, captionStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (captionStatus) item.caption = event.target.value\n                else item.caption = item.caption\n            }\n            else {\n                item.caption = item.caption\n            }\n        })\n        this.setState({ captionText: event.target.value, uploadedData })\n    }\n\n    onLoadAddCaption = () => {\n        var { uploadedData, captionText, captionStatus } = this.state;\n\n        if (captionStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    uploadedData[index].caption = captionText\n                    //item.caption = captionText\n                }\n                else {\n                    uploadedData[index].caption = \"\"\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n\n    }\n\n    onChangeTags = (value) => {\n\n\n        const { uploadedData, tagsStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (tagsStatus) item.addTags = value\n                else item.addTags = item.addTags\n            }\n            else {\n                item.addTags = item.addTags\n            }\n        })\n        this.setState({ tagstext: value, uploadedData })\n    }\n    onLoadTags = () => {\n        var { uploadedData, tagstext, tagsStatus } = this.state;\n        if (tagsStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n\n                    uploadedData[index].addTags = tagstext\n                    //item.addTags = tagstext\n                }\n                else {\n                    uploadedData[index].addTags = \"\"\n                }\n            })\n        }\n\n        this.setState({ uploadedData })\n    }\n    onChangeCopyRight = (value) => event => {\n        const { uploadedData, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (copyrightStatus) item.copyright = value\n                else item.copyright = false\n            }\n            else {\n                item.copyright = false\n            }\n        })\n        this.setState({ copyrightValue: value, uploadedData })\n    }\n    onLoadCopyRight = () => {\n\n        var { uploadedData, copyrightValue, copyrightStatus } = this.state;\n        if (copyrightStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    //item.copyright = copyrightValue\n                    uploadedData[index].copyright = copyrightValue\n                }\n                else {\n                    uploadedData[index].copyright = false\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n    }\n\n    handleClose = () => {\n        const { uploadedData } = this.state\n\n        if (uploadedData && uploadedData.length > 0) {\n\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You want to  discard changes!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: 'Yes, discard changes!'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    if ($(\"#resetUppyUpload\")) {\n                        $(\"#resetUppyUpload\").click()\n                    }\n                    this.props.editMediaHandleCallback(false)\n                }\n            })\n        }\n        else {\n            this.props.editMediaHandleCallback(false)\n        }\n\n    };\n\n    showModalTypeCallback = (showModalType) => {\n        this.setState({\n            showModalType: showModalType\n        })\n    }\n    isUploaded = () => {\n        const { collection } = this.state\n        this.setState({\n            isUploaded: !this.state.isUploaded\n        })\n    }\n    onUploadedData = (newObject) => {\n        const { uploadedData, isUpdate } = this.state;\n        uploadedData.push(newObject)\n        this.setState({ uploadedData, isUpdate: !isUpdate }, () => this.onloadCheckedPostCount())\n    }\n    onClearUPloadObject = (data) => {\n        this.setState({ uploadedData: data }, () => this.onloadCheckedPostCount())\n    }\n    onSelectedCollection = (newObject) => {\n        this.setState({ collection: newObject, collectionError: false })\n    }\n\n    onClickTORemovePost = (postIndex) => event => {\n        let { uploadedData } = this.state;\n\n        if (postIndex > -1) {\n            uploadedData.splice(postIndex, 1);\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n    onClickTOCheckPost = (postIndex) => event => {\n        let { uploadedData, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n\n\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            if (uploadedData[postIndex].checked) {\n                uploadedData[postIndex].checked = false\n                // uploadedData[postIndex].caption = \"\"\n                // uploadedData[postIndex].addTags = \"\"\n                // uploadedData[postIndex].copyright = false\n            }\n            else {\n                uploadedData[postIndex].checked = true\n                if (captionStatus) uploadedData[postIndex].caption = captionText\n                if (tagsStatus) uploadedData[postIndex].addTags = tagstext\n                if (copyrightStatus) uploadedData[postIndex].copyright = copyrightValue\n            }\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n\n    onloadCheckedPostCount = () => {\n        const { uploadedData } = this.state;\n        var count = uploadedData.filter((item) => item.checked == true).length;\n        this.setState({ selected: uploadedData.length, checkAll: uploadedData.length == count ? true : false })\n    }\n    onClickToAllCheck = event => {\n        const { uploadedData, checkAll, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            item.checked = !checkAll\n            if (!checkAll == true) {\n                if (captionStatus) item.caption = captionText\n                if (tagsStatus) item.addTags = tagstext\n                if (copyrightStatus) item.copyright = copyrightValue\n            }\n            else {\n                item.caption = \"\"\n                item.addTags = \"\"\n                item.copyright = \"\"\n            }\n\n        })\n\n\n        this.setState({\n            uploadedData, selected: !checkAll == true ? uploadedData.length : 0, checkAll: !checkAll\n        })\n    }\n\n    onCaptionSingle = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].checked = false\n            uploadedData[postIndex].captionSubmit = value\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n\n    }\n    onSubmitCaption = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].caption = value\n            uploadedData[postIndex].checked = false\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n\n    }\n\n    onResetCaption = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].caption = \"\"\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n\n    }\n    onAddTagSingle = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].addTagsSubmit = value\n            uploadedData[postIndex].checked = false\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n    }\n    onAddTagReset = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].addTags = \"\"\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n\n    }\n    onAddTagSubmit = (postIndex, value) => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n\n            uploadedData[postIndex].addTags = value\n            uploadedData[postIndex].checked = false\n            this.setState({ uploadedData, updateRequest: !updateRequest })\n        }\n\n    }\n    onCopyRightSingle = (postIndex, value) => event => {\n        let { uploadedData, updateRequest } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].copyright = value\n            uploadedData[postIndex].checked = false\n        }\n        this.setState({ uploadedData, updateRequest: !updateRequest })\n    }\n\n    componentDidMount() {\n        getAllNetworks().then(response => {\n            const { response_code, networks, authRequire } = response.data;\n            if (response_code === 200) {\n                this.props.getNetworkList({ networks, authRequire });\n            }\n        });\n        this.props.getAllConnectedAccounts();\n\n    }\n\n\n    render() {\n        const { editMediaToggle, history } = this.props\n        const { isUploaded, uploadedData, collection } = this.state\n\n\n        return <Modal size={'full'} show={editMediaToggle} className=\"addAssetsModal border-0 p-0\" backdrop={false}>\n            <Modal.Header className=\"border-0 p-0 w-100\">\n                <div className=\"d-flex justify-content-between align-items-center px-lg-3 px-2 bg-white w-100\">\n                    {!isUploaded ?\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Choose Network</h1>\n                        </div>\n                        :\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <button type=\"button\" className=\"btn btn-icon btn-sm me-2\" onClick={() => this.isUploaded()}>\n                                <span className=\"svg-icon text-dark\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M7.828 11H20v2H7.828l5.364 5.364-1.414 1.414L4 12l7.778-7.778 1.414 1.414z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Fill required assets information</h1>\n                        </div>\n                    }\n                    <div className=\"d-flex align-items-center\">\n                        <button type=\"button\" className=\"btn-close text-light\" onClick={this.handleClose}></button>\n                    </div>\n                </div>\n\n            </Modal.Header>\n            <Modal.Body className=\"p-0 d-flex align-items-start border-0 flex-wrap w-100\">\n                <div className=\"assetsModalScroll w-100\">\n                    {!isUploaded ?\n                        <Suspense fallback={<></>}><UploadAssets getAssetsCallback={this.isUploaded} onUploadedData={this.onUploadedData} onClearUPloadObject={this.onClearUPloadObject} history={history} uploadedData={this.state.uploadedData} onSelectedCollection={this.onSelectedCollection} collection={collection} collectionError={this.state.collectionError} editMediaHandleCallback={this.props.editMediaHandleCallback} isUpdate={this.state.isUpdate} uppyPostEdit={uppyPostEdit} /></Suspense>\n                        :\n                        <Suspense fallback={<></>}><UploadedAssets uploadedData={uploadedData} length={uploadedData.length} selected={this.state.selected} onClickTORemovePost={this.onClickTORemovePost} onClickTOCheckPost={this.onClickTOCheckPost} updateStatusC={this.updateStatusC} updateStatusTag={this.updateStatusTag} updateStatusCopy={this.updateStatusCopy} captionStatus={this.state.captionStatus} tagsStatus={this.state.tagsStatus} copyrightStatus={this.state.copyrightStatus} onChangeCaption={this.onChangeCaption} updateRequest={this.state.updateRequest}\n                            onChangeTags={this.onChangeTags}\n                            onChangeCopyRight={this.onChangeCopyRight} captionText={this.state.captionText} tagstext={this.state.tagstext} copyrightValue={this.state.copyrightValue} onClickToAllCheck={this.onClickToAllCheck} checkAll={this.state.checkAll} collection={collection} history={history} editMediaHandleCallback={this.props.editMediaHandleCallback} onCaptionSingle={this.onCaptionSingle} onAddTagSingle={this.onAddTagSingle} onCopyRightSingle={this.onCopyRightSingle} onAddTagSubmit={this.onAddTagSubmit} onSubmitCaption={this.onSubmitCaption} onAddTagReset={this.onAddTagReset} onResetCaption={this.onResetCaption} onClearUPloadObject={this.onClearUPloadObject} uppyPostEdit={uppyPostEdit} /></Suspense>\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n    }\n}\n\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getNetworkList: (networkData) => dispatch({ type: GET_ALL_NETWORKS, payload: networkData }),\n        getAllConnectedAccounts: () => dispatch(getAllConnectedAccounts())\n    }\n}\nexport default connect(null, mapDispatchToProps)(AddAssetsModal);","import React, { Component } from \"react\";\nimport { COPY_TO_CLIPBOARD } from \"../../../../../../Services/Utils/utils\";\n\nclass GetRightsCopyUrl extends Component {\n    constructor() {\n        super();\n        this.state = { codeCopied: false };\n    }\n    codeCopy = (id) => {\n        const { modalAssetData } = this.props\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n        setTimeout(() => window.open(modalAssetData.link, '_blank'), 400)\n    }\n    render() {\n        const { codeCopied } = this.state\n        const { requestedRespone, comment, modalAssetData } = this.props\n\n        return requestedRespone && Object.keys(requestedRespone).length > 0 ? <div className=\"p-lg-6 p-3\">\n            <h5 className=\"mb-2 pt-1 text-center\">Your UGC Request Sharing URL</h5>\n            <p className=\"text-muted text-center\">Copy and paste link in the comments or original post</p>\n            <div className=\"mb-6\">\n                <textarea type=\"text\" className=\"form-control form-control-lg textarea-min-row-3 bg-light\" rows={4} placeholder=\"Add Comment\" defaultValue={comment} readOnly />\n            </div>\n            <div className=\"mb-6\">\n                <div className=\"input-group mb-4\">\n                    <div className=\"input-group-text\">\n                        <span className=\"svg-icon svg-icon-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                <path d=\"M13.06 8.11l1.415 1.415a7 7 0 0 1 0 9.9l-.354.353a7 7 0 0 1-9.9-9.9l1.415 1.415a5 5 0 1 0 7.071 7.071l.354-.354a5 5 0 0 0 0-7.07l-1.415-1.415 1.415-1.414zm6.718 6.011l-1.414-1.414a5 5 0 1 0-7.071-7.071l-.354.354a5 5 0 0 0 0 7.07l1.415 1.415-1.415 1.414-1.414-1.414a7 7 0 0 1 0-9.9l.354-.353a7 7 0 0 1 9.9 9.9z\" fill=\"currentColor\" />\n                            </svg>\n                        </span>\n                    </div>\n                    <input type=\"text\" id=\"ugc_rights_url_\" className=\"form-control form-control-lg\" defaultValue={requestedRespone.bitlylink} readOnly />\n                </div>\n                <button type=\"button\" className=\"btn btn-primary btn-lg w-100\" onClick={() => { this.codeCopy('ugc_rights_url_') }}>\n                    {codeCopied ? 'Copied' : 'Copy URL'}\n                </button>\n            </div>\n            <div className=\"mb-6\">\n                <h6>Steps to proceed</h6>\n                <ul className=\"list-unstyled list-points fs-7\">\n                    <li className=\"mb-3\">You have successfully generated a \"UGC Request\" for this post.</li>\n                    <li className=\"mb-3\">Quickly review your Request before sending it to the owner.</li>\n                    <li className=\"mb-3\">Click on the \"Generate Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\n                    <li className=\"mb-3\">Paste the link of \"UGC Request\" in the comments section of the original post.</li>\n                    <li className=\"mb-3\">You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\n                </ul>\n            </div>\n        </div> : null\n    }\n}\n\nexport default GetRightsCopyUrl;"],"names":["UploadedAssets","React","UploadAssets","companionUrl","uppyPostEdit","Uppy","id","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","target","params","auth","key","steps","resize","robot","width","resize_strategy","background","store","bucket_region","bucket","secret","path","waitForEncoding","Instagram","GoogleDrive","Url","Webcam","AddAssetsModal","state","collection","showModalType","isUploaded","uploadedData","selected","checkAll","captionStatus","captionText","tagsStatus","tagstext","copyrightStatus","copyrightValue","collectionError","updateRequest","isUpdate","updateStatusC","event","map","item","checked","caption","setState","updateStatusTag","addTags","updateStatusCopy","copyright","onChangeCaption","value","onLoadAddCaption","index","onChangeTags","onLoadTags","onChangeCopyRight","onLoadCopyRight","handleClose","length","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","$","click","props","editMediaHandleCallback","showModalTypeCallback","onUploadedData","newObject","push","onloadCheckedPostCount","onClearUPloadObject","data","onSelectedCollection","onClickTORemovePost","postIndex","splice","onClickTOCheckPost","count","filter","onClickToAllCheck","onCaptionSingle","captionSubmit","onSubmitCaption","onResetCaption","onAddTagSingle","addTagsSubmit","onAddTagReset","onAddTagSubmit","onCopyRightSingle","getAllNetworks","response","response_code","networks","authRequire","getNetworkList","this","getAllConnectedAccounts","editMediaToggle","history","size","show","className","backdrop","type","onClick","xmlns","viewBox","height","fill","d","Suspense","fallback","getAssetsCallback","Component","connect","dispatch","networkData","GET_ALL_NETWORKS","payload","GetRightsCopyUrl","codeCopy","modalAssetData","codeCopied","setTimeout","COPY_TO_CLIPBOARD","window","open","link","requestedRespone","comment","Object","keys","rows","placeholder","defaultValue","readOnly","bitlylink"],"sourceRoot":""}