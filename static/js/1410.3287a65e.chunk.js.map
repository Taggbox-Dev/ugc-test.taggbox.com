{"version":3,"file":"static/js/1410.3287a65e.chunk.js","mappings":"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","sources":["Layouts/Main/SocialLogin/YouTube/index.js","Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import { Component, useState, useCallback } from 'react';\nimport {\n    LoginSocialGoogle,\n\n} from 'reactjs-social-login';\nimport {\n    GoogleLoginButton,\n} from 'react-social-login-buttons';\nimport { baseUrl } from \"../../../../Assets/AssetsHelper\";\nimport { GET_NETWORK_ICON } from '../../../../Services/Utils/utils'\n\nconst REDIRECT_URI = 'https://ugc.taggbox.com/login';\nconst SocialGoogleLogin = (props) => {\n    const [provider, setProvider] = useState('');\n    const [profile, setProfile] = useState();\n\n    const onLoginStart = useCallback(() => {\n        alert('login start');\n    }, []);\n\n    const onLogoutSuccess = useCallback(() => {\n        setProfile(null);\n        setProvider('');\n        alert('logout success');\n    }, []);\n\n    const onLogout = useCallback(() => { }, []);\n    console.log(\"provider\", provider, profile)\n    return (\n        <>\n            <LoginSocialGoogle\n                client_id={'95564504779-0hejo69vc4apo6p0avpafasvbcfhlvom.apps.googleusercontent.com'}\n                onLoginStart={onLoginStart}\n                redirect_uri={REDIRECT_URI}\n                scope=\"openid profile email\"\n                discoveryDocs=\"claims_supported\"\n                access_type=\"offline\"\n                onResolve={({ provider, data }) => props.onUpdateData(provider, data)}\n                onReject={err => {\n                    console.log(err);\n                }}\n            >\n                <div className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\">\n                    <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                        <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                        <div className=\"w-75 overflow-hidden\">\n                            <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex\">\n                        <span className=\"h-20px w-20px\">\n                            <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(7)}.svg`)} alt=\"network\" style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                        </span>\n                    </div>\n                </div>\n            </LoginSocialGoogle>\n        </>\n    );\n};\n\nexport default SocialGoogleLogin;","import React, { Component } from \"react\";\nimport Swal from 'sweetalert2';\nimport { HOST_DOMAIN } from '../../../../../../Services/Api'\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport SocialLoginFacebook from '../../../../SocialLogin/Facebook'\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\nimport { GET_NETWORK_ICON } from '../../../../../../Services/Utils/utils'\nimport { twitterConnect, flickrConnect, yammerConnect, tumblerConnect, vimeoConnect, facebookConnect } from '../../../../SocialLogin/auth'\nimport { sendPublishRequest, publishDeleteRequest, getInstagramDetails, InstagramPostPublish, getFacebookDetails, FacebookPublish } from '../../../../../../Services/Actions/publishActions'\n\nclass GetRightsSocialAccount extends Component {\n    state = {\n        connected: null,\n        showConfirm: false\n    }\n    componentDidMount() {\n        const { modalAssetData } = this.props\n        const channel = new BroadcastChannel('connect');\n        var self = this;\n        channel.addEventListener(\"message\", (event) => {\n            const responseToken = JSON.parse(event.data);\n            console.log(\"responseToken GetRightsSocialAccount GetRightsSocialAccount\", responseToken)\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\n                getInstagramDetails({ access_token: responseToken.data.access_token }).then((response) => {\n                    const { accounts } = response.data\n                    console.log(\"response.data\", response.data, accounts)\n                    var accountsData = [];\n                    if (accounts && accounts.length > 0) {\n                        accounts.map((item) => {\n                            accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        })\n                    }\n\n                    self.setState({ access_token: responseToken.data.access_token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\n                })\n            }\n            else if (modalAssetData.networkId == 3) {\n                getFacebookDetails({ access_token: responseToken.data.access_token }).then((response) => {\n                    const { pages } = response.data\n                    console.log(\"response.data\", response.data, pages)\n                    var accountsData = [];\n                    if (pages && pages.length > 0) {\n                        pages.map((item) => {\n                            accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        })\n                    }\n\n                    self.setState({ access_token: responseToken.data.access_token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\n                })\n            }\n            else if (modalAssetData.networkId == 1) {\n                getInstagramDetails({ access_token: responseToken.data.access_token }).then((response) => {\n                    const { accounts } = response.data\n                    console.log(\"response.data\", response.data, accounts[0].id)\n                    var accountsData = [];\n                    if (accounts && accounts.length > 0) {\n                        accounts.map((item) => {\n                            accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        })\n                    }\n\n                    self.setState({ access_token: responseToken.data.access_token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\n                })\n            }\n\n        });\n\n    }\n\n    handleYes = event => {\n        this.setState({ showConfirm: true })\n    }\n    handleNo = event => {\n        this.setState({ showConfirm: true })\n    }\n    onClickSocialConnect = (data) => event => {\n        if (data && Object.keys(data).length > 0) {\n            Swal.fire({\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\n                title: `<strong>${GET_NETWORK_ICON(data.networkId)}</strong>`,\n                html: `Connect to ${GET_NETWORK_ICON(data.networkId)} and start collecting assets.`,\n                showCloseButton: true,\n                showCancelButton: false,\n                focusConfirm: true,\n                confirmButtonText: `Continue with ${GET_NETWORK_ICON(data.networkId)}`,\n                confirmButtonAriaLabel: `Continue with ${GET_NETWORK_ICON(data.networkId)}`,\n                cancelButtonText: '<i className=\"fa fa-thumbs-down\"></i>',\n                cancelButtonAriaLabel: 'Thumbs down'\n            }).then((result) => {\n                localStorage.setItem(\"socialConnect\", true);\n                localStorage.setItem(\"socialNetworkId\", data.networkId)\n                switch (data.networkId) {\n                    case 1:\n                        twitterConnect(true);\n                        break;\n                    case 6:\n                        flickrConnect(6);\n                        break;\n                    case 21:\n                        yammerConnect(\"yammer\", null, true);\n                        break;\n                    case 11:\n                        tumblerConnect(11);\n                        break;\n                    case 8:\n                        vimeoConnect(true);\n                        break;\n                    case 3:\n                        facebookConnect(3, true);\n                        break;\n                    case 2:\n                        const url = `https://api.instagram.com/oauth/authorize?client_id=${'480810795949098'}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback&scope=user_profile,user_media&response_type=code`\n                        window.open(url, '_blank', \"width=786,height=786\");\n                        break;\n                    case 18:\n                        facebookConnect(18, true)\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n    }\n\n\n    render() {\n        const { showConfirm } = this.state\n        const { modalAssetData, connectedAccount } = this.props;\n        console.log(\"modalAssetData social account\", this.props)\n        return <><div className=\"p-lg-6 p-3\">\n            <div className=\"m-auto\">\n                {\n                    connectedAccount && connectedAccount.data.length > 0 ? <><h3 className=\"mb-2 pb-2 fs-7 pt-1\">\n                        <span className=\"fw-medium\">Connect Account</span>\n                    </h3>\n                        <div className=\"mb-8\">\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 border border-dark bg-white w-100\">\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <div className=\"symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden\">\n                                        <img className=\"object-center-cover\" src={connectedAccount.data[0].picture} height={40} width={40} alt=\"instagram\" />\n                                    </div>\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} alt=\"\" />\n                                    </span>\n                                </div>\n                            </button>\n                            <span className=\"fw-medium\">You are logged in with this account</span>\n                        </div></> : <>{\n                            modalAssetData.networkId == 3 ? <SocialLoginFacebook onUpdateData={this.props.onUpdateData} /> : modalAssetData.networkId == 7 ? <SocialGoogleLogin onUpdateData={this.props.onUpdateData} /> : <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                                    </div>\n                                </div>\n                                {modalAssetData.networkId ?\n                                    <div className=\"d-flex\">\n                                        <span className=\"h-20px w-20px\">\n                                            <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} alt=\"network\" style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                                        </span>\n                                    </div>\n                                    : null}\n                            </button>\n                        }</>\n                }\n\n            </div>\n        </div>\n\n\n        </>\n    }\n}\n\nexport default GetRightsSocialAccount;"],"names":["props","useState","provider","setProvider","profile","setProfile","onLoginStart","useCallback","alert","console","log","client_id","redirect_uri","scope","discoveryDocs","access_type","onResolve","data","onUpdateData","onReject","err","className","src","baseUrl","GET_NETWORK_ICON","alt","style","filter","opacity","GetRightsSocialAccount","state","connected","showConfirm","handleYes","event","setState","handleNo","onClickSocialConnect","Object","keys","length","Swal","imageUrl","networkId","title","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","then","result","localStorage","setItem","twitterConnect","flickrConnect","yammerConnect","tumblerConnect","vimeoConnect","facebookConnect","url","HOST_DOMAIN","window","open","modalAssetData","this","channel","BroadcastChannel","self","addEventListener","responseToken","JSON","parse","getInstagramDetails","access_token","response","accounts","accountsData","map","item","push","id","name","username","picture","socialData","getFacebookDetails","pages","connectedAccount","type","height","width","onClick","Component"],"sourceRoot":""}