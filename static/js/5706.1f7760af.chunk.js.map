{"version":3,"file":"static/js/5706.1f7760af.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/Compontnets/Elements/NetworksSkeleton.js","Layouts/Main/MyAssets/AddAssetsModal/Compontnets/Elements/Networks.js","Layouts/Main/MyAssets/AddAssetsModal/Compontnets/UploadAssets.js"],"sourcesContent":["import React from 'react';\n\nconst numbers = Array.from({length: 14}, (_, i) => i + 1);\nconst NetworksSkeleton = () => {\n    return  <div className=\"\">\n                {numbers.map((number, index) => (\n                <div key={index} className=\"w-100 mb-1 fs-7 fw-medium text-start d-flex align-items-center px-3 py-2\">\n                    <span className=\"sk_rect h-24px w-24px me-2\"></span>\n                    <p className=\"sk_line sk_line_100 sk_line_height_12 my-1 w-75\"></p>\n                </div>\n                ))}\n            </div>\n\n}\n\nexport default NetworksSkeleton;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { baseUrl } from '../../../../../../Assets/AssetsHelper';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport NetworksSkeleton from './NetworksSkeleton';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../Services/Utils/utils';\nclass Networks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textValue: '',\n            networkList: props.networkList,\n            networkListLoading:false,\n            manualUpload:true\n        }\n    }\n    componentDidMount(){\n        const { networkList} = this.state;\n        if(networkList && networkList.length > 0 ){\n            this.setState({ networkListLoading: false })\n        }else{\n            this.setState({ networkListLoading: true })\n        }\n    }\n\n    filterNetworkList = (e) => {\n        let filteredList = this.filterList(e.target.value);\n        this.setState({ textValue: e.target.value, networkList: filteredList });\n    }\n\n    filterList = (value) => {\n        const { networkList } = this.props;\n        if (networkList.length > 0) {\n            return networkList.filter(network => network.name.toLowerCase().match(value.toLowerCase()));\n        }\n        return [];\n    }\n\n    uploadType = (uploadType, network) => {\n        this.props.uploadTypeCallback(uploadType, network)\n\n        this.setState({\n            manualUpload:uploadType == 'uploadAssets' ? true : false\n        })\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.networkList != nextProps.networkList) {\n            this.setState({ networkList: nextProps.networkList,networkListLoading: false  })\n        }else{\n            this.setState({ networkListLoading: this.props.networkList > 0 ? true : false})\n        }\n    }\n    render() {\n        const { selectedNetworkId } = this.props;\n        const { networkList, textValue, networkListLoading, manualUpload } = this.state;\n        return   <div className=\"card mb-xxl-4 mb-5 h-100\">\n                    <div className=\"card-body\">\n                        <h6 className=\"fs-7 mb-3\">Choose Network</h6>\n                        <div className=\"mb-4\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Search your network...\" value={textValue} onChange={(e) => this.filterNetworkList(e)} />\n                        </div>\n                        <button type=\"button\" className={`btn btn-active-light border border-dashed py-3 w-100 mb-2 fs-7 fw-medium ${manualUpload ? 'active':''}`} onClick={() => this.uploadType(\"uploadAssets\", null)}>\n                            <span className=\"svg-icon svg-icon-2\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7 20.9811C3.64378 20.7257 1 17.9216 1 14.5C1 12.1716 2.22429 10.1291 4.06426 8.9812C4.56469 5.044 7.92686 2 12 2C16.0731 2 19.4353 5.044 19.9357 8.9812C21.7757 10.1291 23 12.1716 23 14.5C23 17.9216 20.3562 20.7257 17 20.9811V21H7V20.9811ZM13 13H16L12 8L8 13H11V17H13V13Z\" fill=\"currentColor\"></path></svg>\n                            </span>Browse From Device\n                        </button>\n                        <div className=\"addSourceNetworkList\">\n                        <PerfectScrollbar className=\"pe-2\">\n                            {!networkListLoading ? \n                                networkList && networkList.length > 0 ? networkList.map((network, index) => {\n                                    return <button key={network.id} type=\"button\" data-id={network.id} className={`btn w-100 btn-active-light btn-sm mb-1 fs-7 fw-medium text-start d-flex align-items-center ${selectedNetworkId === network.id ? 'active' : ''}`} onClick={() => this.uploadType(network.id === 29 ? 'onsite-upload' : 'byNetwork', network)}>\n                                        <span className=\"symbol symbol-24 me-2 bg-light\">\n                                            <img className=\"object-center-contain\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.id)}.svg`)} alt={GET_NETWORK_NAME(network.id)} height={30} width={30} />\n                                        </span>\n                                        {network.id === 29 ? `UGC Uploader` : network.name}\n                                    </button>\n                                }) :<span className=\"py-5 text-center d-block fs-8 fw-medium text-gray-500\">No Network Found</span>: <NetworksSkeleton />\n                            }\n                            </PerfectScrollbar>\n                        </div>\n                    </div>\n            </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state.networks.networkData\n    }\n}\nexport default connect(mapStateToProps)(Networks);","\nimport React, { Component, Suspense } from 'react';\nimport Swal from 'sweetalert2';\nimport { connect } from 'react-redux';\nimport Networks from './Elements/Networks';\n\n\n\nconst NeedSupport = React.lazy(() => import('../../../CommonComponents/NeedSupport'));\nconst AddFeedByNetwork = React.lazy(() => import('./Elements/AddFeedByNetwork'));\nconst ChooseCollection = React.lazy(() => import('./Elements/ChooseCollection'));\nconst AssetsUploader = React.lazy(() => import('./Elements/AssetsUploader'));\nconst OnsiteUpload = React.lazy(() => import('../../../Feeds/OnsiteUpload/OnsiteUpload'));\n\n\nclass UploadAssets extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            uploadTypeSec: 'uploadAssets',\n            filterTabs: [],\n            selectedNetwork: null,\n        };\n    }\n\n    uploadType = (uploadTypeVal, network) => {\n        this.setState({\n            uploadTypeSec: uploadTypeVal,\n            filterTabs: network ? network.networkTab : null,\n            selectedNetwork: network\n        })\n    }\n    getAssets = () => {\n        this.props.getAssetsCallback()\n    };\n    onUppyResetAndClose = event => {\n        const { uploadedData } = this.props\n        if (uploadedData && uploadedData.length > 0) {\n            const { onClearUPloadObject, uppyPostEdit } = this.props\n            uppyPostEdit.cancelAll()\n            uppyPostEdit.removeFile()\n            onClearUPloadObject([])\n        } else {\n            const { onClearUPloadObject, uppyPostEdit } = this.props\n            uppyPostEdit.cancelAll()\n            uppyPostEdit.removeFile()\n            onClearUPloadObject([])\n            this.props.editMediaHandleCallback(false)\n        }\n\n    }\n    onCancelUpload = event => {\n        const { uploadedData } = this.props\n        var self = this;\n        if (uploadedData && uploadedData.length > 0) {\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You want to  discard changes!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: 'Yes, discard changes!'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    const { onClearUPloadObject, uppyPostEdit } = self.props\n                    uppyPostEdit.cancelAll()\n                    uppyPostEdit.removeFile()\n                    onClearUPloadObject([])\n                }\n            })\n        }\n        else {\n            this.props.editMediaHandleCallback(false)\n        }\n    }\n\n    render() {\n        const { uploadTypeSec, filterTabs, selectedNetwork } = this.state;\n        const { uploadedData, collectionError, networkList } = this.props\n        return <div className=\"container\">\n                <div className=\"addSource d-flex flex-column flex-lg-row w-100 pt-5\">\n                    <div className=\"addSourceNetwork d-flex flex-column flex-shrink-0 pe-lg-4\">\n                        <Networks uploadTypeCallback={this.uploadType} networkList={networkList} selectedNetworkId={selectedNetwork ? selectedNetwork.id : null} />\n                    </div>\n                    <div className=\"flex-grow-1 w-100 mb-5 card\">\n                        <div className=\"card-body\">\n                            <div className=\"\">\n                                <h6 className=\"fs-7 mb-3\">Select the collection where you want to put your data</h6>\n                                <div className=\"mb-3\">\n                                    <Suspense fallback={<></>}>\n                                        <ChooseCollection {...this.props} />\n                                    </Suspense>\n                                    {collectionError ? <span className=\"text-danger\">Please select collection.</span> : null}\n                                </div>\n                                {uploadTypeSec === 'uploadAssets' ?\n                                    <Suspense fallback={<></>}>\n                                        <AssetsUploader {...this.props} uppyPostEdit={this.props.uppyPostEdit} />\n                                    </Suspense>\n                                    : uploadTypeSec === 'onsite-upload' ?\n                                        <Suspense fallback={<></>}>\n                                            <OnsiteUpload onBack={() => this.uploadType(\"uploadAssets\", null)} {...this.props} />\n                                        </Suspense>\n                                        : uploadTypeSec === 'byNetwork' ?\n                                            <Suspense fallback={<></>}>\n                                                <AddFeedByNetwork filterTabs={filterTabs} selectedNetwork={selectedNetwork} onBack={() => this.uploadType(\"uploadAssets\", null)} {...this.props} />\n                                            </Suspense>\n                                            : null\n                                }\n                            </div>\n                            {uploadTypeSec === 'uploadAssets' ? <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\n                                <Suspense fallback={<></>}>\n                                    <NeedSupport content={'Need Help'} supportUrl={'#'} videoUrl={'#'} changeText={true} />\n                                </Suspense>\n                                <div className=\"my-1 d-flex align-items-center justify-content-end flex-wrap\">\n                                    <button type=\"button\" className=\"btn btn-secondary me-3\" onClick={this.onCancelUpload}>Cancel</button>\n                                    <button type=\"button\" id=\"resetUppyUpload\" className=\"btn btn-secondary me-3\" onClick={this.onUppyResetAndClose} hidden>Uppy Reset</button>\n                                    <button type=\"button\" className={`btn btn-primary ${uploadedData && uploadedData.length > 0 ? `` : `disabled`}`} onClick={() => this.getAssets()}>Fetch Assets {uploadedData && uploadedData.length > 0 ? `(${uploadedData.length})` : ``}</button>\n                                </div>\n                            </div> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        networkList: state.addFeed.networkList\n    }\n}\n\nexport default connect(mapStateToProps)(UploadAssets);\n"],"names":["numbers","Array","from","length","_","i","className","map","number","index","Networks","props","filterNetworkList","e","filteredList","filterList","target","value","setState","textValue","networkList","filter","network","name","toLowerCase","match","uploadType","uploadTypeCallback","manualUpload","state","networkListLoading","this","nextProps","selectedNetworkId","type","placeholder","onChange","onClick","xmlns","viewBox","d","fill","id","src","baseUrl","GET_NETWORK_ICON","alt","GET_NETWORK_NAME","height","width","Component","connect","networkData","networks","NeedSupport","React","AddFeedByNetwork","ChooseCollection","AssetsUploader","OnsiteUpload","UploadAssets","uploadTypeVal","uploadTypeSec","filterTabs","networkTab","selectedNetwork","getAssets","getAssetsCallback","onUppyResetAndClose","event","uploadedData","onClearUPloadObject","uppyPostEdit","cancelAll","removeFile","editMediaHandleCallback","onCancelUpload","self","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","collectionError","Suspense","fallback","onBack","content","supportUrl","videoUrl","changeText","hidden","addFeed"],"sourceRoot":""}