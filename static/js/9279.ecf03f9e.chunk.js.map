{"version":3,"file":"static/js/9279.ecf03f9e.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AssetsModal/Elements/AssetsModalAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ReactHtmlParser from 'react-html-parser';\nimport moment from 'moment'\nimport { Button } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport ProfileImage from '../../../CommonComponents/ProfileImage/ProfileImage';\nimport { GET_POST_TYPE_NAME, GET_NETWORK_ICON, GET_MEDIA_NAME, MEDIA_REPLACE_URL, FIND_COLLECTION_NAME, GET_NETWORK_NAME, prefixKey } from '../../../../../Services/Utils/utils';\nimport { postAddTag } from '../../../../../Services/Actions/tagsActions'\nimport { postPostUpdateAction, loadAssetsDataWithDispatch } from '../../../../../Services/Actions/assetsActions'\n\n\n\nclass AssetsModalAside extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tagString:['#macdonald', 'Restaurant', 'Burger', '#macdonaldUSA', 'California', '#starbucks', 'Restaurant'],\n            descriptionEditable: false,\n            addTagButton: true,\n            //tagInputValue : ''\n            tagString: [],\n            newTag: \"\",\n            listTags: [],\n            selectedOption: null,\n            content: \"\",\n            changesStatus: false\n        };\n\n        this.editorEnable = React.createRef();\n        this.editorEnableButton = React.createRef();\n    }\n\n    onClickToRemoveTag = (index) => event => {\n        let { tagString } = this.state;\n        tagString.splice(index, 1)\n        this.setState({ tagString, changesStatus: true })\n\n    }\n\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n\n    }\n\n    addTagButtonValue = () => {\n        this.setState({\n            addTagButton: false\n        })\n    }\n\n    // tagInputValueFun = (value) => {\n    //     this.setState({\n    //         tagInputValue : value\n    //     })\n    // }\n\n    descriptionToggle() {\n        this.setState({\n            descriptionEditable: true\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick);\n        const { modalAssetData } = this.props\n        if (modalAssetData && Object.keys(modalAssetData).length > 0) {\n            if (modalAssetData.tags && String(modalAssetData.tags).length > 0) this.setState({ tagString: String(modalAssetData.tags).split(\",\"), content: modalAssetData.content })\n            else this.setState({ tagString: [], content: modalAssetData.content })\n        }\n    }\n\n    handleOutsideClick = (event) => {\n        if (this.editorEnable && this.editorEnable.current && !this.editorEnable.current.contains(event.target) && (this.editorEnableButton && !this.editorEnableButton.current.contains(event.target)) && this.editorEnableButton && !this.editorEnableButton.current.contains(event.target) !== null) {\n            this.setState({\n                descriptionEditable: false\n            })\n        } else {\n            if (this.editorEnable && this.editorEnable.current && (!this.editorEnable.current.contains(event.target) && this.editorEnable.current.contains(event.target) !== null)) {\n                this.setState({\n                    descriptionEditable: true\n                })\n            }\n        }\n    }\n\n    onClickNewAddTag = event => {\n        const { newTag, tagString } = this.state;\n        const { modalAssetData } = this.props\n\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            if (newTag && String(newTag).length >= 3) {\n                tagString.push(newTag)\n                this.setState({ tagString, newTag: \"\", selectedOption: null, changesStatus: true, addTagButton: true })\n            }\n            else {\n\n            }\n        }\n    }\n\n    addNewTag = event => this.setState({ newTag: event.target.value, changesStatus: true })\n\n    onClickToSave = event => {\n        const { tagString } = this.state;\n        const { modalAssetData } = this.props;\n        if (tagString && tagString.length > 0) {\n            this.props.postAddTag({\n                \"postId\": String(modalAssetData.id),\n                \"tags\": tagString.join(\",\")\n            }, () => this.props.loadAssetsDataWithDispatch())\n        }\n\n    }\n\n    setNewTags = (selectedOption) => {\n        if (selectedOption && selectedOption.value) this.setState({ newTag: selectedOption.value, selectedOption })\n        else this.setState({ newTag: \"\", selectedOption: null })\n\n\n    };\n\n    onChangeContent = event => {\n        this.setState({ content: event.target.value, changesStatus: true })\n    }\n    onChangeTag = event => {\n        this.setState({ newTag: event.target.value })\n    }\n    onSaveChanges = event => {\n        const { modalAssetData } = this.props;\n        const { tagString, content } = this.state;\n        if (tagString && tagString.length > 0 && content) {\n            const data = {\n                \"action\": \"4\",\n                \"source\": String(modalAssetData.collection),\n                \"destination\": String(modalAssetData.collection),\n                \"postId\": String(modalAssetData.id),\n                \"postFile\": modalAssetData.postFile,\n                \"tags\": tagString.join(\",\"),\n                \"content\": content\n            }\n\n            this.props.postPostUpdate(data, () => {\n                this.props.loadAssetsDataWithDispatch()\n                this.setState({ descriptionEditable: false, addTagButton: true, changesStatus: false })\n\n                //this.props.editMediaCallback(false)\n            })\n        }\n    }\n\n    render() {\n        const { descriptionEditable, addTagButton, tagString, content, changesStatus, newTag } = this.state\n        const { modalAssetData, networkData, collections, isTrash } = this.props\n        const modifiedNetworkId = modalAssetData.networkId == 18 ? 2 : modalAssetData.networkId\n        const socialNetwork = networkData && networkData.length > 0 ? networkData.filter((network) => network.id == modifiedNetworkId) : []\n        //const collectionName = collections && collections.length > 0 ? collections.filter((cItem) => cItem.id == modalAssetData.collection) : []\n        const collectionName = collections && collections.length > 0 ? FIND_COLLECTION_NAME(modalAssetData.collection, collections) : []\n\n        return <div className=\"full_modal_sidebar position-relative\">\n            <PerfectScrollbar>\n                <div className=\"full_modal_sidebar_inner position-relative\">\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-1\">\n                        <span className=\"text-uppercase fw-medium\">General Info</span>\n                    </h3>\n                    <table className=\"table table-borderless\">\n                        <tbody>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Author</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                    <div className=\"d-flex align-items-center mr-2 cursor-pointer\" onClick={event => window.open(modalAssetData.link, \"_blank\")}>\n                                        <ProfileImage className={'symbol symbol-34 rounded-circle flex-shrink-0 me-2 overflow-hidden bg-light'}\n                                            imageSize={38}\n                                            symbolClass={'symbol-label text-light-alt fw-bold text-uppercase fs-8'}\n                                            name={modalAssetData.name} profileUrl={MEDIA_REPLACE_URL(modalAssetData.picture)} networkId={modalAssetData.networkId ? modalAssetData.networkId : 0} />\n                                        <div>\n                                            <p className=\"text-dark mb-0 text-break fw-bold\">{modalAssetData.name}</p>\n                                            <small className=\"mb-0 text-muted text-break\">@{modalAssetData.username}</small>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Network</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                    <div className=\"d-flex align-items-center\">\n                                        <span className=\"me-2 d-flex\">\n                                            <img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId ? modalAssetData.networkId : 0)}.svg`)} height={18} width={18} alt={modalAssetData.networkId ? modalAssetData.networkId : 0} />\n                                        </span>\n                                        <span className=\"text-dark\">{GET_NETWORK_NAME(modalAssetData.networkId ? modalAssetData.networkId : 0)}</span>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Connection</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.Feed && Object.keys(modalAssetData.Feed).length > 0 ? ReactHtmlParser(modalAssetData.Feed.name) : '--'}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">File Name</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.filename ? modalAssetData.filename : '--'}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">File Extension</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.ext ? modalAssetData.ext : '--'}</span></td>\n                            </tr>\n\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Type</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{GET_POST_TYPE_NAME(modalAssetData.type) ? GET_POST_TYPE_NAME(modalAssetData.type) : '--'}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Collection</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{collectionName ? collectionName : \"--\"}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Dimensions</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.mediaWidth ? modalAssetData.mediaWidth : '--'}x{modalAssetData.mediaHeight ? modalAssetData.mediaHeight : '--'}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Size</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.size ? modalAssetData.size : '--'}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Created</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{moment(modalAssetData.created).utcOffset(0).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Modified</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{moment(modalAssetData.modified).utcOffset(0).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                            </tr>\n\n                            {\n                                modalAssetData.ugcRights ? <>\n                                    {modalAssetData.ugcRights.status == 2 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-success\">\n                                                    <SVG src={baseUrl('media/icons/svg-icons/rights-approved-fill.svg')} height={16} width={16} />\n                                                </span>\n                                                <span className=\"text-success\">Request Approved</span>\n                                            </div>\n                                        </td>\n                                    </tr> : modalAssetData.ugcRights.status == 1 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-warning\">\n                                                    <SVG src={baseUrl('media/icons/svg-icons/rights-pending-fill.svg')} height={16} width={16} />\n                                                </span>\n                                                <span className=\"text-warning\">Request Pending</span>\n                                            </div>\n                                        </td>\n                                    </tr> : modalAssetData.ugcRights.status == 3 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-danger\">\n                                                    <SVG src={baseUrl('media/icons/svg-icons/rights-rejected-fill.svg')} height={16} width={16} />\n                                                </span>\n                                                <span className=\"text-danger\">Request Rejected</span>\n                                            </div>\n                                        </td>\n                                    </tr> : null}\n                                </> : null\n                            }\n                        </tbody>\n                    </table>\n\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-2\">\n                        <span className=\"text-uppercase fw-medium\">Tag</span>\n                    </h3>\n\n                    {tagString && tagString.length > 0 ? <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                        {\n                            tagString.map((tag, removeIndex) => {\n                                return tag && String(tag).length > 0 ? <div key={removeIndex} className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2 fw-medium\">\n                                    {tag}\n                                    <Button variant='link' className=\"text-decoration-none p-0 ms-1\" onClick={this.onClickToRemoveTag(removeIndex)}>\n                                        <i className=\"ri-close-line icon-6 me-0\"></i>\n                                    </Button>\n                                </div> : null\n\n                            })\n                        }\n\n                        {!addTagButton ?\n                            <div className=\"d-flex me-2 mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm border-0 fw-semibold fs-7\" placeholder=\"Enter Tag...\" value={newTag} onChange={this.onChangeTag} onKeyUp={this.onClickNewAddTag} />\n                            </div>\n                            :\n                            <>{!isTrash ? <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill me-2 mb-2 py-1\" onClick={this.addTagButtonValue} >\n                                <i className=\"ri-add-line\"></i>\n                                Add Tag\n                            </button> : null}</>\n                        }\n                    </div>\n                        :\n                        <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                            {!addTagButton ?\n                                <div className=\"d-flex me-2 mb-2\">\n                                    <input type=\"text\" className=\"form-control form-control-sm border-0 fw-semibold fs-7\" placeholder=\"Enter Tag...\" value={newTag} onChange={this.onChangeTag} onKeyUp={this.onClickNewAddTag} />\n                                </div>\n                                :\n                                <>{!isTrash ? <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill me-2 mb-2\" onClick={this.addTagButtonValue} >\n                                    <i className=\"ri-add-line\"></i>\n                                    Add Tag\n                                </button> : null}</>\n                            }\n                        </div>\n                    }\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-2\">\n                        <span className=\"text-uppercase fw-medium\">Description</span>\n                    </h3>\n                    <div className=\"mb-3 d-flex align-items-center\">\n                        <div className=\"d-flex flex-grow-1 pe-2\" ref={this.editorEnable}>\n\n                            <textarea type=\"text\" className={`form-control textarea-min-row-3 ${!descriptionEditable ? ' resize-none border-0 p-0' : ''}`}\n                                placeholder=\"Add Description\" rows={3} value={content} readOnly={!descriptionEditable} onChange={this.onChangeContent}>\n\n                            </textarea>\n                        </div>\n                        {!isTrash ? <button type=\"button\" className=\"btn btn-icon btn-sm btn-active-light w-30px h-30px\" ref={this.editorEnableButton}>\n                            <i className=\"ri-edit-2-fill icon-6 me-0\"></i>\n                        </button> : null}\n                    </div>\n                </div>\n                {!isTrash ? <div className=\"assets_btn_wrapper bg-white\">\n                    <button type=\"button\" className={`btn btn-primary w-100 ${changesStatus ? `` : `disabled`} `} onClick={this.onSaveChanges}>Save Changes</button>\n                </div> : null}\n            </PerfectScrollbar>\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state.networks.networkData,\n        tagList: state.tags.tagList\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        postAddTag: (data, callback) => dispatch(postAddTag(data, callback)),\n        postPostUpdateAction: (data, calback) => dispatch(postPostUpdateAction(data, calback)),\n        loadAssetsDataWithDispatch: () => dispatch(loadAssetsDataWithDispatch()),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetsModalAside);\n\n"],"names":["AssetsModalAside","props","onClickToRemoveTag","index","event","tagString","state","splice","setState","changesStatus","addTagButtonValue","addTagButton","handleOutsideClick","editorEnable","current","contains","target","editorEnableButton","descriptionEditable","onClickNewAddTag","newTag","modalAssetData","key","keyCode","String","length","push","selectedOption","addNewTag","value","onClickToSave","postAddTag","id","join","loadAssetsDataWithDispatch","setNewTags","onChangeContent","content","onChangeTag","onSaveChanges","data","collection","postFile","postPostUpdate","listTags","React","tagList","this","map","item","label","document","addEventListener","Object","keys","tags","split","networkData","collections","isTrash","modifiedNetworkId","networkId","collectionName","filter","network","FIND_COLLECTION_NAME","className","onClick","window","open","link","imageSize","symbolClass","name","profileUrl","MEDIA_REPLACE_URL","picture","username","src","baseUrl","GET_NETWORK_ICON","height","width","alt","GET_NETWORK_NAME","Feed","ReactHtmlParser","filename","ext","GET_POST_TYPE_NAME","type","mediaWidth","mediaHeight","size","moment","created","utcOffset","format","modified","ugcRights","status","tag","removeIndex","variant","placeholder","onChange","onKeyUp","ref","rows","readOnly","Component","connect","networks","dispatch","callback","postPostUpdateAction","calback"],"sourceRoot":""}