{"version":3,"file":"static/js/6178.052eee23.chunk.js","mappings":"6PAMMA,GAAUC,EAAAA,EAAAA,GAAY,CACxBC,MAAO,QACPC,SAAU,CACNC,WAAY,UAEZC,MAAO,OAIPC,iBAAkB,WAGtBC,OAAQ,CACJ,CAAEC,IAAKC,EAAAA,GAAAA,QAAWC,MAAO,WACzB,CAAEF,IAAKC,EAAAA,GAAAA,aAAgBC,MAAO,WAC9B,CAAEF,IAAK,CAACC,EAAAA,GAAAA,OAAUA,EAAAA,GAAAA,QAAUA,EAAAA,GAAAA,QAAWC,MAAO,WAC9C,CAAEF,IAAKC,EAAAA,GAAAA,OAAUC,MAAO,WACxB,CAAEF,IAAKC,EAAAA,GAAAA,KAAQC,MAAO,WACtB,CAAEF,IAAKC,EAAAA,GAAAA,KAAQC,MAAO,WACtB,CAAEF,IAAKC,EAAAA,GAAAA,QAAWC,MAAO,WACzB,CAAEF,IAAKC,EAAAA,GAAAA,SAAYC,MAAO,WAC1B,CAAEF,IAAKC,EAAAA,GAAAA,UAAaC,MAAO,WAC3B,CAAEF,IAAKC,EAAAA,GAAAA,WAAaA,EAAAA,GAAAA,UAAaC,MAAO,WACxC,CAAEF,IAAKC,EAAAA,GAAAA,SAAYC,MAAO,WAC1B,CAAEF,IAAKC,EAAAA,GAAAA,aAAgBC,MAAO,WAC9B,CAAEF,IAAKC,EAAAA,GAAAA,QAAWC,MAAO,WACzB,CAAEF,IAAKC,EAAAA,GAAAA,cAAiBC,MAAO,WAC/B,CAAEF,IAAKC,EAAAA,GAAAA,MAASC,MAAO,WACvB,CAAEF,IAAKC,EAAAA,GAAAA,MAASC,MAAO,cAGzBC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAsCD,OAtCCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACF,WACI,MAA2DC,KAAKC,MAAxDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,uBAAwBC,EAA3C,EAA2CA,YAC3C,OAAO,UAAC,SAAD,CAAgBC,SAAS,IAAIC,UAAU,OAAvC,WACH,SAAC,WAAD,CAAkBA,UAAU,QAA5B,UACI,iBAAMA,UAAU,iBAAhB,2BAEJ,UAAC,SAAD,CAAgBA,UAAU,4BAA1B,WACI,mBAAOA,UAAU,0FAAjB,WACI,iBAAMA,UAAU,qDAAhB,gCACA,kBAAOA,UAAU,mBAAmBC,KAAK,WAAWC,KAAK,aAAaC,QAASP,EAAUQ,UAAWC,SAAUR,QAElH,gBAAKG,UAAU,QAAf,UACI,gBAAKA,UAAU,wCAAf,UAII,SAAC,KAAD,CACIM,MAAOV,EAAUW,IACjBC,OAAO,QACPxB,MAAOF,EAEP2B,WAAY,CACRC,YAAY,EACZC,YAAY,EACZC,yBAAyB,EACzBC,eAAe,EACfC,gBAAgB,GAGpBC,WAAY,EAACC,EAAAA,EAAAA,IAAa,QAC1BX,SAAUP,aAOjC,OAtCCL,CAAkBwB,EAAAA,WAwCxB,W","sources":["Layouts/Main/Templates/TemplateAside/Components/Elements/CustomCss.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { Accordion, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport { tags as t } from '@lezer/highlight';\r\nimport { loadLanguage, langNames, langs } from '@uiw/codemirror-extensions-langs';\r\nimport { createTheme } from '@uiw/codemirror-themes';\r\nconst myTheme = createTheme({\r\n    theme: 'light',\r\n    settings: {\r\n        background: '#f8f8f8',\r\n        // foreground: '#75baff',\r\n        caret: 'none',\r\n        // selection: '#036dd626',\r\n        // selectionMatch: '#036dd626',\r\n        // lineHighlight: '#8a91991a',\r\n        gutterBackground: '#f7f7f7',\r\n        // gutterForeground: '#8a919966',\r\n    },\r\n    styles: [\r\n        { tag: t.comment, color: '#b06213' },\r\n        { tag: t.variableName, color: '#ff0000' },\r\n        { tag: [t.string, t.special(t.brace)], color: '#b83b3b' },\r\n        { tag: t.number, color: '#166948' },\r\n        { tag: t.bool, color: '#92349f' },\r\n        { tag: t.null, color: '#166948' },\r\n        { tag: t.keyword, color: '#166948' },\r\n        { tag: t.operator, color: '#166948' },\r\n        { tag: t.className, color: '#ff0000' },\r\n        { tag: t.definition(t.typeName), color: '#b83b3b' },\r\n        { tag: t.typeName, color: '#b83b3b' },\r\n        { tag: t.angleBracket, color: '#92349f' },\r\n        { tag: t.tagName, color: '#4d9840' },\r\n        { tag: t.attributeName, color: '#92349f' },\r\n        { tag: t.color, color: '#3a2ba4' },\r\n        { tag: t.color, color: '#3a2ba4' },\r\n    ],\r\n});\r\nclass CustomCss extends Component {\r\n    render() {\r\n        const { customCss, onClickEnableCustomCss, onChangeCss } = this.props\r\n        return <Accordion.Item eventKey=\"7\" className=\"pb-3\">\r\n            <Accordion.Header className=\"w-100\">\r\n                <span className=\"fs-9 fw-medium\">Custom CSS</span>\r\n            </Accordion.Header>\r\n            <Accordion.Body className=\"border rounded-1 mt-1 p-2\">\r\n                <label className=\"form-check form-switch py-2 align-items-center justify-content-between mb-2 h-40px py-1\">\r\n                    <span className=\"form-check-label ps-0 fs-9 fw-medium text-gray-800\">Enable Custom CSS</span>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"shareIcons\" checked={customCss.cssStatus} onChange={onClickEnableCustomCss} />\r\n                </label>\r\n                <div className=\"w-100\">\r\n                    <div className=\"form-control textarea-min-row-10 fs-9\">\r\n                        {/* <textarea className=\"form-control textarea-min-row-10 fs-9\" row={10} onChange={onChangeCss}>\r\n                        {customCss.css}\r\n                    </textarea> */}\r\n                        <CodeMirror\r\n                            value={customCss.css}\r\n                            height=\"350px\"\r\n                            theme={myTheme}\r\n                            //   theme={''}\r\n                            basicSetup={{\r\n                                foldGutter: false,\r\n                                dropCursor: false,\r\n                                allowMultipleSelections: false,\r\n                                indentOnInput: false,\r\n                                autocompletion: false\r\n                            }}\r\n\r\n                            extensions={[loadLanguage('css')]}\r\n                            onChange={onChangeCss}\r\n\r\n\r\n                        /></div>\r\n                </div>\r\n            </Accordion.Body>\r\n        </Accordion.Item>\r\n    }\r\n}\r\nexport default CustomCss"],"names":["myTheme","createTheme","theme","settings","background","caret","gutterBackground","styles","tag","t","color","CustomCss","this","props","customCss","onClickEnableCustomCss","onChangeCss","eventKey","className","type","name","checked","cssStatus","onChange","value","css","height","basicSetup","foldGutter","dropCursor","allowMultipleSelections","indentOnInput","autocompletion","extensions","loadLanguage","Component"],"sourceRoot":""}