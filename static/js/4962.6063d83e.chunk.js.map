{"version":3,"file":"static/js/4962.6063d83e.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/EditMediaModal/EditMediaModal.js"],"sourcesContent":["import React, { Component } from 'react';\nimport AWS from 'aws-sdk'\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal } from 'react-bootstrap';\nimport FilerobotImageEditor, { TABS, TOOLS, } from 'react-filerobot-image-editor';\nimport { postPostUpdateAction } from '../../../../Services/Actions/assetsActions'\n\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\nconst uppyBucket = 'cloud.taggbox.com';\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\n\n\nconst S3_BUCKET = uppyBucket;\nconst REGION = \"us-west-1\";\n\nAWS.config.update({\n    accessKeyId: uppyAwsKey,\n    secretAccessKey: uppyAwsSecret\n})\n\nconst myBucket = new AWS.S3({\n    robot: \"/wasabi/store\",\n    params: { Bucket: S3_BUCKET },\n    region: REGION,\n    endpoint: 'https://s3.us-west-1.wasabisys.com',\n})\n\n\nfunction dataURItoBlob(dataURI) {\n    var binary = window.atob(dataURI.split(',')[1]);\n    var array = [];\n    for (var i = 0; i < binary.length; i++) {\n        array.push(binary.charCodeAt(i));\n    }\n    return new Blob([new Uint8Array(array)], {\n        type: 'image/jpg'\n    });\n}\n\n\n\nclass EditMediaModal extends Component {\n    state = { newImage: null }\n    handleClose = () => {\n        this.props.editMediaCallback(false)\n    };\n\n    onSaveData = (editedImageObject, designState) => {\n        var self = this;\n        if (editedImageObject.imageBase64 && Object.keys(editedImageObject).length > 0) {\n            var myFile = dataURItoBlob(editedImageObject.imageBase64);\n            var newFileName = `onsiteupload/images/${uuidv4()}.${editedImageObject.extension}`\n            const params = {\n                ACL: 'public-read',\n                Body: myFile,\n                Bucket: S3_BUCKET,\n                ContentType: 'image/png',\n                ContentEncoding: 'base64',\n                Key: newFileName\n            };\n            myBucket.upload(params)\n                .on('httpUploadProgress', (evt) => {\n                    if (Math.round((evt.loaded / evt.total) * 100) == 100) {\n                        self.setState({ newImage: `https://cloud.taggbox.com/${newFileName}` }, () => self.onClickToPostEditIMage())\n                    }\n\n                })\n                .send((err) => {\n\n                })\n        }\n\n    }\n    onClickToPostEditIMage = () => {\n        const { modalAssetData } = this.props;\n        const { newImage } = this.state;\n        const data = {\n            \"action\": \"4\",\n            \"source\": modalAssetData.collection,\n            \"destination\": String(modalAssetData.collection),\n            \"postId\": String(modalAssetData.id),\n            \"postFile\": newImage ? newImage : modalAssetData.postFile,\n            \"tags\": modalAssetData.tags,\n            \"content\": modalAssetData.content\n        }\n        this.props.postPostUpdateAction(data, () => {\n            this.props.editMediaCallback(false)\n        })\n\n    }\n    render() {\n        const { editMediaModal, modalAssetData, editMediaCallback } = this.props\n\n        return <Modal size={'full'} show={editMediaModal} className=\"editMedia_modal border-0 p-0\" backdrop={false} onHide={editMediaCallback(false)}>\n            <Modal.Header className=\"border-0 p-0 w-100 border-bottom\" closeButton>\n                <div className=\"d-flex justify-content-between align-items-center px-lg-3 px-2 bg-white w-100\">\n                    <div className=\"d-flex align-items-center flex-wrap\">\n                        <h1 className=\"text-dark font-weight-bold mr-4 fs-6 mb-0\">Edit Image</h1>\n                    </div>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"p-0 align-items-stretch justify-content-center\">\n                <FilerobotImageEditor\n                    className=\"edit_asset_\"\n                    source={modalAssetData.postFile}\n                    theme={{\n                        palette: {\n                            //'bg-secondary': '#ffffff',\n                            'bg-primary': '#F4F5FA',\n                            // 'bg-primary-active': '#e5e6eb',\n                            'accent-primary': '#313A53',\n                            'accent-primary-hover': '#000',\n                            'accent-primary-active': '#313A53',\n                            'icons-primary': '#313A53',\n                            'icons-primary-hover': '#313A53',\n                            // 'icons-secondary': 'red',\n                            'borders-secondary': 'red',\n                            'borders-primary': 'red',\n                            'borders-strong': 'red',\n                            // 'light-shadow': 'red',\n                            // 'warning': 'red',\n                        },\n                        typography: {\n                            fontFamily: 'Inter, sans-serif',\n                        },\n                    }}\n                    onSave={this.onSaveData}\n                    //onClose={closeImgEditor}\n                    annotationsCommon={{\n                        fill: '#000000',\n                        stroke: '#000000',\n                        strokeWidth: 0,\n                        shadowOffsetX: 0,\n                        shadowOffsetY: 0,\n                        shadowBlur: 0,\n                        shadowColor: '#000000',\n                        shadowOpacity: 1,\n                        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n                        fontSize: 14,\n                        letterSpacing: 0,\n                        align: 'left',\n                        fontStyle: 'normal',\n                    }}\n                    Text={{ text: 'Image Editor...' }}\n                    Rotate={{ angle: 90, componentType: 'slider' }}\n                    Crop={{\n                        autoResize: true,\n                        presetsItems: [\n                            {\n                                titleKey: 'classicTv',\n                                descriptionKey: '4:3',\n                                ratio: 4 / 3,\n                                icon: <div>ss</div>,\n                            },\n                            {\n                                titleKey: 'cinemascope',\n                                descriptionKey: '21:9',\n                                ratio: 21 / 9,\n                                icon: <div>29</div>, // optional\n                            },\n                        ],\n                        presetsFolders: [\n                            {\n                                titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                icon: <>test</>, // React Function component, string or HTML Element\n                                groups: [\n                                    {\n                                        titleKey: 'facebook',\n                                        items: [\n                                            {\n                                                titleKey: 'profile',\n                                                width: 180,\n                                                height: 180,\n                                                descriptionKey: 'fbProfilePhotoSize',\n                                            },\n                                            {\n                                                titleKey: 'coverPhoto',\n                                                width: 820,\n                                                height: 312,\n                                                descriptionKey: 'fbCoverPhotoSize',\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                        ],\n                    }}\n                    tabsIds={[TABS.FILTERS, TABS.ADJUST, TABS.RESIZE, TABS.ANNOTATE, TABS.FINETUNE, TOOLS.TEXT]} // or {['Adjust', 'Annotate', 'Watermark']}\n                    defaultTabId={TABS.FILTERS} // or 'Annotate'\n                    defaultToolId={TOOLS.TEXT} // or 'Text'\n                    defaultResizeId={TOOLS.RESIZE}\n                />\n            </Modal.Body>\n        </Modal>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        postPostUpdateAction: (data, calback) => dispatch(postPostUpdateAction(data, calback)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditMediaModal);\n\n"],"names":["S3_BUCKET","AWS","accessKeyId","secretAccessKey","myBucket","robot","params","Bucket","region","endpoint","dataURItoBlob","dataURI","binary","window","atob","split","array","i","length","push","charCodeAt","Blob","Uint8Array","type","EditMediaModal","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","state","newImage","handleClose","props","editMediaCallback","onSaveData","editedImageObject","designState","self","_assertThisInitialized","imageBase64","Object","keys","myFile","newFileName","uuidv4","extension","ACL","Body","ContentType","ContentEncoding","Key","upload","on","evt","Math","round","loaded","total","setState","onClickToPostEditIMage","send","err","modalAssetData","data","collection","String","id","postFile","tags","content","postPostUpdateAction","_createClass","key","value","_this$props","this","editMediaModal","_jsxs","Modal","size","show","className","backdrop","onHide","children","_jsx","closeButton","FilerobotImageEditor","source","theme","palette","typography","fontFamily","onSave","annotationsCommon","fill","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadowOpacity","text","fontSize","letterSpacing","align","fontStyle","Text","Rotate","angle","componentType","Crop","autoResize","presetsItems","titleKey","descriptionKey","ratio","icon","presetsFolders","_Fragment","groups","items","width","height","tabsIds","TABS","TOOLS","defaultTabId","defaultToolId","defaultResizeId","Component","connect","dispatch","calback"],"sourceRoot":""}