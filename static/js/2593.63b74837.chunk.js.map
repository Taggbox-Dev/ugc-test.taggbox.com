{"version":3,"file":"static/js/2593.63b74837.chunk.js","mappings":"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","sources":["Layouts/Main/DisplayScreen/Components/Template/index.js","Layouts/Main/DisplayScreen/Components/Platforms/index.js","Layouts/Main/DisplayScreen/Components/DisplayScreenAside.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\r\n\r\nconst removeDuplicate = (data) => {\r\n    try {\r\n        var updateFilter = []\r\n        var updateKey = {}\r\n        data.map((item) => {\r\n            if (!updateKey[item.id]) {\r\n                updateFilter.push(item)\r\n                updateKey[item.id] = true\r\n            }\r\n\r\n        })\r\n        return updateFilter\r\n    }\r\n    catch (ex) {\r\n        return data\r\n    }\r\n}\r\n\r\nclass Templates extends Component {\r\n    state = {\r\n        templeteList: [],\r\n        isUpdate: false,\r\n        selectTemp:null\r\n    }\r\n    componentWillMount() {setTimeout(() => {this.onLoad()}, 100);}\r\n    onLoad = () => {\r\n        var self = this\r\n        const { templeteList, state } = this.props\r\n        self.setState({ templeteList: removeDuplicate(templeteList), selectTemp:state.selectedTemplate })\r\n    }\r\n    onFiltertemplateName = (id) => {\r\n        const { templeteList } = this.state;\r\n\r\n        if (templeteList && templeteList.length > 0) {\r\n            const updated = templeteList.filter((item) => item.id == id)\r\n            if (updated && updated.length > 0) {\r\n                return updated[0].name\r\n            }\r\n            else return \"\"\r\n        }\r\n        else return \"\"\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { templeteList, selectTemp } = this.state;\r\n        const { onSelectTemplate, state } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-2\">Select Template <strong className=\"text-danger\">*</strong></label>\r\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">{selectTemp ? selectTemp.name ? selectTemp.name : this.onFiltertemplateName(selectTemp.id) : `Please select template.`}</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    {templeteList && templeteList.length > 0 ?\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\" defaultValue={0}>\r\n                            {templeteList.map((temp, index) => {\r\n                                return <><ToggleButton key={`template_id_${index}`} className={`mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={()=>{this.setState({selectTemp:temp},()=>{onSelectTemplate(temp)})}}>\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"symbol symbol-44 flex-shrink-0 me-2\">\r\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height={50} width={50} alt={temp.name} />\r\n                                            </div>\r\n                                            <div className=\"overflow-hidden text-start\">\r\n                                                <p className={`fs-8 fw-semibold mb-1 text-ellipsis text-gray-dark`}>{temp.name}</p>\r\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                </ToggleButton></>\r\n                            })}\r\n                        </ToggleButtonGroup>\r\n                        : null}\r\n                    <div className=\"text-center\">\r\n                        <Link to={'/template/add'} className=\"btn btn-link text-decoration-none btn-sm p-0\">\r\n                            <i className=\"ri-add-line\"></i>\r\n                            Create New Template\r\n                        </Link>\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\n\r\nconst platformName = (platform) => {\r\n    switch (platform) {\r\n        case 'p-cast':\r\n            return 'Cast'\r\n        case 'p-chromecast':\r\n            return 'Chromecast'\r\n        case 'p-firetvstick':\r\n            return 'Fire Tv Stick'\r\n        case 'p-androidtv':\r\n            return 'Android Tv'\r\n        case 'p-Aptoide':\r\n            return 'Aptoide'\r\n        case 'p-wired':\r\n            return 'Wired'\r\n\r\n        case 'p-screen-cloud':\r\n            return 'Screen Cloud';\r\n        case 'p-yodeck':\r\n            return 'Yodeck';\r\n        case 'p-onsign':\r\n            return 'Onsign';\r\n        case 'p-rise-vision':\r\n            return 'Rise Vision';\r\n        case 'p-optisign':\r\n            return 'Optisign';\r\n        case 'p-raydiant':\r\n            return 'Raydiant'\r\n        case 'p-enplug':\r\n            return 'Enplug';\r\n        case 'p-novi-sign':\r\n            return 'Novi Sign';\r\n        case 'dp-other':\r\n            return 'Other';\r\n\r\n\r\n        case 'p-6connex':\r\n            return '6Connex';\r\n        case 'p-zuddl':\r\n            return 'Zuddl';\r\n        case 'p-gevme':\r\n            return 'Gevme';\r\n        case 'p-vfairs':\r\n            return 'Vfairs';\r\n        case 'p-workcast':\r\n            return 'Workcast';\r\n        case 'p-pathable':\r\n            return 'Pathable';\r\n\r\n        case 'p-hubilo':\r\n            return 'Hubilo';\r\n        case 'ev-other':\r\n            return 'Other';\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nclass Platforms extends Component {\r\n\r\n    render() {\r\n        const { onSelectedPlatform, state, themeSkin } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-2\">Select Display Platform</label>\r\n            <Accordion.Item eventKey=\"9\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100 d-flex align-items-center\">\r\n                    <p className=\"fs-9 fw-medium mb-0\">{`${state.selectedPlatform == 's-projector' ? `Projector / TV` : state.selectedPlatform == 's-signage' ? `Digital Signage` : state.selectedPlatform == 's-event' ? `Virtual / Hybrid Events` : `Select Display Platform`}`}</p>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"selectPlatfrom\" value={state.selectedPlatform} defaultValue={'s-projector'}>\r\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_projector\" value=\"s-projector\" onClick={onSelectedPlatform('s-projector')}>\r\n                            <i className=\"ri-tv-2-line icon-5 text-gray-800\"></i>\r\n                            <p className=\"fs-9 fw-medium mb-0\">Projector / TV</p>\r\n                        </ToggleButton>\r\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_signage\" value=\"s-signage\" onClick={onSelectedPlatform('s-signage')}>\r\n                            <i className=\"ri-tablet-line icon-5 text-gray-800\"></i>\r\n                            <p className=\"fs-9 fw-medium mb-0\">Digital Signage</p>\r\n                        </ToggleButton>\r\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_event\" value=\"s-event\" onClick={onSelectedPlatform('s-event')}>\r\n                            <i className=\"ri-picture-in-picture-line icon-5 text-gray-800\"></i>\r\n                            <p className=\"fs-9 fw-medium mb-0\">Virtual / Hybrid Events</p>\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n            {state.selectedPlatform == 's-projector' ? <Accordion.Item eventKey=\"10\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 btn-group-outline\" name=\"display-platform\" defaultValue={'p-cast'}>\r\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-cast\" value={'p-cast'} onClick={e => this.props.embedCodeCallback('p-cast')}>\r\n                            <div className=\"block-center text-center h-46px w-100\">\r\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/cast${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"cast\" height={26} width={80} />\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-chromecast\" value={'p-chromecast'} onClick={e => this.props.embedCodeCallback('p-chromecast')}>\r\n                            <div className=\"block-center text-center h-46px w-100\">\r\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/chromecast${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"chromecast\" height={44} width={100} />\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-firetvstick\" value={'p-firetvstick'} onClick={e => this.props.embedCodeCallback('p-firetvstick')}>\r\n                            <div className=\"block-center text-center h-46px w-100\">\r\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/firetvstick${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"firetvstick\" height={30} width={80} />\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-androidtv\" value={'p-androidtv'} onClick={e => this.props.embedCodeCallback('p-androidtv')}>\r\n                            <div className=\"block-center text-center h-46px w-100\">\r\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/androidtv${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"androidtv\" height={45} width={85} />\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-Aptoide\" value={'p-Aptoide'} onClick={e => this.props.embedCodeCallback('p-Aptoide')}>\r\n                            <div className=\"block-center text-center h-46px w-100\">\r\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/Aptoide-tv${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"Aptoide\" height={32} width={110} />\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-wired\" value={'p-wired'} onClick={e => this.props.embedCodeCallback('p-wired')}>\r\n                            <div className=\"block-center text-center h-46px w-100\">\r\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/wired${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wired\" height={30} width={86} />\r\n                            </div>\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Accordion.Body>\r\n            </Accordion.Item> :\r\n                state.selectedPlatform == 's-signage' ? <Accordion.Item eventKey=\"11\" className=\"pb-3\">\r\n                    <Accordion.Header className=\"w-100\">\r\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-screen-cloud'}>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-screen-cloud\" value={'p-screen-cloud'} onClick={e => this.props.embedCodeCallback('p-screen-cloud')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/screen-cloud${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"screen-cloud\" height={26} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-yodeck\" value={'p-yodeck'} onClick={e => this.props.embedCodeCallback('p-yodeck')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/yodeck${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"yodeck\" height={44} width={100} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-onsign\" value={'p-onsign'} onClick={e => this.props.embedCodeCallback('p-onsign')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/onsign-tv${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"onsign\" height={30} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-rise-vision\" value={'p-rise-vision'} onClick={e => this.props.embedCodeCallback('p-rise-vision')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/rise-vision${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"rise-vision\" height={40} width={75} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-optisign\" value={'p-optisign'} onClick={e => this.props.embedCodeCallback('p-optisign')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/optisign${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"optisign\" height={32} width={110} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-raydiant\" value={'p-raydiant'} onClick={e => this.props.embedCodeCallback('p-raydiant')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/raydiant${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"raydiant\" height={30} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-enplug\" value={'p-enplug'} onClick={e => this.props.embedCodeCallback('p-enplug')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/enplug${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"enplug\" height={30} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-novi-sign\" value={'p-novi-sign'} onClick={e => this.props.embedCodeCallback('p-novi-sign')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/novi-sign${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"novi-sign\" height={26} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"dp-other\" value={'dp-other'} onClick={e => this.props.embedCodeCallback('p-other')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"other\" height={26} width={70} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Accordion.Body>\r\n                </Accordion.Item> : state.selectedPlatform == 's-event' ? <Accordion.Item eventKey=\"12\" className=\"pb-3\">\r\n                    <Accordion.Header className=\"w-100\">\r\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-6connex'}>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-6connex\" value={'p-6connex'} onClick={e => this.props.embedCodeCallback('p-6connex')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/6connex${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"6connex\" height={26} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-zuddl\" value={'p-zuddl'} onClick={e => this.props.embedCodeCallback('p-zuddl')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/zuddl${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"zuddl\" height={44} width={100} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-gevme\" value={'p-gevme'} onClick={e => this.props.embedCodeCallback('p-gevme')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/gevme${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"gevme\" height={30} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-vfairs\" value={'p-vfairs'} onClick={e => this.props.embedCodeCallback('p-vfairs')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/vfairs${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"vfairs\" height={40} width={75} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-workcast\" value={'p-workcast'} onClick={e => this.props.embedCodeCallback('p-workcast')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/workcast${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"workcast\" height={32} width={110} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-pathable\" value={'p-pathable'} onClick={e => this.props.embedCodeCallback('p-pathable')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/pathable${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"pathable\" height={30} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-hubilo\" value={'p-hubilo'} onClick={e => this.props.embedCodeCallback('p-hubilo')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/hubilo${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"hubilo\" height={26} width={80} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"ev-other\" value={'ev-other'} onClick={e => this.props.embedCodeCallback('ev-other')}>\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"other\" height={26} width={70} />\r\n                                </div>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Accordion.Body>\r\n                </Accordion.Item> : null}\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        themeSkin: state.themeSkin.themeSkin\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Platforms);","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { connect } from \"react-redux\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import Select from 'react-select';\r\nimport SVG from 'react-inlinesvg'\r\nimport { Button, Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\r\nimport { EmbedURL } from '../../../../Services/Api'\r\nimport Filters from '../../WebEmbed/Components/Filters';\r\nimport Templates from './Template';\r\nimport Platforms from './Platforms';\r\nimport EmbedList from './EmbedList'\r\n\r\nclass DisplayScreenAside extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        showModal: false,\r\n        //setValue : '',\r\n        publishList: []\r\n    };\r\n    componentDidMount() {\r\n        const clickResetFilter = document.querySelector(\"#billing_tab_panel-tab-aside-assets_filter\")\r\n        if (clickResetFilter) {\r\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\r\n        }\r\n    }\r\n\r\n    handleSelect(date) {\r\n\r\n    }\r\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\r\n\r\n\r\n    render() {\r\n        //const { setValue } = this.state\r\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList, isHide, onSelectActive } = this.props\r\n        return <>\r\n\r\n            <label className=\"text-gray-800 mb-1 fw-medium\" htmlFor='filterLabel'>Display Name <strong className=\"text-danger\">*</strong></label>\r\n            <input type=\"text\" className=\"form-control form-control-sm mb-3\" id=\"filterLabel\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n            <div className='filter_wrapper' data-button={isHide ? \"0\" : \"1\"}>\r\n                <Accordion defaultActiveKey={1} activeKey={state.activeKey} onSelect={onSelectActive(1) ? onSelectActive(1) : null}>\r\n                    <Accordion.Item eventKey={1} className=\"pb-3\">\r\n                        <Accordion.Header className=\"add_fillter_btn\">\r\n                            <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-folder-4-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Collection</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Network</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Connections</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-image-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Assets Type</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-price-tag-3-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Tag</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>UGC Rights</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n\r\n                </Accordion>\r\n\r\n                {\r\n                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                }\r\n                <Accordion defaultActiveKey={''}>\r\n                    <Templates {...this.props} key={templeteList.length > 0} />\r\n                    <Platforms {...this.props} embedCodeCallback={this.embedCodeCallback} />\r\n                </Accordion>\r\n            </div>\r\n\r\n            <div className='filter_actions_'>\r\n                <Button variant='primary' className={`w-100  ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Display</Button>\r\n                {!isHide ? <Button variant='link' className='w-100 text-decoration-none fw-medium' onClick={onResetFilter}>Back</Button> : null}\r\n            </div>\r\n\r\n        </>\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DisplayScreenAside);\r\n\r\n{\r\n    // <div className=\"card-body\">\r\n    //     <PerfectScrollbar>\r\n    //         <div className=\"innerAsideWrapper\">\r\n    //             <div className=\"d-flex align-items-start justify-content-between\">\r\n    //                 <h6 className=\"fs-7 fw-bolder mb-0\">{`${isPublishEdit ? `Edit` : `Add`} Filter`}</h6>\r\n\r\n    //             </div>\r\n    //             <Tab.Container id={`${isPublishEdit ? `edit_billing_tab_panel` : `billing_tab_panel`}`} defaultActiveKey=\"aside-assets_filter\">\r\n    //                 <Nav variant=\"underline\" className=\"border-bottom mb-3\">\r\n    //                     <Nav.Item className=\"\">\r\n    //                         <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\" onClick={isPublishEdit ? event => this.props.onUpdateReponseData(null) : null}>Assets Filter</Nav.Link>\r\n    //                     </Nav.Item>\r\n    //                     {!isPublishEdit ? <Nav.Item className=\"\">\r\n    //                         <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\r\n    //                     </Nav.Item> : null}\r\n    //                 </Nav>\r\n    //                 <Tab.Content>\r\n    //                     <Tab.Pane eventKey=\"aside-assets_filter\">\r\n    //                         <label className=\"text-gray-800 mb-2\">Display Name <strong className=\"text-danger\">*</strong></label>\r\n    //                         <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n    //                         <div className=\"publish_aside_inner\">\r\n    //                             {\r\n    //                                 state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n    //                             }\r\n    //                             <Accordion defaultActiveKey={\"0\"}>\r\n    //                                 <Accordion.Item eventKey=\"0\" className=\"pb-3\">\r\n    //                                     <Accordion.Header className=\"add_fillter_btn text-gray-800\">\r\n    //                                         <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n    //                                         <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n    //                                         <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n    //                                     </Accordion.Header>\r\n    //                                     <Accordion.Body className=\"border rounded-1 mt-1\">\r\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\r\n    //                                                 <div className=\"symbol-label\">\r\n    //                                                     <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                             <div className=\"\">\r\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\r\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the preferred collection</span>\r\n    //                                             </div>\r\n    //                                         </div>\r\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none  disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\r\n    //                                                 <div className=\"symbol-label\">\r\n    //                                                     <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n    //                                                         <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n    //                                                     </span>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                             <div className=\"\">\r\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\r\n    //                                                 <span className=\"fs-9 text-gray-500\">Choose the required network</span>\r\n    //                                             </div>\r\n    //                                         </div>\r\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\r\n    //                                                 <div className=\"symbol-label\">\r\n    //                                                     <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n    //                                                         <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n    //                                                     </span>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                             <div className=\"\">\r\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\r\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the connection type</span>\r\n    //                                             </div>\r\n    //                                         </div>\r\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\r\n    //                                                 <div className=\"symbol-label\">\r\n    //                                                     <i className=\"ri-image-line icon-6 text-gray-800\"></i>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                             <div className=\"\">\r\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\r\n    //                                                 <span className=\"fs-9 text-gray-500\">Choose the type of asset</span>\r\n    //                                             </div>\r\n    //                                         </div>\r\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\r\n    //                                                 <div className=\"symbol-label\">\r\n    //                                                     <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                             <div className=\"\">\r\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\r\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the preferred tag</span>\r\n    //                                             </div>\r\n    //                                         </div>\r\n    //                                         <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\r\n    //                                                 <div className=\"symbol-label\">\r\n    //                                                     <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n    //                                                         <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={18} width={18} />\r\n    //                                                     </span>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                             <div className=\"\">\r\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\r\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the preferred ugc rights status</span>\r\n    //                                             </div>\r\n    //                                         </div>\r\n    //                                     </Accordion.Body>\r\n    //                                 </Accordion.Item>\r\n    //                                 <Templates {...this.props} key={templeteList.length > 0} />\r\n    //                                 <Platforms {...this.props} embedCodeCallback={this.embedCodeCallback} />\r\n    //                             </Accordion>\r\n    //                         </div>\r\n    //                         <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n    //                             <button type=\"button\" className={`btn btn-primary btn-sm ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Changes</button>\r\n    //                         </div>\r\n    //                         <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n    //                             <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\r\n    //                         </div>\r\n\r\n    //                     </Tab.Pane>\r\n    //                     {!isPublishEdit ? <Tab.Pane eventKey=\"filter-assets_published\">\r\n    //                         <EmbedList {...this.props} />\r\n    //                     </Tab.Pane> : null}\r\n    //                 </Tab.Content>\r\n    //             </Tab.Container>\r\n    //         </div>\r\n    //     </PerfectScrollbar>\r\n    // </div>\r\n}"],"names":["removeDuplicate","data","updateFilter","updateKey","map","item","id","push","ex","Templates","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","templeteList","isUpdate","selectTemp","onLoad","self","_assertThisInitialized","_this$props","props","setState","selectedTemplate","onFiltertemplateName","updated","filter","name","_createClass","key","value","_this2","setTimeout","_this3","_this$state","this","_this$props2","onSelectTemplate","_jsxs","_Fragment","children","className","_jsx","Accordion","eventKey","ToggleButtonGroup","type","defaultValue","temp","index","ToggleButton","Object","keys","variant","onClick","src","baseUrl","Theme","height","width","alt","Link","to","Component","connect","templates","dispatch","getTemplateListDispatch","platformName","platform","Platforms","onSelectedPlatform","themeSkin","selectedPlatform","showGenratedCode","e","embedCodeCallback","DisplayScreenAside","showModal","publishList","event","genratedCodeCallback","clickResetFilter","document","querySelector","addEventListener","onUpdateReponseData","date","filterApply","onResetFilter","genratedCodeModal","onClickToDelete","onChangeName","activeFilter","history","isPublishEdit","isHide","onSelectActive","htmlFor","placeholder","publishCodeName","onChange","defaultActiveKey","activeKey","onSelect","chooseFilter","includes","SVG","filterKey","indexFilter","Filters","_objectSpread","isLast","_createElement","Button","isUpdating","onRequestPublish"],"sourceRoot":""}