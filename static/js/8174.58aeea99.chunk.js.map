{"version":3,"file":"static/js/8174.58aeea99.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/Components/FilterAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport Select from 'react-select';\nimport { Accordion, Offcanvas, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { feedsFilter, tagsFilter, ugcStatusFilter, textFilter, postTypeFilter, resetFilter, collectionsFilter, networkFilter, postStatusFilter } from '../../../../Services/Actions/assetsActions'\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\n\n\nclass FilterAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        isActiveAside: false,\n        feedData: [],\n        listTags: [],\n        tagString: [],\n        selectedOption: null,\n        networkList: null\n    };\n    onLoadFeedList = () => {\n        const { filterList } = this.props.feedData;\n        this.setState((prevState) => ({ ...prevState, feedData: filterList }));\n    }\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n    }\n    componentDidMount() {\n        var filterAside = document.getElementById(\"filter_aside\");\n        if (filterAside) {\n            filterAside.addEventListener(\"click\", this.toogleFilter);\n        }\n        this.onLoadFeedList()\n        this.feedNetworkList()\n    }\n    onErrorImageUpdate = event => event.target.src = baseUrl(`media/icons/svg-icons/folder-open-line.svg`)\n    feedNetworkList = () => {\n        const { filterList } = this.props.feedData\n        const { feeds } = filterList\n        const { networks } = this.props\n        let networkConnectionId = []\n        networkConnectionId = feeds.map((item) => item.networkId)\n        networkConnectionId = [...new Set(networkConnectionId)]\n        if (networkConnectionId.includes(18)) { networkConnectionId.splice(networkConnectionId.indexOf(18), 1, 2) }\n        const networksList = networks.filter(network => networkConnectionId.includes(network.id))\n        this.setState({ networkList: networksList })\n    }\n    toogleFilter = () => {\n        this.setState({\n            isActiveAside: !this.state.isActiveAside,\n        })\n        setTimeout(() => {\n            var offcanvas = document.querySelector(\".offcanvas-backdrop\");\n            if (offcanvas) {\n                offcanvas.classList.add('filter-backdrop');\n            }\n        }, 100);\n    };\n    onClickToFeed = (feedId, name) => event => this.props.feedsFilter(feedId, name)\n    onClickToUgc = (status) => event => this.props.ugcStatusFilter(status)\n    onClickToPostType = (type) => event => this.props.postTypeFilter(type)\n    onClickToAssetType = (status) => event => this.props.postStatusFilter(status)\n    onClickToResetFilter = event => this.props.resetFilter()\n    onClickToCollection = (id, name) => event => this.props.collectionsFilter(id, name)\n    onClickToNetwork = (id, name) => event => this.props.networkFilter(id, name)\n    handleChange = (selectedOption) => {\n        if (selectedOption && Object.keys(selectedOption).length > 0) this.props.tagsFilter(selectedOption.value)\n    }\n    componentWillReceiveProps(nextProps) {\n        const { filterList } = nextProps.feedData;\n        if (filterList != this.state.feedData) this.setState((prevState) => ({ ...prevState, feedData: filterList }), () => setTimeout(() => this.feedNetworkList(), 100))\n    }\n\n    render() {\n        const { isActiveAside, feedData, listTags, networkList } = this.state\n        const { filterBody, collections, isCollection } = this.props\n\n        return <Offcanvas show={isActiveAside} placement={'end'} name={'end'} onHide={this.toogleFilter} className=\"filter_aside\">\n            <Offcanvas.Body>\n                <div className=\"d-flex align-items-center justify-content-between px-3 px-xxl-4 py-3 border-bottom\">\n                    <div className=\"fs-5 fw-medium\">Add Filter</div>\n                    <Button variant='link' className=\"text-decoration-none btn-icon btn-active-light btn-active-color-primary p-0 w-30px h-30px border-0\" onClick={this.toogleFilter}>\n                        <i className=\"ri-close-line icon-6\"></i>\n                    </Button>\n                </div>\n                {!isCollection ? <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Collections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                collections && collections.length > 0 ? collections.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between mb-xxl-3 mb-3\">\n                                        <label className=\"form-check flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.collection ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.collection).includes(String(item.id))} onClick={this.onClickToCollection(item.id, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{item.name}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <div className=\"symbol symbol-18 d-flex align-items-center justify-content-center flex-shrink-0 bg-light me-1\" style={{ borderRadius: 2 }}>\n                                                        {item.thumbnails ?\n                                                            <img className=\"object-center-cover\" src={item.thumbnails} height={20} width={20} alt={item.name} style={{ borderRadius: 2 }} onError={this.onErrorImageUpdate} />\n                                                            : <i className=\"ri-folder-open-line me-0\"></i>}\n                                                    </div>\n                                                    <span className=\"text-ellipsis\">{item.name}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.assets}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion> : null}\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Connections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                feedData && Object.keys(feedData).length > 0 && feedData.feeds.length > 0 ? feedData.feeds.map((item) => {\n                                    return item.name ? <div key={item.feedId} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.socialFeed ? <input className=\"form-check-input\" type=\"checkbox\" name={item.feedId} checked={Object.keys(filterBody.socialFeed).includes(String(item.feedId))} onClick={this.onClickToFeed(item.feedId, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{ReactHtmlParser(item.name)}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.networkId)} icon-data={GET_NETWORK_NAME(item.networkId)} />\n                                                    <span className=\"text-ellipsis\">{ReactHtmlParser(item.name)}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.count}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Networks</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                networkList && networkList.length > 0 ? networkList.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                            {filterBody.networks ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.networks).includes(String(item.id))} onClick={this.onClickToNetwork(item.id, item.name)} /> : null}\n                                            <span className=\"form-check-label d-flex fw-medium me-2\">\n                                                <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.id)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.id)} icon-data={GET_NETWORK_NAME(item.id)} />\n                                                {item.name}</span>\n                                        </label>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Tags</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 pt-1 pb-3\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <Select className='selectpicker selectpicker-sm w-100'\n                                    classNamePrefix=\"selectpicker\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}\n                                    options={listTags}\n                                />\n                            </div>\n                            {filterBody.postTags && Object.keys(filterBody.postTags).length > 0 ? <div className=\"d-flex w-100 flex-wrap w-100 pt-2 \">\n                                {\n                                    Object.keys(filterBody.postTags).map((tagItem, tagIndex) => <div key={tagItem} className=\"badge bg-secondary rounded-pill text-gray-800 border me-1 mb-1 px-2 d-flex align-items-center\" style={{ top: 0, maxWidth: '100%' }}>\n                                        <span className=\"text-break\" style={{ whiteSpace: 'normal' }}>{tagItem}</span>\n                                        <button className=\"btn btn-sm p-0 ms-1\" onClick={event => this.props.tagsFilter(tagItem)}>\n                                            <i className=\"ri-close-line icon-7\"></i>\n                                        </button>\n                                    </div>)\n                                }\n                            </div> : null}\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Post Type</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"image_type\" onClick={this.onClickToPostType(\"2,4\")} checked={Object.keys(filterBody.postType).includes(\"2,4\")} />\n                                    <span className=\"form-check-label fw-medium\">Image Only</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"video_type\" onClick={this.onClickToPostType(\"3,5\")} checked={Object.keys(filterBody.postType).includes(\"3,5\") ? true : false} />\n                                    <span className=\"form-check-label fw-medium\">Video Only</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Assets Type</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"visible_assets\" onClick={this.onClickToAssetType(\"1\")} checked={Object.keys(filterBody.status).includes(\"1\")} />\n                                    <span className=\"form-check-label fw-medium\"><i class=\"icon-6 me-1 ri-eye-line\"></i>Visible</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"hidden_assets\" onClick={this.onClickToAssetType(\"2\")} checked={Object.keys(filterBody.status).includes(\"2\")} />\n                                    <span className=\"form-check-label fw-medium\"><i class=\"icon-6 me-1 ri-eye-off-line\"></i>Hidden</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom d-none\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Other</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {/* <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label\">Highlight Post</span>\n                                </label>\n                            </div> */}\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Pinned to top</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Recent</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Retweets</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">UGC Rights</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"1\")} onClick={this.onClickToUgc(\"1\")} />\n                                    <span className=\"form-check-label fw-medium\">Pending Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"2\")} onClick={this.onClickToUgc(\"2\")} />\n                                    <span className=\"form-check-label fw-medium\">Approved Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"3\")} onClick={this.onClickToUgc(\"3\")} />\n                                    <span className=\"form-check-label fw-medium\">Rejected Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"4\")} onClick={this.onClickToUgc(\"4\")} />\n                                    <span className=\"form-check-label fw-medium\">Expired Post</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <div className=\"d-flex justify-content-center text-align-center flex-column w-100 px-4 pb-4\">\n                    {/* <button type=\"button\" className=\"btn btn-primary w-100 mb-1 d-none\">Filter</button> */}\n                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={this.onClickToResetFilter}>Reset results</button>\n                </div>\n            </Offcanvas.Body>\n        </Offcanvas>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        feedData: state.feedData,\n        filterBody: state.assets.filterBody,\n        networks: state.networks.networkData,\n        tagList: state.tags.tagList\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        feedsFilter: (refId, name) => dispatch(feedsFilter(refId, name)),\n        tagsFilter: (refId) => dispatch(tagsFilter(refId)),\n        ugcStatusFilter: (refId) => dispatch(ugcStatusFilter(refId)),\n        textFilter: (refId) => dispatch(textFilter(refId)),\n        postTypeFilter: (refId) => dispatch(postTypeFilter(refId)),\n        resetFilter: () => dispatch(resetFilter()),\n        collectionsFilter: (refId, name) => dispatch(collectionsFilter(refId, name)),\n        networkFilter: (refId, name) => dispatch(networkFilter(refId, name)),\n        postStatusFilter: (status) => dispatch(postStatusFilter(status))\n\n\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterAside);"],"names":["FilterAside","props","state","isActiveAside","feedData","listTags","tagString","selectedOption","networkList","onLoadFeedList","filterList","setState","prevState","onErrorImageUpdate","event","target","src","baseUrl","feedNetworkList","feeds","networks","networkConnectionId","map","item","networkId","Set","includes","splice","indexOf","networksList","filter","network","id","toogleFilter","setTimeout","offcanvas","document","querySelector","classList","add","onClickToFeed","feedId","name","feedsFilter","onClickToUgc","status","ugcStatusFilter","onClickToPostType","type","postTypeFilter","onClickToAssetType","postStatusFilter","onClickToResetFilter","resetFilter","onClickToCollection","collectionsFilter","onClickToNetwork","networkFilter","handleChange","Object","keys","length","tagsFilter","value","tagList","this","push","label","filterAside","getElementById","addEventListener","nextProps","filterBody","collections","isCollection","show","placement","onHide","className","variant","onClick","flush","defaultactivekey","collection","checked","String","overlay","style","borderRadius","thumbnails","height","width","alt","onError","assets","socialFeed","ReactHtmlParser","GET_NETWORK_ICON","GET_NETWORK_NAME","count","classNamePrefix","onChange","options","postTags","tagItem","tagIndex","top","maxWidth","whiteSpace","postType","class","ugcStatus","Component","connect","networkData","tags","dispatch","refId","textFilter"],"sourceRoot":""}