{"version":3,"file":"static/js/4205.1a35997b.chunk.js","mappings":"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","sources":["Layouts/Main/WebEmbed/Components/EmbedList/index.js","Layouts/Main/WebEmbed/Components/WebEmbedAside.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditWebEmbed from '../../EditWebEmbed'\nimport { getAssetsCount } from '../../../../../Services/Actions/assetsActions'\n\nclass EmbedList extends Component {\n    state = {\n        active: null\n    }\n    onClickToEdit = (item) => event => {\n        var self = this\n        getAssetsCount(item.id).then((response) => {\n            const { publishCode, assestCount } = response.data\n            self.props.onUpdateReponseData({ assestCount: assestCount, publishCode: publishCode })\n        }).catch((ex) => {\n            self.props.onUpdateReponseData({ assestCount: 0, publishCode: item })\n        })\n\n\n    }\n\n    render() {\n        const { state, history } = this.props\n        const { active } = this.state\n        return <Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\n                return <Accordion.Item eventKey={pIndex}>\n                    <div className=\"menu-item\" key={pIndex}>\n                        <Accordion.Header className=\"w-100 disable_arrow\">\n                            <div className=\"d-flex justify-content-between align-items-center w-100\" onClick={this.onClickToEdit(item)}>\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\n                                <div className=\"d-flex align-items-center justify-content-end\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2\">\n                                            <i className=\"ri-edit-box-line me-0 icon-7\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px\"\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id })}>\n                                            <i className=\"ri-delete-bin-6-line me-0 icon-7\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Accordion.Header>\n                    </div>\n                    <Accordion.Body className=\"p-0 pt-3\">\n                        <EditWebEmbed history={history} item={item} {...this.props} />\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            })\n            }\n        </Accordion>\n    }\n\n}\nexport default EmbedList\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport SVG from 'react-inlinesvg'\n//import Select from 'react-select';\nimport { Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport Filters from './Filters';\nimport Templates from './Template';\nimport EmbedList from './EmbedList'\n\n\nconst selectedPlatform = (platform) => {\n    switch (platform) {\n        case 'p-html':\n            return 'HTML'\n        case 'p-wordpress':\n            return 'Wordpress'\n        case 'p-wix':\n            return 'Wix'\n        case 'p-squarespace':\n            return 'Squarespace'\n        case 'p-shopify':\n            return 'Shopify'\n        case 'p-other':\n            return 'Other'\n        default:\n            return `HTML`\n    }\n}\n\nclass WebEmbedAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: [],\n    };\n    componentDidMount() {\n        // this.onLoadPublish()\n    }\n    // onLoadPublish = () => {\n    //     var self = this\n    //     getPublishList().then((loadReponse) => {\n    //         self.setState({ publishList: loadReponse.data })\n    //     })\n    // }\n    componentDidMount() {\n        const clickResetFilter = document.querySelector(\"#web_tab_panel-tab-aside-assets_filter\")\n        if (clickResetFilter) {\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\n        }\n    }\n    handleSelect(date) {\n\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList, themeSkin } = this.props\n        return <div className=\"card-body\">\n            <div className=\"\">\n                <div className=\"d-flex align-items-start justify-content-between\">\n                    <h6 className=\"fs-7 fw-bolder mb-0\">Add Filter</h6>\n                    {/* <button type=\"button\" className=\"btn btn-primary btn-sm py-1\" onClick={event => history(\"/web-embed/\")}>New</button> */}\n                </div>\n                <Tab.Container id={`${isPublishEdit ? `edit_web_tab_panel` : `web_tab_panel`}`} defaultActiveKey=\"aside-assets_filter\">\n                    <Nav variant=\"underline\" className=\"border-bottom mb-3\">\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\">Assets Filter</Nav.Link>\n                        </Nav.Item>\n                        {!isPublishEdit ? <Nav.Item className=\"\">\n                            <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\n                        </Nav.Item> : null}\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"aside-assets_filter\">\n                            <label className=\"text-gray-800 mb-2\">Widget Name <strong className=\"text-danger\">*</strong></label>\n                            <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n                            <div className=\"publish_aside_inner\">\n                                {\n                                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                                }\n                                <Accordion defaultActiveKey={\"0\"}>\n                                    <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n                                        <Accordion.Header className=\"add_fillter_btn\">\n                                            <i className=\"ri-add-line plus_symbol me-1\"></i>\n                                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n                                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\n                                        </Accordion.Header>\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\n                                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network Manager</p>\n                                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <i className=\"ri-image-line icon-6 text-gray-800\"></i>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\n                                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\n                                                </div>\n                                            </div>\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                    <Templates {...this.props} key={templeteList.length} />\n                                    <label className=\"text-gray-800 mb-2\">Select Platform</label>\n                                    <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                                        <Accordion.Header className=\"w-100\">\n                                            <span className=\"fs-9 fw-medium\">{selectedPlatform(genratedCodeModal)}</span>\n                                        </Accordion.Header>\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                                            <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"platform\" defaultValue={'p-html'}>\n                                                <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-html\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-html\" value={'p-html'} onClick={e => this.props.genratedCodeCallback(\"p-html\")}>\n                                                    < div className=\"card-body p-2\" >\n                                                        <div className=\"block-center text-center h-46px w-100\">\n                                                            <img className=\"img-fluid\" src={baseUrl(`media/images/platform/html${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"html\" height={23} width={90} />\n                                                        </div>\n                                                    </div>\n                                                </ToggleButton>\n                                                <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-wordpress\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-wordpress\" value={'p-wordpress'} onClick={e => this.props.genratedCodeCallback(\"p-wordpress\")}>\n                                                    <div className=\"card-body p-2\">\n                                                        <div className=\"block-center text-center h-46px w-100\">\n                                                            <img className=\"img-fluid\" src={baseUrl(`media/images/platform/wordpress${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wordpress\" height={39} width={80} />\n                                                        </div>\n                                                    </div>\n                                                </ToggleButton>\n                                                <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-wix\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-wix\" value={'p-wix'} onClick={e => this.props.genratedCodeCallback(\"p-wix\")}>\n                                                    <div className=\"card-body p-2\">\n                                                        <div className=\"block-center text-center h-46px w-100\">\n                                                            <img className=\"img-fluid\" src={baseUrl(`media/images/platform/wix${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wix\" height={23} width={60} />\n                                                        </div>\n                                                    </div>\n                                                </ToggleButton>\n                                                <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${state.genratedCodeModal == \"p-squarespace\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-squarespace\" value={'p-squarespace'} onClick={e => this.props.genratedCodeCallback(\"p-squarespace\")}>\n                                                    <div className=\"card-body p-2\">\n                                                        <div className=\"block-center text-center h-46px w-100\">\n                                                            <img className=\"img-fluid\" src={baseUrl(`media/images/platform/squarespace${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wix\" height={45} width={80} />\n                                                        </div>\n                                                    </div>\n                                                </ToggleButton>\n                                                <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-shopify\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-shopify\" value={'p-shopify'} onClick={e => this.props.genratedCodeCallback(\"p-shopify\")}>\n                                                    <div className=\"card-body p-2\">\n                                                        <div className=\"block-center text-center h-46px w-100\">\n                                                            <img className=\"img-fluid\" src={baseUrl(`media/images/platform/shopify${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wix\" height={25} width={90} />\n                                                        </div>\n                                                    </div>\n                                                </ToggleButton>\n                                                <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-other\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-other\" value={'p-other'} onClick={e => this.props.genratedCodeCallback(\"p-other\")}>\n                                                    <div className=\"card-body p-2\">\n                                                        <div className=\"block-center text-center h-46px w-100\">\n                                                            <img className=\"img-fluid\" src={baseUrl(`media/images/platform/other${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"other\" height={31} width={70} />\n                                                        </div>\n                                                    </div>\n                                                </ToggleButton>\n                                            </ToggleButtonGroup>\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                </Accordion>\n                            </div>\n                            <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                <button type=\"button\" className={`btn btn-primary btn-sm ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Changes</button>\n                            </div>\n                            <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\n                            </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"filter-assets_published\">\n                            <EmbedList {...this.props} />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div >\n        </div >\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList,\n        themeSkin: state.themeSkin.themeSkin\n    }\n}\nexport default connect(mapStateToProps)(WebEmbedAside);"],"names":["EmbedList","state","active","onClickToEdit","item","event","self","getAssetsCount","id","then","response","data","publishCode","assestCount","props","onUpdateReponseData","catch","ex","this","history","Accordion","defaultActiveKey","className","collectionList","length","publishList","map","pIndex","eventKey","onClick","name","OverlayTrigger","placement","overlay","Tooltip","type","onClickToDelete","EditWebEmbed","Component","selectedPlatform","platform","WebEmbedAside","showModal","embedCodeCallback","genratedCodeCallback","clickResetFilter","document","querySelector","addEventListener","date","filterApply","genratedCodeModal","onResetFilter","onChangeName","activeFilter","isPublishEdit","templeteList","themeSkin","Tab","Nav","variant","placeholder","value","publishCodeName","onChange","chooseFilter","Object","keys","filterKey","indexFilter","Filters","isLast","includes","src","baseUrl","height","width","Template","key","ToggleButtonGroup","defaultValue","ToggleButton","e","alt","isUpdating","onRequestPublish","connect","templates"],"sourceRoot":""}