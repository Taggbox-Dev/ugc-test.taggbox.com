{"version":3,"file":"static/js/2593.19a431c5.chunk.js","mappings":"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","sources":["Layouts/Main/DisplayScreen/Components/Template/index.js","Layouts/Main/DisplayScreen/Components/Platforms/index.js","Layouts/Main/DisplayScreen/Components/DisplayScreenAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\n\nconst removeDuplicate = (data) => {\n    try {\n        var updateFilter = []\n        var updateKey = {}\n        data.map((item) => {\n            if (!updateKey[item.id]) {\n                updateFilter.push(item)\n                updateKey[item.id] = true\n            }\n\n        })\n        return updateFilter\n    }\n    catch (ex) {\n        return data\n    }\n}\n\nclass Templates extends Component {\n    state = {\n        templeteList: [],\n        isUpdate: false,\n        selectTemp:null\n    }\n    componentWillMount() {setTimeout(() => {this.onLoad()}, 100);}\n    onLoad = () => {\n        var self = this\n        const { templeteList, state } = this.props\n        if(templeteList && templeteList.length >0){\n            const filterTemplate = templeteList.filter(temp=> temp.Theme.type == 2)\n            self.setState({ templeteList: removeDuplicate(filterTemplate), selectTemp: state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 ? state.selectedTemplate : filterTemplate[0] })\n        }\n    }\n    onFiltertemplateName = (id) => {\n        const { templeteList } = this.state;\n\n        if (templeteList && templeteList.length > 0) {\n            const updated = templeteList.filter((item) => item.id == id)\n            if (updated && updated.length > 0) {\n                return updated[0].name\n            }\n            else return \"\"\n        }\n        else return \"\"\n\n    }\n\n\n    render() {\n        const { templeteList, selectTemp } = this.state;\n        const { onSelectTemplate, state } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Template <strong className=\"text-danger\">*</strong></label>\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-9 fw-medium\">{selectTemp ? selectTemp.name ? selectTemp.name : this.onFiltertemplateName(selectTemp.id) : `Please select template.`}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {templeteList && templeteList.length > 0 ?\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\" defaultValue={0}>\n                            {templeteList.map((temp, index) => {\n                                return <><ToggleButton key={`template_id_${index}`} className={`mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={()=>{this.setState({selectTemp:temp},()=>{onSelectTemplate(temp)})}}>\n                                        <div className=\"d-flex align-items-center\">\n                                            <div className=\"symbol symbol-44 flex-shrink-0 me-2\">\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height={50} width={50} alt={temp.name} />\n                                            </div>\n                                            <div className=\"overflow-hidden text-start\">\n                                                <p className={`fs-8 fw-semibold mb-1 text-ellipsis text-gray-dark`}>{temp.name}</p>\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\n                                            </div>\n                                        </div>\n                                </ToggleButton></>\n                            })}\n                        </ToggleButtonGroup>\n                        : null}\n                    <div className=\"text-center\">\n                        <Link to={'/template/add'} className=\"btn btn-link text-decoration-none btn-sm p-0\">\n                            <i className=\"ri-add-line\"></i>\n                            Create New Template\n                        </Link>\n                    </div>\n                </Accordion.Body>\n            </Accordion.Item>\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\n\nconst platformName = (platform) => {\n    switch (platform) {\n        case 'p-cast':\n            return 'Cast'\n        case 'p-chromecast':\n            return 'Chromecast'\n        case 'p-firetvstick':\n            return 'Fire Tv Stick'\n        case 'p-androidtv':\n            return 'Android Tv'\n        case 'p-Aptoide':\n            return 'Aptoide'\n        case 'p-wired':\n            return 'Wired'\n\n        case 'p-screen-cloud':\n            return 'Screen Cloud';\n        case 'p-yodeck':\n            return 'Yodeck';\n        case 'p-onsign':\n            return 'Onsign';\n        case 'p-rise-vision':\n            return 'Rise Vision';\n        case 'p-optisign':\n            return 'Optisign';\n        case 'p-raydiant':\n            return 'Raydiant'\n        case 'p-enplug':\n            return 'Enplug';\n        case 'p-novi-sign':\n            return 'Novi Sign';\n        case 'dp-other':\n            return 'Other';\n\n\n        case 'p-6connex':\n            return '6Connex';\n        case 'p-zuddl':\n            return 'Zuddl';\n        case 'p-gevme':\n            return 'Gevme';\n        case 'p-vfairs':\n            return 'Vfairs';\n        case 'p-workcast':\n            return 'Workcast';\n        case 'p-pathable':\n            return 'Pathable';\n\n        case 'p-hubilo':\n            return 'Hubilo';\n        case 'ev-other':\n            return 'Other';\n        default:\n            return \"\";\n    }\n}\n\nclass Platforms extends Component {\n\n    render() {\n        const { onSelectedPlatform, state, themeSkin } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Display Platform</label>\n            <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100 d-flex align-items-center\">\n                    <p className=\"fs-9 fw-medium mb-0\">{`${state.selectedPlatform == 's-projector' ? `Projector / TV` : state.selectedPlatform == 's-signage' ? `Digital Signage` : state.selectedPlatform == 's-event' ? `Virtual / Hybrid Events` : `Select Display Platform`}`}</p>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"selectPlatfrom\" value={state.selectedPlatform} defaultValue={'s-projector'}>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_projector\" value=\"s-projector\" onClick={onSelectedPlatform('s-projector')}>\n                            <i className=\"ri-tv-2-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Projector / TV</p>\n                        </ToggleButton>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_signage\" value=\"s-signage\" onClick={onSelectedPlatform('s-signage')}>\n                            <i className=\"ri-tablet-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Digital Signage</p>\n                        </ToggleButton>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_event\" value=\"s-event\" onClick={onSelectedPlatform('s-event')}>\n                            <i className=\"ri-picture-in-picture-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Virtual / Hybrid Events</p>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item>\n            {state.selectedPlatform == 's-projector' ? <Accordion.Item eventKey=\"10\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 btn-group-outline\" name=\"display-platform\" defaultValue={'p-cast'}>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-cast\" value={'p-cast'} onClick={e => this.props.embedCodeCallback('p-cast')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/cast${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"cast\" height={26} width={80} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-chromecast\" value={'p-chromecast'} onClick={e => this.props.embedCodeCallback('p-chromecast')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/chromecast${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"chromecast\" height={44} width={100} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-firetvstick\" value={'p-firetvstick'} onClick={e => this.props.embedCodeCallback('p-firetvstick')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/firetvstick${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"firetvstick\" height={30} width={80} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-androidtv\" value={'p-androidtv'} onClick={e => this.props.embedCodeCallback('p-androidtv')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/androidtv${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"androidtv\" height={45} width={85} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-Aptoide\" value={'p-Aptoide'} onClick={e => this.props.embedCodeCallback('p-Aptoide')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/Aptoide-tv${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"Aptoide\" height={32} width={110} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-wired\" value={'p-wired'} onClick={e => this.props.embedCodeCallback('p-wired')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/wired${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wired\" height={30} width={86} />\n                            </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item> :\n                state.selectedPlatform == 's-signage' ? <Accordion.Item eventKey=\"11\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-screen-cloud'}>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-screen-cloud\" value={'p-screen-cloud'} onClick={e => this.props.embedCodeCallback('p-screen-cloud')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/screen-cloud${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"screen-cloud\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-yodeck\" value={'p-yodeck'} onClick={e => this.props.embedCodeCallback('p-yodeck')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/yodeck${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"yodeck\" height={44} width={100} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-onsign\" value={'p-onsign'} onClick={e => this.props.embedCodeCallback('p-onsign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/onsign-tv${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"onsign\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-rise-vision\" value={'p-rise-vision'} onClick={e => this.props.embedCodeCallback('p-rise-vision')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/rise-vision${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"rise-vision\" height={40} width={75} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-optisign\" value={'p-optisign'} onClick={e => this.props.embedCodeCallback('p-optisign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/optisign${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"optisign\" height={32} width={110} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-raydiant\" value={'p-raydiant'} onClick={e => this.props.embedCodeCallback('p-raydiant')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/raydiant${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"raydiant\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-enplug\" value={'p-enplug'} onClick={e => this.props.embedCodeCallback('p-enplug')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/enplug${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"enplug\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-novi-sign\" value={'p-novi-sign'} onClick={e => this.props.embedCodeCallback('p-novi-sign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/novi-sign${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"novi-sign\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"dp-other\" value={'dp-other'} onClick={e => this.props.embedCodeCallback('p-other')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"other\" height={26} width={70} />\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : state.selectedPlatform == 's-event' ? <Accordion.Item eventKey=\"12\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-6connex'}>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-6connex\" value={'p-6connex'} onClick={e => this.props.embedCodeCallback('p-6connex')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/6connex${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"6connex\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-zuddl\" value={'p-zuddl'} onClick={e => this.props.embedCodeCallback('p-zuddl')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/zuddl${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"zuddl\" height={44} width={100} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-gevme\" value={'p-gevme'} onClick={e => this.props.embedCodeCallback('p-gevme')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/gevme${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"gevme\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-vfairs\" value={'p-vfairs'} onClick={e => this.props.embedCodeCallback('p-vfairs')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/vfairs${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"vfairs\" height={40} width={75} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-workcast\" value={'p-workcast'} onClick={e => this.props.embedCodeCallback('p-workcast')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/workcast${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"workcast\" height={32} width={110} />\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-pathable\" value={'p-pathable'} onClick={e => this.props.embedCodeCallback('p-pathable')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/pathable${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"pathable\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-hubilo\" value={'p-hubilo'} onClick={e => this.props.embedCodeCallback('p-hubilo')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/hubilo${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"hubilo\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"ev-other\" value={'ev-other'} onClick={e => this.props.embedCodeCallback('ev-other')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"other\" height={26} width={70} />\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : null}\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        themeSkin: state.themeSkin.themeSkin\n    }\n}\nexport default connect(mapStateToProps)(Platforms);","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from \"react-redux\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n//import Select from 'react-select';\nimport SVG from 'react-inlinesvg'\nimport { Button, Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport { EmbedURL } from '../../../../Services/Api'\nimport Filters from '../../WebEmbed/Components/Filters';\nimport Templates from './Template';\nimport Platforms from './Platforms';\nimport EmbedList from './EmbedList'\n\nclass DisplayScreenAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: []\n    };\n    componentDidMount() {\n        const clickResetFilter = document.querySelector(\"#billing_tab_panel-tab-aside-assets_filter\")\n        if (clickResetFilter) {\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\n        }\n    }\n\n    handleSelect(date) {\n\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList, isHide, onSelectActive } = this.props\n        return <>\n\n            <label className=\"text-gray-800 mb-1 fw-medium\" htmlFor='filterLabel'>Display Name <strong className=\"text-danger\">*</strong></label>\n            <input type=\"text\" className=\"form-control form-control-sm mb-3\" id=\"filterLabel\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n            <div className='filter_wrapper' data-button={isHide ? \"0\" : \"1\"}>\n                <Accordion defaultActiveKey={1} activeKey={state.activeKey} onSelect={onSelectActive(1) ? onSelectActive(1) : null}>\n                    <Accordion.Item eventKey={1} className=\"pb-3\">\n                        <Accordion.Header className=\"add_fillter_btn\">\n                            <i className=\"ri-add-line plus_symbol me-1\"></i>\n                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\n                        </Accordion.Header>\n                        <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-folder-4-line icon-7 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Collection</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Network</p>\n                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Connections</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-image-line icon-7 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Assets Type</p>\n                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-price-tag-3-line icon-7 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Tag</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>UGC Rights</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\n                                </div>\n                            </div>\n\n\n                        </Accordion.Body>\n                    </Accordion.Item>\n\n                </Accordion>\n\n                {\n                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                }\n                <Accordion defaultActiveKey={''}>\n                    <Templates {...this.props} key={templeteList.length > 0} />\n                    <Platforms {...this.props} embedCodeCallback={this.embedCodeCallback} />\n                </Accordion>\n            </div>\n\n            <div className='filter_actions_'>\n                <Button variant='primary' className={`w-100  ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Display</Button>\n                {!isHide ? <Button variant='link' className='w-100 text-decoration-none fw-medium' onClick={onResetFilter}>Back</Button> : null}\n            </div>\n\n        </>\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n\n    }\n}\nexport default connect(mapStateToProps)(DisplayScreenAside);\n\n{\n    // <div className=\"card-body\">\n    //     <PerfectScrollbar>\n    //         <div className=\"innerAsideWrapper\">\n    //             <div className=\"d-flex align-items-start justify-content-between\">\n    //                 <h6 className=\"fs-7 fw-bolder mb-0\">{`${isPublishEdit ? `Edit` : `Add`} Filter`}</h6>\n\n    //             </div>\n    //             <Tab.Container id={`${isPublishEdit ? `edit_billing_tab_panel` : `billing_tab_panel`}`} defaultActiveKey=\"aside-assets_filter\">\n    //                 <Nav variant=\"underline\" className=\"border-bottom mb-3\">\n    //                     <Nav.Item className=\"\">\n    //                         <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\" onClick={isPublishEdit ? event => this.props.onUpdateReponseData(null) : null}>Assets Filter</Nav.Link>\n    //                     </Nav.Item>\n    //                     {!isPublishEdit ? <Nav.Item className=\"\">\n    //                         <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\n    //                     </Nav.Item> : null}\n    //                 </Nav>\n    //                 <Tab.Content>\n    //                     <Tab.Pane eventKey=\"aside-assets_filter\">\n    //                         <label className=\"text-gray-800 mb-2\">Display Name <strong className=\"text-danger\">*</strong></label>\n    //                         <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n    //                         <div className=\"publish_aside_inner\">\n    //                             {\n    //                                 state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n    //                             }\n    //                             <Accordion defaultActiveKey={\"0\"}>\n    //                                 <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n    //                                     <Accordion.Header className=\"add_fillter_btn text-gray-800\">\n    //                                         <i className=\"ri-add-line plus_symbol me-1\"></i>\n    //                                         <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n    //                                         <span className=\"fs-9 fw-medium\">Choose Filter</span>\n    //                                     </Accordion.Header>\n    //                                     <Accordion.Body className=\"border rounded-1 mt-1\">\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\n    //                                                 <div className=\"symbol-label\">\n    //                                                     <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\n    //                                                 </div>\n    //                                             </div>\n    //                                             <div className=\"\">\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the preferred collection</span>\n    //                                             </div>\n    //                                         </div>\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none  disabled` : ``}`} onClick={filterApply(\"source\")}>\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\n    //                                                 <div className=\"symbol-label\">\n    //                                                     <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n    //                                                         <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n    //                                                     </span>\n    //                                                 </div>\n    //                                             </div>\n    //                                             <div className=\"\">\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\n    //                                                 <span className=\"fs-9 text-gray-500\">Choose the required network</span>\n    //                                             </div>\n    //                                         </div>\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\n    //                                                 <div className=\"symbol-label\">\n    //                                                     <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n    //                                                         <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n    //                                                     </span>\n    //                                                 </div>\n    //                                             </div>\n    //                                             <div className=\"\">\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the connection type</span>\n    //                                             </div>\n    //                                         </div>\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\n    //                                                 <div className=\"symbol-label\">\n    //                                                     <i className=\"ri-image-line icon-6 text-gray-800\"></i>\n    //                                                 </div>\n    //                                             </div>\n    //                                             <div className=\"\">\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\n    //                                                 <span className=\"fs-9 text-gray-500\">Choose the type of asset</span>\n    //                                             </div>\n    //                                         </div>\n    //                                         <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\n    //                                                 <div className=\"symbol-label\">\n    //                                                     <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\n    //                                                 </div>\n    //                                             </div>\n    //                                             <div className=\"\">\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the preferred tag</span>\n    //                                             </div>\n    //                                         </div>\n    //                                         <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n    //                                             <div className=\"symbol symbol-30 bg-light me-2\">\n    //                                                 <div className=\"symbol-label\">\n    //                                                     <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n    //                                                         <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={18} width={18} />\n    //                                                     </span>\n    //                                                 </div>\n    //                                             </div>\n    //                                             <div className=\"\">\n    //                                                 <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\n    //                                                 <span className=\"fs-9 text-gray-500\">Select the preferred ugc rights status</span>\n    //                                             </div>\n    //                                         </div>\n    //                                     </Accordion.Body>\n    //                                 </Accordion.Item>\n    //                                 <Templates {...this.props} key={templeteList.length > 0} />\n    //                                 <Platforms {...this.props} embedCodeCallback={this.embedCodeCallback} />\n    //                             </Accordion>\n    //                         </div>\n    //                         <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n    //                             <button type=\"button\" className={`btn btn-primary btn-sm ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Changes</button>\n    //                         </div>\n    //                         <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n    //                             <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\n    //                         </div>\n\n    //                     </Tab.Pane>\n    //                     {!isPublishEdit ? <Tab.Pane eventKey=\"filter-assets_published\">\n    //                         <EmbedList {...this.props} />\n    //                     </Tab.Pane> : null}\n    //                 </Tab.Content>\n    //             </Tab.Container>\n    //         </div>\n    //     </PerfectScrollbar>\n    // </div>\n}"],"names":["removeDuplicate","data","updateFilter","updateKey","map","item","id","push","ex","Templates","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","templeteList","isUpdate","selectTemp","onLoad","self","_assertThisInitialized","_this$props","props","filterTemplate","filter","temp","Theme","type","setState","selectedTemplate","Object","keys","onFiltertemplateName","updated","name","_createClass","key","value","_this2","setTimeout","_this3","_this$state","this","_this$props2","onSelectTemplate","_jsxs","_Fragment","children","className","_jsx","Accordion","eventKey","ToggleButtonGroup","defaultValue","index","ToggleButton","variant","onClick","src","baseUrl","height","width","alt","Link","to","Component","connect","templates","dispatch","getTemplateListDispatch","platformName","platform","Platforms","onSelectedPlatform","themeSkin","selectedPlatform","showGenratedCode","e","embedCodeCallback","DisplayScreenAside","showModal","publishList","event","genratedCodeCallback","clickResetFilter","document","querySelector","addEventListener","onUpdateReponseData","date","filterApply","onResetFilter","genratedCodeModal","onClickToDelete","onChangeName","activeFilter","history","isPublishEdit","isHide","onSelectActive","htmlFor","placeholder","publishCodeName","onChange","defaultActiveKey","activeKey","onSelect","chooseFilter","includes","SVG","filterKey","indexFilter","Filters","_objectSpread","isLast","_createElement","Button","isUpdating","onRequestPublish"],"sourceRoot":""}