{"version":3,"file":"static/js/8174.14ea56ac.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/Components/FilterAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport Select from 'react-select';\nimport { Accordion, Offcanvas, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { feedsFilter, tagsFilter, ugcStatusFilter, textFilter, postTypeFilter, resetFilter, collectionsFilter, networkFilter } from '../../../../Services/Actions/assetsActions'\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\n\n\nclass FilterAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        isActiveAside: false,\n        feedData: [],\n        listTags: [],\n        tagString: [],\n        selectedOption: null\n    };\n    onLoadFeedList = () => {\n        const { filterList } = this.props.feedData;\n        this.setState((prevState) => ({ ...prevState, feedData: filterList }));\n    }\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n    }\n    componentDidMount() {\n        var filterAside = document.getElementById(\"filter_aside\");\n        if (filterAside) {\n            filterAside.addEventListener(\"click\", this.toogleFilter);\n        }\n        this.onLoadFeedList()\n    }\n    toogleFilter = () => {\n        this.setState({\n            isActiveAside: !this.state.isActiveAside,\n        })\n        setTimeout(() => {\n            var offcanvas = document.querySelector(\".offcanvas-backdrop\");\n            if (offcanvas) {\n                offcanvas.classList.add('filter-backdrop');\n            }\n        }, 100);\n    };\n    onClickToFeed = (feedId, name) => event => this.props.feedsFilter(feedId, name)\n    onClickToUgc = (status) => event => this.props.ugcStatusFilter(status)\n    onClickToPostType = (type) => event => this.props.postTypeFilter(type)\n    onClickToResetFilter = event => this.props.resetFilter()\n    onClickToCollection = (id, name) => event => this.props.collectionsFilter(id, name)\n    onClickToNetwork = (id, name) => event => this.props.networkFilter(id, name)\n    handleChange = (selectedOption) => {\n        if (selectedOption && Object.keys(selectedOption).length > 0) this.props.tagsFilter(selectedOption.value)\n    }\n    componentWillReceiveProps(nextProps) {\n        const { filterList } = nextProps.feedData;\n        if (filterList != this.state.feedData) this.setState((prevState) => ({ ...prevState, feedData: filterList }));\n    }\n\n    render() {\n        const { isActiveAside, feedData, listTags } = this.state\n        const { filterBody, collections, networks, isCollection } = this.props\n\n        return <Offcanvas show={isActiveAside} placement={'end'} name={'end'} onHide={this.toogleFilter} className=\"filter_aside\">\n            <Offcanvas.Body>\n                <div className=\"d-flex align-items-center justify-content-between px-3 px-xxl-4 py-3 border-bottom\">\n                    <div className=\"fs-5 fw-medium\">Add Filter</div>\n                    <button type=\"button\" className=\"btn btn-icon btn-active-light btn-active-color-primary p-0 w-30px h-30px border-0\" onClick={this.toogleFilter}>\n                        <span className=\"svg-icon me-0\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                            </svg>\n                        </span>\n                    </button>\n                </div>\n                {!isCollection ? <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Collections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                collections && collections.length > 0 ? collections.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between mb-xxl-3 mb-3\">\n                                        <label className=\"form-check flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.collection ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.collection).includes(String(item.id))} onClick={this.onClickToCollection(item.id, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{item.name}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <div className=\"symbol symbol-18 d-flex align-items-center justify-content-center flex-shrink-0 bg-light me-1\" style={{ borderRadius: 2 }}>\n                                                        {item.thumbnails ?\n                                                            <img className=\"object-center-cover\" src={item.thumbnails} height={20} width={20} alt={item.name} style={{ borderRadius: 2 }} />\n                                                            : <i className=\"ri-folder-open-line\"></i>}\n                                                    </div>\n                                                    <span className=\"text-ellipsis\">{item.name}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.assets}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion> : null}\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Connections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                feedData && Object.keys(feedData).length > 0 && feedData.feeds.length > 0 ? feedData.feeds.map((item) => {\n                                    return item.name ? <div key={item.feedId} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.socialFeed ? <input className=\"form-check-input\" type=\"checkbox\" name={item.feedId} checked={Object.keys(filterBody.socialFeed).includes(String(item.feedId))} onClick={this.onClickToFeed(item.feedId, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{ReactHtmlParser(item.name)}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.networkId)} />\n                                                    <span className=\"text-ellipsis\">{ReactHtmlParser(item.name)}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.count}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Networks</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                networks && networks.length > 0 ? networks.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                            {filterBody.networks ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.networks).includes(String(item.id))} onClick={this.onClickToNetwork(item.id, item.name)} /> : null}\n                                            <span className=\"form-check-label d-flex fw-medium me-2\">\n                                                <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.id)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.networkId)} />\n                                                {item.name}</span>\n                                        </label>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Tags</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 pt-1 pb-3\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <Select className='selectpicker w-100'\n                                    classNamePrefix=\"selectpicker\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}\n                                    options={listTags}\n                                />\n                            </div>\n                            {filterBody.postTags && Object.keys(filterBody.postTags).length > 0 ? <div className=\"d-flex w-100 flex-wrap w-100 pt-2 \">\n                                {\n                                    Object.keys(filterBody.postTags).map((tagItem, tagIndex) => <div key={tagItem} className=\"badge bg-secondary rounded-pill text-gray-800 border me-1 mb-1 px-2 d-flex align-items-center\" style={{ top: 0, maxWidth: '100%' }}>\n                                        <span className=\"text-break\" style={{ whiteSpace: 'normal' }}>{tagItem}</span>\n                                        <span className=\"svg-icon svg-icon-7 me-0\" onClick={event => this.props.tagsFilter(tagItem)}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n                                                <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\"></path>\n                                            </svg>\n                                        </span>\n                                    </div>)\n                                }\n                            </div> : null}\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Post Type</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"image_type\" onClick={this.onClickToPostType(\"2,4\")} checked={Object.keys(filterBody.postType).includes(\"2,4\")} />\n                                    <span className=\"form-check-label fw-medium\">Image Only</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"video_type\" onClick={this.onClickToPostType(\"3,5\")} checked={Object.keys(filterBody.postType).includes(\"3,5\") ? true : false} />\n                                    <span className=\"form-check-label fw-medium\">Video Only</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom d-none\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Other</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {/* <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label\">Highlight Post</span>\n                                </label>\n                            </div> */}\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Pinned to top</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Recent</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Retweets</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">UGC Rights</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"1\")} onClick={this.onClickToUgc(\"1\")} />\n                                    <span className=\"form-check-label fw-medium\">Pending Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"2\")} onClick={this.onClickToUgc(\"2\")} />\n                                    <span className=\"form-check-label fw-medium\">Approved Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"3\")} onClick={this.onClickToUgc(\"3\")} />\n                                    <span className=\"form-check-label fw-medium\">Rejected Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"4\")} onClick={this.onClickToUgc(\"4\")} />\n                                    <span className=\"form-check-label fw-medium\">Expired Post</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <div className=\"d-flex justify-content-center text-align-center flex-column w-100 px-4 pb-4\">\n                    {/* <button type=\"button\" className=\"btn btn-primary w-100 mb-1 d-none\">Filter</button> */}\n                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={this.onClickToResetFilter}>Reset results</button>\n                </div>\n            </Offcanvas.Body>\n        </Offcanvas>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        feedData: state.feedData,\n        filterBody: state.assets.filterBody,\n        networks: state.networks.networkData,\n        tagList: state.tags.tagList\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        feedsFilter: (refId, name) => dispatch(feedsFilter(refId, name)),\n        tagsFilter: (refId) => dispatch(tagsFilter(refId)),\n        ugcStatusFilter: (refId) => dispatch(ugcStatusFilter(refId)),\n        textFilter: (refId) => dispatch(textFilter(refId)),\n        postTypeFilter: (refId) => dispatch(postTypeFilter(refId)),\n        resetFilter: () => dispatch(resetFilter()),\n        collectionsFilter: (refId, name) => dispatch(collectionsFilter(refId, name)),\n        networkFilter: (refId, name) => dispatch(networkFilter(refId, name)),\n\n\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterAside);"],"names":["FilterAside","props","state","isActiveAside","feedData","listTags","tagString","selectedOption","onLoadFeedList","filterList","setState","prevState","toogleFilter","setTimeout","offcanvas","document","querySelector","classList","add","onClickToFeed","feedId","name","event","feedsFilter","onClickToUgc","status","ugcStatusFilter","onClickToPostType","type","postTypeFilter","onClickToResetFilter","resetFilter","onClickToCollection","id","collectionsFilter","onClickToNetwork","networkFilter","handleChange","Object","keys","length","tagsFilter","value","tagList","this","map","item","push","label","filterAside","getElementById","addEventListener","nextProps","filterBody","collections","networks","isCollection","show","placement","onHide","className","onClick","xmlns","viewBox","width","height","fill","d","flush","defaultactivekey","collection","checked","includes","String","overlay","style","borderRadius","thumbnails","src","alt","assets","feeds","socialFeed","ReactHtmlParser","baseUrl","GET_NETWORK_ICON","networkId","GET_NETWORK_NAME","count","classNamePrefix","onChange","options","postTags","tagItem","tagIndex","top","maxWidth","whiteSpace","postType","ugcStatus","Component","connect","networkData","tags","dispatch","refId","textFilter"],"sourceRoot":""}