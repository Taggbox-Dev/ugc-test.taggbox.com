{"version":3,"file":"static/js/7514.57c6dc95.chunk.js","mappings":"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","sources":["Layouts/Main/DisplayScreen/Components/Filters/AndOr.js","Layouts/Main/DisplayScreen/Components/Filters/AssetsTypes.js","Layouts/Main/DisplayScreen/Components/Filters/Collections.js","Layouts/Main/DisplayScreen/Components/Filters/Network.js","Layouts/Main/DisplayScreen/Components/Filters/UgcRights.js","Layouts/Main/DisplayScreen/Components/Filters/Tags.js","Layouts/Main/DisplayScreen/Components/Filters/Connection.js","Layouts/Main/DisplayScreen/Components/Filters/index.js","Layouts/Main/DisplayScreen/Components/Template/index.js","Layouts/Main/DisplayScreen/Components/Platforms/index.js","Layouts/Main/DisplayScreen/EditWebEmbed.js","Layouts/Main/DisplayScreen/Components/EmbedList/index.js","Layouts/Main/DisplayScreen/Components/DisplayScreenAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { capitalizeFirstLetter } from '../../../../../Services/Utils/utils';\n\n\nclass AndOrCondition extends Component {\n    render() {\n\n        const { condition,conditionApply } = this.props\n        return <Dropdown align=\"start\" className=\"block-center position-relative\">\n            <Dropdown.Toggle variant=\"secondary\" className=\"arrow_disabled\">\n                {capitalizeFirstLetter(condition)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"btn-min-w\">\n                <div className=\"menu-item\">\n                    <Dropdown.Item className={condition == `and` ? `active` : ``} onClick={conditionApply(\"and\")}>And</Dropdown.Item>\n                </div>\n                <div className=\"menu-item\">\n                    <Dropdown.Item className={condition == `or` ? `active` : ``} onClick={conditionApply(\"or\")}>Or</Dropdown.Item>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    }\n}\n\nexport default AndOrCondition","\nimport React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport AndOrCondition from './AndOr'\nclass AssetsTypes extends Component {\n    render() {\n\n        const { onAssetsApply, onSelectAllAssetsApply, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'assetsType'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <i className=\"ri-image-line text-gray-800 me-1\"></i>\n                                <div className=\"fs-9 fw-medium\">Assets Type</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllassets\">\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Select All</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllassets\" checked={Object.keys(state.assetsApply).length >= 3 ? true : false} onClick={onSelectAllAssetsApply} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"image_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-image-line text-gray-800 icon-6\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Image Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"image_assets\" checked={Object.keys(state.assetsApply).includes(\"2,4\") ? true : false} onClick={onAssetsApply(\"2,4\")} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"video_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-movie-line text-gray-800 icon-6\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Video Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"video_assets\" checked={Object.keys(state.assetsApply).includes(\"3,5\") ? true : false} onClick={onAssetsApply(\"3,5\")} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"text_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-text text-gray-800 icon-6\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Text Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"text_assets\" checked={Object.keys(state.assetsApply).includes(\"1\") ? true : false} onClick={onAssetsApply(\"1\")} />\n                        </div>\n                    </Accordion.Body>\n                </Accordion.Item>\n                </Accordion>\n    }\n}\n\nexport default AssetsTypes","\nimport React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport AndOrCondition from './AndOr';\nimport { GET_MEDIA_NAME } from '../../../../../Services/Utils/utils';\nimport CollectionThumb from '../../../CommonComponents/CollectionThumb';\n\nclass Collections extends Component {\n    render() {\n        const { state, onCollectionSearchFilter, onCollectionSelectAll, onCollectionApply, conditionApply, filterApply, filterKey, indexFilter, isLast, onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\n            <Accordion.Item eventKey={'collection'} className=\"pb-2\">\n                <div className=\"d-flex\">\n                    <Accordion.Header className=\"me-1\">\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                            <i className=\"ri-folder-4-line text-gray-800 me-1\"></i>\n                            <div className=\"fs-9 fw-medium\">Collection</div>\n                        </div>\n                        <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                    </Accordion.Header>\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                </div>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {state.collectionList && Object.keys(state.collectionList).length > 0 ?\n                        <>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchCollection\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Search Collection</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onCollectionSelectAll} checked={Object.keys(state.selectedCollection).length >= state.collectionList.length ? true : false} />\n                            </div>\n                            <div className=\"form-group mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchCollection\" placeholder=\"Search your collection...\" onChange={onCollectionSearchFilter} />\n                            </div>\n                            <div className=\"\">\n                                {\n                                    state.collectionList.map((item) => <div className=\"dropdown-item px-0\">\n                                        <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`coolection_${item.id}`}>\n                                            <CollectionThumb symbolClasses={'symbol symbol-22 bg-light'} iconClass={'text-gray-700 me-0 fw-normal'} thumb={item.thumbnails} thumbName={GET_MEDIA_NAME(item.thumbnails)} />\n                                            <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                        </label>\n                                        <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"\" id={`coolection_${item.id}`} checked={Object.keys(state.selectedCollection).includes(`${item.id}`) ? true : false} onClick={onCollectionApply(item.id)} />\n                                    </div>)\n                                }\n                            </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-9 mb-0 text-gray-700\">{state.isCollection ? `Loading...` : `No Collections Available`}</h6>\n                        </div>\n                    }\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    }\n}\n\nexport default Collections\n","\nimport React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\nimport AndOrCondition from './AndOr'\nclass Network extends Component {\n    state = {\n        networkList: null\n    }\n    componentDidMount() { this.feedNetworkList() }\n    feedNetworkList = () => {\n        const { feedData, networkData } = this.props.state\n        let networkConnectionId = []\n        networkConnectionId = feedData.map((item) => item.networkId)\n        networkConnectionId = [...new Set(networkConnectionId)]\n        if (networkConnectionId.includes(18)) { networkConnectionId.splice(networkConnectionId.indexOf(18), 1, 2) }\n        const networksList = networkData.filter(network => networkConnectionId.includes(network.id))\n        this.setState({ networkList: networksList })\n    }\n    render() {\n        const { state, onNetworkApply, onClickSelectAll, onSearchFilter, filterApply, filterKey, conditionApply, indexFilter, isLast, onSelectActive } = this.props\n        const { networkList } = this.state\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\n            <Accordion.Item eventKey={'source'} className=\"pb-2\">\n                <div className=\"d-flex\">\n                    <Accordion.Header className=\"me-1\">\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                            <span className=\"svg-icon text-gray-800 d-flex\">\n                                <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                            </span>\n                            <div className=\"fs-9 fw-medium\">Network</div>\n                        </div>\n                        <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                    </Accordion.Header>\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                </div>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Search Network</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onClickSelectAll} checked={networkList && (Object.keys(state.selectedNetwork).length >= networkList.length) ? true : false} />\n                            </div>\n                            <div className=\"form-group mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchNetwork\" placeholder=\"Search your network...\" onChange={onSearchFilter} />\n                            </div>\n                            <div className=\"\">\n                                {\n                                    networkList && networkList.length > 0 ? networkList.map((item) => {\n                                        return <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                            <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`filter_${GET_NETWORK_ICON(item.id)}`}>\n                                                <span className=\"symbol symbol-22\">\n                                                    <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.id)}.svg`)} height={20} width={20} alt={item.name} />\n                                                </span>\n                                                <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                            </label>\n                                            <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"phone\" id={`filter_${GET_NETWORK_ICON(item.id)}`} checked={Object.keys(state.selectedNetwork).includes(`${item.id}`) ? true : false} onClick={onNetworkApply(item.id)} />\n                                        </div>\n                                    }) : null\n\n                                }\n\n                            </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Networks Available</h6>\n                        </div>\n                    }\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    }\n}\n\nexport default Network;","import React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport AndOrCondition from './AndOr'\nclass UgcRights extends Component {\n    render() {\n        const { onSelectAllUgcRigths, onUgcRigths, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'ugcrights'} className=\"pb-2\">\n                        <div className=\"d-flex\">\n                            <Accordion.Header className=\"me-1\">\n                                <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                    <span className=\"svg-icon text-gray-800 d-flex\">\n                                        <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                    </span>\n                                    <div className=\"fs-9 fw-medium\">UGC Rights</div>\n                                </div>\n                                <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                            </Accordion.Header>\n                            <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                        </div>\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                            <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllugc\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Select All</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllugc\" checked={Object.keys(state.ugcRigths).length >= 3 ? true : false} onClick={onSelectAllUgcRigths} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_approved\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Approved</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_approved\" checked={Object.keys(state.ugcRigths).includes(\"2\") ? true : false} onClick={onUgcRigths(\"2\")} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_pending\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/rights-pending-line.svg')} height={18} width={18} />\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Pending</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_pending\" checked={Object.keys(state.ugcRigths).includes(\"1\") ? true : false} onClick={onUgcRigths(\"1\")} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_rejected\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/rights-rejected-line.svg')} height={18} width={18} />\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Rejected</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_rejected\" checked={Object.keys(state.ugcRigths).includes(\"3\") ? true : false} onClick={onUgcRigths(\"3\")} />\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n    }\n}\n\nexport default UgcRights\n","\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Accordion } from 'react-bootstrap';\nimport CreatableSelect from 'react-select/creatable';\nimport AndOrCondition from './AndOr'\n\nclass Tags extends Component {\n    state = {\n        tagString: [],\n        newTag: \"\",\n        listTags: [],\n        selectedOption: null\n    };\n\n    onClickToRemoveTag = (index) => event => {\n        let { tagString } = this.state;\n        tagString.splice(index, 1)\n        this.setState({ tagString })\n\n    }\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n\n    }\n    componentDidMount() {\n        const { modalAssetData } = this.props\n        if (modalAssetData && Object.keys(modalAssetData).length > 0) {\n            if (modalAssetData.tags && String(modalAssetData.tags).length > 0) this.setState({ tagString: String(modalAssetData.tags).split(\",\") })\n        }\n    }\n\n    onClickNewAddTag = event => {\n        const { newTag, tagString } = this.state;\n        const { modalAssetData } = this.props\n        if (newTag && String(newTag).length >= 3) {\n            tagString.push(newTag)\n            this.setState({ tagString, newTag: \"\", selectedOption: null })\n        }\n        else {\n\n        }\n    }\n    addNewTag = event => this.setState({ newTag: event.target.value })\n\n\n    setNewTags = (selectedOption) => {\n        if (selectedOption.value) {\n            this.setState({ newTag: \"\", selectedOption: null }, () => this.props.onTagApply(selectedOption.value))\n        }\n    };\n\n    render() {\n        const { tagString, newTag, listTags, selectedOption } = this.state\n        const { state, onTagRemove, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'tags'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <i className=\"ri-price-tag-3-line text-gray-800 me-1\"></i>\n                                <div className=\"fs-9 fw-medium\">Tags</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                        <div className=\"form-group mb-2\">\n                            <CreatableSelect className=\"selectpicker\" classNamePrefix={'selectpicker'} isClearable options={listTags} onChange={this.setNewTags} value={selectedOption} />\n                        </div>\n                        <div className=\"tags-group tags-group-sm d-flex align-items-center flex-wrap\">\n                            {\n                                state.tagApply ? state.tagApply.map((tagItem, tagKey) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-1 mb-1\">\n                                    {tagItem}\n                                    <button className=\"btn p-0 ms-1\" onClick={onTagRemove(tagKey)}>\n                                        <i className=\"ri-price-tag-3-line\"></i>\n                                    </button>\n                                </div>) : null\n                            }\n                        </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Tags Available</h6>\n                        </div>\n                        }\n                    </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        tagList: state.tags.tagList\n    }\n}\n\nexport default connect(mapStateToProps)(Tags);\n","\nimport React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Accordion } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\nimport AndOrCondition from './AndOr'\n\nclass Connection extends Component {\n\n\n    render() {\n        const { state, onconnectionApply, onConnectionSelectAll, onConnectionSearchFilter, conditionApply, filterApply, filterKey, indexFilter, isLast, onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\n            <Accordion.Item eventKey={'connection'} className=\"pb-2\">\n                <div className=\"d-flex\">\n                    <Accordion.Header className=\"me-1\">\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                            <span className=\"svg-icon text-gray-800 d-flex\">\n                                <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                            </span>\n                            <div className=\"fs-9 fw-medium\">Connections</div>\n                        </div>\n                        <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                    </Accordion.Header>\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                </div>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Select All</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" onClick={onConnectionSelectAll} checked={Object.keys(state.selectedConnection).length >= state.feedData.length ? true : false} />\n                            </div>\n                            <div className=\"\">\n                                {\n                                    state.feedData.map((item) => <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                        <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`connection`}>\n                                            <span className=\"symbol symbol-22\">\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={'twitter'} />\n                                            </span>\n                                            <span className=\"form-check-label text-gray-800 text-ellipsis\">{ReactHtmlParser(item.name)}</span>\n                                        </label>\n                                        <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" id={item.feedId} name={item.feedId} value={item.feedId} onClick={onconnectionApply(item.feedId)} checked={Object.keys(state.selectedConnection).includes(`${item.feedId}`) ? true : false} />\n                                    </div>)\n                                }\n                            </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Connections Available</h6>\n                        </div>\n                    }\n                </Accordion.Body>\n            </Accordion.Item>\n\n        </Accordion>\n    }\n}\nexport default Connection;","import React, { Component } from 'react';\nimport AssetsTypes from './AssetsTypes';\nimport Collections from './Collections';\nimport Network from './Network';\nimport UgcRights from './UgcRights';\nimport Tags from './Tags';\nimport Connection from './Connection';\n\n\n\nclass Filters extends Component {\n    render() {\n\n        const { filterKey, isLast } = this.props\n\n        return <div className=\"publish_filters\">\n            {filterKey == \"collection\" ? <Collections {...this.props} />\n                : filterKey == \"source\" ? <Network {...this.props} />\n                    : filterKey == \"assetsType\" ? <AssetsTypes {...this.props} />\n                        : filterKey == \"tags\" ? <Tags {...this.props} />\n                            : filterKey == \"ugcrights\" ? <UgcRights {...this.props} />\n                                : filterKey == \"connection\" ? <Connection {...this.props} /> : null\n            }\n        </div>\n    }\n}\n\nexport default Filters","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\n\nconst removeDuplicate = (data) => {\n    try {\n        var updateFilter = []\n        var updateKey = {}\n        data.map((item) => {\n            if (!updateKey[item.id]) {\n                updateFilter.push(item)\n                updateKey[item.id] = true\n            }\n\n        })\n        return updateFilter\n    }\n    catch (ex) {\n        return data\n    }\n}\n\nclass Templates extends Component {\n    state = {\n        templeteList: [],\n        isUpdate: false\n    }\n    componentWillMount() {\n        this.onLoad()\n    }\n    onLoad = () => {\n        var self = this\n        const { templeteList } = this.props\n        self.setState({ templeteList: removeDuplicate(templeteList) })\n    }\n    onFiltertemplateName = (id) => {\n        const { templeteList } = this.state;\n\n        if (templeteList && templeteList.length > 0) {\n            const updated = templeteList.filter((item) => item.id == id)\n            if (updated && updated.length > 0) {\n                return updated[0].name\n            }\n            else return \"\"\n        }\n        else return \"\"\n\n    }\n\n\n    render() {\n        const { templeteList } = this.state;\n        const { onSelectTemplate, state } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Template</label>\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-9 fw-medium\">{state.selectedTemplate ? state.selectedTemplate.name ? state.selectedTemplate.name : this.onFiltertemplateName(state.selectedTemplate.id) : `Please select template.`}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {templeteList && templeteList.length > 0 ?\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\" defaultValue={0}>\n                            {templeteList.map((temp, index) => {\n                                return <><ToggleButton key={`template_id_${index}`} className={`mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={onSelectTemplate(temp)}>\n                                        <div className=\"d-flex align-items-center\">\n                                            <div className=\"symbol symbol-44 flex-shrink-0 me-2\">\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height={50} width={50} alt={temp.name} />\n                                            </div>\n                                            <div className=\"overflow-hidden text-start\">\n                                                <p className={`fs-8 fw-semibold mb-1 text-ellipsis text-gray-dark`}>{temp.name}</p>\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\n                                            </div>\n                                        </div>\n                                </ToggleButton></>\n                            })}\n                        </ToggleButtonGroup>\n                        : null}\n                    <div className=\"text-center\">\n                        <Link to={'/template/add'} className=\"btn btn-sm p-0\">\n                            <i className=\"ri-add-line\"></i>\n                            Create New Template\n                        </Link>\n                    </div>\n                </Accordion.Body>\n            </Accordion.Item>\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\n\nconst platformName = (platform) => {\n    switch (platform) {\n        case 'p-cast':\n            return 'Cast'\n        case 'p-chromecast':\n            return 'Chromecast'\n        case 'p-firetvstick':\n            return 'Fire Tv Stick'\n        case 'p-androidtv':\n            return 'Android Tv'\n        case 'p-Aptoide':\n            return 'Aptoide'\n        case 'p-wired':\n            return 'Wired'\n\n        case 'p-screen-cloud':\n            return 'Screen Cloud';\n        case 'p-yodeck':\n            return 'Yodeck';\n        case 'p-onsign':\n            return 'Onsign';\n        case 'p-rise-vision':\n            return 'Rise Vision';\n        case 'p-optisign':\n            return 'Optisign';\n        case 'p-raydiant':\n            return 'Raydiant'\n        case 'p-enplug':\n            return 'Enplug';\n        case 'p-novi-sign':\n            return 'Novi Sign';\n        case 'dp-other':\n            return 'Other';\n\n\n        case 'p-6connex':\n            return '6Connex';\n        case 'p-zuddl':\n            return 'Zuddl';\n        case 'p-gevme':\n            return 'Gevme';\n        case 'p-vfairs':\n            return 'Vfairs';\n        case 'p-workcast':\n            return 'Workcast';\n        case 'p-pathable':\n            return 'Pathable';\n\n        case 'p-hubilo':\n            return 'Hubilo';\n        case 'ev-other':\n            return 'Other';\n        default:\n            return \"\";\n    }\n}\n\nclass Platforms extends Component {\n\n    render() {\n        const { onSelectedPlatform, state, themeSkin } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Display Platform</label>\n            <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100 d-flex align-items-center\">\n                    <p className=\"fs-9 fw-medium mb-0\">{`${state.selectedPlatform == 's-projector' ? `Projector / TV` : state.selectedPlatform == 's-signage' ? `Digital Signage` : state.selectedPlatform == 's-event' ? `Virtual / Hybrid Events` : `Select Display Platform`}`}</p>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"selectPlatfrom\" value={state.selectedPlatform} defaultValue={'s-projector'}>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_projector\" value=\"s-projector\" onClick={onSelectedPlatform('s-projector')}>\n                            <i className=\"ri-tv-2-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Projector / TV</p>\n                        </ToggleButton>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_signage\" value=\"s-signage\" onClick={onSelectedPlatform('s-signage')}>\n                            <i className=\"ri-tablet-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Digital Signage</p>\n                        </ToggleButton>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_event\" value=\"s-event\" onClick={onSelectedPlatform('s-event')}>\n                            <i className=\"ri-picture-in-picture-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Virtual / Hybrid Events</p>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item>\n            {state.selectedPlatform == 's-projector' ? <Accordion.Item eventKey=\"10\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"display-platform\" defaultValue={'p-cast'}>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-cast\" value={'p-cast'} onClick={e => this.props.embedCodeCallback('p-cast')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/cast${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"cast\" height={26} width={80} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-chromecast\" value={'p-chromecast'} onClick={e => this.props.embedCodeCallback('p-chromecast')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/chromecast${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"chromecast\" height={44} width={100} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-firetvstick\" value={'p-firetvstick'} onClick={e => this.props.embedCodeCallback('p-firetvstick')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/firetvstick${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"firetvstick\" height={30} width={80} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-androidtv\" value={'p-androidtv'} onClick={e => this.props.embedCodeCallback('p-androidtv')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/androidtv${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"androidtv\" height={45} width={85} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-Aptoide\" value={'p-Aptoide'} onClick={e => this.props.embedCodeCallback('p-Aptoide')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/Aptoide-tv${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"Aptoide\" height={32} width={110} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-wired\" value={'p-wired'} onClick={e => this.props.embedCodeCallback('p-wired')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/wired${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"wired\" height={30} width={86} />\n                            </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item> :\n                state.selectedPlatform == 's-signage' ? <Accordion.Item eventKey=\"11\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-screen-cloud'}>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-screen-cloud\" value={'p-screen-cloud'} onClick={e => this.props.embedCodeCallback('p-screen-cloud')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/screen-cloud${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"screen-cloud\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-yodeck\" value={'p-yodeck'} onClick={e => this.props.embedCodeCallback('p-yodeck')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/yodeck${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"yodeck\" height={44} width={100} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-onsign\" value={'p-onsign'} onClick={e => this.props.embedCodeCallback('p-onsign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/onsign-tv${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"onsign\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-rise-vision\" value={'p-rise-vision'} onClick={e => this.props.embedCodeCallback('p-rise-vision')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/rise-vision${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"rise-vision\" height={40} width={75} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-optisign\" value={'p-optisign'} onClick={e => this.props.embedCodeCallback('p-optisign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/optisign${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"optisign\" height={32} width={110} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-raydiant\" value={'p-raydiant'} onClick={e => this.props.embedCodeCallback('p-raydiant')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/raydiant${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"raydiant\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-enplug\" value={'p-enplug'} onClick={e => this.props.embedCodeCallback('p-enplug')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/enplug${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"enplug\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-novi-sign\" value={'p-novi-sign'} onClick={e => this.props.embedCodeCallback('p-novi-sign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/novi-sign${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"novi-sign\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"dp-other\" value={'dp-other'} onClick={e => this.props.embedCodeCallback('p-other')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"other\" height={26} width={70} />\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : state.selectedPlatform == 's-event' ? <Accordion.Item eventKey=\"12\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-6connex'}>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-6connex\" value={'p-6connex'} onClick={e => this.props.embedCodeCallback('p-6connex')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/6connex${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"6connex\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-zuddl\" value={'p-zuddl'} onClick={e => this.props.embedCodeCallback('p-zuddl')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/zuddl${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"zuddl\" height={44} width={100} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-gevme\" value={'p-gevme'} onClick={e => this.props.embedCodeCallback('p-gevme')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/gevme${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"gevme\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-vfairs\" value={'p-vfairs'} onClick={e => this.props.embedCodeCallback('p-vfairs')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/vfairs${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"vfairs\" height={40} width={75} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-workcast\" value={'p-workcast'} onClick={e => this.props.embedCodeCallback('p-workcast')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/workcast${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"workcast\" height={32} width={110} />\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-pathable\" value={'p-pathable'} onClick={e => this.props.embedCodeCallback('p-pathable')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/pathable${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"pathable\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-hubilo\" value={'p-hubilo'} onClick={e => this.props.embedCodeCallback('p-hubilo')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/hubilo${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"hubilo\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"ev-other\" value={'ev-other'} onClick={e => this.props.embedCodeCallback('ev-other')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"other\" height={26} width={70} />\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : null}\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        themeSkin: state.themeSkin.themeSkin\n    }\n}\nexport default connect(mapStateToProps)(Platforms);","import React, { Component, Suspense } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Tab } from 'react-bootstrap';\nimport { getCollectionList } from '../../../Services/Actions/homeActions'\nimport { updatePublishRequest, getPublishList, publishDeleteRequest } from '../../../Services/Actions/publishActions'\n\nimport { capitalizeFirstLetter } from '../../../Services/Utils/utils';\nimport { id } from 'date-fns/locale';\nconst HtmlEmbed = React.lazy(() => import('./Components/DisplayPlatforms/CastUrl'));\nconst WordPressEmbed = React.lazy(() => import('./Components/DisplayPlatforms/WiredUrl'));\nconst WixEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AptoideCode'));\nconst SquarespaceEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AndroidTvCode'));\nconst ShopifyEmbed = React.lazy(() => import('./Components/DisplayPlatforms/FireStickCode'));\nconst OtherEmbed = React.lazy(() => import('./Components/DisplayPlatforms/ChromecastUrl'));\n\nconst DisplayScreenAside = React.lazy(() => import('./Components/DisplayScreenAside'));\n// const EditWebEmbedAside = React.lazy(() => import('./Components/EditWebEmbedAside'));\n\nconst dataWithComma = (updateData) => {\n    var dataCollection = {}\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection[item] = true\n        })\n    return dataCollection\n}\nconst tagDataWithComma = (updateData) => {\n    var dataCollection = []\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection.push(item)\n        })\n    return dataCollection\n}\nconst assetsData = (data) => {\n    var dataCollection = {}\n    if (data && String(data).length > 0) {\n        if (String(data).includes(\"2,4\")) {\n            dataCollection[\"2,4\"] = true\n        }\n        else if (String(data).includes(\"3,5\")) {\n            dataCollection[\"3,5\"] = true\n        }\n        if (String(data).includes(\"1\")) {\n            dataCollection[\"1\"] = true\n        }\n    }\n\n    return dataCollection\n}\n\nconst chooseActiveFilter = (assetsType, collection, connection, source, tags, ugcrights) => {\n    var dataCollection = {}\n    if (assetsType) {\n        dataCollection[\"assetsType\"] = true\n    }\n    if (collection) {\n        dataCollection[\"collection\"] = true\n    }\n    if (connection) {\n        dataCollection[\"connection\"] = true\n    }\n    if (source) {\n        dataCollection[\"source\"] = true\n    }\n    if (tags) {\n        dataCollection[\"tags\"] = true\n    }\n    if (ugcrights) {\n        dataCollection[\"ugcrights\"] = true\n    }\n    return dataCollection\n}\n\nclass WebEmbed extends Component {\n    constructor(props) {\n        super(props);\n        const { item, templeteList } = props\n        var templateData = {}\n        if (templeteList && templeteList.length > 0) {\n            const DataTemp = templeteList.filter((temp) => temp.id == item.template)\n            if (DataTemp && DataTemp.length > 0) templateData = DataTemp[0]\n            else templateData = { id: item.template }\n\n        }\n        else templateData = { id: item.template }\n        this.state = {\n            showGenratedCode: 'p-cast',\n            chooseFilter: chooseActiveFilter(item.assets_type, item.collection, item.source, item.network, item.tags, item.ugc_status),\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: assetsData(item.assets_type),\n            tagApply: tagDataWithComma(item.tags),\n            ugcRigths: {},\n            selectedPlatform: null,\n            selectedTemplate: templateData,\n            condition: String(item.filterType).toLowerCase(),\n            networkData: [],\n            feedData: [],\n            selectedNetwork: dataWithComma(item.network),\n            selectedConnection: dataWithComma(item.source),\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            collectionList: [],\n            collectionCompleteList: [],\n            selectedCollection: dataWithComma(item.collection),\n            collectionSearch: \"\",\n            genrateCode: false,\n            publishList: [],\n            responseData: item,\n            activeFilter: null,\n            selectedWebEmbed: null,\n            publishCodeName: item.name ? item.name : \"Untitled-1\",\n            id: item.id,\n            isUpdating: false,\n            isCollection: true\n        };\n    }\n\n    timeout = 0;\n    componentWillMount() {\n        this.onLoadCollectionList()\n    }\n    componentDidMount() {\n        const { networks, feedData } = this.props\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n\n    }\n    componentWillReceiveProps(nextProps) {\n        const { networks, feedData } = nextProps\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n    }\n\n\n    onClickToDelete = (data) => event => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You want to delete this\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                var self = this;\n                publishDeleteRequest(data).then((response) => {\n                    self.onLoadPublish()\n                    toast.success('Your widget has been deleted.')\n\n                })\n\n\n            }\n        })\n\n    }\n\n    onTagApply = (value) => {\n        const { tagApply } = this.state\n        tagApply.push(value)\n        this.setState({ tagApply })\n    }\n    onTagRemove = (index) => event => {\n        let { tagApply } = this.state;\n        tagApply.splice(index, 1)\n        this.setState({ tagApply })\n    }\n\n    conditionApply = (condition) => event => {\n        this.setState({ condition })\n    }\n    filterApply = (filterKey) => event => {\n        const { chooseFilter } = this.state;\n        var updateFilter = {}\n        if (chooseFilter[filterKey]) {\n            delete chooseFilter[filterKey]\n            if (filterKey == \"collection\") updateFilter = { selectedCollection: {} }\n            if (filterKey == \"source\") updateFilter = { selectedNetwork: {} }\n            if (filterKey == \"assetsType\") updateFilter = { assetsApply: {} }\n            if (filterKey == \"tags\") updateFilter = { tagApply: [] }\n            if (filterKey == \"ugcrights\") updateFilter = { ugcRigths: {} }\n            if (filterKey == \"connection\") updateFilter = { selectedConnection: {} }\n            this.setState({ chooseFilter: chooseFilter, activeKey: \"\", ...updateFilter })\n        }\n        else {\n            chooseFilter[filterKey] = true;\n            this.setState({ chooseFilter, activeKey: filterKey })\n        }\n\n    }\n    onSelectActive = (activeKey) => event => {\n        this.setState({ activeKey: this.state.activeKey == activeKey ? \"\" : activeKey })\n    }\n    shareEmbedModal = event => this.setState({\n        showGenratedCode: true\n    })\n    genratedCodeCallback = event => {\n        this.setState({\n            showGenratedCode: event\n        })\n    }\n    renderSwitch = (platform) => {\n        const { responseData } = this.state\n\n        switch (platform) {\n            case 'p-html':\n                return <HtmlEmbed data={responseData} />;\n            case 'p-wordpress':\n                return <WordPressEmbed data={responseData} />;\n            case 'p-wix':\n                return <WixEmbed data={responseData} />;\n            case 'p-squarespace':\n                return <SquarespaceEmbed data={responseData} />;\n            case 'p-shopify':\n                return <ShopifyEmbed data={responseData} />;\n            case 'p-other':\n                return <OtherEmbed data={responseData} />;\n            default:\n                return <HtmlEmbed data={responseData} />;\n        }\n\n    }\n\n\n    onSelectTemplate = (template) => event => this.setState({ selectedTemplate: template })\n    onSelectedPlatform = (selectedPlatform) => event => {\n        this.setState({ selectedPlatform: selectedPlatform })\n    }\n\n    onUgcRigths = (value) => event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths[value]) {\n            delete ugcRigths[value]\n            this.setState({ ugcRigths: ugcRigths })\n        }\n        else {\n            ugcRigths[value] = true;\n            this.setState({ ugcRigths })\n        }\n    }\n    onSelectAllUgcRigths = event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths && Object.keys(ugcRigths).length >= 3) {\n            this.setState({ ugcRigths: {} })\n        }\n        else {\n            this.setState({\n                ugcRigths: {\n                    \"1\": true, \"2\": true, \"3\": true\n                }\n            })\n        }\n    }\n\n    onconnectionApply = (value) => event => {\n        const { selectedConnection } = this.state;\n        if (selectedConnection[value]) {\n            delete selectedConnection[value]\n            this.setState({ selectedConnection: selectedConnection })\n        }\n        else {\n            selectedConnection[value] = true;\n            this.setState({ selectedConnection })\n        }\n    }\n    onConnectionSelectAll = event => {\n        const { selectedConnection, feedData } = this.state;\n        if (selectedConnection && Object.keys(selectedConnection).length >= feedData.length) {\n            this.setState({ selectedConnection: {} })\n        }\n        else {\n            var dataNetwork = {}\n            feedData.map((item) => {\n                dataNetwork[item.feedId] = true\n            })\n            this.setState({\n                selectedConnection: dataNetwork\n            })\n        }\n    }\n    onConnectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textConnectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadConnectionFilterData())\n        }, 1000);\n    }\n    onLoadConnectionFilterData = () => {\n        const { feedData } = this.props\n        const { textConnectionSearch } = this.state;\n        const searchData = feedData.filter((item) => String(item.name).toLowerCase().includes(textConnectionSearch))\n        this.setState({ feedData: searchData })\n    }\n    onAssetsApply = (value) => event => {\n        const { assetsApply } = this.state;\n        if (assetsApply[value]) {\n            delete assetsApply[value]\n            this.setState({ assetsApply: assetsApply })\n        }\n        else {\n            assetsApply[value] = true;\n            this.setState({ assetsApply })\n        }\n    }\n\n    onSelectAllAssetsApply = event => {\n        const { assetsApply } = this.state;\n        if (assetsApply && Object.keys(assetsApply).length >= 3) {\n            this.setState({ assetsApply: {} })\n        }\n        else {\n            this.setState({\n                assetsApply: {\n                    \"1\": true, \"2,4\": true, \"3,5\": true\n                }\n            })\n        }\n    }\n\n    onNetworkApply = (value) => event => {\n        const { selectedNetwork } = this.state;\n        if (selectedNetwork[value]) {\n            delete selectedNetwork[value]\n            this.setState({ selectedNetwork: selectedNetwork })\n        }\n        else {\n            selectedNetwork[value] = true;\n            this.setState({ selectedNetwork })\n        }\n    }\n    onClickSelectAll = event => {\n        const { selectedNetwork, networkData } = this.state;\n        if (selectedNetwork && Object.keys(selectedNetwork).length >= networkData.length) {\n            this.setState({ selectedNetwork: {} })\n        }\n        else {\n            var dataNetwork = {}\n            networkData.map((item) => {\n                dataNetwork[item.id] = true\n            })\n            this.setState({\n                selectedNetwork: dataNetwork\n            })\n        }\n    }\n    onSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadFilterData())\n        }, 1000);\n    }\n    onLoadFilterData = () => {\n        const { networks } = this.props\n        const { textSearch } = this.state;\n        const searchData = networks.filter((item) => String(item.name).toLowerCase().includes(textSearch))\n        this.setState({ networkData: searchData })\n    }\n\n    onLoadCollectionList = () => {\n        var self = this;\n        const { collectionData } = this.props;\n        if (collectionData && Object.keys(collectionData).length > 0 && collectionData.collectionList.length > 0) {\n            self.setState({ collectionList: collectionData.collectionList, collectionCompleteList: collectionData.collectionList, assetsCount: collectionData.assetsCount, isCollection: false })\n        }\n        else {\n            getCollectionList().then((response) => {\n                const { responseData } = response.data;\n                if (responseData && Object.keys(responseData).length > 0) {\n                    self.setState({ collectionList: responseData.collection, collectionCompleteList: responseData.collection, isCollection: false })\n                }\n            }).catch((ex) => {\n\n            })\n        }\n\n    }\n\n    onCollectionApply = (value) => event => {\n        const { selectedCollection } = this.state;\n        if (selectedCollection[value]) {\n            delete selectedCollection[value]\n            this.setState({ selectedCollection: selectedCollection })\n        }\n        else {\n            selectedCollection[value] = true;\n            this.setState({ selectedCollection })\n        }\n    }\n    onCollectionSelectAll = event => {\n        const { selectedCollection, collectionList } = this.state;\n        if (selectedCollection && Object.keys(selectedCollection).length >= collectionList.length) {\n            this.setState({ selectedCollection: {} })\n        }\n        else {\n            var dataCollection = {}\n            collectionList.map((item) => {\n                dataCollection[item.id] = true\n            })\n            this.setState({\n                selectedCollection: dataCollection\n            })\n        }\n    }\n    onCollectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ collectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadCollectionFilterData())\n        }, 1000);\n    }\n    onLoadCollectionFilterData = () => {\n        const { collectionSearch, collectionCompleteList } = this.state;\n        const searchData = collectionCompleteList.filter((item) => String(item.name).toLowerCase().includes(collectionSearch))\n        this.setState({ collectionList: searchData })\n    }\n    onChangeName = event => {\n        this.setState({ publishCodeName: event.target.value })\n    }\n    onRequestPublish = event => {\n        const { id, selectedTemplate, selectedCollection, selectedConnection, selectedNetwork, condition, showGenratedCode, ugcRigths, assetsApply, publishCodeName, tagApply } = this.state\n        var self = this;\n\n        var collection = []\n        var template = \"\"\n        var source = []\n        var type = []\n        var tags = []\n        var network = []\n        var ugcRigthsU = []\n\n        if (ugcRigths && Object.keys(ugcRigths).length > 0) {\n            Object.keys(ugcRigths).map((item) => {\n                ugcRigthsU.push(item)\n            })\n        }\n        if (selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) {\n            template = selectedTemplate.id\n        }\n\n        if (selectedNetwork && Object.keys(selectedNetwork).length > 0) {\n            Object.keys(selectedNetwork).map((item) => {\n                network.push(item)\n            })\n        }\n        if (selectedCollection && Object.keys(selectedCollection).length > 0) {\n            Object.keys(selectedCollection).map((item) => {\n                collection.push(item)\n            })\n        }\n        if (selectedConnection && Object.keys(selectedConnection).length > 0) {\n            Object.keys(selectedConnection).map((item) => {\n                source.push(item)\n            })\n        }\n        if (assetsApply && Object.keys(assetsApply).length > 0) {\n            Object.keys(assetsApply).map((item) => {\n                type.push(item)\n            })\n        }\n        if (tagApply && tagApply.length > 0) {\n            tags = tagApply\n        }\n        if ((selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.Theme.id) && (collection.length > 0 || source.length > 0 || tags.length > 0 || type.length > 0 || ugcRigthsU.length > 0 || network.length > 0)) {\n            const data = {\n                id: id,\n                name: publishCodeName,\n                \"template\": template,\n                \"collection\": collection.join(\",\"),\n                \"source\": source.join(\",\"),\n                \"assets_type\": type.join(\",\"),\n                \"tags\": tags.join(\",\"),\n                \"ugc_status\": ugcRigthsU.join(\",\"),\n                \"publish_type\": 4,\n                \"campaign_type\": \"\",\n                \"screen_type\": \"\",\n                \"platform\": \"\",\n                network: network.join(\",\"),\n                filterType: String(condition).toUpperCase()\n\n            }\n            this.setState({ isUpdating: true })\n            updatePublishRequest(data).then((response) => {\n                const { status, response_code, response_message } = response.data\n                if (status == \"success\") {\n                    toast.success(\"Publish digital screen successfully updated.\")\n                    self.setState({ isUpdating: false }, () => self.props.onLoadPublish())\n                    //self.setState({ responseData: response.data }, () => self.props.onLoadPublish())\n                }\n                else toast.error(response_message)\n\n            }).catch((ex) => {\n\n            })\n        }\n        else {\n            if (!(selectedTemplate)) { toast.error(\"Please select template.\", { autoClose: 3000 }) }\n            else { toast.error(\"Please select filter.\", { autoClose: 3000 }) }\n        }\n    }\n    onResetFilter = event => {\n        this.setState({\n            showGenratedCode: 'p-cast',\n            chooseFilter: {},\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: {},\n            tagApply: [],\n            ugcRigths: {},\n            selectedTemplate: null,\n            selectedPlatform: null,\n            condition: \"and\",\n            selectedNetwork: {},\n            selectedConnection: {},\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            selectedCollection: {},\n            collectionSearch: \"\",\n            genrateCode: false,\n            responseData: null,\n            activeFilter: null,\n            publishCodeName: \"\",\n            isUpdating: false\n\n        })\n    }\n    onUpdateReponseData = (data) => {\n        this.setState({ responseData: data })\n    }\n\n    render() {\n        const { showGenratedCode, chooseFilter, genrateCode, responseData, activeFilter } = this.state\n\n        const { networks, history } = this.props\n        return <>\n            {networks && networks.length > 0 ? <DisplayScreenAside genratedCodeCallback={this.genratedCodeCallback} genratedCodeModal={showGenratedCode} filterApply={this.filterApply} state={this.state} onSelectTemplate={this.onSelectTemplate} onSelectedPlatform={this.onSelectedPlatform} onSelectAllUgcRigths={this.onSelectAllUgcRigths} onUgcRigths={this.onUgcRigths} onTagRemove={this.onTagRemove} onTagApply={this.onTagApply} onAssetsApply={this.onAssetsApply} onconnectionApply={this.onconnectionApply} onSelectAllAssetsApply={this.onSelectAllAssetsApply} onNetworkApply={this.onNetworkApply} onClickSelectAll={this.onClickSelectAll} onSearchFilter={this.onSearchFilter} onCollectionSearchFilter={this.onCollectionSearchFilter}\n                onCollectionSelectAll={this.onCollectionSelectAll}\n                onCollectionApply={this.onCollectionApply} conditionApply={this.conditionApply} onConnectionSearchFilter={this.onConnectionSearchFilter} onConnectionSelectAll={this.onConnectionSelectAll} onClickToDelete={this.onClickToDelete} onResetFilter={this.onResetFilter} activeFilter={activeFilter} history={history} onChangeName={this.onChangeName} onUpdateReponseData={this.onUpdateReponseData} onLoadPublish={this.onLoadPublish} onSelectActive={this.onSelectActive} onRequestPublish={this.onRequestPublish} isPublishEdit={true} key={\"edit_filter\"} /> : null}\n        </>\n\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        networks: state.networks.networkData,\n        feedData: state.feedData.filterList,\n        collectionData: state.collection,\n        templeteList: state.templates.templeteList\n\n    }\n}\n\nexport default connect(mapStateToProps)(WebEmbed);","import React, { Component, Suspense } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditWebEmbed from '../../EditWebEmbed'\nimport { getAssetsCount } from '../../../../../Services/Actions/assetsActions'\n\nclass EmbedList extends Component {\n    state = {\n        active: null\n    }\n    onClickToEdit = (item) => event => {\n        var self = this\n        getAssetsCount(item.id).then((response) => {\n            const { publishCode, assestCount } = response.data\n            self.props.onUpdateReponseData({ assestCount: assestCount, publishCode: publishCode })\n        }).catch((ex) => {\n            self.props.onUpdateReponseData({ assestCount: 0, publishCode: item })\n        })\n\n\n    }\n\n    render() {\n        const { state, history, onLoadPublish } = this.props\n        const { active } = this.state\n        return <Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\n                return <Accordion.Item eventKey={pIndex}>\n                    <div className=\"menu-item\" key={`di_sc${pIndex}`}>\n                        <Accordion.Header className=\"w-100 disable_arrow\">\n                            <div className=\"d-flex justify-content-between align-items-center w-100\" onClick={this.onClickToEdit(item)}>\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\n                                <div className=\"d-flex align-items-center justify-content-end\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2\">\n                                            <i className=\"ri-edit-box-line me-0 icon-7\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px\"\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id })}>\n                                            <i className=\"ri-delete-bin-6-line me-0 icon-7\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Accordion.Header>\n                    </div>\n                    <Accordion.Body className=\"p-0 pt-3\">\n                        <EditWebEmbed history={history} item={item} key={`edit_digital_screen${pIndex}`} onLoadPublish={onLoadPublish} />\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            })\n            }\n        </Accordion>\n    }\n\n}\nexport default EmbedList\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from \"react-redux\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n//import Select from 'react-select';\nimport SVG from 'react-inlinesvg'\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport { EmbedURL } from '../../../../Services/Api'\nimport Filters from './Filters';\nimport Templates from './Template';\nimport Platforms from './Platforms';\nimport EmbedList from './EmbedList'\n\nclass DisplayScreenAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: []\n    };\n    componentDidMount() {\n        const clickResetFilter = document.querySelector(\"#billing_tab_panel-tab-aside-assets_filter\")\n        if (clickResetFilter) {\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\n        }\n    }\n\n    handleSelect(date) {\n\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList } = this.props\n        return <div className=\"card-body\">\n            <PerfectScrollbar>\n                <div className=\"innerAsideWrapper\">\n                    <div className=\"d-flex align-items-start justify-content-between\">\n                        <h6 className=\"fs-7 fw-bolder mb-0\">{`${isPublishEdit ? `Edit` : `Add`} Filter`}</h6>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm py-1\" onClick={event => history(\"/web-embed/\")}>New</button> */}\n                    </div>\n                    <Tab.Container id={`${isPublishEdit ? `edit_billing_tab_panel` : `billing_tab_panel`}`} defaultActiveKey=\"aside-assets_filter\">\n                        <Nav variant=\"underline\" className=\"border-bottom mb-3\">\n                            <Nav.Item className=\"\">\n                                <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\" onClick={isPublishEdit ? event => this.props.onUpdateReponseData(null) : null}>Assets Filter</Nav.Link>\n                            </Nav.Item>\n                            {!isPublishEdit ? <Nav.Item className=\"\">\n                                <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\n                            </Nav.Item> : null}\n                        </Nav>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"aside-assets_filter\">\n                                <label className=\"text-gray-800 mb-2\">Display Name <strong className=\"text-danger\">*</strong></label>\n                                <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n                                <div className=\"publish_aside_inner\">\n                                    {\n                                        state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                                    }\n                                    <Accordion defaultActiveKey={\"0\"}>\n                                        <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n                                            <Accordion.Header className=\"add_fillter_btn text-gray-800\">\n                                                <i className=\"ri-add-line plus_symbol me-1\"></i>\n                                                <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n                                                <span className=\"fs-9 fw-medium\">Choose Filter</span>\n                                            </Accordion.Header>\n                                            <Accordion.Body className=\"border rounded-1 mt-1\">\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the preferred collection</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none  disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                                <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\n                                                        <span className=\"fs-9 text-gray-500\">Choose the required network</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                                <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the connection type</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <i className=\"ri-image-line icon-6 text-gray-800\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\n                                                        <span className=\"fs-9 text-gray-500\">Choose the type of asset</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the preferred tag</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                                <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={18} width={18} />\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the preferred ugc rights status</span>\n                                                    </div>\n                                                </div>\n                                            </Accordion.Body>\n                                        </Accordion.Item>\n                                        <Templates {...this.props} key={templeteList.length > 0} />\n                                        <Platforms {...this.props} embedCodeCallback={this.embedCodeCallback} />\n                                    </Accordion>\n                                </div>\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                    <button type=\"button\" className={`btn btn-primary btn-sm ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Changes</button>\n                                </div>\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\n                                </div>\n\n                            </Tab.Pane>\n                            {!isPublishEdit ? <Tab.Pane eventKey=\"filter-assets_published\">\n                                <EmbedList {...this.props} />\n                            </Tab.Pane> : null}\n                        </Tab.Content>\n                    </Tab.Container>\n                </div>\n            </PerfectScrollbar>\n        </div>\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n\n    }\n}\nexport default connect(mapStateToProps)(DisplayScreenAside);"],"names":["AndOrCondition","this","props","condition","conditionApply","Dropdown","align","className","variant","capitalizeFirstLetter","onClick","Component","AssetsTypes","onAssetsApply","onSelectAllAssetsApply","state","filterApply","filterKey","onSelectActive","indexFilter","isLast","Accordion","activeKey","onSelect","eventKey","type","AndOr","htmlFor","name","value","id","checked","Object","keys","assetsApply","length","includes","Collections","onCollectionSearchFilter","onCollectionSelectAll","onCollectionApply","collectionList","selectedCollection","placeholder","onChange","map","item","CollectionThumb","symbolClasses","iconClass","thumb","thumbnails","thumbName","GET_MEDIA_NAME","isCollection","Network","networkList","feedNetworkList","feedData","networkData","networkConnectionId","networkId","Set","splice","indexOf","networksList","filter","network","setState","onNetworkApply","onClickSelectAll","onSearchFilter","src","baseUrl","height","width","selectedNetwork","GET_NETWORK_ICON","alt","UgcRights","onSelectAllUgcRigths","onUgcRigths","ugcRigths","Tags","tagString","newTag","listTags","selectedOption","onClickToRemoveTag","index","event","onClickNewAddTag","modalAssetData","String","push","addNewTag","target","setNewTags","onTagApply","tagList","label","tags","split","onTagRemove","classNamePrefix","isClearable","options","tagApply","tagItem","tagKey","connect","Connection","onconnectionApply","onConnectionSelectAll","onConnectionSearchFilter","selectedConnection","ReactHtmlParser","feedId","Filters","removeDuplicate","data","updateFilter","updateKey","ex","Templates","templeteList","isUpdate","onLoad","self","onFiltertemplateName","updated","onSelectTemplate","selectedTemplate","ToggleButtonGroup","defaultValue","temp","ToggleButton","Theme","to","templates","dispatch","getTemplateListDispatch","platformName","platform","Platforms","onSelectedPlatform","themeSkin","selectedPlatform","showGenratedCode","e","embedCodeCallback","HtmlEmbed","React","WordPressEmbed","WixEmbed","SquarespaceEmbed","ShopifyEmbed","OtherEmbed","DisplayScreenAside","dataWithComma","updateData","dataCollection","tagDataWithComma","assetsData","chooseActiveFilter","assetsType","collection","connection","source","ugcrights","WebEmbed","timeout","onClickToDelete","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","publishDeleteRequest","response","onLoadPublish","toast","chooseFilter","shareEmbedModal","genratedCodeCallback","renderSwitch","responseData","template","dataNetwork","searchText","clearTimeout","setTimeout","textConnectionSearch","toLowerCase","onLoadConnectionFilterData","searchData","textSearch","onLoadFilterData","networks","onLoadCollectionList","collectionData","collectionCompleteList","assetsCount","getCollectionList","catch","collectionSearch","onLoadCollectionFilterData","onChangeName","publishCodeName","onRequestPublish","ugcRigthsU","join","filterType","toUpperCase","isUpdating","updatePublishRequest","status","response_message","response_code","autoClose","onResetFilter","collectionApply","sourceApply","genrateCode","activeFilter","onUpdateReponseData","templateData","DataTemp","assets_type","ugc_status","publishList","selectedWebEmbed","feeds","nextProps","history","genratedCodeModal","isPublishEdit","filterList","EmbedList","active","onClickToEdit","getAssetsCount","publishCode","assestCount","defaultActiveKey","pIndex","OverlayTrigger","placement","overlay","Tooltip","EditWebEmbed","showModal","clickResetFilter","document","querySelector","addEventListener","date","Tab","Nav","Template","key"],"sourceRoot":""}