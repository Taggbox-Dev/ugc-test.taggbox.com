{"version":3,"file":"static/js/8427.f786acca.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/EmbedCode.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nimport { EmbedURL } from '../../../Services/Api'\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\n\nclass EmbedCode extends Component {\n    constructor() {\n        super();\n        this.state = { showModal: false, codeCopied: false, isLoading: false };\n    }\n    shareEmbedModal = event => this.setState({\n        showModal: true\n    })\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent\n        })\n    }\n\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    onClickToShare = (mailId) => event => {\n        var self = this;\n        this.setState({ isLoading: true })\n        if (mailId && String(mailId).length > 0) {\n            mailSendRequest({ htmlCode: document.querySelector(\"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\n                toast.success(\"Taggbox widget code successfully sent.\")\n                self.setState({ showModal: false, isLoading: false })\n            })\n\n        }\n        else {\n            toast.error(\"Please enter email id.\")\n        }\n    }\n    render() {\n        const { codeCopied, showModal } = this.state\n        const { copyText, data } = this.props\n        console.log(\"data\", data)\n        return <div className=\"embed_code\">\n            <div className=\"mb-5\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Width</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={100} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\n                                <Dropdown.Item href=\"#\">Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Viewport Width (VW)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Height</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={100} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\n                                <Dropdown.Item href=\"#\">Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Viewport Height (VH)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                </div>\n            </div>\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\n                    <Nav variant=\"nav\" className=\"mb-3\">\n                        <Nav.Item className=\"me-4\">\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Lite Code\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Iframe\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\n                                    &lt;div class=\"taggbox\" data-widget-id=\"{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:100%\"&gt;&lt;/div&gt;\n                                    &lt;script src=\"https://widget.taggbox.com/embed-lite.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\n                                            {!codeCopied ?\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 18.17 18.17\">\n                                                    <path id=\"Path_2\" data-name=\"Path 2\" d=\"M-932.08-463.83a2.92,2.92,0,0,1-2.92-2.92v-9.086a2.924,2.924,0,0,1,1.947-2.752v9.567a3.245,3.245,0,0,0,3.245,3.244h9.567a2.924,2.924,0,0,1-2.753,1.947Zm3.245-3.244a2.92,2.92,0,0,1-2.92-2.921v-9.085a2.92,2.92,0,0,1,2.92-2.92h9.086a2.92,2.92,0,0,1,2.92,2.92V-470a2.92,2.92,0,0,1-2.92,2.921Z\" transform=\"translate(935 482)\" fill=\"currentColor\" />\n                                                </svg>\n                                                :\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" fill=\"#6AC259\" />\n                                                </svg>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20.765 16.086\">\n                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-946.936-459.319A3.066,3.066,0,0,1-950-462.383V-471.3l9.755,5.956a1.179,1.179,0,0,0,1.227,0l9.783-5.956v8.917a3.066,3.066,0,0,1-3.065,3.065ZM-949.9-473a3.047,3.047,0,0,1,2.966-2.4H-932.3a3.045,3.045,0,0,1,2.965,2.4l-10.27,6.275Z\" transform=\"translate(950 475.404)\" fill=\"currentColor\" />\n                                            </svg>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                    &lt;iframe src=\"{EmbedURL}{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                            {!codeCopied ?\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 18.17 18.17\">\n                                                    <path id=\"Path_2\" data-name=\"Path 2\" d=\"M-932.08-463.83a2.92,2.92,0,0,1-2.92-2.92v-9.086a2.924,2.924,0,0,1,1.947-2.752v9.567a3.245,3.245,0,0,0,3.245,3.244h9.567a2.924,2.924,0,0,1-2.753,1.947Zm3.245-3.244a2.92,2.92,0,0,1-2.92-2.921v-9.085a2.92,2.92,0,0,1,2.92-2.92h9.086a2.92,2.92,0,0,1,2.92,2.92V-470a2.92,2.92,0,0,1-2.92,2.921Z\" transform=\"translate(935 482)\" fill=\"currentColor\" />\n                                                </svg>\n                                                :\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" fill=\"#6AC259\" />\n                                                </svg>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20.765 16.086\">\n                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-946.936-459.319A3.066,3.066,0,0,1-950-462.383V-471.3l9.755,5.956a1.179,1.179,0,0,0,1.227,0l9.783-5.956v8.917a3.066,3.066,0,0,1-3.065,3.065ZM-949.9-473a3.047,3.047,0,0,1,2.966-2.4H-932.3a3.045,3.045,0,0,1,2.965,2.4l-10.27,6.275Z\" transform=\"translate(950 475.404)\" fill=\"currentColor\" />\n                                            </svg>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n            <Suspense fallback={<></>}>\n               {showModal? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} />:null}\n            </Suspense>\n        </div>\n\n    }\n}\n\nexport default EmbedCode;"],"names":["ShareEmbedModal","React","EmbedCode","shareEmbedModal","event","setState","showModal","shareEmbedCallback","shareEmbedEvent","codeCopy","id","codeCopied","setTimeout","COPY_TO_CLIPBOARD","onClickToShare","mailId","self","isLoading","String","length","mailSendRequest","htmlCode","document","querySelector","innerText","email","type","then","response","toast","state","this","props","copyText","data","console","log","className","defaultValue","align","variant","title","href","defaultActiveKey","eventKey","onClick","style","wordBreak","Object","keys","wallId","placement","overlay","xmlns","viewBox","width","height","fill","d","transform","EmbedURL","Suspense","fallback","Component"],"sourceRoot":""}