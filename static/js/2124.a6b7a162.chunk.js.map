{"version":3,"file":"static/js/2124.a6b7a162.chunk.js","mappings":"iPAKMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAQ,IAAD,yBACf,cAAMA,IAKVC,cAAgB,SAAAC,GACZ,IAAQC,EAAqB,EAAKH,MAA1BG,iBACJC,GAAI,UACAC,EAAkB,EAAKC,MAAvBD,cACJA,GAAiBE,OAAOF,GAAeG,OAAS,IAChDC,EAAAA,EAAAA,IAAiB,CAAEC,KAAML,EAAeM,GAAIR,EAAiBQ,KAAMC,MAAK,SAACC,GACrEC,EAAAA,GAAAA,QAAc,qCACdV,EAAKJ,MAAMe,8BAA6B,EAC3C,GAER,EAhBkB,EAiBnBC,uBAAyB,SAAAd,GACrB,EAAKe,SAAS,CAAEZ,cAAeH,EAAMgB,OAAOC,OAC/C,EAnBkB,EAqBnBC,YAAc,SAAAlB,GAAK,OAAI,EAAKF,MAAMqB,uBAAsB,EAArC,EAnBf,EAAKf,MAAQ,CACTD,cAAeL,EAAMG,iBAAiBO,MAH3B,CAKlB,CA6CA,OA7CA,8BAkBD,WACI,MAAiDY,KAAKtB,MAA9CuB,EAAR,EAAQA,mBACAlB,GADR,EAA4BF,iBACFmB,KAAKhB,MAAvBD,eACR,OAAO,UAAC,IAAD,CAAOmB,KAAMD,EAAoBE,OAAQH,KAAKF,YACjD,kBAAgB,gCAChBM,UAAQ,EAFL,WAIH,SAAC,WAAD,CAAcC,aAAW,EAAzB,UACI,SAAC,UAAD,mCAEJ,SAAC,SAAD,WACI,gBAAKC,UAAU,iCAAf,UACI,iBAAKA,UAAU,mBAAf,WACI,kBAAOA,UAAU,2BAAjB,8BACA,gBAAKA,UAAU,WAAf,UACI,kBAAOC,KAAK,OAAOnB,KAAK,UAAUkB,UAAU,eAAeE,YAAY,2BAA2BC,SAAUT,KAAKN,uBAAwBG,MAAOd,cAKhK,SAAC,WAAD,CAAcuB,UAAU,MAAxB,UACI,iBAAKA,UAAU,4BAAf,WACI,mBAAQC,KAAK,SAASD,UAAU,0CAA0CI,QAASV,KAAKF,YAAxF,qBACA,mBAAQS,KAAK,SAASD,UAAU,mCAAmCI,QAASV,KAAKrB,cAAjF,2BAIf,OAnDCF,CAA8BkC,EAAAA,WAsDpC,W","sources":["Layouts/Main/MyAssets/CreateCollectionModal/RenameCollectionModal.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Modal } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { renameCollection } from '../../../../Services/Actions/homeActions'\nclass RenameCollectionModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collectioName: props.collectionRename.name\n        };\n    }\n    onClickCreate = event => {\n        const { collectionRename } = this.props\n        var self = this\n        const { collectioName } = this.state;\n        if (collectioName && String(collectioName).length > 0) {\n            renameCollection({ name: collectioName, id: collectionRename.id }).then((response) => {\n                toast.success(\"Collection name has been updated.\")\n                self.props.addCollectionCallbackWithAPI(false)\n            })\n        }\n    }\n    onChangeCollectionName = event => {\n        this.setState({ collectioName: event.target.value })\n    }\n\n    handleClose = event => this.props.addCollectionCallback(false)\n\n    render() {\n        const { addCollectionModal, collectionRename } = this.props\n        const { collectioName } = this.state\n        return <Modal show={addCollectionModal} onHide={this.handleClose}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Rename Collection</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0 pt-4\">\n                    <div className=\"row mb-4 mb-xl-5\">\n                        <label className=\"col-sm-3 text-muted mb-2\">Collection Name</label>\n                        <div className=\"col-sm-9\">\n                            <input type=\"text\" name=\"company\" className=\"form-control\" placeholder=\"Enter collection name...\" onChange={this.onChangeCollectionName} value={collectioName} />\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer className=\"p-3\">\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0\">\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm btn-min-w me-3\" onClick={this.handleClose}>Cancel</button>\n                    <button type=\"button\" className=\"btn btn-primary btn-sm btn-min-w\" onClick={this.onClickCreate}>Rename</button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    }\n}\n\nexport default RenameCollectionModal;\n"],"names":["RenameCollectionModal","props","onClickCreate","event","collectionRename","self","collectioName","state","String","length","renameCollection","name","id","then","response","toast","addCollectionCallbackWithAPI","onChangeCollectionName","setState","target","value","handleClose","addCollectionCallback","this","addCollectionModal","show","onHide","centered","closeButton","className","type","placeholder","onChange","onClick","Component"],"sourceRoot":""}