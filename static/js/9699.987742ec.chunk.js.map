{"version":3,"file":"static/js/9699.987742ec.chunk.js","mappings":"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","sources":["Layouts/Main/Feeds/Elements/SubmitFeedRequest.js","Layouts/Main/Feeds/Elements/InputField.js","Layouts/Main/Feeds/Elements/CheckboxField.js","Layouts/Main/Feeds/Airbnb/Airbnb.js","Layouts/Main/Feeds/Flickr/Flickr.js","Layouts/Main/Feeds/Tumblr/Tumblr.js","Layouts/Main/Feeds/Pinterest/Pinterest.js","Layouts/Main/Feeds/Giphy/Giphy.js","Layouts/Main/Feeds/Rss/Rss.js","Layouts/Main/Feeds/Elements/SearchPlace.js","Layouts/Main/Feeds/Yelp/Yelp.js","Layouts/Main/Feeds/Elements/InfoSection.js","Layouts/Main/Feeds/Linkedin/components/BulkDropzone.js","Layouts/Main/Feeds/Linkedin/Linkedin.js","Layouts/Main/Feeds/Youtube/components/YoutubeTabs.js","Layouts/Main/Feeds/Youtube/Youtube.js","Layouts/Main/Feeds/Elements/AccountPicker.js","Layouts/Main/Feeds/Yammer/Yammer.js","Layouts/Main/Feeds/Tiktok/components/AccountSelect.js","Layouts/Main/Feeds/Tiktok/Tiktok.js","Layouts/Main/Feeds/Vimeo/Vimeo.js","Layouts/Main/Feeds/Twitter/components/TwitterTab.js","Layouts/Main/Feeds/Twitter/Twitter.js","Layouts/Main/Feeds/Google/components/PlaceDropDown.js","Layouts/Main/Feeds/Google/components/GoogleTab.js","Layouts/Main/Feeds/Google/Google.js","Layouts/Main/Feeds/Slack/components/SlackTab.js","Layouts/Main/Feeds/Slack/Slack.js","Layouts/Main/Feeds/Facebook/components/FacebookTab.js","Layouts/Main/Feeds/Elements/ConnectAccount.js","Layouts/Main/Feeds/Facebook/Facebook.js","Layouts/Main/Feeds/Instagram/components/InstagramTab.js","Layouts/Main/Feeds/Instagram/Instagram.js","Layouts/Main/MyAssets/AddAssetsModal/Compontnets/Elements/AddFeedByNetwork.js","../node_modules/react-places-autocomplete/dist/PlacesAutocomplete.js","../node_modules/react-places-autocomplete/dist/helpers.js","../node_modules/react-places-autocomplete/dist/index.js","../node_modules/react-places-autocomplete/dist/utils.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport NeedSupport from '../../CommonComponents/NeedSupport';\n\n\nclass SubmitFeedRequest extends Component {\n\n    render() {\n        const { supportUrl, videoUrl, cancelFeed, sumbitFeed, loading, hideBtn, buttonText } = this.props;\n        return <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\n            <Suspense fallback={<></>}>\n                <NeedSupport content={'Need Help'} supportUrl={supportUrl} videoUrl={videoUrl} />\n            </Suspense>\n            <div className=\"my-1 d-flex align-items-center justify-content-end flex-wrap\">\n                <button type=\"button\" className=\"btn btn-secondary me-3\" onClick={() => cancelFeed()}>Cancel</button>\n                {!hideBtn && <button type=\"button\" className={`btn btn-primary ${loading ? 'spinner spinner-right disabled' : ''}`} onClick={() => sumbitFeed()}> {buttonText ? buttonText : `Create Connection`}</button>}\n            </div>\n        </div>\n    }\n}\n\nexport default SubmitFeedRequest;","import React, { Component } from 'react';\n\nclass InputField extends Component{\n    render(){\n        const {value,onChangeHandler,placeholder,name,autoComplete,className} = this.props;\n        return <input type=\"text\" name={name} className={className} placeholder={placeholder} value={value} onChange={onChangeHandler} autoComplete={autoComplete?\"off\":\"\"}/>\n    }\n}\n\nexport default InputField;","import React, { Component } from 'react';\n\nclass CheckBoxField extends Component {\n    render() {\n        const { isChecked, onChangeHandler, name } = this.props;\n        return <>\n            <input className=\"form-check-input\" type=\"checkbox\" name={name} checked={isChecked} onChange={onChangeHandler} />\n            {this.props.children}\n        </>\n    }\n}\n\nexport default CheckBoxField;","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { capitalizeFirstLetter } from \"../../../../Services/Utils/utils\";\nimport InputField from \"../Elements/InputField\";\nimport CheckBoxField from \"../Elements/CheckboxField\";\nimport { createFeedAction } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\n\nclass Airbnb extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageUrl: '',\n            error: false,\n            moderation: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onSubmit = () => {\n        const { pageUrl, moderation } = this.state;\n        const { collection, networkId, history } = this.props;\n\n        if (!pageUrl || pageUrl == \"\") this.setState({ error: true })\n        else {\n\n            this.setState({ error: false, loading: true })\n\n            var obj = {\n                collection: collection != null ? collection.value : '',\n                networkId: networkId,\n                filter: 56,\n                airbnb_page_review: pageUrl,\n                moderation: moderation ? 1 : 0,\n            }\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                history('/assets');\n            });\n        }\n    }\n\n\n\n    render() {\n        const { pageUrl, error, moderation, loading, selectedFilterTab } = this.state;\n        const { filterTabs } = this.props;\n        return <>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                <div className=\"addSourceTabs\">\n                    {filterTabs && Object.keys(filterTabs).length > 1 ?\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\">\n                                                                <i className=\"ri-link icon-6\"></i>\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        : null}\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <Tab.Content>\n                                    <Tab.Pane eventKey={\"Listing Url\"}>\n                                        <div className=\"mb-2 mb-xl-3\">\n                                            <div className=\"position-relative w-100\">\n                                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                    <i className=\"ri-link icon-5\"></i>\n                                                </span>\n                                                <InputField name={\"pageUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Airbnb Page Url\" value={pageUrl} onChangeHandler={this.onChangeHandler} />\n                                                {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                            </div>\n                                        </div>\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Tab.Container>\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Airbnb)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\n\nclass Flickr extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n\n    onSubmit = () => {\n        const { hashtag, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId, history } = this.props;\n\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n\n            this.setState({ error: false, handleError: false, loading: true })\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n\n                })\n\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                field1: handle,\n                field2: hashtag,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n\n            if (selectedFilterId == 1) {\n                obj['field2'] = ''\n            } else if (selectedFilterId == 2) {\n                obj['field1'] = ''\n            }\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                history('/assets');\n            });\n        }\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 1: // @\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            case 2: // Hashtag\n                return <i className=\"ri-hashtag icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(2)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} name={\"hashtag\"} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(1)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} name={\"handle\"} placeholder=\"Enter handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                        {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Flickr)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\nconst channel = new BroadcastChannel('connect');\nclass Tumblr extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onSubmit = () => {\n        const { hashtag, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n            if (selectedFilterId == 1) {\n                obj['feedText'] = handle\n            } else if (selectedFilterId == 2) {\n                obj['feedText'] = hashtag\n            }\n\n            this.setState({ error: false, handleError: false, loading: true })\n\n            createFeedAction(obj, networkId, (getFeedId) => {\n                this.props.getAllfeeds()\n                this.props.closeAddFeed();\n                this.setState({ loading: false });\n                if (getFeedId) {\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                    else {\n                        if (String(window.location.href).includes(\"assets\")) {\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                        }\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                    }\n\n\n                }\n            });\n\n        }\n    }\n\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 2: // Hashtag\n                return <i className=\"ri-hashtag icon-6\"></i>\n                break;\n            case 1: // Handle\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\n                                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(2)}\n                                                    </span>\n                                                    <InputField name={\"hashtag\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(1)}\n                                                    </span>\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tumblr)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\nconst channel = new BroadcastChannel('connect');\nclass Pinterest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userBoard: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            errorMsg: \"This field is required\",\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    onSubmit = () => {\n        const { userBoard, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        } else if (selectedFilterTab == 'User Board' && userBoard == '') {\n            this.setState({ error: true, errorMsg: \"This field is required\" });\n        } else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                field12boardurl: '',\n                field1: ''\n            }\n\n            if (selectedFilterId == 1) {\n                obj['field1'] = handle\n            } else if (selectedFilterId == 12) {\n                obj['field12boardurl'] = userBoard\n\n                if (userBoard.includes('pinterest.com')) {\n                    let url = userBoard.split(\"https://in.pinterest.com/\")[1].replace(\"/\", \"\");\n                    if (url) {\n                        obj['field1'] = url;\n                    } else {\n                        this.setState({ errorMsg: 'This field must contain a url.', error: true })\n                        return false\n                    }\n                } else {\n                    this.setState({ errorMsg: 'This field must contain a url.', error: true })\n                    return false\n                }\n            }\n\n            this.setState({ error: false, handleError: false, loading: true });\n\n            createFeedAction(obj, networkId, (getFeedId) => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false, isAuthRequired: true });\n                this.props.closeAddFeed()\n                if (getFeedId) {\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                    else {\n                        if (String(window.location.href).includes(\"assets\")) {\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                        }\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                    }\n\n\n                }\n            });\n\n        }\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 1: // @\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            case 12: // Link\n                return <i className=\"ri-link icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { userBoard, handle, moderation, handleError, error, loading, selectedFilterTab, errorMsg } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(1)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} name={\"handle\"} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                        {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"User Board\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(12)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} name={\"userBoard\"} placeholder=\"https://in.pinterest.com/taggbox/taggbox-social-blog/\" value={userBoard} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">{errorMsg}</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pinterest)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\nclass Giphy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: \"\",\n            sticker: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            stickerError: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, stickerError: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n\n    onSubmit = () => {\n        const { search, sticker, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId, history } = this.props;\n\n        if (selectedFilterTab == 'search' && search == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'search sticker' && sticker == '') {\n            this.setState({ stickerError: true });\n        } else if (selectedFilterTab == 'handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n\n                })\n\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n            if (selectedFilterId == 64) {\n                obj['field'] = search\n            } else if (selectedFilterId == 63) {\n                obj['field'] = sticker\n            } else if (selectedFilterId == 1) {\n                obj['field'] = handle\n            }\n\n            this.setState({ error: false, handleError: false, stickerError: false, loading: true });\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                history('/assets');\n            });\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 64: // Search\n                return <i className=\"ri-search-line icon-6\"></i>\n                break;\n            case 63: // Sticker\n                return <i className=\"ri-emoji-sticker-line icon-6\"></i>\n                break;\n            case 1: // Handle\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { search, handle, sticker, moderation, handleError, error, loading, selectedFilterTab, stickerError } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\n                                            const { feedName, feedtype, filter } = filterTab;\n                                            return <Nav.Item className=\"p-1\" key={index}>\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                        {this.feedIcon(filter)}\n                                                    </span>\n                                                    {capitalizeFirstLetter(feedtype)}\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        })}\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Tab.Content>\n                                        <Tab.Pane eventKey={\"search\"}>\n                                            <div className=\"mb-2 mb-xl-3\">\n                                                <div className=\"position-relative w-100\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(64)}\n                                                    </span>\n                                                    <InputField name={\"search\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Search giphy keyword to fetch feed\" value={search} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                        <Tab.Pane eventKey={\"search sticker\"}>\n                                            <div className=\"mb-2 mb-xl-3\">\n                                                <div className=\"position-relative w-100\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(63)}\n                                                    </span>\n                                                    <InputField name={\"sticker\"} className={`form-control form-control-lg fw-bolder px-9 ${stickerError ? 'is-invalid' : ''}`} placeholder=\"Search giphy keyword to fetch feed\" value={sticker} onChangeHandler={this.onChangeHandler} />\n                                                    {stickerError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                        <Tab.Pane eventKey={\"handle\"}>\n                                            <div className=\"mb-2 mb-xl-3\">\n                                                <div className=\"position-relative w-100\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(1)}\n                                                    </span>\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                    </Tab.Content>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Giphy)","import React, { Component } from 'react';\nimport { saveAs } from 'file-saver';\nimport { connect } from 'react-redux';\nimport { Nav, Tab, Collapse } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\n\nconst channel = new BroadcastChannel('connect');\nclass Rss extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            feedUrl: \"\",\n            moderation: false,\n            error: false,\n            urlError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n            sampleXml: false,\n            isRequest: false\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n\n    onSubmit = () => {\n        const { name, feedUrl, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (name == '') {\n            this.setState({ error: true });\n        } else if (feedUrl == '') {\n            this.setState({ urlError: true });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                fieldtitle: name,\n            }\n\n            if (!feedUrl.includes(\"://\")) {\n                this.setState({ urlError: true });\n                return;\n            } else {\n                obj['field'] = feedUrl;\n            }\n\n            this.setState({ error: false, urlError: false, loading: true });\n\n            createFeedAction(obj, networkId, (getFeedId) => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                if (getFeedId) {\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                    else {\n                        if (String(window.location.href).includes(\"assets\")) {\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                        }\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                    }\n\n\n                }\n            });\n\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 18: // Link\n                return <i className=\"ri-link icon-4\"></i>\n                break;\n            case 16: // Text\n                return <i className=\"ri-text icon-4\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    onClickToDwonloadSample = event => {\n        this.setState({ isRequest: true }, () => {\n            saveAs(baseUrl(\"media/downloads/sample-xml.txt\"), `sample-xml.txt`);\n            setTimeout(() => this.setState({ isRequest: false }), 2000)\n        })\n\n\n    }\n\n    render() {\n        const { filterTabs } = this.props;\n        const { name, feedUrl, moderation, urlError, error, loading, selectedFilterTab, sampleXml, isRequest } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        {filterTabs && Object.keys(filterTabs).length > 1 ?\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <div className=\"\">\n\n                                            <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                                {\n                                                    filterTabs && filterTabs.map((filterTab, index) => {\n                                                        const { feedName, feedtype, filter } = filterTab;\n                                                        return <Nav.Item className=\"p-1\" key={index}>\n                                                            <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                                <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                    {this.feedIcon(filter)}\n                                                                </span>\n                                                                {capitalizeFirstLetter(feedtype)}\n                                                            </Nav.Link>\n                                                        </Nav.Item>\n                                                    })\n                                                }\n                                            </Nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            : null}\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab} Details</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Tab.Content>\n                                        <Tab.Pane eventKey={\"RSS\"}>\n                                            <div className='row'>\n                                                <div className=\"col-sm-6\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(16)}\n                                                        </span>\n                                                        <InputField name={\"name\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Display Name\" value={name} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-sm-6\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(18)}\n                                                        </span>\n                                                        <InputField name={\"feedUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${urlError ? 'is-invalid' : ''}`} placeholder=\"Feed URL\" value={feedUrl} onChangeHandler={this.onChangeHandler} />\n                                                        {urlError ? <span className=\"invalid-feedback\">This field must contain a url</span> : null}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                    </Tab.Content>\n                                    <div className=\"d-flex w-100 justify-content-end mt-2\">\n                                        <button type=\"button\" className=\"btn p-0 text-decoration-underline\" onClick={() => this.setState({ sampleXml: !sampleXml })}>\n                                            <span className=\"text-right fw-semibold\">Download Sample Format</span>\n                                        </button>\n                                    </div>\n                                    <Collapse in={sampleXml}>\n                                        <div>\n                                            <div className=\"block-center flex-column m-auto py-3\" style={{ maxWidth: 530 }}>\n                                                <img className=\"h-auto w-100\" src={baseUrl(\"media/images/demo/sample-design--xml-rss-feed.png\")} height=\"600\" width=\"300\" alt=\"sample Rss\" />\n                                                <div className={`btn btn-sm btn-secondary ${isRequest ? `spinner disabled` : ``}`} download onClick={this.onClickToDwonloadSample}>\n                                                    <i className=\"ri-download-2-line\"></i>\n                                                    Download Sample\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rss)","import React, { useState } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress,getLatLng} from \"react-places-autocomplete\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\n\n\nexport default function SearchPlace(props) {\n  const [address, setAddress] = useState(\"\");\n  const [list, setList] = useState(false);\n  const [spinnerActive, spinnerActiveFun] = useState(false);\n\n\n  const handleChange = (e) => { setAddress(e); setList(true); props.onFieldTextChange(\"\", \"\") };\n\n  const handleSelect = address => {\n    spinnerActiveFun(true)\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        props.onLatlanChange(`${latLng.lat},${latLng.lng}`)\n        spinnerActiveFun(false)\n      })\n      .catch(error => console.error('Error', error));\n  };\n\n  const handleSelect1 = (v1, v2) => {\n    props.onFieldTextChange(v1, v2)\n    setAddress(v1);\n    setList(false);\n  };\n\n\n  return (<PlacesAutocomplete\n            value={address}\n            onChange={handleChange}\n            onSelect={handleSelect}\n          >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div className=\"position-relative w-100\">\n              <i className=\"ri-map-pin-2-line icon-5 text-gray-500 position-absolute bottom-0 start-0 translate-middle-x mx-5 my-3\"></i>\n              <input {...getInputProps({ placeholder: \"Type address\" })} className={`form-control form-control-lg fw-bolder px-9 ${props.error?'is-invalid':''}`}  autoComplete=\"off\"/>\n              {spinnerActive ? <div className=\"spinner spinner-gray\" style={{top:-22}}></div> : null}\n              {list && address.length > 0 ?\n                <Dropdown className={`w-100`} show>\n                  <Dropdown.Menu className=\"w-100\">\n                      <PerfectScrollbar options={ { wheelPropagation: false } }>\n                        {suggestions.map(suggestion => {\n                          return (<Dropdown.Item className=\"text-break\" {...getSuggestionItemProps(suggestion)} onClick={() => { handleSelect1(suggestion.description, suggestion.placeId); handleSelect(suggestion.description) }} style={{whiteSpace:'normal'}}> {suggestion.description}</Dropdown.Item>);\n                        })}\n                      </PerfectScrollbar>\n                  </Dropdown.Menu>\n                </Dropdown>\n                : ''}\n            </div>\n        )}\n      </PlacesAutocomplete>\n  );\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab, Dropdown } from \"react-bootstrap\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { capitalizeFirstLetter, debounce } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport HttpClient from '../../../../Services/http-client';\nimport SearchPlace from '../Elements/SearchPlace';\nimport { AUTOCOMPLETE } from '../../../../Services/Api';\n\n\nconst channel = new BroadcastChannel('connect');\nclass Yelp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            businessUrlError: false,\n            businessUrl: '',\n            location: '',\n            locationError: false,\n            keyword: '',\n            keywordError: false,\n            keywordList: [],\n            slug: null,\n            latlng: \"\",\n            moderation: false,\n            isSelectedFromList: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    autoComplete = debounce((e) => {\n        new HttpClient()\n            .post(`${AUTOCOMPLETE}`, {\n                networkId: this.props.networkId,\n                handle: e.target.value,\n                Latlng: this.state.latlng\n            })\n            .then((response) => {\n                const result = response.data;\n                if (result.response_code === 200) {\n                    this.setState({ keywordList: result.responseData });\n                }\n            }).catch((ex) => {\n\n            })\n    });\n\n    handleOnChange = (e) => {\n        if (e.target.name === \"location\") {\n            this.locationApiCall(e);\n        } else if (e.target.name === \"keyword\") {\n            this.autoComplete(e);\n        }\n        this.setState((perv) => ({ ...perv, [e.target.name]: e.target.value, businessUrlError: false, isSelectedFromList: false, keywordError: false }));\n    }\n\n    keywordSelected = (item) => {\n        this.setState((prev) => ({ ...prev, keyword: item.data_handle_playlistName, isSelectedFromList: true, keywordList: [], slug: item.data_slug_alias }));\n    }\n\n    onTextFieldChange = (value) => this.setState((prev) => ({ ...prev, location: value, locationError: false }));\n    onLatlanChange = (value) => this.setState((prev) => ({ ...prev, latlng: value }));\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    onSubmit = () => {\n        const { businessUrl, location, keyword, selectedFilterId, selectedFilterTab, moderation, isSelectedFromList, slug } = this.state;\n        const { collection, networkId } = this.props;\n\n        if ((businessUrl == '' && selectedFilterTab === \"Business Page\")) {\n            this.setState({ businessUrlError: true });\n        } else if (location == '' && selectedFilterTab === \"Business Name\") {\n            this.setState({ locationError: true });\n        } else if (keyword == '' && selectedFilterTab === \"Business Name\") {\n            this.setState({ keywordError: true });\n        } else {\n            if (!isSelectedFromList && selectedFilterTab === \"Business Name\") {\n                this.setState({ keywordError: true });\n                return;\n            }\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                businessPageUrl27: businessUrl,\n                businessName28: location,\n                businessKeywordfield28: keyword,\n                businessKeyword28: slug,\n                moderation: 0\n            }\n\n            if (selectedFilterId === 27) {\n                obj['businessName28'] = '';\n                obj['businessKeywordfield28'] = '';\n                obj['businessKeyword28'] = '';\n            } else if (selectedFilterId === 28) {\n                obj['businessPageUrl27'] = '';\n            }\n\n            this.setState({ businessUrlError: false, locationError: false, keywordError: false, loading: true })\n\n            createFeedAction(obj, networkId, (getFeedId) => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                if (getFeedId) {\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                    else {\n                        if (String(window.location.href).includes(\"assets\")) {\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                        }\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                    }\n\n\n                }\n            });\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 27: // flag\n                return <i className=\"ri-flag-2-line icon-6\"></i>\n                break;\n            case 30: // Text\n                return <i className=\"ri-text icon-6\"></i>\n                break;\n            case 28: // Store\n                return <i className=\"ri-store-2-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { businessUrl, businessUrlError, keyword, moderation, keywordList, keywordError, locationError, loading, selectedFilterTab } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\n                                            const { feedName, feedtype, filter } = filterTab;\n                                            return <Nav.Item className=\"p-1\" key={index}>\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                        {this.feedIcon(filter)}\n                                                    </span>\n                                                    {capitalizeFirstLetter(feedtype)}\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        })}\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Business Page\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(27)}\n                                                        </span>\n                                                        <InputField name={\"businessUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${businessUrlError ? 'is-invalid' : ''}`} placeholder=\"Enter Business Page Url\" value={businessUrl} onChangeHandler={this.handleOnChange} />\n                                                        {businessUrlError && <span className=\"invalid-feedback\">Please enter Business Page Url</span>}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Business Name\"}>\n                                                <div className=\"row gx-3\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"mb-2 mb-xl-3\">\n                                                            <span className={`mb-2 mb-xl-3 ${locationError ? 'is-invalid' : ''}`}>\n                                                                <SearchPlace onLatlanChange={this.onLatlanChange} onFieldTextChange={this.onTextFieldChange} error={locationError} />\n                                                            </span>\n                                                            {locationError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"mb-2 mb-xl-3\">\n                                                            <Dropdown className={`w-100 ${keywordError ? 'is-invalid' : ''}`} autoClose=\"outside\">\n                                                                <Dropdown.Toggle variant='' className=\"p-0 w-100 arrow_disabled position-relative\">\n                                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                                        {this.feedIcon(30)}\n                                                                    </span>\n                                                                    <InputField name={\"keyword\"} className={`form-control form-control-lg fw-bolder px-9`} placeholder=\"Enter Keyword\" value={keyword} onChangeHandler={this.handleOnChange} autoComplete={true} />\n                                                                </Dropdown.Toggle>\n                                                                {(keywordList && keywordList.length > 0) &&\n                                                                    <Dropdown.Menu className=\"w-100\">\n                                                                        <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                                                            <div className=\"feedDropdown\">\n                                                                                {keywordList.map((item) => <Dropdown.Item className=\"w-100\" onClick={() => this.keywordSelected(item)}>\n                                                                                    <div className=\"d-flex algin-items-center\">\n                                                                                        <img className=\"h-30px w-30px object-center-cover rounded-1 me-1\" src={item.image_url} height={30} width={30} alt={item.data_handle_playlistName} />\n                                                                                        <div className=\"d-flex flex-column justify-content-start\">\n                                                                                            <p className=\"fw-bold fs-8 mb-0\">{item.data_handle_playlistName}</p>\n                                                                                            <span className=\"fs-10 mb-0\">{item.url}</span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </Dropdown.Item>\n                                                                                )}\n                                                                            </div>\n                                                                        </PerfectScrollbar>\n                                                                    </Dropdown.Menu>}\n                                                            </Dropdown>\n                                                            {keywordError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                                            <div className=\"wrap_yelp_sugg\"> </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Yelp)","import { Component } from \"react\";\n\nclass InfoSection extends Component {\n    render() {\n        const { text } = this.props;\n        return <div className=\"d-flex alert alert-info\">\n                    <i className=\"ri-information-line icon-3 me-2 text-muted\"></i>\n                    <div className=\"d-flex justify-content-center align-items-start flex-column flex-grow-1\">\n                        <p className=\"mb-0\">{text}</p>\n                    </div>\n                </div>\n    }\n}\n\nexport default InfoSection;","import React, { Component } from 'react'\nimport Uppy from '@uppy/core';\nimport { DragDrop } from '@uppy/react'\nimport Transloadit from '@uppy/transloadit';\nimport { toast } from 'react-toastify';\nimport { MEDIA_PATH } from '../../../../../Services/Api';\n\n\n\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\nconst uppyBucket = 'cloud.taggbox.com';\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\n\n\nclass BulkDropzone extends Component {\n    constructor(props) {\n        super(props);\n\n        this.uppyOne = new Uppy({\n            debug: true, autoProceed: true, restrictions: {\n                maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['.csv'],\n            }\n        }).use(Transloadit, {\n            target: '#a',\n            params: {\n                auth: {\n                    key: uppyKey\n                },\n                steps: {\n                    store: {\n                        robot: \"/wasabi/store\",\n                        bucket_region: \"us-west-1\",\n                        bucket: uppyBucket,\n                        key: uppyAwsKey,\n                        secret: uppyAwsSecret,\n                        path: 'postimage/${file.id}'\n                    },\n                }\n            },\n            waitForEncoding: true\n        });\n    }\n\n\n    componentDidMount() {\n        this.uppyOne.on('transloadit:result', (stepName, result) => {\n            this.props.onUploadSuccess(result.original_name, result.url);\n            this.uppyOne.cancelAll()\n        });\n        this.uppyOne.on(\"restriction-failed\", (file, error) => {\n\n            let fileType = file.type.split('/');\n\n            if (fileType[0] != 'csv') {\n                toast.error(\"You can only upload csv File\",{autoClose:3000});\n                return false\n            }\n\n\n            if (file.size > 5000000) {\n                toast.error(\"Maximum allowed size of 4.8 MB\",{autoClose:3000});\n                return false\n            }\n\n        });\n    }\n\n    componentWillUnmount() {\n        this.uppyOne.cancelAll()\n        this.uppyOne.close({ reason: 'unmount' })\n    }\n\n    render() {\n        const { fileName } = this.props;\n\n        return <div className=\"bulkURL-box mb-2\">\n            <DragDrop\n                proudlyDisplayPoweredByUppy={false}\n                hideUploadButton={false}\n                showProgressDetails={false}\n                disableThumbnailGenerator={false}\n                height={150}\n                width={'100%'}\n                showSelectedFiles={true}\n                showRemoveButtonAfterComplete={false}\n                disableInformer={true}\n                uppy={this.uppyOne}\n            />\n            <div className=\"selected-file\">\n                {fileName}\n            </div>\n        </div>\n\n    }\n}\n\n\nexport default BulkDropzone","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport InputField from '../Elements/InputField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { toast } from 'react-toastify';\nimport InfoSection from '../Elements/InfoSection';\nimport BulkDropzone from './components/BulkDropzone';\n\nconst channel = new BroadcastChannel('connect');\nclass LinkedIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            postUrl: \"\",\n            handle: \"\",\n            moderation: false,\n            imageUrl: null,\n            fileName: 'Your selected file name',\n            error: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onUploadSuccess = (fileName, url) => {\n        this.setState({ imageUrl: url, fileName: fileName });\n    };\n\n    onSubmit = () => {\n        const { postUrl, imageUrl, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (selectedFilterTab == 'Post Url' && postUrl == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Bulk URLs' && imageUrl == null) {\n            toast.error(\"Please upload a Csv File\", { autoClose: 3000 });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n            if (selectedFilterId == 16) {\n                obj['field'] = postUrl\n            } else if (selectedFilterId == 18) {\n                obj['field'] = imageUrl\n            }\n\n            this.setState({ error: false, loading: true })\n            createFeedAction(obj, networkId, (getFeedId) => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                if (getFeedId) {\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                    else {\n                        if (String(window.location.href).includes(\"assets\")) {\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                        }\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                    }\n\n\n                }\n            });\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 16: // Link\n                return <i className=\"ri-link icon-6\"></i>\n                break;\n            case 18: // Links\n                return <i className=\"ri-links-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { postUrl, fileName, moderation, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Post Url\"}>\n                                                <div className=\"position-relative w-100 mb-3\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(16)}\n                                                    </span>\n                                                    <InputField name={\"postUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter LinkedIn Post Url\" value={postUrl} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                <InfoSection text={\"LinkedIn auto update is not available due to changes made by LinkedIn in MDP API Recently. However, we are providing a solution for this condition you can simply add a post URL from your company page one by one manually and display your LinkedIn post on your website.\"} />\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Bulk URLs\"}>\n                                                <BulkDropzone onUploadSuccess={this.onUploadSuccess} fileName={fileName} />\n                                                <div className=\"d-flex w-100 justify-content-end mb-3\">\n                                                    <span className=\"text-right fw-medium\">\n                                                        Download the\n                                                        <a href={baseUrl('media/downloads/csv-sample.csv')} target='_blank' className=\"text-decoration-underline mx-1 fw-semibold\" download>Sample CSV template</a>\n                                                        to see an example of the format required\n                                                    </span>\n                                                </div>\n                                                <InfoSection text={\"You can upload 50 urls at one time.\"} />\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkedIn)","import React, { Component } from 'react'\nimport SearchPlace from '../../Elements/SearchPlace';\nimport CheckBoxField from '../../Elements/CheckboxField'\nimport InputField from '../../Elements/InputField';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\nimport { youtubeAutoComplete } from '../../../../../Services/Actions/addFeedAction';\nimport { debounce } from '../../../../../Services/Utils/utils';\n\n\nexport default class YoutubeTabs extends Component {\n\n    state = {\n        list: [],\n        spinnerActive: false\n    }\n\n    autoComplete = debounce((query, type) => youtubeAutoComplete(query, type).then(res => {\n        const { data } = res\n        if (data && Object.keys(data).length > 0) {\n            this.setState({ list: data.items })\n        }\n    }))\n\n\n    onYoutubeChange = query => {\n        const { onValueChange, tab } = this.props\n        this.setState({ spinnerActive: true })\n        if ([\"Play List\", \"Channel Url\", \"Shorts\"].includes(tab)) {\n            try {\n                const type = tab == \"Play List\" ? \"playlist\" : \"channel\"\n                onValueChange(query);\n                this.autoComplete(query, type);\n                this.setState({ spinnerActive: false })\n            } catch (error) {\n\n                this.setState({ spinnerActive: false })\n            }\n        }\n        else {\n            onValueChange(query);\n            this.setState({ spinnerActive: false })\n        }\n    }\n\n    onListClick = (item) => {\n        try {\n            const { onValueChange, tab, onChannelIdChange, } = this.props\n            onValueChange(tab == \"Play List\" ? item.snippet.title : item.snippet.channelTitle)\n            onChannelIdChange(`${tab == \"Play List\" ? item.id.playlistId : tab == \"Shorts\" ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`)\n            document.getElementById(`feedsfield-${tab}`).value = `https://www.youtube.com/${tab == \"Play List\" ? \"playlist?list=\" : \"channel/\"}${tab == \"Play List\" ? item.id.playlistId : tab == \"Shorts\" ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`\n            this.setState({ list: [] })\n        } catch (error) {\n\n        }\n    }\n\n    render() {\n        const { tab, onValueChange, checkBox, onCheckBoxChange, onKeywordChange, keyword, error, onLatlanChange, shortError, playListError, keywordError, locationError, locationKeywordError, filter, feedIcon } = this.props\n        const { list, spinnerActive } = this.state\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className={`col-md-${tab == \"Location\" ? '6' : '12'}`}>\n                        <div className=\"mb-3\">\n                            {tab == \"Location\" ?\n                                <SearchPlace onFieldTextChange={onValueChange} onLatlanChange={onLatlanChange} error={(tab == \"Location\" && locationError)} />\n                                :\n                                <Dropdown className={`w-100 ${(tab == \"Channel Url\" && error) || (tab == \"Shorts\" && shortError) || (tab == \"Play List\" && playListError) || (tab == \"Keywords\" && keywordError) || (tab == \"Location\" && locationError) ? 'is-invalid' : ''}`} autoClose=\"outside\">\n                                    <Dropdown.Toggle variant='' className=\"p-0 w-100 arrow_disabled position-relative\">\n                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                            {feedIcon(filter)}\n                                        </span>\n                                        <input placeholder={`${tab == \"Location\" ? \"\" : \"Enter\"} ${tab == \"Shorts\" || tab == \"Channel Url\" ? \"channel url\" : tab == \"Play List\" ? \"Play List ID\" : tab == \"Keywords\" ? \"keyword\" : \"\"}`} className={`form-control form-control-lg fw-bolder px-9`} id={`feedsfield-${tab}`} type=\"text\" onChange={e => this.onYoutubeChange(e.target.value)} />\n                                        {spinnerActive ? <div className=\"spinner\" style={{ top: -22 }}></div> : null}\n                                    </Dropdown.Toggle>\n                                    {list && list.length ?\n                                        <Dropdown.Menu className=\"w-100\">\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                                <div className=\"feedDropdown\">\n                                                    {list.map(item => (\n                                                        <Dropdown.Item onClick={() => this.onListClick(item)}>\n                                                            <div className=\"d-flex algin-items-center\">\n                                                                <img className=\"h-30px w-30px object-center-cover rounded-1 me-1\" src={item.snippet.thumbnails.default.url} />\n                                                                <div className=\"d-flex flex-column justify-content-start\">\n                                                                    <p className=\"fw-bold fs-8 mb-0\">{item.snippet.channelTitle}</p>\n                                                                    <span className=\"fs-10 mb-0\">{`https://www.youtube.com/${tab == \"Play List\" ? \"playlist?list=\" : \"channel/\"}${tab == \"Play List\" ? item.id.playlistId : item.id.channelId}`}</span>\n                                                                </div>\n                                                            </div>\n                                                        </Dropdown.Item>\n                                                    ))}\n                                                </div>\n                                            </PerfectScrollbar>\n                                        </Dropdown.Menu>\n                                        : null}\n                                </Dropdown>\n                            }\n                            {(tab == \"Channel Url\" && error) || (tab == \"Shorts\" && shortError) || (tab == \"Play List\" && playListError) || (tab == \"Keywords\" && keywordError) || (tab == \"Location\" && locationError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                        </div>\n                    </div>\n                    {tab == \"Location\" ?\n                        <div className=\"col-md-6\">\n                            <div className=\"position-relative mb-3\">\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                    {feedIcon(4)}\n                                </span>\n                                <InputField name={\"keyword\"} className={`form-control form-control-lg fw-bolder px-9 ${(tab == \"Location\" && locationKeywordError) ? 'is-invalid' : ''}`} placeholder=\"Enter keywords\" value={keyword} onChangeHandler={(e) => onKeywordChange(e.target.value)} />\n                            </div>\n                            {(tab == \"Location\" && locationKeywordError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                        </div>\n                        : null\n                    }\n\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeed, createFeedAction, createPost } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport YoutubeTabs from './components/YoutubeTabs';\n\n\nconst channel = new BroadcastChannel('connect');\nclass YoutubeFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textField: \"\",\n            moderation: false,\n            keyword: \"\",\n            error: false,\n            shortError: false,\n            playListError: false,\n            keywordError: false,\n            locationError: false,\n            locationKeywordError: false,\n            channelId: \"\",\n            latlng: \"\",\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    onTextFieldChange = (value) => this.setState({ textField: value, error: false, shortError: false, keywordError: false, playListError: false, keywordError: false })\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n    onKeywordChange = (value) => this.setState({ keyword: value, locationKeywordError: false })\n    onChannelIdChange = (value) => this.setState({ channelId: value })\n    onLatlanChange = (value) => this.setState({ latlng: value, locationError: false })\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    clearValues = (filter, feedtype) => {\n        this.onTextFieldChange('')\n        this.onChannelIdChange(\"\");\n        this.changeTab(filter, feedtype);\n    }\n\n    onSubmit = () => {\n        const { textField, channelId, moderation, keyword, latlng, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n        if (selectedFilterId == 1 && textField == \"\") {\n            this.setState({ error: true })\n        } else if (selectedFilterId == 75 && textField == '') {\n            this.setState({ shortError: true })\n        } else if (selectedFilterId == 11 && textField == '') {\n            this.setState({ playListError: true })\n        } else if (selectedFilterId == 4 && textField == '') {\n            this.setState({ keywordError: true })\n        } else if (selectedFilterId == 32 && textField == '') {\n            this.setState({ locationError: true })\n        } else if (selectedFilterId == 32 && keyword == '') {\n            this.setState({ locationKeywordError: true })\n        } else {\n            var obj = {\n                collection: collection ? collection.value : '',\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                feedText: textField,\n                channelId: channelId ? channelId : \"\",\n            }\n\n            if (selectedFilterId == 4) {\n                obj['channelId'] = \"\";\n            } else if (selectedFilterId == 32) {\n                obj['channelId'] = \"\";\n                obj = { ...obj, keywords: keyword, latlng };\n            }\n\n            this.setState({ error: false, shortError: false, keywordError: false, playListError: false, keywordError: false, loading: true })\n            createFeedAction(obj, networkId, (getFeedId) => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                if (getFeedId) {\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                    else {\n                        if (String(window.location.href).includes(\"assets\")) {\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                        }\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                    }\n\n\n                }\n            });\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 1: // Link\n                return <i className=\"ri-link icon-6\"></i>\n                break;\n            case 75: // Shorts\n                return <SVG src={baseUrl('media/icons/svg-icons/youtube-shorts.svg')} height={16} width={16} />\n                break;\n            case 11: // Play List\n                return <i className=\"ri-play-list-2-line icon-6\"></i>\n                break;\n            case 4: // Keyword\n                return <i className=\"ri-text icon-6\"></i>\n                break;\n            case 32: // Location\n                return <i className=\"ri-map-pin-2-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { filterTabs } = this.props;\n        const { textField, shortError, playListError, keywordError, locationError, locationKeywordError, channelId, moderation, keyword, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.clearValues(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => <Tab.Pane eventKey={filter.feedtype} key={filter.feedtype}>\n                                                <YoutubeTabs tab={filter.feedtype} error={error} onLatlanChange={this.onLatlanChange} value={textField} feedIcon={this.feedIcon} onValueChange={this.onTextFieldChange} checkBox={moderation} onCheckBoxChange={this.onCheckHandler} onKeywordChange={this.onKeywordChange} onChannelIdChange={this.onChannelIdChange} channelId={channelId} keyword={keyword} shortError={shortError} playListError={playListError} keywordError={keywordError} locationError={locationError} locationKeywordError={locationKeywordError} filter={filter.filter} />\n                                            </Tab.Pane>\n                                            ) : null}\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YoutubeFeed)","import React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { disconnectUser, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\nimport ProfileImage from \"../../CommonComponents/ProfileImage/ProfileImage\";\n\nclass AccountPicker extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccount: props.connectedAcc[0],\n            accounts: []\n        }\n    }\n\n    componentDidMount() {\n        const { selectAccount, personalAccount, personal, connectedAcc } = this.props\n        setTimeout(() => {\n            if (connectedAcc && connectedAcc.length) {\n                this.props.onConnectedAccountChange(this.props.connectedAcc[0].ConnectedAccounts.id);\n                selectAccount(this.props.connectedAcc[0].ConnectedAccounts.id)\n                this.setState({ accounts: personal ? personalAccount : connectedAcc, selectedAccount: personal ? personalAccount[0] : connectedAcc[0] })\n            }\n        }, 500);\n    }\n\n\n    disconnectAccount = (account) => {\n        const {accounts} = this.state;\n         \n       this.props.disconnectAccount(account.ConnectedAccounts.id,()=>{\n        if( accounts.length-1 >= 1){\n            const updateAccountsList = accounts.filter(acc=>acc.ConnectedAccounts.id !== account.ConnectedAccounts.id);\n            this.props.onConnectedAccountChange(updateAccountsList[0].ConnectedAccounts.id);\n            this.props.selectAccount(updateAccountsList[0].ConnectedAccounts.id);\n            this.setState({ accounts: updateAccountsList,selectedAccount:updateAccountsList[0] })\n        }else{\n            this.props.selectAccount(null);\n            this.props.onConnectedAccountChange(null);\n        }\n       });\n        \n    }\n\n    deleteAccount = (account) => {\n        Swal.fire({\n            title: '<strong>Confirm</strong>',\n            icon: 'warning',\n            text:\n                'Do you want to disconnect account?',\n            showCloseButton: true,\n            showCancelButton: true,\n            focusConfirm: true,\n            confirmButtonText:\n                'Yes',\n            confirmButtonAriaLabel: 'Yes',\n            cancelButtonAriaLabel: 'Thumbs down'\n        }).then((result) => {\n            if (result.value) {\n                this.disconnectAccount(account)\n            }\n            else if (result.dismiss === \"cancel\") { }\n        })\n    }\n\n    onAccountChange = (id) => {\n        this.props.selectAccount(id ? id : null)\n        this.props.onConnectedAccountChange(id);\n        if(!id){\n            this.setState({ selectedAccount: null });\n        }\n    }\n\n    render() {\n\n        const { selectedAccount, accounts } = this.state\n        return (\n            <>\n                {(accounts && accounts.length>0 ) ? <Dropdown className=\"w-100 mb-3\">\n                    <Dropdown.Toggle variant=\"none\" className=\"d-flex align-items-center btn btn-sm btn-outline-secondary w-100 justify-content-between\">\n                        {\n                        selectedAccount ?\n                        <div className=\"d-flex align-items-center flex-grow-1\" style={{width:'calc(100% - 70px)'}}>\n                            <ProfileImage className={'symbol symbol-28 symbol-circle bg-light flex-shrink-0 me-2'} \n                                imageSize={28} \n                                symbolClass={'symbol-label text-light-alt fw-bold text-uppercase fs-8'} \n                                name={selectedAccount.ConnectedAccounts.accountName} profileUrl={selectedAccount.ConnectedAccounts.profilePicture} networkId={selectedAccount.Network.id} />\n                            <div className=\"overflow-hidden w-100\">\n                                <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">{selectedAccount.ConnectedAccounts.accountName}</p>\n                            </div>\n                        </div>\n                        \n                        :\n                        <div className=\"d-flex align-items-center flex-grow-1\">\n                            <i className=\"ri-account-circle-fill icon-1 text-muted me-2\"></i>\n                            <div className=\"overflow-hidden w-100\">\n                                <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">Add Another Account</p>\n                            </div>\n                        </div>\n                        }\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu className=\"w-100 navi flex-column navi-hover py-2 connectedAllAccounts\">\n                        <div className=\"fs-7 px-3 py-2 fw-semibold text-gray-500\">Select Account:</div>\n                        {accounts && accounts.length ? accounts.map(acc => (\n                        <Dropdown.Item className=\"justify-content-between\" key={acc.ConnectedAccounts.accountId} onClick={() => { this.setState({ selectedAccount: acc }, () => this.onAccountChange(acc.ConnectedAccounts.id)) }}>\n                            <div className=\"d-flex align-items-center flex-grow-1\" style={{width:'calc(100% - 70px)'}}>\n                                    <ProfileImage className={'symbol symbol-28 symbol-circle bg-light flex-shrink-0 me-2'} \n                                    imageSize={28} \n                                    symbolClass={'symbol-label text-light-alt fw-bold text-uppercase fs-8'} \n                                    name={acc.ConnectedAccounts.accountName} profileUrl={acc.ConnectedAccounts.profilePicture} networkId={acc.Network.id} />\n                                <div className=\"overflow-hidden w-100\">\n                                    <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">{acc.ConnectedAccounts.accountName}</p>\n                                </div>\n                            </div>\n                            <button type=\"button\" className=\"btn btn-sm btn-danger fs-10 py-1\" onClick={() => this.deleteAccount(acc)}>Disconnect</button>\n                        </Dropdown.Item>\n                        ))\n                            : null\n                        }\n                        <Dropdown.Item className=\"align-items-center justify-content-between\" onClick={() => this.onAccountChange()}>\n                            <div className=\"d-flex align-items-center justify-content-start\">\n                                <i className=\"ri-account-circle-fill icon-1 text-muted me-2\"></i>\n                                <div className=\"fw-medium fs-8 text-dark\">Add Another Account</div>\n                            </div>\n                            <i className=\"ri-add-circle-line icon-3 text-muted ms-2\"></i>\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                    :\n                    null\n                }\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n        disconnectAccount:(accountId,callback)=>dispatch(disconnectUser(accountId,callback))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPicker)","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport AccountPicker from '../Elements/AccountPicker';\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass YammerFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            groupId: \"\",\n            topicId: \"\",\n            moderation: false,\n            error: false,\n            topicError: false,\n            loading: false,\n            account: null,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, topicError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onConnectedAccountChange = (value) => this.setState({ account: value })\n\n    addYammerAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = (connectAccountId) => {\n        const { groupId, topicId, moderation, selectedFilterId } = this.state;\n        const { collection, networkId, accountId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            connetedAccount: 0,\n            account: connectAccountId ? connectAccountId : accountId\n        }\n        if (selectedFilterId == 53) {\n            obj['field'] = groupId\n        } else if (selectedFilterId == 54) {\n            obj['field'] = topicId\n        }\n\n        this.setState({ error: false, topicError: false, loading: true })\n        createFeedAction(obj, networkId, (getFeedId) => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n        });\n    }\n\n    onSubmit = () => {\n        const { groupId, topicId, selectedFilterTab } = this.state;\n        const { accountId } = this.props;\n\n\n        if (selectedFilterTab == 'group ID' && groupId == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'topic ID' && topicId == '') {\n            this.setState({ topicError: true });\n        }\n        else {\n\n            if (accountId == null) {\n                this.addYammerAccount();\n                return;\n            }\n\n            this.createFeed();\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId), 0);\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 53: // Group\n                return <i className=\"ri-group-line icon-6\"></i>\n                break;\n            case 54: // Chat\n                return <i className=\"ri-chat-3-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList, networkId } = this.props;\n        const { groupId, topicId, account, moderation, topicError, error, loading, selectedFilterTab } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\n                                            const { feedName, feedtype, filter } = filterTab;\n                                            return <Nav.Item className=\"p-1\" key={index}>\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                        {this.feedIcon(filter)}\n                                                    </span>\n                                                    {capitalizeFirstLetter(feedtype)}\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        })}\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"group ID\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(53)}\n                                                        </span>\n                                                        <InputField name={\"groupId\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Yammer Group ID to fetch feed\" value={groupId} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"topic ID\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(54)}\n                                                        </span>\n                                                        <InputField name={\"topicId\"} className={`form-control form-control-lg fw-bolder px-9 ${topicError ? 'is-invalid' : ''}`} placeholder=\"Enter Yammer Topic ID to fetch feed\" value={topicId} onChangeHandler={this.onChangeHandler} />\n                                                        {topicError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(YammerFeed)","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass AccountSelect extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountList: [],\n            selectedAccount: null\n        }\n    }\n\n    componentDidMount() {\n        const { connectedAcc, onConnectedAccountChange } = this.props;\n        if (connectedAcc && connectedAcc.length > 0) {\n            let formatedOptions = connectedAcc.map(item => ({ label: item.ConnectedAccounts.accountName, value: item.ConnectedAccounts.id }));\n            if (formatedOptions && formatedOptions.length > 0) {\n                formatedOptions = [...formatedOptions, { label: 'other', value: null }];\n                onConnectedAccountChange(connectedAcc[0].ConnectedAccounts.id);\n                this.setState({ accountList: formatedOptions, selectedAccount: formatedOptions[0] });\n            }\n        }\n    }\n\n    onChangeHandler = (e) => {\n        this.props.onConnectedAccountChange(e.value);\n        this.setState({ selectedAccount: e });\n    }\n\n\n\n    render() {\n        const { selectedAccount, accountList } = this.state;\n        return <div className=\"col-md-12\">\n            <div className=\"form-group position-relative\">\n                <Select className=\"selectpicker\" options={accountList} classNamePrefix=\"selectpicker\" value={selectedAccount} onChange={(e) => this.onChangeHandler(e)} />\n            </div>\n        </div>\n    }\n}\n\n\nexport default AccountSelect\n","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport AccountPicker from '../Elements/AccountPicker';\nimport AccountSelect from './components/AccountSelect';\nimport InfoSection from '../Elements/InfoSection';\n\nconst channel = new BroadcastChannel('connect');\n\nclass TiktokFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: '',\n            hashtagPost: false,\n            postUrl: \"\",\n            moderation: false,\n            connetedAccount: null,\n            error: false,\n            loading: false,\n            selectedChildAccount: {},\n            personalAcc: {},\n            account: 0,\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n            handleError: false,\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, topicError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onConnectedAccountChange = (value) => this.setState({ account: value })\n\n    addTiktokAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n    onSelectedChildAccountChange = (value) => this.setState({ selectedChildAccount: value })\n\n    onPersonalAccChange = (value) => this.setState({ personalAcc: value })\n    createFeed = (connectAccountId) => {\n        const { postUrl, moderation, selectedFilterId, account, selectedChildAccount, personalAcc, hashtag, handle, hashtagPost } = this.state;\n        const { collection, networkId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            hashtagCaption: hashtagPost ? 1 : 0,\n            feedText: selectedFilterId == 72 ? hashtag : handle,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n\n        }\n        if (selectedFilterId == 71) {\n            obj['accountId'] = connectAccountId ? connectAccountId : account ? account : \"\"\n        }\n        else obj['accountId'] = \"\"\n\n        this.setState({ error: false, topicError: false, loading: true })\n\n        createFeedAction(obj, networkId, (getFeedId) => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n        });\n    }\n\n    onSubmit = () => {\n        // const { postUrl, selectedFilterTab, account } = this.state;\n\n        // if (selectedFilterTab == 'Personal Account' && (!account || account == 0)) {\n        //     this.addTiktokAccount();\n        // } else if (selectedFilterTab == 'Post Url' && postUrl == '') {\n        //     this.setState({ error: true });\n        // } else {\n        //     this.createFeed();\n        // }\n\n\n\n        const { hashtag, handle, selectedFilterId, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n        if ((!hashtag || hashtag == \"\") && selectedFilterId == 72) {\n            this.setState({ error: true, loading: false })\n        } else if ((!handle || handle == \"\") && selectedFilterId == 71) {\n            this.setState({ handleError: true, isLoading: false })\n        } else {\n            if ([72, 71].includes(selectedFilterId)) {\n                this.createFeed(accountId != null ? accountId : 0);\n            } else this.createFeed(null)\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\n\n    }\n\n    componentDidMount() {\n        this.getAccounts();\n        this.getPersonalAccounts();\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n    getPersonalAccounts = () => {\n        const { personalAccount, onPersonalAccChange } = this.props;\n        if (personalAccount && personalAccount.length > 0) {\n            const formatedOption = this.formatOption(personalAccount, true);\n            if (onPersonalAccChange) onPersonalAccChange(formatedOption[0]);\n            this.setState({ personalAccountList: formatedOption, allPersonalAcc: personalAccount, selectPersonal: formatedOption[0] });\n        }\n    }\n    formatOption = (lists, isPersonal) => {\n        const formatedList = lists.map((item) => ({ label: isPersonal ? item.ConnectedAccounts.accountName : item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\n        if (formatedList && formatedList.length > 0) {\n            return [...formatedList, { label: 'other', value: 0 }];\n        }\n        return []\n    }\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 72:\n            case 26: // Hashtag\n                return <i className=\"ri-hashtag icon-6\"></i>\n                break;\n            case 71:\n            case 23:\n            case 24: // Handle\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            case 1: // Account\n                return <i className=\"ri-account-circle-line icon-6\"></i>\n                break;\n            case 70: // Link\n                return <i className=\"ri-link icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n\n    getInfo = (tab) => {\n        switch (tab) {\n            case 'hashtag':\n                return 'TikTok only allows posts from the last 24 hours. If there are no recent posts in the 24-hour duration, then the top 50 posts will be aggregated. Also, all your upcoming posts will be aggregated. Posts collected via hashtags will not include any information of the user.';\n            case 'handle':\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\n            default:\n                break;\n        }\n    }\n\n    getAccounts = () => {\n        const { connectedAcc } = this.props\n        var allAccounts = [];\n        if (connectedAcc && connectedAcc.length > 0) {\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child];\n                }\n                else {\n                    this.setState({ allAccounts: [] })\n                }\n            })\n\n            if (allAccounts && allAccounts.length > 0) {\n                const formatedOption = this.formatOption(allAccounts, false);\n                this.onSelectedChildAccountChange(formatedOption[0]);\n                this.setState({ allAccounts, formatedList: formatedOption, allConnectAcc: connectedAcc, selectValue: formatedOption[0] });\n            }\n        } else {\n            this.onSelectedChildAccountChange(null)\n            this.setState({ allAccounts: [] })\n        }\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\n    }\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n    render() {\n        const { filterTabs, connectedAccountList, networkId, personalAccount } = this.props;\n        const { postUrl, error, loading, selectedFilterTab, handleError, hashtag, handle, hashtagPost, connetedAccount } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                                {\n                                                    selectedFilterTab == 'hashtag' || selectedFilterTab == \"handle\" ?\n                                                        <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                            <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                                {this.feedIcon(selectedFilterTab == \"hashtag\" ? 72 : 71)}\n                                                            </span>\n                                                            <InputField name={selectedFilterTab} className={`form-control form-control-lg fw-bolder px-9 ${(selectedFilterTab == \"hashtag\" && error) || (selectedFilterTab == \"handle\" && handleError) ? 'is-invalid' : ''}`} placeholder={`Enter user ${selectedFilterTab}`} value={selectedFilterTab == \"hashtag\" ? hashtag : handle} onChangeHandler={this.onChangeHandler} />\n                                                            {(selectedFilterTab == \"hashtag\" && error) || (selectedFilterTab == \"handle\" && handleError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                        </div> : null\n                                                }\n                                                {\n                                                    selectedFilterTab == 'hashtag' ? <div className=\"hideforBSearch\">\n                                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                            <CheckBoxField isChecked={hashtagPost} onChangeHandler={this.onCheckHandler} name={\"hashtagPost\"}>\n                                                                <span className=\"form-check-label\">Get posts containing hashtag only in caption.</span>\n                                                            </CheckBoxField>\n                                                        </label>\n                                                    </div> : null\n                                                }\n                                                {(connectedAccountList && connectedAccountList.length > 0) ? <div style={{ display: [\"hashtag\", \"handle\"].includes(selectedFilterTab) ? 'block' : \"none\" }}> <AccountPicker connectedAcc={connectedAccountList} personalAccount={personalAccount} personal={selectedFilterTab == 'personal'} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} /> </div> : null}\n                                                <InfoSection text={this.getInfo(selectedFilterTab)} />\n                                            </Tab.Pane>\n                                            ) : null}\n                                            <Tab.Pane className=\"nav-link className= p-0\">\n                                                {connectedAccountList && connectedAccountList.length ? <AccountSelect connectedAcc={connectedAccountList} onConnectedAccountChange={this.onConnectedAccountChange} /> :\n                                                    <div className=\"py-2\">\n                                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={this.addTiktokAccount}>\n                                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                                                <img src={baseUrl(\"media/icons/social-icons/tiktok.svg\")} height={43} width={43} alt=\"facebook\" />\n                                                            </span>\n                                                            <div className=\"overflow-hidden signIn_txt px-4\">\n                                                                <span className=\"text-gray-800 mb-0 fs-8 fw-bold text-ellipsis me-2\">Connect TikTok</span>\n                                                            </div>\n                                                        </button>\n                                                    </div>}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Post Url\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(70)}\n                                                        </span>\n                                                        <InputField name={\"postUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Tiktok Post Url\" value={postUrl} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc,\n        personalAccount: state.addFeed.personalAccount,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TiktokFeed)\n","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport AccountPicker from '../Elements/AccountPicker';\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass VimeoFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handle: \"\",\n            hashtag: \"\",\n            moderation: false,\n            error: false,\n            handleError: false,\n            loading: false,\n            account: null,\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onConnectedAccountChange = (value) => this.setState({ account: value })\n\n    addVimeoAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = (connectAccountId) => {\n        const { hashtag, handle, moderation, selectedFilterId } = this.state;\n        const { collection, networkId, accountId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            accountId: connectAccountId\n        }\n        if (selectedFilterId == 2) {\n            obj['feedText'] = hashtag\n        } else if (selectedFilterId == 1) {\n            obj['feedText'] = handle\n        }\n\n        this.setState({ error: false, handleError: false, loading: true })\n        createFeedAction(obj, networkId, (getFeedId) => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n        });\n    }\n\n    onSubmit = () => {\n        const { hashtag, handle, selectedFilterTab, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n\n            if (isAuthRequired) {\n                if (accountId == null) {\n                    this.addVimeoAccount();\n                } else {\n                    this.createFeed(accountId);\n                }\n            } else {\n                this.createFeed(0);\n            }\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 2: // Hashtag\n                return <i className=\"ri-hashtag icon-6\"></i>\n                break;\n            case 1: // Handle\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList, networkId } = this.props;\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\n                                                <div className=\"position-relative w-100 mb-3\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(2)}\n                                                    </span>\n                                                    <InputField name={\"hashtag\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"position-relative w-100 mb-3\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(1)}\n                                                    </span>\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VimeoFeed)","import React, { Component } from 'react';\n// import { AUTOCOMPLETE } from \"../../../../actions/manageFeedsAction\";\nimport AccountPicker from '../../Elements/AccountPicker';\nimport { debounce } from '../../../../../Services/Utils/utils';\nimport InputField from '../../Elements/InputField';\nimport CheckBoxField from '../../Elements/CheckboxField';\nimport InfoSection from '../../Elements/InfoSection';\nimport { autoComplete } from '../../../../../Services/Actions/addFeedAction';\n\nconst FeedIcon = ({ iconId }) => {\n    switch (iconId) {\n        case 2: // Hashtag\n            return <i className=\"ri-hashtag icon-5\"></i>\n            break;\n        case 1:\n        case 7: // Handle\n            return <i className=\"ri-at-line icon-5\"></i>\n            break;\n        case 3: // List\n            return <i className=\"ri-list-check icon-5\"></i>\n            break;\n        case 5: // Advance\n            return <i className=\"ri-search-line icon-5\"></i>\n            break;\n        case 9: // Text\n            return <i className=\"ri-text icon-5\"></i>\n            break;\n        default:\n            break;\n    }\n}\nclass TwitterTabs extends Component {\n    state = {\n        showList: false,\n        lists: [],\n    }\n\n    autoComplete = debounce((e) => {\n        autoComplete({\n            networkId: 1,\n            handle: e.target.value,\n        }).then(res => {\n            const { data } = res\n            if (data.response_code == 200) {\n                this.setState({ lists: data.responseData.data, showList: true })\n            }\n            else this.setState({ lists: [], showList: false })\n        })\n    })\n\n    handleAutoComplete = (e) => {\n        this.props.onChangeHandler(e);\n        this.autoComplete(e);\n    }\n\n    onSelectList = (item) => {\n\n        const { onListNameChange, onListIdChange } = this.props\n        onListNameChange(item.name);\n        onListIdChange(item.id, item.owner_id);\n        this.setState({ showList: false })\n    }\n\n    render() {\n        const { lists, showList } = this.state\n        const { hashtag, handle, networkId, onConnectedAccountChange, userName, showListError, listNameError, listName, advanced, tab, error, handleError, mentionError, advanceError, multiPhoto, listname, excludeRetweets, onChangeHandler, excludeReplies, onCheckHandler, mentions, favorites, favoriteError, connectedAccountList, filter } = this.props;\n\n        return (\n            <>\n                <div className=\"mb-2 mb-xl-3\">\n                    <div className=\"\">\n                        {tab != 'list' ?\n                            <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                    <FeedIcon iconId={filter} />\n                                </span>\n                                <InputField name={tab} className={`form-control form-control-lg fw-bolder px-9 ${(tab == \"hashtag\" && error) || (handleError && tab == \"handle\") || (mentionError && tab == \"mentions\") || (favoriteError && tab == \"favorites\") || (advanceError && tab == \"advanced\") ? 'is-invalid' : ''}`} placeholder={tab !== \"advanced\" ? `Enter ${tab !== 'favorites' ? tab : 'the twitter handle of the user to import Liked Posts from.'}` : 'Query'} value={tab == \"hashtag\" ? hashtag : tab == \"handle\" ? handle : tab == \"mentions\" ? mentions : tab == \"advanced\" ? advanced : favorites} onChangeHandler={onChangeHandler} />\n                                {(tab == \"hashtag\" && error) || (handleError && tab == \"handle\") || (mentionError && tab == \"mentions\") || (favoriteError && tab == \"favorites\") || (advanceError && tab == \"advanced\") ? <span className=\"invalid-feedback\">This field is required.</span> : null}\n                            </div>\n                            :\n\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                            <FeedIcon iconId={9} />\n                                        </span>\n                                        <InputField name={\"userName\"} placeholder=\"Enter Keyword\" className={`form-control form-control-lg fw-bolder px-9 ${showListError ? 'is-invalid' : ''}`} value={userName} onChangeHandler={(e) => this.handleAutoComplete(e)} autoComplete={true} />\n                                        {showList ? lists && lists.length > 0 ? lists.map((item, index) => (\n                                            <li key={item.id} onClick={() => this.onSelectList(item)}>\n                                                <div className=\"content-section\">\n                                                    {item.name}\n                                                    <p>https://twitter.com/{item.name}</p>\n                                                </div>\n                                            </li>\n                                        )) : null : null}\n                                        {showListError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                            <FeedIcon iconId={7} />\n                                        </span>\n                                        <InputField name={\"listName\"} placeholder=\"Enter Username\" className={`form-control form-control-lg fw-bolder px-9 ${listNameError ? 'is-invalid' : ''}`} value={listName} onChangeHandler={onChangeHandler} autoComplete={true} />\n                                        {listNameError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                    </div>\n                                </div>\n                            </div>}\n                        {(tab == \"hashtag\" && error) || (handleError && tab == \"handle\") || (mentionError && tab == \"mentions\") || (favoriteError && tab == \"favorites\") || (advanceError && tab == \"advanced\") ? <span className=\"invalid-feedback\">This field is required</span> : null}\n\n                        {tab == \"advanced\" ? <p className=\"fs-8 fw-medium text-gray-700 mb-1\">Use the table below to construct your query.</p> : null}\n                        {\n                            tab == \"advanced\" ? <div className=\"card mb-5\">\n                                <div className='card-body'>\n                                    <div className=\"table-responsive\" style={{ height: 200 }}>\n                                        <table className=\"table table-light mb-0\">\n                                            <thead>\n                                                <tr>\n                                                    <th style={{ width: \"20%\" }}><strong>Filter By:</strong></th>\n                                                    <th><strong>Example</strong></th>\n                                                    <th><strong>Targets Tweets:</strong></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <i className=\"ri-text icon-6 text-gray-800 me-1\"></i>\n                                                            Keywords\n                                                        </div>\n                                                    </td>\n                                                    <td>grapes banana</td>\n                                                    <td>containing both \"grapes\" and \"banana\".</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>\"good time\"</td>\n                                                    <td>containing the exact phrase \"good time\"</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>die OR alive</td>\n                                                    <td>containing either \"die\" or \"alive\" (or both)</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>food -drink</td>\n                                                    <td>containing \"food\" but not \"drink\"</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>#soul</td>\n                                                    <td>containing the hashtag \"#soul\"</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <i className=\"ri-user-line icon-6 text-gray-800 me-1\"></i>\n                                                            User\n                                                        </div>\n                                                    </td>\n                                                    <td>from:tagbox</td>\n                                                    <td>sent from the user @tagbox</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>to:tagbox</td>\n                                                    <td>sent to the user @tagbox</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>@tagbox</td>\n                                                    <td>mentioning @tagbox</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <i className=\"ri-link icon-6 text-gray-800 me-1\"></i>\n                                                            Content\n                                                        </div>\n                                                    </td>\n                                                    <td>funny filter:links</td>\n                                                    <td>containing \" funny\" and with a URL.</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <i className=\"ri-calendar-event-line icon-6 text-gray-800 me-1\"></i>\n                                                            Dates\n                                                        </div>\n                                                    </td>\n                                                    <td>champion&amp;start_time=2023-05-11T05:00:01.340Z</td>\n                                                    <td>containing \"champion\" and sent since date \"2023-05-11T05:00:01.340Z\" (year-month-day).</td>\n                                                </tr>\n                                                <tr>\n                                                    <td></td>\n                                                    <td>champion&amp;end_time=2023-05-17T05:00:01.340Z</td>\n                                                    <td>containing \"champion\" and sent before the date \"2023-05-17T05:00:01.340Z\".</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div> : null\n                        }\n                    </div>\n                </div>\n                <div className=\"pb-2\">\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={multiPhoto} onChangeHandler={onCheckHandler} name={\"multiPhoto\"}>\n                            <span className=\"form-check-label\">Add Multiple Photos</span>\n                        </CheckBoxField>\n                    </label>\n                    {tab != 'list' && tab != \"advanced\" ? <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={excludeRetweets} onChangeHandler={onCheckHandler} name={\"excludeRetweets\"}>\n                            <span className=\"form-check-label\">Exclude Retweets</span>\n                        </CheckBoxField>\n                    </label> : null}\n                    {tab != 'favorites' && tab != 'list' ? <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={excludeReplies} onChangeHandler={onCheckHandler} name={\"excludeReplies\"}>\n                            <span className=\"form-check-label\">Exclude Replies</span>\n                        </CheckBoxField>\n                    </label> : null}\n                </div>\n                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} />}\n                {tab != 'list' && tab != \"advanced\" && tab != \"favorites\" ?\n                    <InfoSection text={tab == 'hashtag' ? `Only 10 tweets will be aggregated from the last 7 days' data, after which all the upcoming tweets will be aggregated.` : tab == 'handle' ? `Initially, 10 tweets will be aggregated from the Twitter handle, after which all the upcoming tweets will be aggregated.` : tab == 'mentions' ? `Only 10 mentions from the last 7 days will be aggregated, after which all the upcoming tweets will be aggregated.` : ``} />\n                    : null\n                }\n            </>\n        )\n    }\n}\n\nexport default TwitterTabs\n\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\nimport { addUserAccount, createFeedAction } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport TwitterTab from \"./components/TwitterTab\";\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\n\n\nconst channel = new BroadcastChannel('connect');\n\nconst FeedIcon = ({ iconId }) => {\n    switch (iconId) {\n        case 2: // Hashtag\n            return <i className=\"ri-hashtag icon-6\"></i>\n            break;\n        case 1:\n        case 7: // Handle\n            return <i className=\"ri-at-line icon-6\"></i>\n            break;\n        case 3: // List\n            return <i className=\"ri-list-check icon-6\"></i>\n            break;\n        case 5: // Advance\n            return <i className=\"ri-search-line icon-6\"></i>\n            break;\n        case 9: // Text\n            return <i className=\"ri-text icon-6\"></i>\n            break;\n        default:\n            break;\n    }\n}\nclass Twitter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: '',\n            handle: '',\n            mentions: '',\n            advanced: '',\n            userName: '',\n            listName: '',\n            favorites: '',\n            userId: null,\n            listId: null,\n            loading: false,\n            multiPhoto: true,\n            excludeRetweets: true,\n            excludeReplies: true,\n            connectedAccount: null,\n            moderation: false,\n            error: false,\n            handleError: false,\n            mentionError: false,\n            advanceError: false,\n            favoriteError: false,\n            showListError: false,\n            listNameError: false,\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\n    onListNameChange = (value) => this.setState({ userName: value, showListError: false })\n    onListIdChange = (listId, userId) => this.setState({ listId: listId, userId: userId })\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n\n    addTwitterAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = (connectAccountId) => {\n        const { hashtag, handle, excludeRetweets, excludeReplies, multiPhoto, userId, listId, listName, userName, advanced, mentions, favorites, moderation, selectedFilterId, isAuthRequired } = this.state;\n        const { collection, networkId, history } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n\n            })\n\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            excludeRetweet: excludeRetweets ? 1 : 0,\n            excludeReplies: excludeReplies ? 1 : 0,\n            multiplePhoto: multiPhoto ? 1 : 0,\n            authRequire: isAuthRequired ? 1 : 0,\n            accountId: connectAccountId\n        }\n\n        if (selectedFilterId == 2) {\n            obj['feedText'] = hashtag\n        } else if (selectedFilterId == 1) {\n            obj['feedText'] = handle\n        } else if (selectedFilterId == 7) {\n            obj['feedText'] = mentions\n        } else if (selectedFilterId == 4) {\n            obj['feedText'] = favorites\n        } else if (selectedFilterId == 5) {\n            obj['feedText'] = advanced\n        } else if (selectedFilterId == 3) {\n            obj['feedText'] = userName;\n            obj['listname'] = listName;\n            obj['userId'] = userId;\n            obj['listId'] = listId;\n        }\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { hashtag, advanced, handle, userName, listName, favorites, mentions, selectedFilterTab, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n\n\n        if (selectedFilterTab == 'hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'handle' && handle == '') {\n            this.setState({ handleError: true });\n        } else if (selectedFilterTab == 'mentions' && mentions == '') {\n            this.setState({ mentionError: true });\n        } else if (selectedFilterTab == 'favorites' && favorites == '') {\n            this.setState({ favoriteError: true });\n        } else if (selectedFilterTab == 'advanced' && advanced == '') {\n            this.setState({ advanceError: true });\n        } else if (selectedFilterTab == 'list' && userName == '') {\n            this.setState({ showListError: true });\n        } else if (selectedFilterTab == 'list' && listName == '') {\n            this.setState({ listNameError: true });\n        } else {\n\n            if (isAuthRequired) {\n                if (accountId == null) {\n                    this.addTwitterAccount();\n                } else {\n                    this.createFeed(accountId);\n                }\n            } else {\n                this.createFeed(0);\n            }\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    render() {\n        const { selectedFilterTab, loading } = this.state;\n        const { filterTabs, networkId, connectedAccountList } = this.props;\n\n        return <>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                <div className=\"addSourceTabs\">\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <div className=\"\">\n\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            <FeedIcon iconId={filter} />\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <div className=\"\">\n                                    <Tab.Content>\n                                        {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\n                                            <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                                <TwitterTab\n                                                    networkId={networkId}\n                                                    tab={filter.feedtype}\n                                                    filter={filter.filter}\n                                                    {...this.state}\n                                                    connectedAccountList={connectedAccountList}\n                                                    onListIdChange={this.onListIdChange}\n                                                    onConnectedAccountChange={this.onConnectedAccountChange}\n                                                    onListNameChange={this.onListNameChange}\n                                                    onExcRetweetChange={this.onCheckHandler}\n                                                    onChangeHandler={this.onChangeHandler}\n                                                    onCheckHandler={this.onCheckHandler}\n                                                />\n                                            </Tab.Pane>\n                                        )) : null}\n                                    </Tab.Content>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Tab.Container>\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Twitter)","import React, { useState } from \"react\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\n\n\nexport default function PlaceDropDown(props) {\n    const [address, setAddress] = useState(\"\");\n    const [list, setList] = useState(false);\n\n    const handleChange = (e) => { setAddress(e); setList(true); props.onFieldTextChange(\"\", \"\") };\n    const handleSelect = (e) => { };\n\n    const handleSelect1 = (v1, v2, v3) => {\n        props.onFieldTextChange(v1, v2, v3)\n        setAddress(v1);\n        setList(false)\n    };\n\n\n\n    return (\n        <PlacesAutocomplete\n            value={address}\n            onChange={handleChange}\n            onSelect={handleSelect}\n        >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n\n                <div className=\"position-relative w-100\">\n                    <i className=\"ri-map-pin-2-line icon-5 text-gray-500 position-absolute bottom-0 start-0 translate-middle-x mx-5 my-3\"></i>\n                    {loading ? <div className=\"spinner spinner-gray\" style={{ top: -22 }}></div> : null}\n                    <input {...getInputProps({ placeholder: \"Type address\" })} className={`form-control form-control-lg fw-bolder px-9 ${props.error ? 'is-invalid' : ''}`} />\n                    {list && address.length > 0 ?\n                        <Dropdown className={`w-100`} show>\n                            <Dropdown.Menu className=\"w-100\">\n                                <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                    {suggestions.map(suggestion => {\n                                        return (<Dropdown.Item className=\"text-break\" {...getSuggestionItemProps(suggestion)} onClick={() => handleSelect1(suggestion.description, suggestion.placeId, suggestion.formattedSuggestion.mainText)} style={{ whiteSpace: 'normal' }}> {suggestion.description}</Dropdown.Item>);\n                                    })}\n                                </PerfectScrollbar>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        : ''}\n                </div>\n            )}\n        </PlacesAutocomplete>\n    );\n}\n\n\n\n\n\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport { baseUrl } from \"../../../../../Assets/AssetsHelper\";\n\nexport default class GoogleTab extends Component {\n    state = { accountOption: [], parentOption: [] }\n\n    componentDidMount() {\n        this.getChildAccountData()\n    }\n    componentWillReceiveProps(nextProps) {\n\n        if (nextProps.connectedAcc !== this.state.parentOption) {\n            this.getChildAccountData()\n        }\n    }\n    getChildAccountData = () => {\n        const { connectedAcc } = this.props;\n        if (connectedAcc && connectedAcc.length) {\n            var data = connectedAcc.map((f, i) => {\n                return ({ 'label': f.ConnectedAccounts.accountName, 'value': f.ConnectedAccounts.id })\n            })\n            this.setState((prev) => ({ ...prev, parentOption: data }));\n        }\n\n    }\n\n    onAccountIdChange = (value) => {\n        const { childAcc } = this.props\n        if (value == 0) {\n            this.props.onAccountChildChange(value)\n        }\n        else {\n            var mainAccountId = childAcc.filter(f => f.ConnectedAccounts.id == value)\n            this.props.onAccountChildChange(value)\n            this.props.onConnectedAccountChange(mainAccountId[0].ConnectedAccounts.parent)\n        }\n    }\n\n    onParentSelected = (value) => {\n        const { connectedAcc } = this.props\n        this.props.onConnectedAccountChange(value);\n        let childAcccounts = [];\n        if (value !== 0) {\n            const selectedAcc = connectedAcc.filter(account => account.ConnectedAccounts.id === value);\n            childAcccounts = selectedAcc[0].ConnectedAccounts.child.map((f) => {\n                return ({ 'label': f.ConnectedAccounts.value2, 'value': f.ConnectedAccounts.id })\n            });\n            childAcccounts.push({ 'label': \"Other\", 'value': 0 });\n        }\n\n        this.setState((prev) => ({ ...prev, accountOption: childAcccounts }));\n    }\n\n\n    render() {\n\n        const { otherAccount, connetedAccount, accountChild, onotherAccount,onAddAccount } = this.props\n        const { accountOption, parentOption } = this.state;\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <label>Select Account</label>\n                        <Select className=\"selectpicker addFeedGoogle\" options={parentOption} classNamePrefix=\"selectpicker\" defaultValue={connetedAccount} onChange={(e) => this.onParentSelected(e.value)} />\n                        <br />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                        <label>Select Place</label>\n                        <Select className=\"selectpicker addFeedGoogle\" options={connetedAccount ? accountOption : []} classNamePrefix=\"selectpicker\" defaultValue={accountChild} onChange={(e) => { this.onAccountIdChange(e.value); onotherAccount(e.value == 0 ? true : false) }} />\n                        <br />\n                    </div>\n                </div>\n\n\n                {otherAccount ?\n                    <div className=\"otherSection py-2\">\n                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\">\n                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                <img src={baseUrl(\"media/icons/social-icons/google.svg\")} height={43} width={43} alt=\"facebook\" />\n                            </span>\n                            <div className=\"overflow-hidden signIn_txt px-5\">\n                                <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Google</span>\n                            </div>\n                        </button>\n                    </div> \n                    : null}\n\n            </>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction, fetchConnectedAccounts } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport PlaceDropDown from './components/PlaceDropDown';\nimport InfoSection from '../Elements/InfoSection';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport GoogleTab from './components/GoogleTab';\nimport { toast } from 'react-toastify';\n\nconst channel = new BroadcastChannel('connect');\n\nclass GoogleFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            feedText: '',\n            placeName: null,\n            placeId: null,\n            moderation: false,\n            error: false,\n            loading: false,\n            connetedAccount: 0,\n            accountChild: 0,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n            otherAccount: false\n        }\n    }\n\n    onFieldTextChange = (text, id, placeName) => this.setState({ feedText: text, placeId: id, placeName: placeName, error: false })\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onotherAccount = (value) => this.setState({ otherAccount: value });\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n    onAccountChildChange = (value) => this.setState({ accountChild: value })\n\n    addGoogleAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = () => {\n        const { feedText, placeId, connetedAccount, accountChild, placeName, moderation, selectedFilterId } = this.state;\n        const { collection, networkId, history } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            connetedAccount: 0,\n            account: 0\n        }\n        if (selectedFilterId == 33) {\n            obj['field33'] = feedText;\n            obj['field33placeId'] = placeId\n            obj['field33placeName'] = placeName\n        } else if (selectedFilterId == 29) {\n            obj['field33'] = '';\n            obj['field33placeId'] = '';\n            obj['field33placeName'] = '';\n            obj['connetedAccount'] = connetedAccount;\n            obj['account'] = accountChild;\n        }\n\n        this.setState({ error: false, topicError: false, loading: true })\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { feedText, selectedFilterTab, accountChild, connetedAccount } = this.state;\n\n        if (selectedFilterTab == 'Places' && feedText == '') {\n            this.setState({ error: true });\n        } else {\n            if (selectedFilterTab == 'My Places' && (connetedAccount == 0 || accountChild == 0)) {\n                toast.error('Need to connect google account', { autoClose: 3000 });\n                return;\n            }\n\n            this.createFeed();\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, () => this.props.getConnectedAccount(networkId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 33: // Place\n                return <i className=\"ri-map-pin-2-line icon-6\"></i>\n                break;\n            case 29: // My Place\n                return <i className=\"ri-map-pin-user-fill icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList } = this.props;\n        const { connetedAccount, otherAccount, accountChild, moderation, error, loading, selectedFilterTab } = this.state;\n        var childAcc = connectedAccountList && connectedAccountList[0] && connectedAccountList[0].ConnectedAccounts && connectedAccountList[0].ConnectedAccounts.child && connectedAccountList[0].ConnectedAccounts.child.length ? connectedAccountList[0].ConnectedAccounts.child : ''\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        {filterTabs && Object.keys(filterTabs).length > 1 ?\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                            : null}\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Places\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className={`${error ? 'is-invalid' : ''}`}>\n                                                        <PlaceDropDown onLatlanChange={this.onLatlanChange} onFieldTextChange={this.onFieldTextChange} error={error} />\n                                                    </div>\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                <InfoSection text={'Initially the latest 5 user reviews of Place will be aggregated after which all the upcoming reviews will be aggregated.'} />\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"My Places\"}>\n                                                {connectedAccountList && connectedAccountList.length > 0 ?\n                                                    <GoogleTab\n                                                        onAddAccount={this.addGoogleAccount}\n                                                        connectedAcc={connectedAccountList}\n                                                        otherAccount={otherAccount}\n                                                        connetedAccount={connetedAccount}\n                                                        accountChild={accountChild}\n                                                        onotherAccount={this.onotherAccount}\n                                                        onAccountChildChange={this.onAccountChildChange}\n                                                        onConnectedAccountChange={this.onConnectedAccountChange}\n                                                        childAcc={childAcc}\n                                                    />\n\n                                                    :\n                                                    <div className=\"otherSection py-2 mb-2\">\n                                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\">\n                                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                                                <img src={baseUrl(\"media/icons/social-icons/google.svg\")} height={43} width={43} alt=\"facebook\" />\n                                                            </span>\n                                                            <div className=\"overflow-hidden signIn_txt px-5\">\n                                                                <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Google</span>\n                                                            </div>\n                                                        </button>\n                                                    </div>\n                                                }\n                                                {/* {!otherAccount ? <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> : null} */}\n\n                                                <InfoSection text={'Initially latest 50 user reviews will be aggregated after which all the upcoming reviews will be aggregated.'} />\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container >\n                <SubmitFeedRequest hideBtn={otherAccount} supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getConnectedAccount: (id) => dispatch(fetchConnectedAccounts(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleFeed)","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport InputField from '../../Elements/InputField';\nimport CheckBoxField from '../../Elements/CheckboxField';\n\nexport default class SlackTab extends Component {\n    componentDidMount() {\n        const { accounts } = this.props;\n\n        if (accounts && accounts.length > 0) {\n            this.props.onSelect(accounts[0].ConnectedAccounts.id);\n        }\n    }\n    render() {\n        const { accounts, tab, moderation, onCheckHandler, onSelect, error, keyword, handleInput, selectAccount, channelError } = this.props;\n\n        const options = accounts ? accounts.map((account) => ({ label: account.ConnectedAccounts.value2, value: account.ConnectedAccounts.id })) : [];\n        return (<div className=\"row gx-3\">\n                    <div className=\"col-sm-6\">\n                        <div className=\"mb-2 mb-xl-3\">\n                            <span className={`${channelError? 'is-invalid':''}`}>\n                            <Select className=\"selectpicker selectpicker-lg\" menuPlacement=\"auto\" classNamePrefix=\"selectpicker\" onChange={(e) => onSelect(e.value)} options={options} value={options[options.findIndex(i => i.value == selectAccount)]} />\n                            </span>\n                            {channelError && <span className=\"invalid-feedback\">This field is required</span>}\n                        </div>\n                    </div>\n                    {tab == \"ChannelKeyword\" ?\n                    <div className=\"col-sm-6\">\n                        <div className=\"mb-2 mb-xl-3\">\n                            <div className=\"position-relative w-100 mb-3\">\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                    <i className=\"ri-text icon-5\"></i>\n                                </span>\n                                <InputField name={\"keyword\"} className=\"form-control form-control-lg fw-bolder px-9\" placeholder=\"Enter keyword\" value={keyword} onChangeHandler={handleInput} />\n                                {error && <span className=\"invalid-feedback\">This field is required</span>}\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n                </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction, fetchConnectedAccounts } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport SlackTab from './components/SlackTab';\nimport { toast } from 'react-toastify';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass SlackFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            keyword: '',\n            error: false,\n            selectedAcc: null,\n            moderation: false,\n            channelError: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    handleSelect = (e) => {\n        this.setState({ selectedAcc: e, channelError: false });\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    addSlackAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = () => {\n        const { selectedAcc, moderation, keyword, selectedFilterId } = this.state;\n        const { collection, networkId, connectedAccountList } = this.props;\n        const parentAcc = connectedAccountList && connectedAccountList.length > 0 ? connectedAccountList[0].ConnectedAccounts.id : '';\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            connetedAccount: parentAcc,\n            account: selectedAcc,\n        }\n\n        if (selectedFilterId == 2) {\n            obj['slackkeyword'] = '';\n        } else if (selectedFilterId == 1) {\n            obj['slackkeyword'] = keyword\n        }\n\n        this.setState({ error: false, topicError: false, loading: true })\n        createFeedAction(obj, networkId, (getFeedId) => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n        });\n    }\n\n    onSubmit = () => {\n        const { keyword, selectedFilterTab, selectedAcc } = this.state;\n\n        if (selectedFilterTab == 'Channel' && selectedAcc == null) {\n            this.setState({ channelError: true });\n        } else if (selectedFilterTab == 'Channel & Keyword' && selectedAcc == null) {\n            toast.error('Need to connect slack account', { autoClose: 3000 });\n        } else if (selectedFilterTab == 'Channel & Keyword' && keyword == '') {\n            this.setState({ error: true });\n        } else {\n            this.createFeed();\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, () => this.props.getConnectedAccount(networkId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 2: // Link\n                return <i className=\"ri-link icon-6\"></i>\n                break;\n            case 1: // Link\n                return <i className=\"ri-link icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList } = this.props;\n        const { keyword, selectedAcc, moderation, channelError, error, loading, selectedFilterTab } = this.state;\n        const connectedAccounts = (connectedAccountList && connectedAccountList.length > 0) ? connectedAccountList[0].ConnectedAccounts : [];\n        return (\n            <>\n                {!(connectedAccountList && connectedAccountList.length > 0) ?\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Connect Your Slack Account</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"py-2\">\n                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={() => this.addSlackAccount()}>\n                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                                <img src={baseUrl(\"media/icons/social-icons/slack.svg\")} height={43} width={43} alt=\"facebook\" />\n                                            </span>\n                                            <div className=\"overflow-hidden signIn_txt px-5\">\n                                                <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Slack</span>\n                                            </div>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                        <div className=\"addSourceTabs\">\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <div className=\"\">\n                                            <Tab.Content>\n                                                <Tab.Pane eventKey={\"Channel\"}>\n                                                    <SlackTab accounts={connectedAccounts.child} tab={'Channel'} moderation={moderation} onCheckHandler={this.onCheckHandler} error={error} keyword={keyword} handleInput={this.onChangeHandler} onSelect={this.handleSelect} selectAccount={selectedAcc} channelError={channelError} />\n                                                </Tab.Pane>\n                                                <Tab.Pane eventKey={\"Channel & Keyword\"}>\n                                                    <SlackTab accounts={connectedAccounts.child} tab={'ChannelKeyword'} moderation={moderation} onCheckHandler={this.onCheckHandler} error={error} keyword={keyword} handleInput={this.onChangeHandler} onSelect={this.handleSelect} selectAccount={selectedAcc} channelError={channelError} />\n                                                </Tab.Pane>\n                                            </Tab.Content>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Tab.Container>\n                }\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getConnectedAccount: (id) => dispatch(fetchConnectedAccounts(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SlackFeed)","import React, { Component } from 'react';\nimport AccountPicker from '../../Elements/AccountPicker';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\nimport CheckBoxField from '../../Elements/CheckboxField';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { autoComplete } from '../../../../../Services/Actions/addFeedAction';\nimport { debounce } from '../../../../../Services/Utils/utils';\nimport Select from 'react-select';\n\nclass FacebookTab extends Component {\n    state = {\n        handles: [],\n        allAccounts: [{ ConnectedAccounts: { id: 0, value2: 'loading...' } }],\n        openSelect: false,\n        selectValue: {},\n        formatedList: [],\n        allConnectAcc: []\n    }\n\n    componentDidMount() {\n        this.getAccounts();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.connectedAcc) {\n            if (this.state.allConnectAcc.length != nextProps.connectedAcc.length) {\n                this.getAccounts();\n            }\n        }\n    }\n\n    getAccounts = () => {\n        const { connectedAcc, onAccountChange } = this.props\n        var allAccounts = []\n        if (connectedAcc && connectedAcc.length > 0) {\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child]\n                }\n                else {\n                    this.setState({ allAccounts: [] })\n                }\n            })\n\n            if (allAccounts && allAccounts.length > 0) {\n                onAccountChange(allAccounts[0].ConnectedAccounts.id, allAccounts[0].ConnectedAccounts.parent);\n                const formatedOption = this.formatOption(allAccounts);\n                this.setState({ allAccounts, allConnectAcc: connectedAcc, formatedList: formatedOption, selectValue: formatedOption[0] });\n            }\n        } else {\n            onAccountChange(null)\n            this.setState({ allAccounts: [] })\n        }\n    }\n\n\n\n    autoComplete = debounce((value) => {\n        const obj = { networkId: 3, handle: value }\n        if (value && value.length > 2) {\n            autoComplete(obj).then(res => {\n                const { responseData, response_code } = res.data;\n                if (response_code == 200) {\n                    this.setState({ handles: responseData.data, showHandle: responseData.data.length > 0 })\n                }\n                else this.setState({ handles: [], lists: [], showHandle: false })\n            })\n        } else {\n            this.setState({ handles: [], lists: [], showHandle: false })\n        }\n    });\n\n    handleTextChange = value => {\n        this.props.onTextChange(value)\n        this.autoComplete(value);\n    }\n\n    onSelectHandle = (item) => {\n        const { onTextChange, tab } = this.props\n        onTextChange(item.link)\n        document.querySelector(`#${tab}-text`).value = item.link\n        this.setState({ showHandle: false })\n    }\n\n    onAccChange = (selectedOption) => {\n        const { onAccountChange } = this.props\n        const { allAccounts } = this.state;\n        const { value } = selectedOption;\n\n        var parent = null;\n        if (allAccounts && allAccounts.length) {\n            parent = allAccounts.find(acc => acc.ConnectedAccounts.id == value);\n\n            if (parent) {\n                parent = parent.ConnectedAccounts.parent\n            }\n        }\n        this.setState({ selectValue: selectedOption });\n        onAccountChange(value, parent)\n    }\n\n\n    formatOption = (lists) => {\n        const formatedList = lists.map((item) => ({ label: item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\n        if (formatedList && formatedList.length > 0) {\n            return [...formatedList, { label: 'other', value: 0 }];\n        }\n        return []\n    }\n\n    render() {\n        const { tab, connectedAcc, text, onTextChange, onAlbumFieldChange, errorMsg, albumUrl, albumUrlError, onAddAccount, album, feedIcon, onCheckHandler, networkId, onAlbumChange, connetedAccount, onConnectedAccountChange, authenticate, onAuthenticateChange, error } = this.props\n        const { handles, showHandle, formatedList, allAccounts, selectValue } = this.state;\n\n        return (\n            <>\n                {tab == 'Page' || tab == \"Albums\" ?\n                    <div className=\"row\">\n                        {tab == 'Albums' ?\n                            <div className=\"col-sm-4\">\n                                <div className=\"mb-3\">\n                                    <Select className=\"selectpicker selectpicker-lg\" options={[{ label: 'Single Album', value: '65' }, { label: 'All Facebook Page Albums', value: '67' }]} classNamePrefix=\"selectpicker\" defaultValue={album} onChange={(e) => onAlbumChange(e)} />\n                                </div>\n                            </div> : null}\n                        <div className={tab == \"Albums\" ? \"col-sm-8\" : \"col-sm-12\"}>\n                            <div className=\"position-relative w-100 mb-3\">\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                    {feedIcon(8)}\n                                </span>\n                                <input autoComplete=\"off\" data-limit=\"100\" placeholder={`Enter ${tab == \"Page\"?\"Page\":'Album'} URL`} value={tab == \"Page\" ? text : albumUrl} className={`form-control form-control-lg fw-bolder ps-9${(tab == \"Page\" && error) || (tab == \"Albums\" && albumUrlError) ? ' is-invalid' : ''}`} id={`${tab}-text`} onChange={(e) => tab == \"Page\" ? this.handleTextChange(e.target.value) : onAlbumFieldChange(e.target.value)} type=\"text\" />\n                                <div className=\"handlelist\" id=\"\" style={showHandle ? { display: \"block\" } : { display: \"none\" }}>\n                                    {handles && handles.length > 0 ? <Dropdown className={`w-100`} show>\n                                        <Dropdown.Menu className=\"w-100\">\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                                <div className=\"feedDropdown\">\n                                                    {handles.map(item => {\n                                                        return (<Dropdown.Item className=\"text-break flex-column justify-content-start align-items-start\" key={item.id} onClick={() => this.onSelectHandle(item)} style={{ whiteSpace: 'normal' }}>\n                                                            <p className=\"mb-1 fs-9 fw-bold\">{item.name}</p>\n                                                            <span className=\"fs-10\">{item.link}</span>\n                                                        </Dropdown.Item>);\n                                                    })}\n                                                </div>\n                                            </PerfectScrollbar>\n                                        </Dropdown.Menu>\n                                    </Dropdown> : null}\n                                </div>\n                                {(tab == \"Page\" && error) || (tab == \"Albums\" && albumUrlError) ? <span className=\"invalid-feedback\">{errorMsg}</span> : null}\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    tab == \"My Profile Posts\"\n                        ?\n                        !(connectedAcc && connectedAcc.length > 0) ? <div className=\"otherSection py-2 mb-2\">\n                            <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                    <img src={baseUrl(\"media/icons/social-icons/facebook.svg\")} height={43} width={43} alt=\"facebook\" />\n                                </span>\n                                <div className=\"overflow-hidden signIn_txt px-5\">\n                                    <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Facebook</span>\n                                </div>\n                            </button>\n                        </div> : null\n                        :\n                        connectedAcc && connectedAcc.length > 0 && allAccounts && allAccounts.length > 0 ?\n                            <div className=\"mb-3\">\n                                <Select className=\"selectpicker selectpicker-lg\" options={formatedList} classNamePrefix=\"selectpicker\" value={selectValue} onChange={(e) => this.onAccChange(e)} />\n                            </div>\n                            :\n                            <div className=\"otherSection py-2 mb-2\">\n                                <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                    <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                        <img src={baseUrl(\"media/icons/social-icons/facebook.svg\")} height={43} width={43} alt=\"facebook\" />\n                                    </span>\n                                    <div className=\"overflow-hidden signIn_txt px-5\">\n                                        <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Facebook</span>\n                                    </div>\n                                </button>\n                            </div>\n                }\n                {/* <div className=\"hideforBSearch\">\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={moderation} onChangeHandler={onCheckHandler} name={\"moderation\"}>\n                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                        </CheckBoxField>\n                    </label>\n                </div>  */}\n                {(connectedAcc && connectedAcc.length > 0) ? <div style={{ display: ![\"Page Reviews\", \"Page Mentions\"].includes(tab) ? 'block' : \"none\" }}><AccountPicker connectedAcc={connectedAcc} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} /></div> : null}\n            </>\n        )\n    }\n}\n\nexport default FacebookTab;\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON, capitalizeFirstLetter } from '../../../../Services/Utils/utils'\n\nclass ConnectAccount extends Component {\n    state = {\n        selectedAcc: null,\n        accounts: [],\n    }\n\n    componentDidMount() {\n        const { accountList } = this.props\n        this.setState({ accounts: accountList })\n    }\n\n    createFeed = () => {\n        const { selectedAcc } = this.state;\n        const { accountList, filterId, createFeedFromPage } = this.props;\n        createFeedFromPage(![1, 67, 65, 26].includes(filterId) ? selectedAcc.id : accountList[0].parent, accountList[0].parent, selectedAcc.value2);\n    }\n\n    render() {\n        const {loading, networkId, onBack } = this.props\n        const { accounts } = this.state;\n\n        return (\n            <div className=\"action\" id=\"feedsinstagram\">\n                <div className=\"d-flex flex-column-fluid main_content connect_your_account\">\n                    <div className=\"container py-18\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"middle_content\">\n                                    <div className=\"small_container\">\n                                        <div className=\"instaFacebookAuth card card-custom card-body\">\n                                            <div className=\"pt-5\">\n                                                <div className=\"d-flex flex-wrap align-items-center mb-6\">\n                                                    <div className=\"symbol symbol-60 flex-shrink-0 me-4\">\n                                                        <div className=\"symbol-label\" style={{ backgroundImage: `url(${baseUrl(`media/icons/square-icons/${GET_NETWORK_ICON(networkId)}.svg`)})` }}>\n                                                        </div>\n                                                    </div>\n                                                    <h3 className=\"d-flex flex-column flex-grow-1 my-lg-0 my-2 pe-3\">\n                                                        <span className=\"card-label font-weight-bolder text-dark\">Connect Profile</span>\n                                                        <span className=\"mt-1 font-weight-bold font-size-sm\">Select the {capitalizeFirstLetter(GET_NETWORK_ICON(networkId))} Profile You’d Like to Connect</span>\n                                                    </h3>\n                                                </div>\n                                            </div>\n                                            <div className=\"noLoader\" id=\"FeedInstagramForm\">\n                                                <div className=\"instaConnectthroughfacebook_radio_list md-radio-list\">\n                                                    <div className=\"row\">\n                                                        {accounts && accounts.length ? accounts.map((acc, index) => (\n                                                            <div className=\"col-md-6\" key={acc.id}>\n                                                                <label\n                                                                    // htmlFor={`user${acc.accountId}`}\n                                                                    id={`user-${acc.id}`} className=\"user_row__ w-100 border-bottom p-3 m-0\">\n                                                                    <div className=\"d-flex flex-wrap align-items-center w-100\">\n                                                                        <span className={`symbol symbol-lg-45 symbol-30 random_color-${index + 1} symbol-circle me-4`}>\n                                                                            <span className=\"symbol-label font-size-h4 font-weight-bold\">{acc.value2[0].toUpperCase()}</span>\n                                                                        </span>\n                                                                        <div className=\"d-flex flex-column flex-grow-1 pe-3\">\n                                                                            <h5 className=\"text-dark-75 font-weight-bolder font-size-lg m-0\">{acc.value2}</h5>\n                                                                        </div>\n                                                                        <div className=\"d-flex align-items-center py-lg-0 py-2\">\n                                                                            <span className=\"option-control\">\n                                                                                <span className=\"radio radio-outline radio-primary\">\n                                                                                    <input id={`user${acc.id}`} onChange={() => this.setState({ selectedAcc: acc })} className=\"md-radiobtn\" type=\"radio\" name=\"pageSelect\" />\n                                                                                    <span></span>\n                                                                                </span>\n                                                                            </span>\n                                                                        </div>\n                                                                    </div>\n                                                                </label>\n                                                            </div>\n                                                        )) : null}\n                                                    </div>\n                                                </div>\n                                                <span id=\"feedsFacebookPageerror\" className=\"invalid-feedback\"></span>\n                                                <div className=\"d-flex justify-content-end border-top pt-10\">\n                                                    <div onClick={onBack} className=\"btn btn-secondary me-4\">Cancel</div>\n                                                    <button className={`btn btn-primary ${loading ? 'spinner spinner-right disabled' : ''}`} type=\"submit\" name=\"submit\" style={{ minWidth: \"100px\" }} onClick={() =>this.createFeed()}>Connect to Tagbox</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ConnectAccount\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { VALIDATE_URL, capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\nimport { addUserAccount, createFeedAction, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport FacebookTab from \"./components/FacebookTab\";\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\nimport { toast } from \"react-toastify\";\nimport ConnectAccount from \"../Elements/ConnectAccount\";\n\n\nconst channel = new BroadcastChannel('connect');\nclass FacebookFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textField: \"\",\n            account: null,\n            albumUrl: '',\n            errorMsg: 'This field is required',\n            error: false,\n            albumUrlError: false,\n            album: { label: 'Single Album', value: '65' },\n            connetedAccount: null,\n            accountList: [],\n            feedObj: {},\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onTextFieldChange = value => this.setState({ textField: value, error: false })\n    onAlbumFieldChange = value => this.setState({ albumUrl: value, albumUrlError: false })\n    onAccountChange = (value, parent) => {\n        if ([\"Page Reviews\", \"Page Mentions\"].includes(this.state.selectedFilterTab)) {\n            if (value == 0) this.props.selectAccount(null)\n            else this.props.selectAccount(value)\n        }\n\n        this.setState({ connetedAccount: parent })\n        this.setState({ account: value });\n    }\n\n\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\n    onAlbumChange = value => this.setState({ album: value })\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n\n    addFacebookAccount = () => {\n        const { networkData } = this.props;\n        this.setState({ feedObj: this.createFeedPostData() });\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeedPostData = () => {\n        const { textField, album, connetedAccount, account, albumUrl, moderation, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n\n            })\n\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId == 67 ? parseInt(album.value) : selectedFilterId,\n            connetedAccount: [62, 55].includes(selectedFilterId) ? connetedAccount : 0,\n            account: [62, 55].includes(selectedFilterId) ? account : connetedAccount,\n            field: textField,\n            onlyReels: 0,\n            hashtagIGTV: 0,\n            moderation: moderation ? 1 : 0,\n        }\n        if (selectedFilterId == 67) {\n            obj['field'] = albumUrl;\n        }\n        if (![8, 67].includes(selectedFilterId)) {\n            obj['field'] = '';\n        }\n\n        return obj;\n    }\n\n\n    createFeed = () => {\n\n        let obj = this.createFeedPostData();\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n        createFeedAction(obj, this.props.networkId, (getFeedId) => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n        })\n    }\n\n    onSubmit = () => {\n        const { textField, selectedFilterId, connetedAccount, albumUrl } = this.state;\n        const { accountId } = this.props;\n\n        if ((!textField || textField == \"\") && selectedFilterId == 8) {\n            this.setState({ error: true, loading: false, errorMsg: 'This field is required' })\n        } else if (selectedFilterId == 8 && !VALIDATE_URL(textField)) {\n            this.setState({ error: true, loading: false, errorMsg: 'Please enter valid Page Url' })\n        } else if ((!albumUrl || albumUrl == \"\") && selectedFilterId == 67) {\n            this.setState({ albumUrlError: true, loading: false, errorMsg: 'This field is required' })\n        } else if (selectedFilterId == 67 && !VALIDATE_URL(albumUrl)) {\n            this.setState({ albumUrlError: true, loading: false, errorMsg: 'Please enter valid Album Url' })\n        } else {\n\n            if (connetedAccount && accountId) {\n                this.createFeed();\n            } else {\n                this.addFacebookAccount();\n            }\n        }\n    }\n\n\n    createFeedFromPage = (accId, parentId, name) => {\n        let { feedObj } = this.state;\n        const { networkId, history } = this.props;\n\n        if (networkId == 3) {\n            feedObj = { ...feedObj, account: accId, connetedAccount: parentId }\n        }\n\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n        createFeedAction(feedObj, networkId, (getFeedId) => {\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (feedObj && Object.keys(feedObj).length > 0 && feedObj.collection && feedObj.collection != \"\" && String(feedObj.collection).split(\",\").length == 1) this.props.history(`/assets/${feedObj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n\n\n        }\n        );\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n        const { selectedFilterId } = this.state;\n        //55, 62 filter id \n        addUserAccount(networkId, data, [55, 62].includes(selectedFilterId) ? (responseData) => this.setState({ accountList: responseData }) : (connectAccountId) => this.createFeed(connectAccountId), selectedFilterId);\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 8: // Page\n                return <i className=\"ri-flag-2-line icon-6\"></i>\n                break;\n            case 67: // Gallery\n                return <i className=\"ri-gallery-line icon-6\"></i>\n                break;\n            case 55: // Review\n                return <i className=\"ri-star-line icon-6\"></i>\n                break;\n            case 62: // Handle\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            case 1: // Account\n                return <i className=\"ri-account-circle-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { error, selectedFilterTab, albumUrl, albumUrlError, errorMsg, moderation, loading, connetedAccount, album, textField, account, accountList, selectedFilterId } = this.state;\n        const { filterTabs, networkId, connectedAccountList } = this.props;\n\n        return <>{\n            !(accountList && accountList.length > 0) ? <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\n                                                <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                                    <FacebookTab\n                                                        onAddAccount={this.addFacebookAccount}\n                                                        connetedAccount={connetedAccount}\n                                                        onConnectedAccountChange={this.onConnectedAccountChange}\n                                                        tab={selectedFilterTab}\n                                                        text={textField}\n                                                        error={error}\n                                                        errorMsg={errorMsg}\n                                                        connectedAcc={connectedAccountList}\n                                                        onTextChange={this.onTextFieldChange}\n                                                        account={account}\n                                                        onAccountChange={this.onAccountChange}\n                                                        onCheckHandler={this.onCheckHandler}\n                                                        onAlbumChange={this.onAlbumChange}\n                                                        album={album}\n                                                        moderation={moderation}\n                                                        albumUrl={albumUrl}\n                                                        albumUrlError={albumUrlError}\n                                                        onAlbumFieldChange={this.onAlbumFieldChange}\n                                                        feedIcon={this.feedIcon}\n                                                    />\n                                                </Tab.Pane>\n                                            )) : null}\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </> :\n                <ConnectAccount accountList={accountList} loading={loading} networkId={networkId} connectedAcc={connectedAccountList} filterId={selectedFilterId} createFeedFromPage={this.createFeedFromPage} onBack={() => this.setState({ accountList: [] })} />\n        }\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FacebookFeed)","import React, { Component } from 'react';\nimport AccountPicker from '../../Elements/AccountPicker';\nimport { connect } from 'react-redux';\nimport CheckBoxField from '../../Elements/CheckboxField';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { selectAccount } from '../../../../../Services/Actions/addFeedAction';\nimport Select from 'react-select';\nimport InputField from '../../Elements/InputField';\nimport InfoSection from '../../Elements/InfoSection';\n\nclass InstagramTab extends Component {\n    state = {\n        allAccounts: [{ ConnectedAccounts: { id: 0, value2: 'loading...' } }],\n        selectValue: {},\n        formatedList: [],\n        personalAccountList: [],\n        selectPersonal: {},\n        allConnectAcc: [],\n        allPersonalAcc: []\n    }\n\n    componentDidMount() {\n        this.getAccounts();\n        this.getPersonalAccounts();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.connectedAcc && nextProps.personalAccount) {\n            if (this.state.allConnectAcc.length != nextProps.connectedAcc.length) {\n                this.getAccounts();\n            }\n            if (this.state.allPersonalAcc.length != nextProps.personalAccount.length) {\n                this.getPersonalAccounts();\n            }\n        }\n    }\n\n    getPersonalAccounts = () => {\n        const { personalAccount, onPersonalAccChange } = this.props;\n        if (personalAccount && personalAccount.length > 0) {\n            const formatedOption = this.formatOption(personalAccount, true);\n            onPersonalAccChange(formatedOption[0]);\n            this.setState({ personalAccountList: formatedOption, allPersonalAcc: personalAccount, selectPersonal: formatedOption[0] });\n        }\n    }\n    getAccounts = () => {\n        const { connectedAcc, onSelectedChildAccountChange } = this.props\n        var allAccounts = [];\n        if (connectedAcc && connectedAcc.length > 0) {\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child];\n                }\n                else {\n                    this.setState({ allAccounts: [] })\n                }\n            })\n\n            if (allAccounts && allAccounts.length > 0) {\n                const formatedOption = this.formatOption(allAccounts, false);\n                onSelectedChildAccountChange(formatedOption[0]);\n                this.setState({ allAccounts, formatedList: formatedOption, allConnectAcc: connectedAcc, selectValue: formatedOption[0] });\n            }\n        } else {\n            onSelectedChildAccountChange(null)\n            this.setState({ allAccounts: [] })\n        }\n    }\n\n\n\n    onAccountChange = (obj) => {\n        const { value } = obj;\n        const { onPersonalAccChange, onSelectedChildAccountChange, tab } = this.props;\n        if (value && value != \"\") {\n            if (tab == 'personal') {\n                this.props.selectAccount(value);\n                onPersonalAccChange(obj);\n            } else {\n                this.props.selectAccount(value)\n                onSelectedChildAccountChange(obj)\n            }\n        }\n        else {\n            this.props.selectAccount(null)\n        }\n    }\n\n    formatOption = (lists, isPersonal) => {\n        const formatedList = lists.map((item) => ({ label: isPersonal ? item.ConnectedAccounts.accountName : item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\n        if (formatedList && formatedList.length > 0) {\n            return [...formatedList, { label: 'other', value: 0 }];\n        }\n        return []\n    }\n\n    getInfo = (tab) => {\n        switch (tab) {\n            case 'hashtag':\n                return 'Instagram only allows posts from the last 24 hours. If there are no recent posts in the 24-hour duration, then the top 50 posts will be aggregated. Also, all your upcoming posts will be aggregated. Posts collected via hashtags will not include any information of the user.';\n\n            case 'handle':\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\n\n            case 'stories':\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\n\n            case 'stories':\n                return 'Initially stories from the last 24 hours will be shown after which all the upcoming stories will be aggregated.';\n\n            case 'mentions':\n                return 'You will only get upcoming posts after creating mentions feed.';\n\n            case 'tagged':\n                return 'Initially the latest 32 tagged posts on Instagram will be aggregated after which all the upcoming tagged posts will be aggregated.';\n\n            case 'videos':\n                return 'Initially 25 videos will be aggregated through handle after which all the upcoming videos will be aggregated.';\n\n            case 'personal':\n                return 'Initially 32 posts uploaded on personal accounts will be aggregated after which all the upcoming posts will be aggregated.';\n\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { tab, connectedAcc, hashtag, handle, onTextChange, personalAccount, handleError, onAddAccount, album, moderation, onCheckHandler, hashtagPost, excludeVideo, onlyReels, networkId, onAlbumChange, connetedAccount, onConnectedAccountChange, error, feedIcon } = this.props\n        const { formatedList, allAccounts, selectValue, personalAccountList, selectPersonal } = this.state\n\n        return (\n            <>\n                {tab == 'hashtag' || tab == \"handle\" ?\n                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                            {feedIcon(tab == \"hashtag\" ? 26 : 24)}\n                        </span>\n                        <InputField name={tab} className={`form-control form-control-lg fw-bolder px-9 ${(tab == \"hashtag\" && error) || (tab == \"handle\" && handleError) ? 'is-invalid' : ''}`} placeholder={`Enter user ${tab}`} value={tab == \"hashtag\" ? hashtag : handle} onChangeHandler={onTextChange} />\n                        {(tab == \"hashtag\" && error) || (tab == \"handle\" && handleError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                    </div>\n                    :\n                    tab == \"personal\" ?\n                        <div className=\"form-group text-center mb-6\">\n                            {personalAccount && personalAccount.length > 0 && personalAccountList && personalAccountList.length > 0 ?\n                                <div className=\"col-md-12\">\n                                    <div className=\"form-group position-relative\">\n                                        <Select className=\"selectpicker\" options={personalAccountList} classNamePrefix=\"selectpicker\" defaultValue={selectPersonal} onChange={(e) => this.onAccountChange(e)} />\n                                    </div>\n                                </div>\n                                :\n                                <div className=\"py-2\">\n                                    <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                        <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                            <img src={baseUrl(\"media/icons/social-icons/instagram.svg\")} height={43} width={43} alt=\"facebook\" />\n                                        </span>\n                                        <div className=\"overflow-hidden signIn_txt px-5\">\n                                            <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Instagram</span>\n                                        </div>\n                                    </button>\n                                </div>\n                            }\n                        </div>\n                        :\n                        connectedAcc && connectedAcc.length > 0 && allAccounts && allAccounts.length > 0 ?\n                            <div className=\"position-relative w-100 mb-3\">\n                                <Select className=\"selectpicker selectpicker-lg\" options={formatedList} classNamePrefix=\"selectpicker\" defaultValue={selectValue} onChange={(e) => this.onAccountChange(e)} />\n                            </div>\n                            :\n                            <div className=\"py-2\">\n                                <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                    <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                        <img src={baseUrl(\"media/icons/social-icons/instagram.svg\")} height={43} width={43} alt=\"facebook\" />\n                                    </span>\n                                    <div className=\"overflow-hidden signIn_txt px-5\">\n                                        <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Instagram</span>\n                                    </div>\n                                </button>\n                            </div>\n\n                }\n                {\n                    tab == 'hashtag' ? <div className=\"hideforBSearch\">\n                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                            <CheckBoxField isChecked={hashtagPost} onChangeHandler={onCheckHandler} name={\"hashtagPost\"}>\n                                <span className=\"form-check-label\">Get posts containing hashtag only in caption.</span>\n                            </CheckBoxField>\n                        </label>\n                    </div> : null\n                }\n                {\n                    tab == \"hashtag\" || tab == 'handle' ?\n                        <div className=\"hideforBSearch\">\n                            <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                <CheckBoxField isChecked={excludeVideo} onChangeHandler={onCheckHandler} name={\"excludeVideo\"}>\n                                    <span className=\"form-check-label\">Exclude Videos.</span>\n                                </CheckBoxField>\n                            </label>\n                        </div> : null\n                }\n                {\n                    tab != \"stories\" && tab != \"tagged\" ? <div className=\"hideforBSearch\">\n                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                            <CheckBoxField isChecked={onlyReels} onChangeHandler={onCheckHandler} name={\"onlyReels\"}>\n                                <span className=\"form-check-label\">Only Reels. <label className=\"badge badge-light-danger\">New</label></span>\n                            </CheckBoxField>\n                        </label>\n                    </div> : null\n                }\n                {/* <div className=\"hideforBSearch\">\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={moderation} onChangeHandler={onCheckHandler} name={\"moderation\"}>\n                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                        </CheckBoxField>\n                    </label>\n                </div> */}\n                {(connectedAcc && connectedAcc.length > 0) ? <div style={{ display: [\"hashtag\", \"handle\"].includes(tab) ? 'block' : \"none\" }}> <AccountPicker connectedAcc={connectedAcc} personalAccount={personalAccount} personal={tab == 'personal'} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} /> </div> : null}\n                <InfoSection text={this.getInfo(tab)} />\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(InstagramTab)\n\n\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\nimport { addUserAccount, createFeedAction, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport InstagramFeedTab from \"./components/InstagramTab\";\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\nimport ConnectAccount from \"../Elements/ConnectAccount\";\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass InstagramFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: '',\n            error: false,\n            hashtagPost: false,\n            excludeVideo: false,\n            onlyReels: false,\n            hanldeError: false,\n            account: null,\n            connetedAccount: null,\n            feedObj: {},\n            selectedChildAccount: {},\n            personalAcc: {},\n            accountList: [],\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n        }\n    }\n\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\n    }\n\n    onPersonalAccChange = (value) => this.setState({ personalAcc: value })\n    onSelectedChildAccountChange = (value) => this.setState({ selectedChildAccount: value })\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n\n    addInstaAccount = () => {\n        const { networkData } = this.props;\n        this.setState({ feedObj: this.createFeedPostData() });\n\n        //need to be checked\n        if ((this.state.selectedFilterTab == \"personal\")) {\n            showAddAccountAlert({ ...networkData, id: 2, name: 'Facebook' });\n            return;\n        }\n\n        showAddAccountAlert(networkData);\n    }\n\n\n\n    createFeedPostData = () => {\n        const { onlyReels, excludeVideo, hashtagPost, hashtag, handle, personalAcc, selectedChildAccount, moderation, selectedFilterId } = this.state;\n        const { collection, accountId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: selectedFilterId == 1 ? 2 : 18,\n            feedText: [34, 24, 25, 66].includes(selectedFilterId) ? (selectedChildAccount && Object.keys(selectedChildAccount).length > 0) && selectedChildAccount.label : selectedFilterId == 1 ? (personalAcc && Object.keys(personalAcc).length > 0) ? personalAcc.label : \"\" : selectedFilterId == 26 ? hashtag : handle,\n            hashtagCaption: hashtagPost ? 1 : 0,\n            filter: selectedFilterId,\n            accountId: accountId,\n            hashtagIGTV: excludeVideo ? 1 : 0,\n            onlyReels: onlyReels ? 1 : 0,\n            moderation: moderation ? 1 : 0,\n        }\n\n        if ([34, 24, 25, 66].includes(selectedFilterId)) {\n            obj['accountId'] = (selectedChildAccount && Object.keys(selectedChildAccount).length > 0) ? selectedChildAccount.value : \"\"\n        } else if (selectedFilterId == 1) {\n            obj['accountId'] = (personalAcc && Object.keys(personalAcc).length > 0) ? personalAcc.value : \"\"\n        }\n        return obj;\n    }\n\n\n    createFeed = (connectedAccId) => {\n        let obj = this.createFeedPostData();\n        if (connectedAccId != null) {\n            obj = { ...obj, accountId: connectedAccId }\n        }\n\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n\n        createFeedAction(obj, obj.networkId, (getFeedId) => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n        });\n    }\n\n    onSubmit = () => {\n        const { hashtag, handle, selectedFilterId, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n        if ((!hashtag || hashtag == \"\") && selectedFilterId == 26) {\n            this.setState({ error: true, loading: false })\n        } else if ((!handle || handle == \"\") && selectedFilterId == 23) {\n            this.setState({ handleError: true, isLoading: false })\n        } else {\n            if (isAuthRequired) {\n                if (accountId) {\n                    this.createFeed(null);\n                } else {\n                    this.addInstaAccount();\n                }\n            } else {\n                if ([23, 26].includes(selectedFilterId)) {\n                    this.createFeed(accountId != null ? accountId : 0);\n                } else {\n                    if (accountId) {\n                        this.createFeed(null);\n                    } else {\n                        this.addInstaAccount();\n                    }\n                }\n            }\n\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n        const { selectedFilterId } = this.state;\n\n        //34, 24, 25, 66 filterId's\n        addUserAccount(networkId, data, [34, 24, 25, 66].includes(selectedFilterId) ? (responseData) => this.setState({ accountList: responseData }) : (connectAccountId) => this.createFeed(connectAccountId, true), selectedFilterId);\n\n    }\n\n    createFeedFromPage = (accId, parentId, name) => {\n        let { feedObj } = this.state;\n        const { networkId } = this.props;\n\n        if (networkId == 18) {\n\n            if ([34, 24, 25, 66].includes(parseInt(feedObj.filter))) {\n                feedObj.feedText = name;\n            }\n\n            feedObj.accountId = parentId;\n        }\n\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n        createFeedAction(feedObj, networkId, (getFeedId) => {\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            if (getFeedId) {\n                if (feedObj && Object.keys(feedObj).length > 0 && feedObj.collection && feedObj.collection != \"\" && String(feedObj.collection).split(\",\").length == 1) this.props.history(`/assets/${feedObj.collection}`);\n                else {\n                    if (String(window.location.href).includes(\"assets\")) {\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\n                    }\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\n                }\n\n\n            }\n        });\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 26: // Hashtag\n                return <i className=\"ri-hashtag icon-6\"></i>\n                break;\n            case 23:\n            case 24: // Handle\n                return <i className=\"ri-at-line icon-6\"></i>\n                break;\n            case 34: // Stories\n                return <i className=\"ri-donut-chart-line icon-6\"></i>\n                break;\n            case 25: // tag\n                return <i className=\"ri-price-tag-3-line icon-6\"></i>\n                break;\n            case 66: // Video\n                return <i className=\"ri-movie-line icon-6\"></i>\n                break;\n            case 1: // Account\n                return <i className=\"ri-account-circle-line icon-6\"></i>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { error, selectedFilterTab, selectedFilterId, hashtag, handle, handleError, moderation, hashtagPost, excludeVideo, onlyReels, loading, connetedAccount, account, accountList } = this.state;\n        const { filterTabs, networkId, connectedAccountList, personalAccount } = this.props;\n\n        return !(accountList && accountList.length > 0) ? <>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                <div className=\"addSourceTabs\">\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                    {filterTabs && filterTabs.map((filterTab, index) => {\n                                        const { feedName, feedtype, filter } = filterTab;\n                                        return <Nav.Item className=\"p-1\" key={index}>\n                                            <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                    {this.feedIcon(filter)}\n                                                </span>\n                                                {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    })}\n                                </Nav>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <Tab.Content>\n                                    {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\n                                        <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                            <InstagramFeedTab\n                                                onAddAccount={this.addInstaAccount}\n                                                connetedAccount={connetedAccount}\n                                                onConnectedAccountChange={this.onConnectedAccountChange}\n                                                tab={selectedFilterTab}\n                                                hashtag={hashtag}\n                                                error={error}\n                                                connectedAcc={connectedAccountList}\n                                                onTextChange={this.onChangeHandler}\n                                                account={account}\n                                                onCheckHandler={this.onCheckHandler}\n                                                moderation={moderation}\n                                                handle={handle}\n                                                handleError={handleError}\n                                                personalAccount={personalAccount}\n                                                hashtagPost={hashtagPost}\n                                                onlyReels={onlyReels}\n                                                excludeVideo={excludeVideo}\n                                                onPersonalAccChange={this.onPersonalAccChange}\n                                                onSelectedChildAccountChange={this.onSelectedChildAccountChange}\n                                                feedIcon={this.feedIcon}\n                                            />\n                                        </Tab.Pane>\n                                    )) : null}\n                                </Tab.Content>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Tab.Container>\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n        </> :\n            <ConnectAccount accountList={accountList} loading={loading} networkId={networkId} connectedAcc={connectedAccountList} filterId={selectedFilterId} createFeedFromPage={this.createFeedFromPage} onBack={() => this.setState({ accountList: [] })} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc,\n        personalAccount: state.addFeed.personalAccount,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstagramFeed)","\nimport React, { Component, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Airbnb from '../../../../Feeds/Airbnb/Airbnb';\nimport Flickr from '../../../../Feeds/Flickr/Flickr';\nimport { getConnectedAccount } from '../../../../../../Services/Actions/addFeedAction';\nimport Tumblr from '../../../../Feeds/Tumblr/Tumblr';\nimport Pinterest from '../../../../Feeds/Pinterest/Pinterest';\nimport Giphy from '../../../../Feeds/Giphy/Giphy';\nimport Rss from '../../../../Feeds/Rss/Rss';\nimport Yelp from '../../../../Feeds/Yelp/Yelp';\nimport LinkedIn from '../../../../Feeds/Linkedin/Linkedin';\nimport YoutubeFeed from '../../../../Feeds/Youtube/Youtube';\nimport YammerFeed from '../../../../Feeds/Yammer/Yammer';\nimport Tiktok from '../../../../Feeds/Tiktok/Tiktok';\nimport Vimeo from '../../../../Feeds/Vimeo/Vimeo';\nimport TwitterFeed from '../../../../Feeds/Twitter/Twitter';\nimport GoogleFeed from '../../../../Feeds/Google/Google';\nimport SlackFeed from '../../../../Feeds/Slack/Slack';\nimport FacebookFeed from '../../../../Feeds/Facebook/Facebook';\nimport Instagram from '../../../../Feeds/Instagram/Instagram';\n\n\n\n\nconst CreateFeed = (props) => {\n    const { filterTabs, selectedNetwork, collection, getConnectedAccount, authRequire, onBack, id, history, editMediaHandleCallback } = props;\n    let isAuthRequired = authRequire.includes(id);\n    useEffect(() => {\n        if (id == 18) {\n            getConnectedAccount(2);\n        }\n        getConnectedAccount(id);\n    }, [props.id])\n\n    switch (id) {\n        case 1:\n            return filterTabs ? <TwitterFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 18:\n            return filterTabs ? <Instagram filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 3:\n            return filterTabs ? <FacebookFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 5:\n            return filterTabs ? <Pinterest filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 23:\n            return filterTabs ? <Airbnb filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 7:\n            return filterTabs ? <YoutubeFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 11:\n            return filterTabs ? <Tumblr filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 12:\n            return filterTabs ? <Rss filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 6:\n            return filterTabs ? <Flickr filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 4:\n            return filterTabs ? <GoogleFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 8:\n            return filterTabs ? <Vimeo filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 28:\n            return filterTabs ? <Tiktok filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 10:\n            return filterTabs ? <LinkedIn filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 19:\n            return filterTabs ? <Yelp filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 21:\n            return filterTabs ? <YammerFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 20:\n            return filterTabs ? <SlackFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 26:\n            return filterTabs ? <Giphy filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        default:\n            return <>network id - {id}</>\n    }\n}\nclass AddFeedByNetwork extends Component {\n\n    render() {\n        const { selectedNetwork } = this.props;\n        return selectedNetwork ? <CreateFeed id={selectedNetwork.id} {...this.props} /> : null\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authRequire: state.addFeed.authRequire\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getConnectedAccount: (id) => dispatch(getConnectedAccount(id)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFeedByNetwork);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.debounce');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Copyright (c) 2016-present, Ken Hibino.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Licensed under the MIT License (MIT).\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * See https://kenny-hibino.github.io/react-places-autocomplete\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\n// transform snake_case to camelCase\nvar formattedSuggestion = function formattedSuggestion(structured_formatting) {\n  return {\n    mainText: structured_formatting.main_text,\n    secondaryText: structured_formatting.secondary_text\n  };\n};\n\nvar PlacesAutocomplete = function (_React$Component) {\n  _inherits(PlacesAutocomplete, _React$Component);\n\n  function PlacesAutocomplete(props) {\n    _classCallCheck(this, PlacesAutocomplete);\n\n    var _this = _possibleConstructorReturn(this, (PlacesAutocomplete.__proto__ || Object.getPrototypeOf(PlacesAutocomplete)).call(this, props));\n\n    _this.init = function () {\n      if (!window.google) {\n        throw new Error('[react-places-autocomplete]: Google Maps JavaScript API library must be loaded. See: https://github.com/kenny-hibino/react-places-autocomplete#load-google-library');\n      }\n\n      if (!window.google.maps.places) {\n        throw new Error('[react-places-autocomplete]: Google Maps Places library must be loaded. Please add `libraries=places` to the src URL. See: https://github.com/kenny-hibino/react-places-autocomplete#load-google-library');\n      }\n\n      _this.autocompleteService = new window.google.maps.places.AutocompleteService();\n      _this.autocompleteOK = window.google.maps.places.PlacesServiceStatus.OK;\n      _this.setState(function (state) {\n        if (state.ready) {\n          return null;\n        } else {\n          return { ready: true };\n        }\n      });\n    };\n\n    _this.autocompleteCallback = function (predictions, status) {\n      _this.setState({ loading: false });\n      if (status !== _this.autocompleteOK) {\n        _this.props.onError(status, _this.clearSuggestions);\n        return;\n      }\n      var highlightFirstSuggestion = _this.props.highlightFirstSuggestion;\n\n      _this.setState({\n        suggestions: predictions.map(function (p, idx) {\n          return {\n            id: p.id,\n            description: p.description,\n            placeId: p.place_id,\n            active: highlightFirstSuggestion && idx === 0 ? true : false,\n            index: idx,\n            formattedSuggestion: formattedSuggestion(p.structured_formatting),\n            matchedSubstrings: p.matched_substrings,\n            terms: p.terms,\n            types: p.types\n          };\n        })\n      });\n    };\n\n    _this.fetchPredictions = function () {\n      var value = _this.props.value;\n\n      if (value.length) {\n        _this.setState({ loading: true });\n        _this.autocompleteService.getPlacePredictions(_extends({}, _this.props.searchOptions, {\n          input: value\n        }), _this.autocompleteCallback);\n      }\n    };\n\n    _this.clearSuggestions = function () {\n      _this.setState({ suggestions: [] });\n    };\n\n    _this.clearActive = function () {\n      _this.setState({\n        suggestions: _this.state.suggestions.map(function (suggestion) {\n          return _extends({}, suggestion, {\n            active: false\n          });\n        })\n      });\n    };\n\n    _this.handleSelect = function (address, placeId, suggestion) {\n      _this.clearSuggestions();\n      if (_this.props.onSelect) {\n        _this.props.onSelect(address, placeId, suggestion);\n      } else {\n        _this.props.onChange(address);\n      }\n    };\n\n    _this.getActiveSuggestion = function () {\n      return _this.state.suggestions.find(function (suggestion) {\n        return suggestion.active;\n      });\n    };\n\n    _this.selectActiveAtIndex = function (index) {\n      var activeName = _this.state.suggestions.find(function (suggestion) {\n        return suggestion.index === index;\n      }).description;\n      _this.setActiveAtIndex(index);\n      _this.props.onChange(activeName);\n    };\n\n    _this.selectUserInputValue = function () {\n      _this.clearActive();\n      _this.props.onChange(_this.state.userInputValue);\n    };\n\n    _this.handleEnterKey = function () {\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.handleSelect(_this.props.value, null, null);\n      } else {\n        _this.handleSelect(activeSuggestion.description, activeSuggestion.placeId, activeSuggestion);\n      }\n    };\n\n    _this.handleDownKey = function () {\n      if (_this.state.suggestions.length === 0) {\n        return;\n      }\n\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.selectActiveAtIndex(0);\n      } else if (activeSuggestion.index === _this.state.suggestions.length - 1) {\n        _this.selectUserInputValue();\n      } else {\n        _this.selectActiveAtIndex(activeSuggestion.index + 1);\n      }\n    };\n\n    _this.handleUpKey = function () {\n      if (_this.state.suggestions.length === 0) {\n        return;\n      }\n\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.selectActiveAtIndex(_this.state.suggestions.length - 1);\n      } else if (activeSuggestion.index === 0) {\n        _this.selectUserInputValue();\n      } else {\n        _this.selectActiveAtIndex(activeSuggestion.index - 1);\n      }\n    };\n\n    _this.handleInputKeyDown = function (event) {\n      /* eslint-disable indent */\n      switch (event.key) {\n        case 'Enter':\n          event.preventDefault();\n          _this.handleEnterKey();\n          break;\n        case 'ArrowDown':\n          event.preventDefault(); // prevent the cursor from moving\n          _this.handleDownKey();\n          break;\n        case 'ArrowUp':\n          event.preventDefault(); // prevent the cursor from moving\n          _this.handleUpKey();\n          break;\n        case 'Escape':\n          _this.clearSuggestions();\n          break;\n      }\n      /* eslint-enable indent */\n    };\n\n    _this.setActiveAtIndex = function (index) {\n      _this.setState({\n        suggestions: _this.state.suggestions.map(function (suggestion, idx) {\n          if (idx === index) {\n            return _extends({}, suggestion, { active: true });\n          } else {\n            return _extends({}, suggestion, { active: false });\n          }\n        })\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var value = event.target.value;\n\n      _this.props.onChange(value);\n      _this.setState({ userInputValue: value });\n      if (!value) {\n        _this.clearSuggestions();\n        return;\n      }\n      if (_this.props.shouldFetchSuggestions) {\n        _this.debouncedFetchPredictions();\n      }\n    };\n\n    _this.handleInputOnBlur = function () {\n      if (!_this.mousedownOnSuggestion) {\n        _this.clearSuggestions();\n      }\n    };\n\n    _this.getActiveSuggestionId = function () {\n      var activeSuggestion = _this.getActiveSuggestion();\n      return activeSuggestion ? 'PlacesAutocomplete__suggestion-' + activeSuggestion.placeId : undefined;\n    };\n\n    _this.getIsExpanded = function () {\n      return _this.state.suggestions.length > 0;\n    };\n\n    _this.getInputProps = function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (options.hasOwnProperty('value')) {\n        throw new Error('[react-places-autocomplete]: getInputProps does not accept `value`. Use `value` prop instead');\n      }\n\n      if (options.hasOwnProperty('onChange')) {\n        throw new Error('[react-places-autocomplete]: getInputProps does not accept `onChange`. Use `onChange` prop instead');\n      }\n\n      var defaultInputProps = {\n        type: 'text',\n        autoComplete: 'off',\n        role: 'combobox',\n        'aria-autocomplete': 'list',\n        'aria-expanded': _this.getIsExpanded(),\n        'aria-activedescendant': _this.getActiveSuggestionId(),\n        disabled: !_this.state.ready\n      };\n\n      return _extends({}, defaultInputProps, options, {\n        onKeyDown: (0, _helpers.compose)(_this.handleInputKeyDown, options.onKeyDown),\n        onBlur: (0, _helpers.compose)(_this.handleInputOnBlur, options.onBlur),\n        value: _this.props.value,\n        onChange: function onChange(event) {\n          _this.handleInputChange(event);\n        }\n      });\n    };\n\n    _this.getSuggestionItemProps = function (suggestion) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var handleSuggestionMouseEnter = _this.handleSuggestionMouseEnter.bind(_this, suggestion.index);\n      var handleSuggestionClick = _this.handleSuggestionClick.bind(_this, suggestion);\n\n      return _extends({}, options, {\n        key: suggestion.id,\n        id: _this.getActiveSuggestionId(),\n        role: 'option',\n        onMouseEnter: (0, _helpers.compose)(handleSuggestionMouseEnter, options.onMouseEnter),\n        onMouseLeave: (0, _helpers.compose)(_this.handleSuggestionMouseLeave, options.onMouseLeave),\n        onMouseDown: (0, _helpers.compose)(_this.handleSuggestionMouseDown, options.onMouseDown),\n        onMouseUp: (0, _helpers.compose)(_this.handleSuggestionMouseUp, options.onMouseUp),\n        onTouchStart: (0, _helpers.compose)(_this.handleSuggestionTouchStart, options.onTouchStart),\n        onTouchEnd: (0, _helpers.compose)(_this.handleSuggestionMouseUp, options.onTouchEnd),\n        onClick: (0, _helpers.compose)(handleSuggestionClick, options.onClick)\n      });\n    };\n\n    _this.handleSuggestionMouseEnter = function (index) {\n      _this.setActiveAtIndex(index);\n    };\n\n    _this.handleSuggestionMouseLeave = function () {\n      _this.mousedownOnSuggestion = false;\n      _this.clearActive();\n    };\n\n    _this.handleSuggestionMouseDown = function (event) {\n      event.preventDefault();\n      _this.mousedownOnSuggestion = true;\n    };\n\n    _this.handleSuggestionTouchStart = function () {\n      _this.mousedownOnSuggestion = true;\n    };\n\n    _this.handleSuggestionMouseUp = function () {\n      _this.mousedownOnSuggestion = false;\n    };\n\n    _this.handleSuggestionClick = function (suggestion, event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      var description = suggestion.description,\n          placeId = suggestion.placeId;\n\n      _this.handleSelect(description, placeId, suggestion);\n      setTimeout(function () {\n        _this.mousedownOnSuggestion = false;\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      suggestions: [],\n      userInputValue: props.value,\n      ready: !props.googleCallbackName\n    };\n\n    _this.debouncedFetchPredictions = (0, _lodash2.default)(_this.fetchPredictions, props.debounce);\n    return _this;\n  }\n\n  _createClass(PlacesAutocomplete, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var googleCallbackName = this.props.googleCallbackName;\n\n      if (googleCallbackName) {\n        var isPlacesLoaded = window.google && window.google.maps && window.google.maps.places;\n        if (!isPlacesLoaded) {\n          window[googleCallbackName] = this.init;\n        } else {\n          this.init();\n        }\n      } else {\n        this.init();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var googleCallbackName = this.props.googleCallbackName;\n\n      if (googleCallbackName && window[googleCallbackName]) {\n        delete window[googleCallbackName];\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children({\n        getInputProps: this.getInputProps,\n        getSuggestionItemProps: this.getSuggestionItemProps,\n        loading: this.state.loading,\n        suggestions: this.state.suggestions\n      });\n    }\n  }]);\n\n  return PlacesAutocomplete;\n}(_react2.default.Component);\n\nPlacesAutocomplete.propTypes = {\n  onChange: _propTypes2.default.func.isRequired,\n  value: _propTypes2.default.string.isRequired,\n  children: _propTypes2.default.func.isRequired,\n  onError: _propTypes2.default.func,\n  onSelect: _propTypes2.default.func,\n  searchOptions: _propTypes2.default.shape({\n    bounds: _propTypes2.default.object,\n    componentRestrictions: _propTypes2.default.object,\n    location: _propTypes2.default.object,\n    offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    radius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    types: _propTypes2.default.array\n  }),\n  debounce: _propTypes2.default.number,\n  highlightFirstSuggestion: _propTypes2.default.bool,\n  shouldFetchSuggestions: _propTypes2.default.bool,\n  googleCallbackName: _propTypes2.default.string\n};\n\nPlacesAutocomplete.defaultProps = {\n  /* eslint-disable no-unused-vars, no-console */\n  onError: function onError(status, _clearSuggestions) {\n    return console.error('[react-places-autocomplete]: error happened when fetching data from Google Maps API.\\nPlease check the docs here (https://developers.google.com/maps/documentation/javascript/places#place_details_responses)\\nStatus: ', status);\n  },\n  /* eslint-enable no-unused-vars, no-console */\n  searchOptions: {},\n  debounce: 200,\n  highlightFirstSuggestion: false,\n  shouldFetchSuggestions: true\n};\n\nexports.default = PlacesAutocomplete;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar compose = exports.compose = function compose() {\n  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    fns.forEach(function (fn) {\n      return fn && fn.apply(undefined, args);\n    });\n  };\n};\n\nvar pick = exports.pick = function pick(obj) {\n  for (var _len3 = arguments.length, props = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    props[_key3 - 1] = arguments[_key3];\n  }\n\n  return props.reduce(function (newObj, prop) {\n    if (obj && obj.hasOwnProperty(prop)) {\n      newObj[prop] = obj[prop];\n    }\n    return newObj;\n  }, {});\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLatLng = exports.geocodeByPlaceId = exports.geocodeByAddress = undefined;\n\nvar _PlacesAutocomplete = require('./PlacesAutocomplete');\n\nvar _PlacesAutocomplete2 = _interopRequireDefault(_PlacesAutocomplete);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.geocodeByAddress = _utils.geocodeByAddress;\nexports.geocodeByPlaceId = _utils.geocodeByPlaceId;\nexports.getLatLng = _utils.getLatLng;\nexports.default = _PlacesAutocomplete2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar geocodeByAddress = exports.geocodeByAddress = function geocodeByAddress(address) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ address: address }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};\n\nvar getLatLng = exports.getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var latLng = {\n        lat: result.geometry.location.lat(),\n        lng: result.geometry.location.lng()\n      };\n      resolve(latLng);\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nvar geocodeByPlaceId = exports.geocodeByPlaceId = function geocodeByPlaceId(placeId) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ placeId: placeId }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};"],"names":["SubmitFeedRequest","this","props","supportUrl","videoUrl","cancelFeed","sumbitFeed","loading","hideBtn","buttonText","className","Suspense","fallback","content","type","onClick","Component","InputField","value","onChangeHandler","placeholder","name","autoComplete","onChange","CheckBoxField","isChecked","checked","children","Airbnb","changeTab","filterId","feedtype","setState","selectedFilterId","selectedFilterTab","event","target","onCheckHandler","onSubmit","state","pageUrl","moderation","collection","networkId","history","error","obj","filter","airbnb_page_review","createFeedAction","getAllfeeds","closeAddFeed","filterTabs","Tab","id","defaultActiveKey","Object","keys","length","Nav","variant","map","filterTab","index","feedName","eventKey","capitalizeFirstLetter","onBack","connect","accountId","addFeed","selectedAccount","connectedAccountList","connectedAcc","dispatch","getFeedsData","Flickr","onManuallyApproveChange","hashtag","handle","handleError","collectionId","iCollection","push","isCollection","join","field1","field2","feedIcon","iconId","style","zIndex","channel","BroadcastChannel","Tumblr","getFeedId","String","split","window","location","href","includes","postMessage","JSON","stringify","setTimeout","Pinterest","userBoard","errorMsg","field12boardurl","url","replace","isAuthRequired","Giphy","search","sticker","stickerError","Rss","feedUrl","urlError","fieldtitle","onClickToDwonloadSample","isRequest","saveAs","baseUrl","sampleXml","Collapse","in","maxWidth","src","height","width","alt","download","SearchPlace","useState","address","setAddress","list","setList","spinnerActive","spinnerActiveFun","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","onLatlanChange","lat","lng","catch","console","e","onFieldTextChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","top","Dropdown","show","options","wheelPropagation","suggestion","v1","v2","description","placeId","whiteSpace","Yelp","debounce","HttpClient","post","AUTOCOMPLETE","Latlng","latlng","response","result","data","response_code","keywordList","responseData","ex","handleOnChange","locationApiCall","perv","keywordSelected","item","prev","keyword","data_handle_playlistName","isSelectedFromList","slug","data_slug_alias","onTextFieldChange","locationError","businessUrl","businessUrlError","keywordError","businessPageUrl27","businessName28","businessKeywordfield28","businessKeyword28","autoClose","image_url","InfoSection","text","BulkDropzone","uppyOne","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","params","auth","key","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","on","stepName","onUploadSuccess","original_name","cancelAll","file","toast","size","close","reason","fileName","proudlyDisplayPoweredByUppy","hideUploadButton","showProgressDetails","disableThumbnailGenerator","showSelectedFiles","showRemoveButtonAfterComplete","disableInformer","uppy","LinkedIn","imageUrl","postUrl","YoutubeTabs","query","youtubeAutoComplete","res","items","onYoutubeChange","onValueChange","tab","onListClick","onChannelIdChange","snippet","title","channelTitle","playlistId","channelId","document","getElementById","onKeywordChange","checkBox","onCheckBoxChange","shortError","playListError","locationKeywordError","thumbnails","default","YoutubeFeed","textField","clearValues","feedText","keywords","AccountPicker","disconnectAccount","account","accounts","ConnectedAccounts","updateAccountsList","acc","onConnectedAccountChange","selectAccount","deleteAccount","Swal","icon","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonAriaLabel","dismiss","onAccountChange","personalAccount","personal","ProfileImage","imageSize","symbolClass","accountName","profileUrl","profilePicture","Network","callback","disconnectUser","YammerFeed","addYammerAccount","networkData","showAddAccountAlert","createFeed","connectAccountId","groupId","topicId","connetedAccount","topicError","readAuthenticationCode","parse","addUserAccount","addEventListener","removeEventListener","AccountSelect","accountList","formatedOptions","label","classNamePrefix","TiktokFeed","addTiktokAccount","onSelectedChildAccountChange","selectedChildAccount","onPersonalAccChange","personalAcc","hashtagPost","hashtagCaption","isLoading","getPersonalAccounts","formatedOption","formatOption","personalAccountList","allPersonalAcc","selectPersonal","lists","isPersonal","formatedList","value2","getInfo","getAccounts","allAccounts","child","allConnectAcc","selectValue","display","VimeoFeed","addVimeoAccount","FeedIcon","TwitterTabs","showList","handleAutoComplete","onSelectList","onListNameChange","onListIdChange","owner_id","userName","showListError","listNameError","listName","advanced","mentionError","advanceError","multiPhoto","excludeRetweets","listname","excludeReplies","mentions","favorites","favoriteError","Twitter","listId","userId","addTwitterAccount","excludeRetweet","multiplePhoto","authRequire","connectedAccount","TwitterTab","onExcRetweetChange","PlaceDropDown","v3","formattedSuggestion","mainText","GoogleTab","accountOption","parentOption","getChildAccountData","f","i","onAccountIdChange","childAcc","onAccountChildChange","mainAccountId","parent","onParentSelected","childAcccounts","selectedAcc","nextProps","otherAccount","accountChild","onotherAccount","onAddAccount","defaultValue","GoogleFeed","placeName","addGoogleAccount","getConnectedAccount","fetchConnectedAccounts","SlackTab","handleInput","channelError","menuPlacement","findIndex","SlackFeed","addSlackAccount","parentAcc","connectedAccounts","FacebookTab","handles","openSelect","showHandle","handleTextChange","onTextChange","onSelectHandle","link","querySelector","onAccChange","selectedOption","find","onAlbumFieldChange","albumUrl","albumUrlError","album","onAlbumChange","authenticate","onAuthenticateChange","ConnectAccount","createFeedFromPage","backgroundImage","GET_NETWORK_ICON","toUpperCase","minWidth","FacebookFeed","addFacebookAccount","feedObj","createFeedPostData","parseInt","field","onlyReels","hashtagIGTV","VALIDATE_URL","accId","parentId","InstagramTab","excludeVideo","InstagramFeed","addInstaAccount","connectedAccId","hanldeError","CreateFeed","selectedNetwork","editMediaHandleCallback","useEffect","Instagram","Facebook","Youtube","Google","Vimeo","Tiktok","Yammer","Slack","AddFeedByNetwork","defineProperty","exports","_extends","assign","arguments","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","require","_propTypes2","_lodash2","_helpers","__esModule","PlacesAutocomplete","_React$Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","init","google","Error","maps","places","autocompleteService","AutocompleteService","autocompleteOK","PlacesServiceStatus","OK","ready","autocompleteCallback","predictions","status","highlightFirstSuggestion","p","idx","place_id","active","structured_formatting","main_text","secondaryText","secondary_text","matchedSubstrings","matched_substrings","terms","types","onError","clearSuggestions","fetchPredictions","getPlacePredictions","searchOptions","input","clearActive","getActiveSuggestion","selectActiveAtIndex","activeName","setActiveAtIndex","selectUserInputValue","userInputValue","handleEnterKey","activeSuggestion","undefined","handleDownKey","handleUpKey","handleInputKeyDown","preventDefault","handleInputChange","shouldFetchSuggestions","debouncedFetchPredictions","handleInputOnBlur","mousedownOnSuggestion","getActiveSuggestionId","getIsExpanded","defaultInputProps","role","disabled","onKeyDown","compose","onBlur","handleSuggestionMouseEnter","bind","handleSuggestionClick","onMouseEnter","onMouseLeave","handleSuggestionMouseLeave","onMouseDown","handleSuggestionMouseDown","onMouseUp","handleSuggestionMouseUp","onTouchStart","handleSuggestionTouchStart","onTouchEnd","googleCallbackName","subClass","superClass","create","constructor","setPrototypeOf","_inherits","propTypes","func","isRequired","string","shape","bounds","object","componentRestrictions","offset","oneOfType","number","radius","array","bool","defaultProps","_clearSuggestions","_len","fns","Array","_key","_len2","args","_key2","forEach","fn","apply","pick","_len3","_key3","reduce","newObj","prop","_PlacesAutocomplete","_PlacesAutocomplete2","_utils","geocodeByPlaceId","geocoder","Geocoder","GeocoderStatus","Promise","resolve","reject","geocode","geometry"],"sourceRoot":""}