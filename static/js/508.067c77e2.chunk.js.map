{"version":3,"file":"static/js/508.067c77e2.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsStatus/GetRightsDownload.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { saveAs } from 'file-saver';\nimport ReactHtmlParser from 'react-html-parser';\nimport { getCertificate } from '../../../../../../Services/Actions/ugcRightsActions'\nimport { getURLFromVideo } from '../../../../../../Services/Utils/utils'\n\nconst timeZoneImageReplace = (imageReplace) => {\n    try {\n        var repalceData = imageReplace\n        if (imageReplace && String(imageReplace).length > 0 && String(imageReplace).includes(`\"img/flags/`)) {\n            repalceData = String(imageReplace).replace(`\"img/flags/`, `\"https://cloud.taggbox.com/ugc-suite/media/images/flags/`)\n            if (repalceData && String(repalceData).includes(\".png\")) {\n                repalceData = String(repalceData).replace(`.png`, `.svg`)\n            }\n            repalceData = String(repalceData).replace(`<img`, `<img style=\"width: 20px;height:20px;\" `)\n            return repalceData\n        }\n        return imageReplace\n    }\n    catch {\n        return imageReplace\n    }\n}\n\nconst userAgentImageReplace = (imageReplace) => {\n    try {\n        var repalceData = imageReplace\n        if (imageReplace && String(imageReplace).length > 0 && String(imageReplace).includes(`\"img/browser-svg/`)) {\n            repalceData = String(imageReplace).replace(`\"img/browser-svg/`, `\"https://cloud.taggbox.com/ugc-suite/media/icons/browser-svg/`)\n            repalceData = String(repalceData).replace(`<img`, `<img style=\"width: 20px;height:20px;\" `)\n            return repalceData\n        }\n        return imageReplace\n    }\n    catch {\n        return imageReplace\n    }\n}\n\nclass GetRightsDownload extends Component {\n\n    state = { certificateLoading: false, imageLoading: false, tncLoading: false }\n\n    onClickToDownload = (id) => event => {\n        this.setState({ certificateLoading: true })\n        var self = this;\n        getCertificate(id).then((response) => {\n            const file = new Blob([response.data], { type: 'application/pdf' });\n            saveAs(file, 'Ugc_Approval_Certificate.pdf');\n            setTimeout(() => self.setState({ certificateLoading: false }), 1000)\n        }).catch((ex) => {\n            self.setState({ certificateLoading: false })\n        })\n    }\n    onClickToDownloadImage = (URL, type, mediaFile) => event => {\n        var self = this;\n        this.setState({ imageLoading: true })\n        this.onRequestDownload(URL, type, mediaFile).then((response) => {\n            setTimeout(() => self.setState({ imageLoading: false }), 1000)\n        }).catch((ex) => {\n            setTimeout(() => self.setState({ imageLoading: false }), 1000)\n        })\n\n    }\n\n    onRequestDownload = (URL, type, mediaFile) => {\n        return new Promise(resolve => {\n            try {\n                saveAs(URL, 'Ugc_Image.jpg');\n                if ((type == 3 || type == 5) && mediaFile) {\n                    const mediaUrl = getURLFromVideo(mediaFile)\n                    saveAs(mediaUrl, 'Ugc_Image.mp4');\n                    return Promise.resolved('')\n                }\n                else {\n                    return Promise.resolved('')\n                }\n            }\n            catch (ex) {\n\n                return Promise.resolved('')\n            }\n\n        })\n    }\n\n    onClickToDownloadFile = (URL) => event => {\n        this.setState({ tncLoading: true })\n        var self = this;\n        this.onRequestTnc(URL).then((response) => {\n            setTimeout(() => self.setState({ tncLoading: false }), 1000)\n        }).catch((ex) => {\n            setTimeout(() => self.setState({ tncLoading: false }), 1000)\n        })\n    }\n    onRequestTnc = (URL) => {\n        return new Promise(resolve => {\n            try {\n                saveAs(URL, 'TermsAndConditions.docx');\n                return Promise.resolved('')\n            }\n            catch (ex) {\n                return Promise.resolved('')\n            }\n\n        })\n    }\n    render() {\n        const { modalAssetData } = this.props\n        const { certificateLoading, imageLoading, tncLoading } = this.state\n        return <div className=\"p-lg-6 p-3\">\n            <div className=\"mb-6\">\n                <h6>Information</h6>\n                <ul className=\"list-group rounded-1\">\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User handle</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">@{modalAssetData.username}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User name</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.username}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Post Approval Date</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{moment(modalAssetData.ugcRights.created).format(\"LLLL\")}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User IP</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.ugcRights.userIP == \"\" ? \"--\" : modalAssetData.ugcRights.userIP}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Timezone</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.ugcRights.timezone == \"\" ? \"--\" : ReactHtmlParser(timeZoneImageReplace(modalAssetData.ugcRights.timezone))}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User Agent</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.ugcRights.userAgent == \"\" ? \"--\" : ReactHtmlParser(userAgentImageReplace(modalAssetData.ugcRights.userAgent))}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Terms & Condition</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800\">\n                            <button type=\"button\" className={`btn btn-outline-primary btn-sm ${tncLoading ? `spinner disabled` : ``}`} onClick={this.onClickToDownloadFile(modalAssetData.ugcRights.custom_terms)}>\n                                Download\n                                <i className=\"ri-file-download-line ms-1\"></i>\n                            </button>\n                        </span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Approval Certificate</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800\">\n                            <button type=\"button\" className={`btn btn-outline-primary btn-sm ${certificateLoading ? `spinner disabled` : ``}`} onClick={this.onClickToDownload(modalAssetData.ugcRights.id)}>\n                                Download Certificate\n                                <i className=\"ri-file-shield-2-line ms-1\"></i>\n                            </button>\n                        </span>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"mb-6\">\n                <h6>Download Media</h6>\n                <div className=\"card rounded-1\">\n                    <div className=\"card-body d-flex align-items-center justify-content-between p-2\">\n                        <div className=\"d-flex align-items-center cursor-pointer flex-shrink-0\" style={{ width: '30%' }}>\n                            <div className=\"position-relative rounded-1 bg-light w-100\" style={{ paddingBottom: '100%', width: '100%' }}>\n                                <img className=\"img-fluid position-absolute h-100 w-100 object-center-cover box-shadow rounded-1\" src={modalAssetData.postFile} height=\"3221\" width=\"4825\" alt={modalAssetData.name} />\n                            </div>\n                        </div>\n                        <div className=\"block-center align-items-start flex-column flex-grow-1 p-4\">\n                            <p className=\"fs-9 fw-medium\">{modalAssetData.content}</p>\n                            <button type=\"button\" className={`btn btn-primary ${imageLoading ? `spinner disabled` : ``}`} onClick={this.onClickToDownloadImage(modalAssetData.postFile, modalAssetData.type, modalAssetData.mediaFile)}>\n                                Download Media\n                                <i className=\"ri-download-2-line ms-1\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default GetRightsDownload;"],"names":["timeZoneImageReplace","imageReplace","repalceData","String","length","includes","replace","userAgentImageReplace","GetRightsDownload","state","certificateLoading","imageLoading","tncLoading","onClickToDownload","id","event","setState","self","getCertificate","then","response","file","Blob","data","type","saveAs","setTimeout","catch","ex","onClickToDownloadImage","URL","mediaFile","onRequestDownload","Promise","resolve","resolved","mediaUrl","getURLFromVideo","onClickToDownloadFile","onRequestTnc","modalAssetData","this","props","className","username","moment","ugcRights","created","format","userIP","timezone","ReactHtmlParser","userAgent","onClick","custom_terms","style","width","paddingBottom","src","postFile","height","alt","name","content","Component"],"sourceRoot":""}