{"version":3,"file":"static/js/2737.2f4f587e.chunk.js","mappings":"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","sources":["Layouts/Main/Templates/TemplateAside/EditTemplateAside.js"],"sourcesContent":["import React, { Component, Suspense, memo } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Accordion, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport ModernWaterfallTemplate from './Components/ModernWaterfallTemplate';\nimport ModernSlideshowTemplate from './Components/ModernSlideshowTemplate';\nimport AtmosphereTemplate from './Components/AtmosphereTemplate';\n\nimport SquarePhoto from '../ThemeTemplates/SquarePhoto';\nimport ModernCard from '../ThemeTemplates/ModernCard';\nimport HorizontalColumns from '../ThemeTemplates/HorizontalColumns';\nimport ModernSlideShow from '../ThemeTemplates/ModernSlideShow';\nimport Atmosphere from '../ThemeTemplates/Atmosphere';\nimport GalleryPhoto from '../ThemeTemplates/GalleryPhoto';\nimport ModernWaterfall from '../ThemeTemplates/ModernWaterfall';\nimport FontHead from './FontHead';\n\nimport { getThemesList, createTemplate } from '../../../../Services/Actions/templateAction'\nimport WidgetOnsiteButton from '../ThemeTemplates/Components/WidgetOnsiteButton';\nimport DisplayOnsiteStrip from '../ThemeTemplates/Components/DisplayOnsiteStrip';\nimport ThemePopUp from '../ThemeTemplates/Components/ThemePopUp/ThemePopUp';\n\nconst ModernCardTemplate = React.lazy(() => import('./Components/ModernCardTemplate'));\nconst SquarePhotoTemplate = React.lazy(() => import('./Components/SquarePhotoTemplate'));\nconst HorizontalColumnTemplate = React.lazy(() => import('./Components/HorizontalColumnTemplate'));\nconst GalleryPhotoTemplate = React.lazy(() => import('./Components/GalleryPhotoTemplate'));\nconst ColorPicker = React.lazy(() => import('../../CommonComponents/ColorPicker'));\n\n\nconst ThemesPreview = ({ themeName, templateFormData, onClickToPopUp }) => {\n    switch (themeName) {\n        case 20:\n            return <ModernCard themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 4:\n            return <SquarePhoto themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 47:\n            return <HorizontalColumns themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 21:\n            return <ModernSlideShow themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 44:\n            return <Atmosphere themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 50:\n            return <GalleryPhoto themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 58:\n            return <ModernWaterfall themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        default:\n            return <ModernCard themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n    }\n\n}\n\n\nclass TemplateAside extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            templateName: props.defaultTheme && props.defaultTheme.themeDefaultOption ? props.defaultTheme.themeDefaultOption.name : \"\",\n            selectedTheme: props.defaultTheme ? { name: props.defaultTheme.name, themeId: props.defaultTheme.themeId } : {},\n            selectedThemeData: props.defaultTheme ? props.defaultTheme : null,\n            templateFormData: null,\n            isRequesting: false,\n            tempError: false\n        }\n    }\n\n    onChooseTheme = (theme, selectedThemeData) => event => {\n        this.setState({ selectedTheme: theme, selectedThemeData: selectedThemeData, popupData: null })\n\n\n    }\n    onTextTemplateName = event => {\n        this.setState({ templateName: event.target.value, tempError: false })\n    }\n    tempFormData = (data) => {\n        this.setState({ templateFormData: data })\n    }\n    onClickSaveChanges = event => {\n        const { templateFormData, templateName, selectedThemeData } = this.state\n        const { templateId, onSiteSetting } = this.props\n        if (templateFormData && Object.keys(templateFormData).length > 0 && String(templateName).length > 0) {\n            var self = this\n\n            const onsite_settings = {\n                network: onSiteSetting.network,\n                filter: onSiteSetting.filter,\n                moderation: onSiteSetting.moderation,\n                onsite_qr_code_btn_text: onSiteSetting.onsite_qr_code_btn_text,\n                onsite_btn_color: templateFormData.onSiteUpload.bgColor,\n                onsite_btn_txt_color: templateFormData.onSiteUpload.textColor,\n                onsite_link_font_btn: onSiteSetting.onsite_link_font_btn,\n                onsite_css_font_btn: onSiteSetting.onsite_css_font_btn,\n                onsite_font_varient_btn: onSiteSetting.onsite_font_varient_btn,\n                btn_fontSize: templateFormData.onSiteUpload.fontSize,\n                onsite_qr_code_status: templateFormData.onSiteUpload.qrCodeStatus,\n                onsite_popup_title: onSiteSetting.onsite_popup_title,\n                onsite_popup_btn_txt: templateFormData.onSiteUpload.buttonText,\n                onsite_popup_sub_heading: onSiteSetting.onsite_popup_sub_heading,\n                onsite_term_url: onSiteSetting.onsite_term_url,\n                onsiteImgBack: onSiteSetting.onsiteImgBack,\n                onsite_logo: onSiteSetting.onsite_logo,\n                Onsite_logoImageValue: onSiteSetting.Onsite_logoImageValue,\n                onsite_bg_color_wg: onSiteSetting.onsite_bg_color_wg,\n                onsiteBackImage: onSiteSetting.onsiteBackImage,\n                onsite_bg_image_wg: onSiteSetting.onsite_bg_image_wg,\n                Onsite_backImageValue: onSiteSetting.Onsite_backImageValue,\n                onsite_succ_msg: onSiteSetting.onsite_succ_msg,\n                onsite_thank_txt_color: onSiteSetting.onsite_thank_txt_color,\n                onsite_link_font_msg: onSiteSetting.onsite_link_font_msg,\n                onsite_css_font_msg: onSiteSetting.onsite_css_font_msg,\n                onsite_font_varient_msg: onSiteSetting.onsite_font_varient_msg,\n                onsite_thank_fontSize: onSiteSetting.onsite_thank_fontSize,\n                onsite_status: templateFormData.onSiteUpload.buttonStatus,\n                btn_radius: templateFormData.onSiteUpload.borderRadius\n            };\n            const data = {\n                \"action\": 2,\n                \"id\": templateId,\n                \"name\": templateName,\n                \"theme\": selectedThemeData.themeId,\n                \"cssStatus\": templateFormData.customCss.cssStatus ? 1 : 0,\n                \"css\": templateFormData.customCss.css,\n                \"backgroundColor\": templateFormData.background.status ? templateFormData.background.color : \"\",\n                \"transparent\": templateFormData.background.transparent ? 1 : 0,\n                \"backgroundImage\": templateFormData.background.image ? templateFormData.background.image : \"\",\n                \"backgroundImageId\": 0,\n                \"link_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"css_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"font_varient\": templateFormData.cardStyle.fontVarient && Object.keys(templateFormData.cardStyle.fontVarient).length > 0 ? templateFormData.cardStyle.fontVarient.value : \"\",\n                \"fontColor\": templateFormData.cardStyle.textColor,\n                \"cardColor\": templateFormData.cardStyle.cardColor,\n                \"postText\": 0,\n                \"postAuthor\": templateFormData.advanced.author ? 1 : 0,\n                \"postTime\": templateFormData.advanced.time ? 1 : 0,\n                \"postFeatured\": templateFormData.themeSettings.postPopUp ? 1 : 0,\n                \"minimumPostWidth\": templateFormData.themeSettings.minPostWitdh,\n                \"padding\": templateFormData.themeSettings.postPadding,\n                \"scrollDelay\": templateFormData.themeSettings.scrollSpeed,\n                \"slideDelay\": templateFormData.themeSettings.timePerSlide,\n                \"numberOfPosts\": templateFormData.themeSettings.numberOfPosts,\n                \"trimcontent\": templateFormData.themeSettings.trimContent ? 1 : 0,\n                \"playFullVideo\": 1,\n                \"randomizePost\": templateFormData.themeSettings.suffleAssets ? 1 : 0,\n                \"hideUrls\": templateFormData.themeSettings.hideUrls ? 1 : 0,\n                \"fitRow\": templateFormData.themeSettings.bestFit ? 1 : 0,\n                \"roundEdge\": 5,\n                \"cardType\": 1,\n                \"socialAction\": templateFormData.cardStyle.socialActions ? 1 : 0,\n                \"timeForPopup\": templateFormData.themeSettings.popUpduration,\n                \"authorColor\": templateFormData.cardStyle.authorColor,\n                \"iconType\": templateFormData.cardStyle.iconType ? 1 : 505,\n                \"iconColor\": templateFormData.cardStyle.socialIconColor,\n                \"fontSize\": parseInt(templateFormData.cardStyle.fontSize),\n                \"shareOption\": templateFormData.cardStyle.shareOptions ? 1 : 0,\n                \"hideContent\": templateFormData.advanced.hideContent ? 1 : 0,\n                \"numberOfCoumn\": templateFormData.themeSettings.columns && Object.keys(templateFormData.themeSettings.columns).length > 0 ? templateFormData.themeSettings.columns.value : 0,\n                \"slideDuration\": 0,\n                \"slidePost\": 0,\n                \"autoPlay\": 0,\n                \"popupSlideShow\": templateFormData.themeSettings.popupSlideShow ? 1 : 0,\n                \"customUrl\": templateFormData.themeSettings.popUpUrl && String(templateFormData.themeSettings.popUpUrl).length > 0 ? templateFormData.themeSettings.popUpUrl : \"\",\n                \"showHideOldPost\": templateFormData.themeSettings.hideOldAssets.range == 8 ? templateFormData.themeSettings.hideOldAssets.showHideOldPost : 0,\n                \"showHideOlderPost\": templateFormData.themeSettings.hideOldAssets.range ? templateFormData.themeSettings.hideOldAssets.range : 0,\n                \"loadMoreStatus\": templateFormData.themeSettings.showmore ? 1 : 0,\n                \"autoScrollStatus\": templateFormData.themeSettings.autoLoad ? 1 : 0,\n                \"hidePosts\": templateFormData.themeSettings.hideOldAssets.status ? 1 : 0,\n                \"onsite_settings\": JSON.stringify(onsite_settings)\n            }\n            this.setState({ isRequesting: true, tempError: false })\n            createTemplate(data).then((response) => {\n                self.setState({ isRequesting: false, tempError: false })\n                toast.success(\"Template has been successfully updated.\")\n                self.props.history(\"/template\")\n            }).catch((ex) => {\n                toast.error(\"some error occurred\")\n            })\n        }\n        else {\n            if (String(templateName).length == 0) this.setState({ tempError: true })\n            toast.error(\"Please check all required fields.\")\n        }\n    }\n\n\n\n    onClickToPopUp = (data, callback) => {\n        if (callback) this.setState({ popupData: data }, () => callback())\n        else this.setState({ popupData: data })\n    }\n    onClosePopUp = event => this.setState({ popupData: null })\n    render() {\n\n        const { themeList, fonts, activeTheme, onSiteSetting } = this.props\n        const { selectedTheme, selectedThemeData, templateName, templateFormData, currentTheme, isRequesting, tempError, popupData } = this.state\n        const displayThemesId = [21, 44, 58];\n        const widgetThemesId = [4, 20, 47, 50];\n        return <>\n            <FontHead fonts={fonts} />\n            <div className=\"innerAside flex-shrink-0\">\n                <div className=\"card mb-4\">\n                    <div className=\"card-body p-0\">\n                        <div className=\"p-3\">\n                            <div className=\"pb-3\">\n                                <label className=\"text-gray-800 mb-2\">Template Name <strong className=\"text-danger\">*</strong></label>\n                                <div className=\"\">\n                                    <input type=\"text\" name=\"templateName\" className={`form-control form-control-sm ${tempError ? `is-invalid` : ``}`} placeholder=\"Enter Template name...\" onChange={this.onTextTemplateName} value={templateName} />\n                                    {tempError ? <div className=\"invalid-feedback\">Please provide template name</div> : null}\n                                </div>\n                            </div>\n                            <div className=\"template_aside_inner\">\n                                <Accordion defaultActiveKey=\"1\">\n                                    <Accordion.Item eventKey=\"1\" className=\"pb-3\">\n                                        <Accordion.Header className=\"w-100\">\n                                            <span className=\"fs-9 fw-medium\">{selectedTheme && selectedTheme.name ? selectedTheme.name : `Choose Theme`}</span>\n                                        </Accordion.Header>\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                                            <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"themeName\">\n                                                {themeList.map((item, key) => {\n                                                    return <ToggleButton key={`theme_${item.themeId}`} id={`theme-${item.themeId}`} className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${item.themeId == selectedTheme.themeId ? `active` : ``}`}\n                                                        onClick={this.onChooseTheme({ name: item.name, themeId: item.themeId }, item)} value={item.themeId}>\n                                                        <div className=\"card-body p-2\">\n                                                            <div className=\"d-flex align-items-center\">\n                                                                <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\n                                                                    <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${item.themeId}.png`)} height=\"40\" width=\"40\" alt={item.name} />\n                                                                </div>\n                                                                <div className=\"overflow-hidden\">\n                                                                    <p className=\"fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start\">{item.name}</p>\n                                                                    <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis text-start\">{item.product_type == 1 ? `Widget` : item.product_type == 2 ? `Display` : ``}</p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </ToggleButton>\n                                                })\n                                                }\n                                            </ToggleButtonGroup>\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                </Accordion>\n                                {\n                                    selectedTheme && Object.keys(selectedTheme).length > 0 ? <>{selectedTheme.themeId == 4 ? <Suspense fallback={<></>}>\n                                        <SquarePhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 21 ? <Suspense fallback={<></>}>\n                                        <ModernSlideshowTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 20 ? <Suspense fallback={<></>}>\n                                        <ModernCardTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 44 ? <Suspense fallback={<></>}>\n                                        <AtmosphereTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 50 ? <Suspense fallback={<></>}>\n                                        <GalleryPhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 47 ? <Suspense fallback={<></>}>\n                                        <HorizontalColumnTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 58 ? <Suspense fallback={<></>}>\n                                        <ModernWaterfallTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : null}</> : null\n                                }\n                            </div>\n                        </div>\n                        <div className=\"bg-white pt-2 w-100 p-3 rounded-2\">\n                            <button type=\"button\" className={`btn btn-primary w-100 ${isRequesting ? `spinner disabled` : ``}`} onClick={selectedTheme ? this.onClickSaveChanges : null}>Update Changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex flex-column overflow-hidden w-100\">\n                <div className=\"card\">\n                    <div className=\"card-body content_wrapper\">\n                        <div className=\"tb_app_container\">\n                            {templateFormData && Object.keys(templateFormData).length > 0 && selectedTheme && Object.keys(selectedTheme).length > 0 ? <div className=\"tb_app_wrapper\" key={selectedTheme.themeId}>\n                                {widgetThemesId.includes(selectedTheme.themeId) ? <WidgetOnsiteButton templateFormData={this.state.templateFormData} /> : null}\n                                <ThemesPreview themeName={selectedTheme.themeId} templateFormData={this.state.templateFormData} onClickToPopUp={this.onClickToPopUp} />\n                                {displayThemesId.includes(selectedTheme.themeId) ? <DisplayOnsiteStrip templateFormData={this.state.templateFormData} /> : null}\n                            </div> : null}\n                            {popupData ? <ThemePopUp data={popupData} onClosePopUp={this.onClosePopUp} templateFormData={this.state.templateFormData} isWidget={widgetThemesId.includes(selectedTheme.themeId)} /> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default memo(TemplateAside);"],"names":["ModernCardTemplate","React","SquarePhotoTemplate","HorizontalColumnTemplate","GalleryPhotoTemplate","ThemesPreview","themeName","templateFormData","onClickToPopUp","themeId","TemplateAside","props","onChooseTheme","theme","selectedThemeData","event","setState","selectedTheme","popupData","onTextTemplateName","templateName","target","value","tempError","tempFormData","data","onClickSaveChanges","state","templateId","onSiteSetting","Object","keys","length","String","self","onsite_settings","network","filter","moderation","onsite_qr_code_btn_text","onsite_btn_color","onSiteUpload","bgColor","onsite_btn_txt_color","textColor","onsite_link_font_btn","onsite_css_font_btn","onsite_font_varient_btn","btn_fontSize","fontSize","onsite_qr_code_status","qrCodeStatus","onsite_popup_title","onsite_popup_btn_txt","buttonText","onsite_popup_sub_heading","onsite_term_url","onsiteImgBack","onsite_logo","Onsite_logoImageValue","onsite_bg_color_wg","onsiteBackImage","onsite_bg_image_wg","Onsite_backImageValue","onsite_succ_msg","onsite_thank_txt_color","onsite_link_font_msg","onsite_css_font_msg","onsite_font_varient_msg","onsite_thank_fontSize","onsite_status","buttonStatus","btn_radius","borderRadius","customCss","cssStatus","css","background","status","color","transparent","image","cardStyle","fontFamily","family","fontVarient","cardColor","advanced","author","time","themeSettings","postPopUp","minPostWitdh","postPadding","scrollSpeed","timePerSlide","numberOfPosts","trimContent","suffleAssets","hideUrls","bestFit","socialActions","popUpduration","authorColor","iconType","socialIconColor","parseInt","shareOptions","hideContent","columns","popupSlideShow","popUpUrl","hideOldAssets","range","showHideOldPost","showmore","autoLoad","JSON","stringify","isRequesting","createTemplate","then","response","toast","history","catch","ex","callback","onClosePopUp","defaultTheme","themeDefaultOption","name","this","themeList","fonts","activeTheme","currentTheme","widgetThemesId","className","type","placeholder","onChange","defaultActiveKey","eventKey","map","item","key","id","onClick","src","baseUrl","height","width","alt","product_type","Suspense","fallback","includes","isWidget","Component","memo"],"sourceRoot":""}