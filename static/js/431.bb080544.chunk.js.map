{"version":3,"file":"static/js/431.bb080544.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Swal from 'sweetalert2';\nimport { Cookies } from \"react-cookie\";\nimport { HOST_DOMAIN, INSTA_CLIENT_ID } from '../../../../../../Services/Api'\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport ProfileImage from \"../../../../CommonComponents/ProfileImage/ProfileImage\";\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\nimport { GET_NETWORK_ICON, CAPITALIZE_FIRST_LETTER, GET_NETWORK_NAME } from '../../../../../../Services/Utils/utils'\nimport { flickrConnect, tumblerConnect } from '../../../../SocialLogin/auth'\nimport { getFbAuthUrl, getYammerAuthUrl, getVimeoAuthUrl, tiktokAuthentication } from '../../../../../../Layouts/Main/AuthCallback/AuthSocialAcc'\nimport { addFacebookAccount, addInstaAccount } from '../../../../../../Layouts/Main/AuthCallback/connectSocialAcc'\nimport { addUserRights } from '../../../../../../Services/Actions/addFeedAction'\nimport { getRightsInstagramDetails, getFacebookDetails } from '../../../../../../Services/Actions/publishActions'\nimport { getTwitterCode } from '../../../../../../Services/Actions/loginActions'\nconst channel = new BroadcastChannel('connect');\nconst cookies = new Cookies();\nclass GetRightsSocialAccount extends Component {\n    state = {\n        connected: null,\n        showConfirm: false\n    }\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n        this.onLoadSocialAccount()\n    }\n    onLoadSocialAccount = () => {\n        try {\n            const { modalAssetData } = this.props\n            if (cookies.get(`ugcRights${modalAssetData.networkId}`)) {\n                const accountsData = cookies.get(`ugcRights${modalAssetData.networkId}`)\n                if (accountsData && accountsData.length > 0) {\n                    this.setState({ access_token: \"\", socialData: null, accountsData }, () => this.props.onUpdateData(String(GET_NETWORK_ICON(modalAssetData.networkId)).toLowerCase(), accountsData))\n                }\n\n            }\n        }\n        catch (ex) {\n\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId, type } = response;\n\n        var self = this\n        if (type == \"get-rights\") {\n            const responseToken = JSON.parse(event.data);\n            const { modalAssetData } = this.props\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\n                addInstaAccount(data, (data) => {\n                    getRightsInstagramDetails({ access_token: data.token }).then((response) => {\n\n                        const { data } = response\n                        var accountsData = [];\n                        if (data && Object.keys(data).length > 0) {\n                            accountsData.push({ id: data.id, name: data.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        }\n                        cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 3) {\n                addFacebookAccount(data, networkId, (data) => {\n                    getFacebookDetails({ access_token: data.token }).then((response) => {\n                        const { pages } = response.data\n                        var accountsData = [];\n                        if (pages && pages.length > 0) {\n                            pages.map((item) => {\n                                accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                            })\n                        }\n                        cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 1) {\n                var accountsData = [];\n                if (data && Object.keys(data).length > 0) {\n                    accountsData.push({ id: data.id_str, name: data.name, picture: data.picture ? data.picture : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                }\n                cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                self.setState({ access_token: localStorage.getItem(\"tokenSecret\"), socialData: data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\n            }\n            else if (modalAssetData.networkId == 28) {\n                var accountsData = [];\n                if (data && Object.keys(data).length > 0) {\n                    accountsData.push({ id: data.display_name, name: data.display_name, picture: data.avatar ? data.avatar : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                }\n                cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                self.setState({ access_token: data.client_key, socialData: data, accountsData }, () => this.props.onUpdateData(\"tiktok\", accountsData))\n            }\n            else {\n                addUserRights(data, networkId, (data) => {\n\n                })\n            }\n\n        }\n    }\n\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    handleYes = event => {\n        this.setState({ showConfirm: true })\n    }\n    handleNo = event => {\n        this.setState({ showConfirm: true })\n    }\n    onClickSocialConnect = (data) => event => {\n        if (data && Object.keys(data).length > 0) {\n            Swal.fire({\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\n                imageHeight: 40,\n                imageWidth: 40,\n                title: `<strong>${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}</strong>`,\n                html: `Add an account to continue`,\n                showCloseButton: true,\n                showCancelButton: false,\n                focusConfirm: true,\n                confirmButtonText: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n                confirmButtonAriaLabel: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    localStorage.setItem(\"networkId\", data.networkId);\n                    localStorage.setItem(\"connectionType\", \"get-rights\");\n                    switch (data.networkId) {\n                        case 1:\n                            getTwitterCode();\n                            break;\n                        case 6:\n                            flickrConnect(6);\n                            break;\n                        case 21:\n                            getYammerAuthUrl()\n                            break;\n                        case 11:\n                            tumblerConnect(11);\n                            break;\n                        case 8:\n                            getVimeoAuthUrl()\n                            break;\n                        case 3:\n                            getFbAuthUrl(3);\n                            break;\n                        case 28:\n                            tiktokAuthentication();\n                            break;\n\n                        case 2:\n                            const url1 = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url1, '_blank', \"width=786,height=786\");\n                            break;\n                        case 18:\n                            const url = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url, '_blank', \"width=786,height=786\");\n                            break;\n                        // case 18:\n                        //     getFbAuthUrl(18)\n                        //     break;\n                        default:\n                            break;\n                    }\n                }\n            });\n        }\n    }\n\n\n    render() {\n        const { showConfirm } = this.state\n        const { modalAssetData, connectedAccount } = this.props;\n        return <><div className=\"p-lg-6 p-3\">\n            <div className=\"m-auto\">\n                {\n                    connectedAccount && connectedAccount.data.length > 0 ? <><h3 className=\"mb-2 pb-2 fs-7 pt-1\">\n                        <span className=\"fw-medium\">Connect Account</span>\n                    </h3>\n                        <div className=\"mb-3\">\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\">\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                        imageSize={40}\n                                        symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\n                                        name={connectedAccount.data[0].name} profileUrl={''} networkId={modalAssetData.networkId} />\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(connectedAccount.provider)} />\n                                    </span>\n                                </div>\n                            </button>\n                            <span className=\"fw-medium\">You are logged in with this account</span>\n                        </div>\n                        <div className=\"d-flex align-items-center w-75 mb-3 mx-auto\">\n                            <span className=\"border-bottom d-flex flex-grow-1\"></span>\n                            <span className=\"d-flex flex-shrink-0 mx-5 fs-6 fw-semibold text-gray-400\">Or</span>\n                            <span className=\"border-bottom d-flex flex-grow-1\"></span>\n                        </div>\n                    </> : null\n                }\n\n                <>{\n                    modalAssetData.networkId == 7 ?\n                        <SocialGoogleLogin onUpdateData={this.props.onUpdateData} />\n                        :\n                        <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\n                            <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                                <div className=\"w-75 overflow-hidden\">\n                                    <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                                </div>\n                            </div>\n                            {modalAssetData.networkId ?\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(modalAssetData.networkId)} style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                                    </span>\n                                </div>\n                                : null}\n                        </button>\n                }\n\n\n                </>\n\n            </div>\n        </div>\n\n\n        </>\n    }\n}\n\nexport default GetRightsSocialAccount;"],"names":["channel","BroadcastChannel","cookies","Cookies","GetRightsSocialAccount","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","connected","showConfirm","onLoadSocialAccount","modalAssetData","props","get","networkId","accountsData","setState","access_token","socialData","onUpdateData","String","GET_NETWORK_ICON","toLowerCase","ex","readAuthenticationCode","event","response","JSON","parse","data","type","self","_assertThisInitialized","addInstaAccount","getRightsInstagramDetails","token","then","Object","keys","push","id","name","username","picture","baseUrl","set","stringify","path","addFacebookAccount","getFacebookDetails","pages","map","item","id_str","localStorage","getItem","display_name","avatar","client_key","addUserRights","handleYes","handleNo","onClickSocialConnect","Swal","imageUrl","imageHeight","imageWidth","title","CAPITALIZE_FIRST_LETTER","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","result","isConfirmed","setItem","getTwitterCode","flickrConnect","getYammerAuthUrl","tumblerConnect","getVimeoAuthUrl","getFbAuthUrl","tiktokAuthentication","url1","INSTA_CLIENT_ID","HOST_DOMAIN","window","open","url","_createClass","key","value","addEventListener","this","removeEventListener","_this$props","connectedAccount","_jsx","_Fragment","children","className","_jsxs","ProfileImage","imageSize","symbolClass","profileUrl","src","provider","height","width","alt","GET_NETWORK_NAME","SocialGoogleLogin","onClick","style","filter","opacity","Component"],"sourceRoot":""}