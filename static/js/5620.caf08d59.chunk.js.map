{"version":3,"file":"static/js/5620.caf08d59.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/DisplayUrlCopy.js","Layouts/Main/PublishCommonComponents/DisplayEmbedCode.js","Layouts/Main/DisplayScreen/Components/DisplayPlatforms/VirtualHybridEvents.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\n\r\nclass DisplayUrlCopy extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { codeCopied: false };\r\n    }\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    render() {\r\n        const { codeCopied } = this.state\r\n        const { url } = this.props\r\n        return <div className=\"d-flex align-items-start mb-3 flex-wrap\" style={{ maxWidth: 500 }}>\r\n            <div className=\"d-flex flex-column flex-grow-1 pe-3 mb-2\">\r\n                <div className=\"position-relative\">\r\n                    <input type=\"text\" name=\"displayUrl\" id=\"displayUrlCopy_\" onClick={() => { this.codeCopy('displayUrlCopy_') }} className=\"form-control form-control-lg fw-semibold text-ellipsis pe-5\" value={url} readOnly />\r\n                </div>\r\n                <label className=\"fw-semibold fs-8 text-muted\">Copy URL</label>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => { this.codeCopy('displayUrlCopy_') }} style={{ minWidth: 130 }}>\r\n                {!codeCopied ?\r\n                    <i className=\"ri-file-copy-fill\"></i>\r\n                    :\r\n                    <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\r\n                }\r\n                {!codeCopied ? 'Copy URL' : 'URL Copied'}\r\n            </button>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default DisplayUrlCopy;","import React, { Component, Suspense } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\r\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\nimport { DisplayURL, UGC_SUITE_WALL_PREFIX, DISPLAY_EMBED_MIN } from '../../../Services/Api'\r\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\r\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\r\n\r\nclass EmbedCode extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\r\n    }\r\n    shareEmbedModal = (id) => event => this.setState({\r\n        showModal: true,\r\n        id: id\r\n    })\r\n    shareEmbedCallback = (shareEmbedEvent) => {\r\n        this.setState({\r\n            showModal: shareEmbedEvent\r\n        })\r\n    }\r\n\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    onClickToShare = (mailId) => event => {\r\n        var self = this;\r\n        const { id } = this.state\r\n        this.setState({ isLoading: true })\r\n        if (mailId && String(mailId).length > 0) {\r\n            mailSendRequest({ htmlCode: document.querySelector(id ? id : \"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\r\n                toast.success(\"Tagbox widget code successfully sent.\")\r\n                self.setState({ showModal: false, isLoading: false })\r\n            }).catch(ex => {\r\n                toast.error(\"Some error occured, please try again later.\")\r\n            })\r\n\r\n        }\r\n        else {\r\n            toast.error(\"Please enter email id.\")\r\n        }\r\n    }\r\n    onChangeWidth = event => {\r\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ width: event.target.value > 100 ? 100 : event.target.value })\r\n    }\r\n    onChangeHeight = event => {\r\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ height: event.target.value > 100 ? 100 : event.target.value })\r\n    }\r\n    onClickToWidthSign = (value) => event => {\r\n        this.setState({ widthSign: value })\r\n    }\r\n    onClickToHeightSign = (value) => event => {\r\n        this.setState({ heightSign: value })\r\n    }\r\n    render() {\r\n        const { codeCopied, showModal, width, height, widthSign, heightSign } = this.state\r\n        const { copyText, data } = this.props\r\n\r\n        return <div className=\"embed_code\">\r\n            <div className=\"mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Width</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={width} value={width} onChange={this.onChangeWidth} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={widthSign}>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"%\")}>Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"px\")}>Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"vw\")} >Viewport Width (VW)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Height</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={height} value={height} onChange={this.onChangeHeight} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={heightSign}>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"%\")}>Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"px\")}>Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"vw\")}>Viewport Height (VH)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\r\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\r\n                    <Nav variant=\"underline\" className=\"mb-3 border-bottom\">\r\n                        <Nav.Item className=\"me-4\">\r\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Lite Code\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"\">\r\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Iframe\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Tab.Content>\r\n\r\n\r\n\r\n\r\n\r\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\r\n                                    &lt;div class=&quot;taggbox-container&quot; style=&quot;width:{width}{widthSign};height:{height}{heightSign};overflow: auto;&quot;&gt;&lt;div class=&quot;taggbox-socialwall&quot; data-wall-id=&quot;{UGC_SUITE_WALL_PREFIX}{data && Object.keys(data).length > 0 ? data.wallId : null}&quot; view-url=&quot;{DisplayURL}{UGC_SUITE_WALL_PREFIX}{data && Object.keys(data).length > 0 ? data.wallId : null}&quot;&gt;&lt;/div&gt;&lt;script src=&quot;{DISPLAY_EMBED_MIN}&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/div&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\r\n                                            {!codeCopied ?\r\n                                                <i className=\"ri-file-copy-fill\"></i>\r\n                                                :\r\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCode_')}>\r\n                                            <i className=\"ri-mail-fill\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger> */}\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                    &lt;iframe src=\"{DisplayURL}{UGC_SUITE_WALL_PREFIX}{data && Object.keys(data).length > 0 ? data.wallId : null}?ugcSuite=1\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                            {!codeCopied ?\r\n                                                <i className=\"ri-file-copy-fill\"></i>\r\n                                                :\r\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCodeIframe_')}>\r\n                                            <i className=\"ri-mail-fill\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger> */}\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Tab.Container>\r\n            </div>\r\n            <Suspense fallback={<></>}>\r\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\r\n            </Suspense>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default EmbedCode;","import React, { Component, Suspense } from 'react';\r\nimport DisplayUrlCopy from '../../../PublishCommonComponents/DisplayUrlCopy';\r\nimport DisplayEmbedCode from '../../../PublishCommonComponents/DisplayEmbedCode';\r\nimport { DisplayURL, UGC_SUITE_WALL_PREFIX } from '../../../../../Services/Api'\r\nclass VirtualHybridEvents extends Component {\r\n\r\n    render() {\r\n        const { data, showGenratedCode } = this.props\r\n        return <div className=\"card text-decoration-none\">\r\n            <div className=\"card-body p-lg-7\">\r\n                <div className=\"m-auto\">\r\n                    <div className=\"embed_code\">\r\n                        <h5 className=\"mb-5 fw-bolder\">Steps To Display Social Wall In Virtual / Hybrid Events</h5>\r\n                        <p>Follow these steps to showcase the Tagbox Display social wall in virtual / hybrid events:</p>\r\n                        <h6>Step 1: (Choose As Per Platform Requirement)</h6>\r\n                        <div className=\"ps-3\">\r\n                            <h6>A. Generate the embed code for Social Wall</h6>\r\n                            <DisplayEmbedCode copyText={'Copy the generated embed code'} data={data} />\r\n                            <h6>OR</h6>\r\n                            <h6>B. Copy The Display Wall URL</h6>\r\n                            <DisplayUrlCopy url={`${DisplayURL}${UGC_SUITE_WALL_PREFIX}${data && Object.keys(data).length > 0 ? data.wallId : null}`} />\r\n                        </div>\r\n                        <h6 className=\"mb-5\">{`Step 2: To Embed Tagbox Social Wall into ${showGenratedCode == 'p-6connex' ? '6Connex ' : showGenratedCode == 'p-zuddl' ? 'Zuddl' : showGenratedCode == 'p-gevme' ? 'GEVME' : showGenratedCode == 'p-vfairs' ? 'vFairs' : showGenratedCode == 'p-workcast' ? 'WorkCast' : showGenratedCode == 'p-pathable' ? 'pathable' : showGenratedCode == 'p-hubilo' ? 'Hubilo' : 'Others'} follow these steps:`}</h6>\r\n                        <ul className=\"list-unstyled list-points fs-7\">\r\n                            {showGenratedCode == 'p-6connex' ? <><li className=\"mb-3\">Log in to your 6Connex control panel</li>\r\n                                <li className=\"mb-3\">Go to the content library.</li>\r\n                                <li className=\"mb-3\">Add a Social Wall in the existing content library by clicking on the <span className=\"fw-bold\">pencil icon</span> or can create a new content library.</li>\r\n                                <li className=\"mb-3\">Now, To add Taggbox Social Wall, Click on <span className=\"fw-bold\">Add Content.</span></li>\r\n                                <li className=\"mb-3\">You will encounter two options to add a social wall in the virtual event: Link or HTML Code.</li>\r\n                                <li className=\"mb-3\">Taggbox provide you with both options to embed social wall</li>\r\n                                <li className=\"mb-3\">Once you add a social Wall in the content library, press the <span className=\"fw-bold\">submit button.</span></li>\r\n                                <li className=\"mb-3\">You have successfully added a social Wall in the 6connex virtual event platform!</li></> :\r\n\r\n                                showGenratedCode == 'p-zuddl' ? <><li className=\"mb-3\">Login to your Zuddl account</li>\r\n                                    <li className=\"mb-3\">Go to <span className=\"fw-bold\">'Zone Setup'</span> and click on <span className=\"fw-bold\">'Lobby'</span></li>\r\n                                    <li className=\"mb-3\">Choose <span className=\"fw-bold\">'Lobby Widgets'</span> from the header menu.Custom iframe integration.</li>\r\n                                    <li className=\"mb-3\">Here, click on <span className=\"fw-bold\">'iFrame'</span></li>\r\n                                    <li className=\"mb-3\">Give a name to your widget & paste the copied social wall URL & then click on <span className=\"fw-bold\">'Create Widget'</span></li>\r\n                                    <li className=\"mb-3\">And that’s it, and you have successfully embedded the Taggbox Display social wall in the Zuddl Virtual Event Platform!</li></> :\r\n\r\n                                    showGenratedCode == 'p-gevme' ? <><li className=\"mb-3\">Login to your GEVME account</li>\r\n                                        <li className=\"mb-3\">Once you are in your project, Click on <span className=\"fw-bold\">Virtual</span></li>\r\n                                        <li className=\"mb-3\">Select the page where you want to integrate the widget and click on<span className=\"fw-bold\"> customize.</span></li>\r\n                                        <li className=\"mb-3\">Click on the Live Bar on the next screen and go to the advanced tab.</li>\r\n                                        <li className=\"mb-3\">Choose the Custom Apps drop-down and select <span className=\"fw-bold\">Embed iFrame</span></li>\r\n                                        <li className=\"mb-3\">The new content block is created with the name My New App. Click that</li>\r\n                                        <li className=\"mb-3\">Rename it with the name you want to display and paste the iframe code into the box provided. You can also choose the Icon you wish to show or upload its image. Click on <span className=\"fw-bold\">Save</span> once you’re done.</li>\r\n                                        <li className=\"mb-3\">The embedded App is shown under the Live Bar</li>\r\n                                        <li className=\"mb-3\">And that’s it. You have successfully embedded the Taggbox Display social wall in the GEVME Virtual Event Platform!</li></> :\r\n\r\n                                        showGenratedCode == 'p-vfairs' ? <><li className=\"mb-3\">Login to your vFair virtual event dashboard</li>\r\n                                            <li className=\"mb-3\">Now you can paste the embed code in a suitable area of vFairs virtual events. Some examples are:</li>\r\n                                            <li className=\"mb-3\">Exhibition hall</li>\r\n                                            <li className=\"mb-3\">Waiting Area</li>\r\n                                            <li className=\"mb-3\">Lobby</li>\r\n                                            <li className=\"mb-3\">Networking zone etc.</li>\r\n                                        </> :\r\n\r\n                                            showGenratedCode == 'p-workcast' ? <><li className=\"mb-3\">Login to your WorkCast account</li>\r\n                                                <li className=\"mb-3\">Go to your existing Virtual Event</li>\r\n                                                <li className=\"mb-3\">Choose a Section where you want to show our social Wall.</li>\r\n                                                <li className=\"mb-3\">The template can be created with a social media feed built into either a registration channel page or an auditorium. It can be a great way to get audience interactivity fed into your event</li>\r\n                                                <li className=\"mb-3\">Now put the social wall embed code in that particular section</li>\r\n                                                <li className=\"mb-3\">You have successfully embedded the social wall on WorkCast!</li></> :\r\n\r\n                                                showGenratedCode == 'p-pathable' ? <><li className=\"mb-3\">Navigate to the page where you would like visitors to see the social wall</li>\r\n                                                    <li className=\"mb-3\">Select the New Widget button in the upper right corner</li>\r\n                                                    <li className=\"mb-3\">Scroll to the Advanced section and select <span className=\"fw-bold\">'Links'</span></li>\r\n                                                    <li className=\"mb-3\">Paste your Taggbox Display social wall URL in the URL bar & Click <span className=\"fw-bold\">'Save'</span></li>\r\n                                                    <li className=\"mb-3\">Congratulations! You have successfully embedded your Taggbox Display Social Wall into the Pathable, virtual events platform.</li></> :\r\n\r\n                                                    showGenratedCode == 'p-hubilo' ? <><li className=\"mb-3\">Login to your Hubilo Virtual Event Platform</li>\r\n                                                        <li className=\"mb-3\">Go to under Session Settings & in Advanced settings enable the toggle for <span className=\"fw-bold\">Custom iframe integration.</span></li>\r\n                                                        <li className=\"mb-3\">Add button label as per your preference and paste the copied iframe code in the <span className=\"fw-bold\">Code Snippet</span> box, then click <span className=\"fw-bold\">Save</span></li>\r\n                                                        <li className=\"mb-3\">Congratulations, you have successfully added the Taggbox Display Social Wall to the Hubilo virtual event platform!</li></> :\r\n\r\n                                                        <li className=\"mb-3\">Congratulations, you’re ready to showcase the social wall at your virtual event!</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default VirtualHybridEvents;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"names":["_Component","_inherits","DisplayUrlCopy","_super","_createSuper","_this","_classCallCheck","call","codeCopy","id","setState","codeCopied","setTimeout","COPY_TO_CLIPBOARD","state","_createClass","key","value","_this2","this","url","props","_jsxs","className","style","maxWidth","children","_jsx","type","name","onClick","readOnly","minWidth","color","Component","ShareEmbedModal","React","EmbedCode","shareEmbedModal","event","showModal","shareEmbedCallback","shareEmbedEvent","onClickToShare","mailId","self","_assertThisInitialized","isLoading","String","length","mailSendRequest","htmlCode","document","querySelector","innerText","email","then","response","toast","catch","ex","onChangeWidth","target","parseInt","width","onChangeHeight","height","onClickToWidthSign","widthSign","onClickToHeightSign","heightSign","_this$state","_this$props","copyText","data","InputGroup","Form","defaultValue","onChange","DropdownButton","align","variant","title","Dropdown","href","Tab","defaultActiveKey","Nav","eventKey","wordBreak","UGC_SUITE_WALL_PREFIX","Object","keys","wallId","DisplayURL","DISPLAY_EMBED_MIN","OverlayTrigger","placement","overlay","Tooltip","Suspense","fallback","_Fragment","text","heading","VirtualHybridEvents","apply","arguments","showGenratedCode","DisplayEmbedCode","concat","alignDirection","PropTypes","alignPropType","sm","md","lg","xl","xxl","propTypes","disabled","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","bsPrefix","size","_ref","ref","_objectWithoutProperties","_excluded","_objectSpread","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"sourceRoot":""}