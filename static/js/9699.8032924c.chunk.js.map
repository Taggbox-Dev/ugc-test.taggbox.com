{"version":3,"file":"static/js/9699.8032924c.chunk.js","mappings":"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","sources":["Layouts/Main/Feeds/Elements/SubmitFeedRequest.js","Layouts/Main/Feeds/Elements/InputField.js","Layouts/Main/Feeds/Elements/CheckboxField.js","Layouts/Main/Feeds/Airbnb/Airbnb.js","Layouts/Main/Feeds/Flickr/Flickr.js","Layouts/Main/Feeds/Tumblr/Tumblr.js","Layouts/Main/Feeds/Pinterest/Pinterest.js","Layouts/Main/Feeds/Giphy/Giphy.js","Layouts/Main/Feeds/Rss/Rss.js","Layouts/Main/Feeds/Elements/SearchPlace.js","Layouts/Main/Feeds/Yelp/Yelp.js","Layouts/Main/Feeds/Elements/InfoSection.js","Layouts/Main/Feeds/Linkedin/components/BulkDropzone.js","Layouts/Main/Feeds/Linkedin/Linkedin.js","Layouts/Main/Feeds/Youtube/components/YoutubeTabs.js","Layouts/Main/Feeds/Youtube/Youtube.js","Layouts/Main/Feeds/Elements/AccountPicker.js","Layouts/Main/Feeds/Yammer/Yammer.js","Layouts/Main/Feeds/Tiktok/components/AccountSelect.js","Layouts/Main/Feeds/Tiktok/Tiktok.js","Layouts/Main/Feeds/Vimeo/Vimeo.js","Layouts/Main/Feeds/Twitter/components/TwitterTab.js","Layouts/Main/Feeds/Twitter/Twitter.js","Layouts/Main/Feeds/Google/components/PlaceDropDown.js","Layouts/Main/Feeds/Google/components/GoogleTab.js","Layouts/Main/Feeds/Google/Google.js","Layouts/Main/Feeds/Slack/components/SlackTab.js","Layouts/Main/Feeds/Slack/Slack.js","Layouts/Main/Feeds/Facebook/components/FacebookTab.js","Layouts/Main/Feeds/Elements/ConnectAccount.js","Layouts/Main/Feeds/Facebook/Facebook.js","Layouts/Main/Feeds/Instagram/components/InstagramTab.js","Layouts/Main/Feeds/Instagram/Instagram.js","Layouts/Main/MyAssets/AddAssetsModal/Compontnets/Elements/AddFeedByNetwork.js","../node_modules/react-places-autocomplete/dist/PlacesAutocomplete.js","../node_modules/react-places-autocomplete/dist/helpers.js","../node_modules/react-places-autocomplete/dist/index.js","../node_modules/react-places-autocomplete/dist/utils.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport NeedSupport from '../../CommonComponents/NeedSupport';\r\n\r\n\r\nclass SubmitFeedRequest extends Component {\r\n\r\n    render() {\r\n        const { supportUrl, videoUrl, cancelFeed, sumbitFeed, loading, hideBtn, buttonText } = this.props;\r\n        return <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\r\n            <Suspense fallback={<></>}>\r\n                <NeedSupport content={'Need Help'} supportUrl={supportUrl} videoUrl={videoUrl} />\r\n            </Suspense>\r\n            <div className=\"my-1 d-flex align-items-center justify-content-end flex-wrap\">\r\n                <button type=\"button\" className=\"btn btn-secondary me-3\" onClick={() => cancelFeed()}>Cancel</button>\r\n                {!hideBtn && <button type=\"button\" className={`btn btn-primary ${loading ? 'spinner spinner-right disabled' : ''}`} onClick={() => sumbitFeed()}> {buttonText ? buttonText : `Create Connection`}</button>}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default SubmitFeedRequest;","import React, { Component } from 'react';\r\n\r\nclass InputField extends Component{\r\n    render(){\r\n        const {value,onChangeHandler,placeholder,name,autoComplete,className} = this.props;\r\n        return <input type=\"text\" name={name} className={className} placeholder={placeholder} value={value} onChange={onChangeHandler} autoComplete={autoComplete?\"off\":\"\"}/>\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react';\r\n\r\nclass CheckBoxField extends Component {\r\n    render() {\r\n        const { isChecked, onChangeHandler, name } = this.props;\r\n        return <>\r\n            <input className=\"form-check-input\" type=\"checkbox\" name={name} checked={isChecked} onChange={onChangeHandler} />\r\n            {this.props.children}\r\n        </>\r\n    }\r\n}\r\n\r\nexport default CheckBoxField;","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from 'react-bootstrap';\r\nimport { capitalizeFirstLetter } from \"../../../../Services/Utils/utils\";\r\nimport InputField from \"../Elements/InputField\";\r\nimport CheckBoxField from \"../Elements/CheckboxField\";\r\nimport { createFeedAction } from \"../../../../Services/Actions/addFeedAction\";\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\r\n\r\nclass Airbnb extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageUrl: '',\r\n            error: false,\r\n            moderation: false,\r\n            loading: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { pageUrl, moderation } = this.state;\r\n        const { collection, networkId, history } = this.props;\r\n\r\n        if (!pageUrl || pageUrl == \"\") this.setState({ error: true })\r\n        else {\r\n\r\n            this.setState({ error: false, loading: true })\r\n\r\n            var obj = {\r\n                collection: collection != null ? collection.value : '',\r\n                networkId: networkId,\r\n                filter: 56,\r\n                airbnb_page_review: pageUrl,\r\n                moderation: moderation ? 1 : 0,\r\n            }\r\n\r\n            createFeedAction(obj, networkId, () => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false });\r\n                this.props.closeAddFeed();\r\n                history('/assets');\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { pageUrl, error, moderation, loading, selectedFilterTab } = this.state;\r\n        const { filterTabs } = this.props;\r\n        return <>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                <div className=\"addSourceTabs\">\r\n                    {filterTabs && Object.keys(filterTabs).length > 1 ?\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {\r\n                                                filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                    const { feedName, feedtype, filter } = filterTab;\r\n                                                    return <Nav.Item className=\"p-1\" key={index}>\r\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                            <span className=\"svg-icon\">\r\n                                                                <i className=\"ri-link icon-6\"></i>\r\n                                                            </span>\r\n                                                            {capitalizeFirstLetter(feedtype)}\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : null}\r\n                    <div className=\"w-100\">\r\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                        <div className=\"card card-custom gutter-b\">\r\n                            <div className=\"card-body px-xxl-5\">\r\n                                <Tab.Content>\r\n                                    <Tab.Pane eventKey={\"Listing Url\"}>\r\n                                        <div className=\"mb-2 mb-xl-3\">\r\n                                            <div className=\"position-relative w-100\">\r\n                                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                    <i className=\"ri-link icon-5\"></i>\r\n                                                </span>\r\n                                                <InputField name={\"pageUrl\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Airbnb Page Url\" value={pageUrl} onChangeHandler={this.onChangeHandler} />\r\n                                                {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Tab.Pane>\r\n                                </Tab.Content>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Tab.Container>\r\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Airbnb)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\n\r\n\r\n\r\nclass Flickr extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hashtag: \"\",\r\n            handle: \"\",\r\n            moderation: false,\r\n            error: false,\r\n            handleError: false,\r\n            loading: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\r\n\r\n    onSubmit = () => {\r\n        const { hashtag, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\r\n        const { collection, networkId, history } = this.props;\r\n\r\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\r\n            this.setState({ error: true });\r\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\r\n            this.setState({ handleError: true });\r\n        }\r\n        else {\r\n\r\n            this.setState({ error: false, handleError: false, loading: true })\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n\r\n                })\r\n\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                field1: handle,\r\n                field2: hashtag,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0\r\n            }\r\n\r\n            if (selectedFilterId == 1) {\r\n                obj['field2'] = ''\r\n            } else if (selectedFilterId == 2) {\r\n                obj['field1'] = ''\r\n            }\r\n\r\n            createFeedAction(obj, networkId, () => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false });\r\n                this.props.closeAddFeed();\r\n                history('/assets');\r\n            });\r\n        }\r\n    }\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 1: // @\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            case 2: // Hashtag\r\n                return <i className=\"ri-hashtag icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {\r\n                                                filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                    const { feedName, feedtype, filter } = filterTab;\r\n                                                    return <Nav.Item className=\"p-1\" key={index}>\r\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                                {this.feedIcon(filter)}\r\n                                                            </span>\r\n                                                            {capitalizeFirstLetter(feedtype)}\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(2)}\r\n                                                        </span>\r\n                                                        <InputField className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} name={\"hashtag\"} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\r\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"Handle\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(1)}\r\n                                                        </span>\r\n                                                        <InputField className={`form-control form-control-lg fw-bold px-9 ${handleError ? 'is-invalid' : ''}`} name={\"handle\"} placeholder=\"Enter handle\" value={handle} onChangeHandler={this.onChangeHandler} />\r\n                                                        {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Flickr)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass Tumblr extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hashtag: \"\",\r\n            handle: \"\",\r\n            moderation: false,\r\n            error: false,\r\n            handleError: false,\r\n            loading: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { hashtag, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\r\n        const { collection, networkId } = this.props;\r\n\r\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\r\n            this.setState({ error: true });\r\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\r\n            this.setState({ handleError: true });\r\n        }\r\n        else {\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n                })\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0\r\n            }\r\n            if (selectedFilterId == 1) {\r\n                obj['feedText'] = handle\r\n            } else if (selectedFilterId == 2) {\r\n                obj['feedText'] = hashtag\r\n            }\r\n\r\n            this.setState({ error: false, handleError: false, loading: true })\r\n\r\n            createFeedAction(obj, networkId, (getFeedId) => {\r\n                this.props.getAllfeeds()\r\n                this.props.closeAddFeed();\r\n                this.setState({ loading: false });\r\n                if (getFeedId) {\r\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                    else {\r\n                        if (String(window.location.href).includes(\"assets\")) {\r\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                        }\r\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                    }\r\n\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 2: // Hashtag\r\n                return <i className=\"ri-hashtag icon-6\"></i>\r\n                break;\r\n            case 1: // Handle\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {\r\n                                                filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                    const { feedName, feedtype, filter } = filterTab;\r\n                                                    return <Nav.Item className=\"p-1\" key={index}>\r\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                                {this.feedIcon(filter)}\r\n                                                            </span>\r\n                                                            {capitalizeFirstLetter(feedtype)}\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\r\n                                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(2)}\r\n                                                    </span>\r\n                                                    <InputField name={\"hashtag\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\r\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"Handle\"}>\r\n                                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(1)}\r\n                                                    </span>\r\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bold px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter handle\" value={handle} onChangeHandler={this.onChangeHandler} />\r\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tumblr)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass Pinterest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userBoard: \"\",\r\n            handle: \"\",\r\n            moderation: false,\r\n            error: false,\r\n            errorMsg: \"This field is required\",\r\n            handleError: false,\r\n            loading: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n\r\n    onSubmit = () => {\r\n        const { userBoard, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\r\n        const { collection, networkId } = this.props;\r\n\r\n        if (selectedFilterTab == 'Handle' && handle == '') {\r\n            this.setState({ handleError: true });\r\n        } else if (selectedFilterTab == 'User Board' && userBoard == '') {\r\n            this.setState({ error: true, errorMsg: \"This field is required\" });\r\n        } else {\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n                })\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0,\r\n                field12boardurl: '',\r\n                field1: ''\r\n            }\r\n\r\n            if (selectedFilterId == 1) {\r\n                obj['field1'] = handle\r\n            } else if (selectedFilterId == 12) {\r\n                obj['field12boardurl'] = userBoard\r\n\r\n                if (userBoard.includes('pinterest.com')) {\r\n                    let url = userBoard.split(\"https://in.pinterest.com/\")[1].replace(\"/\", \"\");\r\n                    if (url) {\r\n                        obj['field1'] = url;\r\n                    } else {\r\n                        this.setState({ errorMsg: 'This field must contain a url.', error: true })\r\n                        return false\r\n                    }\r\n                } else {\r\n                    this.setState({ errorMsg: 'This field must contain a url.', error: true })\r\n                    return false\r\n                }\r\n            }\r\n\r\n            this.setState({ error: false, handleError: false, loading: true });\r\n\r\n            createFeedAction(obj, networkId, (getFeedId) => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false, isAuthRequired: true });\r\n                this.props.closeAddFeed()\r\n                if (getFeedId) {\r\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                    else {\r\n                        if (String(window.location.href).includes(\"assets\")) {\r\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                        }\r\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                    }\r\n\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 1: // @\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            case 12: // Link\r\n                return <i className=\"ri-link icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { userBoard, handle, moderation, handleError, error, loading, selectedFilterTab, errorMsg } = this.state\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {\r\n                                                filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                    const { feedName, feedtype, filter } = filterTab;\r\n                                                    return <Nav.Item className=\"p-1\" key={index}>\r\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                                {this.feedIcon(filter)}\r\n                                                            </span>\r\n                                                            {capitalizeFirstLetter(feedtype)}\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"Handle\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(1)}\r\n                                                        </span>\r\n                                                        <InputField className={`form-control form-control-lg fw-bold px-9 ${handleError ? 'is-invalid' : ''}`} name={\"handle\"} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\r\n                                                        {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"User Board\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(12)}\r\n                                                        </span>\r\n                                                        <InputField className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} name={\"userBoard\"} placeholder=\"https://in.pinterest.com/taggbox/taggbox-social-blog/\" value={userBoard} onChangeHandler={this.onChangeHandler} />\r\n                                                        {error ? <span className=\"invalid-feedback\">{errorMsg}</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pinterest)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\n\r\n\r\nclass Giphy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: \"\",\r\n            sticker: \"\",\r\n            handle: \"\",\r\n            moderation: false,\r\n            error: false,\r\n            stickerError: false,\r\n            handleError: false,\r\n            loading: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, stickerError: false, handleError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\r\n\r\n    onSubmit = () => {\r\n        const { search, sticker, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\r\n        const { collection, networkId, history } = this.props;\r\n\r\n        if (selectedFilterTab == 'search' && search == '') {\r\n            this.setState({ error: true });\r\n        } else if (selectedFilterTab == 'search sticker' && sticker == '') {\r\n            this.setState({ stickerError: true });\r\n        } else if (selectedFilterTab == 'handle' && handle == '') {\r\n            this.setState({ handleError: true });\r\n        }\r\n        else {\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n\r\n                })\r\n\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0\r\n            }\r\n            if (selectedFilterId == 64) {\r\n                obj['field'] = search\r\n            } else if (selectedFilterId == 63) {\r\n                obj['field'] = sticker\r\n            } else if (selectedFilterId == 1) {\r\n                obj['field'] = handle\r\n            }\r\n\r\n            this.setState({ error: false, handleError: false, stickerError: false, loading: true });\r\n\r\n            createFeedAction(obj, networkId, () => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false });\r\n                this.props.closeAddFeed();\r\n                history('/assets');\r\n            });\r\n        }\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 64: // Search\r\n                return <i className=\"ri-search-line icon-6\"></i>\r\n                break;\r\n            case 63: // Sticker\r\n                return <i className=\"ri-emoji-sticker-line icon-6\"></i>\r\n                break;\r\n            case 1: // Handle\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { search, handle, sticker, moderation, handleError, error, loading, selectedFilterTab, stickerError } = this.state\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\r\n                                            const { feedName, feedtype, filter } = filterTab;\r\n                                            return <Nav.Item className=\"p-1\" key={index}>\r\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                        {this.feedIcon(filter)}\r\n                                                    </span>\r\n                                                    {capitalizeFirstLetter(feedtype)}\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        })}\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Tab.Content>\r\n                                        <Tab.Pane eventKey={\"search\"}>\r\n                                            <div className=\"mb-2 mb-xl-3\">\r\n                                                <div className=\"position-relative w-100\">\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(64)}\r\n                                                    </span>\r\n                                                    <InputField name={\"search\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Search giphy keyword to fetch feed\" value={search} onChangeHandler={this.onChangeHandler} />\r\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Tab.Pane>\r\n                                        <Tab.Pane eventKey={\"search sticker\"}>\r\n                                            <div className=\"mb-2 mb-xl-3\">\r\n                                                <div className=\"position-relative w-100\">\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(63)}\r\n                                                    </span>\r\n                                                    <InputField name={\"sticker\"} className={`form-control form-control-lg fw-bold px-9 ${stickerError ? 'is-invalid' : ''}`} placeholder=\"Search giphy keyword to fetch feed\" value={sticker} onChangeHandler={this.onChangeHandler} />\r\n                                                    {stickerError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Tab.Pane>\r\n                                        <Tab.Pane eventKey={\"handle\"}>\r\n                                            <div className=\"mb-2 mb-xl-3\">\r\n                                                <div className=\"position-relative w-100\">\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(1)}\r\n                                                    </span>\r\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bold px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\r\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Tab.Pane>\r\n                                    </Tab.Content>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Giphy)","import React, { Component } from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab, Collapse } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\n\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass Rss extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            feedUrl: \"\",\r\n            moderation: false,\r\n            error: false,\r\n            urlError: false,\r\n            loading: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype,\r\n            sampleXml: false,\r\n            isRequest: false\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\r\n\r\n    onSubmit = () => {\r\n        const { name, feedUrl, moderation, selectedFilterTab, selectedFilterId } = this.state;\r\n        const { collection, networkId } = this.props;\r\n\r\n        if (name == '') {\r\n            this.setState({ error: true });\r\n        } else if (feedUrl == '') {\r\n            this.setState({ urlError: true });\r\n        }\r\n        else {\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n                })\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0,\r\n                fieldtitle: name,\r\n            }\r\n\r\n            if (!feedUrl.includes(\"://\")) {\r\n                this.setState({ urlError: true });\r\n                return;\r\n            } else {\r\n                obj['field'] = feedUrl;\r\n            }\r\n\r\n            this.setState({ error: false, urlError: false, loading: true });\r\n\r\n            createFeedAction(obj, networkId, (getFeedId) => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false });\r\n                this.props.closeAddFeed();\r\n                if (getFeedId) {\r\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                    else {\r\n                        if (String(window.location.href).includes(\"assets\")) {\r\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                        }\r\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                    }\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 18: // Link\r\n                return <i className=\"ri-link icon-4\"></i>\r\n                break;\r\n            case 16: // Text\r\n                return <i className=\"ri-text icon-4\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onClickToDwonloadSample = event => {\r\n        this.setState({ isRequest: true }, () => {\r\n            saveAs(baseUrl(\"media/downloads/sample-xml.txt\"), `sample-xml.txt`);\r\n            setTimeout(() => this.setState({ isRequest: false }), 2000)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { name, feedUrl, moderation, urlError, error, loading, selectedFilterTab, sampleXml, isRequest } = this.state\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        {filterTabs && Object.keys(filterTabs).length > 1 ?\r\n                            <div className=\"w-100\">\r\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                                <div className=\"card card-custom gutter-b\">\r\n                                    <div className=\"card-body px-xxl-5\">\r\n                                        <div className=\"\">\r\n\r\n                                            <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                                {\r\n                                                    filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                        const { feedName, feedtype, filter } = filterTab;\r\n                                                        return <Nav.Item className=\"p-1\" key={index}>\r\n                                                            <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                                <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                                    {this.feedIcon(filter)}\r\n                                                                </span>\r\n                                                                {capitalizeFirstLetter(feedtype)}\r\n                                                            </Nav.Link>\r\n                                                        </Nav.Item>\r\n                                                    })\r\n                                                }\r\n                                            </Nav>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            : null}\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab} Details</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Tab.Content>\r\n                                        <Tab.Pane eventKey={\"RSS\"}>\r\n                                            <div className='row'>\r\n                                                <div className=\"col-sm-6\">\r\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(16)}\r\n                                                        </span>\r\n                                                        <InputField name={\"name\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Display Name\" value={name} onChangeHandler={this.onChangeHandler} />\r\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6\">\r\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(18)}\r\n                                                        </span>\r\n                                                        <InputField name={\"feedUrl\"} className={`form-control form-control-lg fw-bold px-9 ${urlError ? 'is-invalid' : ''}`} placeholder=\"Feed URL\" value={feedUrl} onChangeHandler={this.onChangeHandler} />\r\n                                                        {urlError ? <span className=\"invalid-feedback\">This field must contain a url</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Tab.Pane>\r\n                                    </Tab.Content>\r\n                                    <div className=\"d-flex w-100 justify-content-end mt-2\">\r\n                                        <button type=\"button\" className=\"btn p-0 text-decoration-underline\" onClick={() => this.setState({ sampleXml: !sampleXml })}>\r\n                                            <span className=\"text-right fw-semibold\">Download Sample Format</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <Collapse in={sampleXml}>\r\n                                        <div>\r\n                                            <div className=\"block-center flex-column m-auto py-3\" style={{ maxWidth: 530 }}>\r\n                                                <img className=\"h-auto w-100\" src={baseUrl(\"media/images/demo/sample-design--xml-rss-feed.png\")} height=\"600\" width=\"300\" alt=\"sample Rss\" />\r\n                                                <div className={`btn btn-sm btn-secondary ${isRequest ? `spinner disabled` : ``}`} download onClick={this.onClickToDwonloadSample}>\r\n                                                    <i className=\"ri-download-2-line\"></i>\r\n                                                    Download Sample\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Collapse>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rss)","import React, { useState } from \"react\";\r\nimport PlacesAutocomplete, { geocodeByAddress,getLatLng} from \"react-places-autocomplete\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\n\r\nexport default function SearchPlace(props) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [list, setList] = useState(false);\r\n  const [spinnerActive, spinnerActiveFun] = useState(false);\r\n\r\n\r\n  const handleChange = (e) => { setAddress(e); setList(true); props.onFieldTextChange(\"\", \"\") };\r\n\r\n  const handleSelect = address => {\r\n    spinnerActiveFun(true)\r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => {\r\n        props.onLatlanChange(`${latLng.lat},${latLng.lng}`)\r\n        spinnerActiveFun(false)\r\n      })\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n\r\n  const handleSelect1 = (v1, v2) => {\r\n    props.onFieldTextChange(v1, v2)\r\n    setAddress(v1);\r\n    setList(false);\r\n  };\r\n\r\n\r\n  return (<PlacesAutocomplete\r\n            value={address}\r\n            onChange={handleChange}\r\n            onSelect={handleSelect}\r\n          >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n            <div className=\"position-relative w-100\">\r\n              <i className=\"ri-map-pin-2-line icon-5 text-gray-500 position-absolute bottom-0 start-0 translate-middle-x mx-5 my-3\"></i>\r\n              <input {...getInputProps({ placeholder: \"Type address\" })} className={`form-control form-control-lg fw-bold px-9 ${props.error?'is-invalid':''}`}  autoComplete=\"off\"/>\r\n              {spinnerActive ? <div className=\"spinner spinner-gray\" style={{top:-22}}></div> : null}\r\n              {list && address.length > 0 ?\r\n                <Dropdown className={`w-100`} show>\r\n                  <Dropdown.Menu className=\"w-100\">\r\n                      <PerfectScrollbar options={ { wheelPropagation: false } }>\r\n                        {suggestions.map(suggestion => {\r\n                          return (<Dropdown.Item className=\"text-break\" {...getSuggestionItemProps(suggestion)} onClick={() => { handleSelect1(suggestion.description, suggestion.placeId); handleSelect(suggestion.description) }} style={{whiteSpace:'normal'}}> {suggestion.description}</Dropdown.Item>);\r\n                        })}\r\n                      </PerfectScrollbar>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                : ''}\r\n            </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n  );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab, Dropdown } from \"react-bootstrap\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { capitalizeFirstLetter, debounce } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport HttpClient from '../../../../Services/http-client';\r\nimport SearchPlace from '../Elements/SearchPlace';\r\nimport { AUTOCOMPLETE } from '../../../../Services/Api';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass Yelp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            businessUrlError: false,\r\n            businessUrl: '',\r\n            location: '',\r\n            locationError: false,\r\n            keyword: '',\r\n            keywordError: false,\r\n            keywordList: [],\r\n            slug: null,\r\n            latlng: \"\",\r\n            moderation: false,\r\n            isSelectedFromList: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n    autoComplete = debounce((e) => {\r\n        new HttpClient()\r\n            .post(`${AUTOCOMPLETE}`, {\r\n                networkId: this.props.networkId,\r\n                handle: e.target.value,\r\n                Latlng: this.state.latlng\r\n            })\r\n            .then((response) => {\r\n                const result = response.data;\r\n                if (result.response_code === 200) {\r\n                    this.setState({ keywordList: result.responseData });\r\n                }\r\n            }).catch((ex) => {\r\n\r\n            })\r\n    });\r\n\r\n    handleOnChange = (e) => {\r\n        if (e.target.name === \"location\") {\r\n            this.locationApiCall(e);\r\n        } else if (e.target.name === \"keyword\") {\r\n            this.autoComplete(e);\r\n        }\r\n        this.setState((perv) => ({ ...perv, [e.target.name]: e.target.value, businessUrlError: false, isSelectedFromList: false, keywordError: false }));\r\n    }\r\n\r\n    keywordSelected = (item) => {\r\n        this.setState((prev) => ({ ...prev, keyword: item.data_handle_playlistName, isSelectedFromList: true, keywordList: [], slug: item.data_slug_alias }));\r\n    }\r\n\r\n    onTextFieldChange = (value) => this.setState((prev) => ({ ...prev, location: value, locationError: false }));\r\n    onLatlanChange = (value) => this.setState((prev) => ({ ...prev, latlng: value }));\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n\r\n    onSubmit = () => {\r\n        const { businessUrl, location, keyword, selectedFilterId, selectedFilterTab, moderation, isSelectedFromList, slug } = this.state;\r\n        const { collection, networkId } = this.props;\r\n\r\n        if ((businessUrl == '' && selectedFilterTab === \"Business Page\")) {\r\n            this.setState({ businessUrlError: true });\r\n        } else if (location == '' && selectedFilterTab === \"Business Name\") {\r\n            this.setState({ locationError: true });\r\n        } else if (keyword == '' && selectedFilterTab === \"Business Name\") {\r\n            this.setState({ keywordError: true });\r\n        } else {\r\n            if (!isSelectedFromList && selectedFilterTab === \"Business Name\") {\r\n                this.setState({ keywordError: true });\r\n                return;\r\n            }\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n                })\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0,\r\n                businessPageUrl27: businessUrl,\r\n                businessName28: location,\r\n                businessKeywordfield28: keyword,\r\n                businessKeyword28: slug,\r\n                moderation: 0\r\n            }\r\n\r\n            if (selectedFilterId === 27) {\r\n                obj['businessName28'] = '';\r\n                obj['businessKeywordfield28'] = '';\r\n                obj['businessKeyword28'] = '';\r\n            } else if (selectedFilterId === 28) {\r\n                obj['businessPageUrl27'] = '';\r\n            }\r\n\r\n            this.setState({ businessUrlError: false, locationError: false, keywordError: false, loading: true })\r\n\r\n            createFeedAction(obj, networkId, (getFeedId) => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false });\r\n                this.props.closeAddFeed();\r\n                if (getFeedId) {\r\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                    else {\r\n                        if (String(window.location.href).includes(\"assets\")) {\r\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                        }\r\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                    }\r\n\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 27: // flag\r\n                return <i className=\"ri-flag-2-line icon-6\"></i>\r\n                break;\r\n            case 30: // Text\r\n                return <i className=\"ri-text icon-6\"></i>\r\n                break;\r\n            case 28: // Store\r\n                return <i className=\"ri-store-2-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { businessUrl, businessUrlError, keyword, moderation, keywordList, keywordError, locationError, loading, selectedFilterTab } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\r\n                                            const { feedName, feedtype, filter } = filterTab;\r\n                                            return <Nav.Item className=\"p-1\" key={index}>\r\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                        {this.feedIcon(filter)}\r\n                                                    </span>\r\n                                                    {capitalizeFirstLetter(feedtype)}\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        })}\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"Business Page\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100 mb-3\">\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(27)}\r\n                                                        </span>\r\n                                                        <InputField name={\"businessUrl\"} className={`form-control form-control-lg fw-bold px-9 ${businessUrlError ? 'is-invalid' : ''}`} placeholder=\"Enter Business Page Url\" value={businessUrl} onChangeHandler={this.handleOnChange} />\r\n                                                        {businessUrlError && <span className=\"invalid-feedback\">Please enter Business Page Url</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"Business Name\"}>\r\n                                                <div className=\"row gx-3\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <div className=\"mb-2 mb-xl-3\">\r\n                                                            <span className={`mb-2 mb-xl-3 ${locationError ? 'is-invalid' : ''}`}>\r\n                                                                <SearchPlace onLatlanChange={this.onLatlanChange} onFieldTextChange={this.onTextFieldChange} error={locationError} />\r\n                                                            </span>\r\n                                                            {locationError && <span className=\"invalid-feedback\">This field is required.</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <div className=\"mb-2 mb-xl-3\">\r\n                                                            <Dropdown className={`w-100 ${keywordError ? 'is-invalid' : ''}`} autoClose=\"outside\">\r\n                                                                <Dropdown.Toggle variant='link' className=\"p-0 text-decoration-none w-100 arrow_disabled position-relative\">\r\n                                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                                        {this.feedIcon(30)}\r\n                                                                    </span>\r\n                                                                    <InputField name={\"keyword\"} className={`form-control form-control-lg fw-bolder px-9`} placeholder=\"Enter Keyword\" value={keyword} onChangeHandler={this.handleOnChange} autoComplete={true} />\r\n                                                                </Dropdown.Toggle>\r\n                                                                {(keywordList && keywordList.length > 0) &&\r\n                                                                    <Dropdown.Menu className=\"w-100\">\r\n                                                                        <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n                                                                            <div className=\"feedDropdown\">\r\n                                                                                {keywordList.map((item) => <Dropdown.Item className=\"w-100\" onClick={() => this.keywordSelected(item)}>\r\n                                                                                    <div className=\"d-flex algin-items-center\">\r\n                                                                                        <img className=\"h-30px w-30px object-center-cover rounded-1 me-1\" src={item.image_url} height={30} width={30} alt={item.data_handle_playlistName} />\r\n                                                                                        <div className=\"d-flex flex-column justify-content-start\">\r\n                                                                                            <p className=\"fw-bold fs-8 mb-0\">{item.data_handle_playlistName}</p>\r\n                                                                                            <span className=\"fs-10 mb-0\">{item.url}</span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Dropdown.Item>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                        </PerfectScrollbar>\r\n                                                                    </Dropdown.Menu>}\r\n                                                            </Dropdown>\r\n                                                            {keywordError && <span className=\"invalid-feedback\">This field is required.</span>}\r\n                                                            <div className=\"wrap_yelp_sugg\"> </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Yelp)","import { Component } from \"react\";\r\n\r\nclass InfoSection extends Component {\r\n    render() {\r\n        const { text } = this.props;\r\n        return <div className=\"d-flex alert alert-info\">\r\n                    <i className=\"ri-information-line icon-3 me-2 text-muted\"></i>\r\n                    <div className=\"d-flex justify-content-center align-items-start flex-column flex-grow-1\">\r\n                        <p className=\"mb-0\">{text}</p>\r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default InfoSection;","import React, { Component } from 'react'\r\nimport Uppy from '@uppy/core';\r\nimport { DragDrop } from '@uppy/react'\r\nimport Transloadit from '@uppy/transloadit';\r\nimport { toast } from 'react-toastify';\r\nimport { MEDIA_PATH } from '../../../../../Services/Api';\r\n\r\n\r\n\r\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\r\nconst uppyBucket = 'cloud.taggbox.com';\r\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\r\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\r\n\r\n\r\nclass BulkDropzone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.uppyOne = new Uppy({\r\n            debug: true, autoProceed: true, restrictions: {\r\n                maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['.csv'],\r\n            }\r\n        }).use(Transloadit, {\r\n            target: '#a',\r\n            params: {\r\n                auth: {\r\n                    key: uppyKey\r\n                },\r\n                steps: {\r\n                    store: {\r\n                        robot: \"/wasabi/store\",\r\n                        bucket_region: \"us-west-1\",\r\n                        bucket: uppyBucket,\r\n                        key: uppyAwsKey,\r\n                        secret: uppyAwsSecret,\r\n                        path: 'postimage/${file.id}'\r\n                    },\r\n                }\r\n            },\r\n            waitForEncoding: true\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.uppyOne.on('transloadit:result', (stepName, result) => {\r\n            this.props.onUploadSuccess(result.original_name, result.url);\r\n            this.uppyOne.cancelAll()\r\n        });\r\n        this.uppyOne.on(\"restriction-failed\", (file, error) => {\r\n\r\n            let fileType = file.type.split('/');\r\n\r\n            if (fileType[0] != 'csv') {\r\n                toast.error(\"You can only upload csv File\",{autoClose:3000});\r\n                return false\r\n            }\r\n\r\n\r\n            if (file.size > 5000000) {\r\n                toast.error(\"Maximum allowed size of 4.8 MB\",{autoClose:3000});\r\n                return false\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.uppyOne.cancelAll()\r\n        this.uppyOne.close({ reason: 'unmount' })\r\n    }\r\n\r\n    render() {\r\n        const { fileName } = this.props;\r\n\r\n        return <div className=\"bulkURL-box mb-2\">\r\n            <DragDrop\r\n                proudlyDisplayPoweredByUppy={false}\r\n                hideUploadButton={false}\r\n                showProgressDetails={false}\r\n                disableThumbnailGenerator={false}\r\n                height={220}\r\n                width={'100%'}\r\n                showSelectedFiles={true}\r\n                showRemoveButtonAfterComplete={false}\r\n                disableInformer={true}\r\n                uppy={this.uppyOne}\r\n            />\r\n            <div className=\"d-flex align-items-center mb-3 fw-medium\">\r\n                <span className='text-muted me-1'>File Name :</span>{fileName}\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default BulkDropzone","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport InputField from '../Elements/InputField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport { toast } from 'react-toastify';\r\nimport InfoSection from '../Elements/InfoSection';\r\nimport BulkDropzone from './components/BulkDropzone';\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass LinkedIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postUrl: \"\",\r\n            handle: \"\",\r\n            moderation: false,\r\n            imageUrl: null,\r\n            fileName: 'Your selected file name',\r\n            error: false,\r\n            handleError: false,\r\n            loading: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onUploadSuccess = (fileName, url) => {\r\n        this.setState({ imageUrl: url, fileName: fileName });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        const { postUrl, imageUrl, moderation, selectedFilterTab, selectedFilterId } = this.state;\r\n        const { collection, networkId } = this.props;\r\n\r\n        if (selectedFilterTab == 'Post Url' && postUrl == '') {\r\n            this.setState({ error: true });\r\n        } else if (selectedFilterTab == 'Bulk URLs' && imageUrl == null) {\r\n            toast.error(\"Please upload a Csv File\", { autoClose: 3000 });\r\n        }\r\n        else {\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n                })\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0\r\n            }\r\n            if (selectedFilterId == 16) {\r\n                obj['field'] = postUrl\r\n            } else if (selectedFilterId == 18) {\r\n                obj['field'] = imageUrl\r\n            }\r\n\r\n            this.setState({ error: false, loading: true })\r\n            createFeedAction(obj, networkId, (getFeedId) => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false });\r\n                this.props.closeAddFeed();\r\n                if (getFeedId) {\r\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                    else {\r\n                        if (String(window.location.href).includes(\"assets\")) {\r\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                        }\r\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                    }\r\n\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 16: // Link\r\n                return <i className=\"ri-link icon-6\"></i>\r\n                break;\r\n            case 18: // Links\r\n                return <i className=\"ri-links-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { postUrl, fileName, moderation, error, loading, selectedFilterTab } = this.state\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                        {\r\n                                            filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                const { feedName, feedtype, filter } = filterTab;\r\n                                                return <Nav.Item className=\"p-1\" key={index}>\r\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                            {this.feedIcon(filter)}\r\n                                                        </span>\r\n                                                        {capitalizeFirstLetter(feedtype)}\r\n                                                    </Nav.Link>\r\n                                                </Nav.Item>\r\n                                            })\r\n                                        }\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"Post Url\"}>\r\n                                                <div className=\"position-relative w-100 mb-3\">\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(16)}\r\n                                                    </span>\r\n                                                    <InputField name={\"postUrl\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter LinkedIn Post Url\" value={postUrl} onChangeHandler={this.onChangeHandler} />\r\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                                <InfoSection text={\"LinkedIn auto update is not available due to changes made by LinkedIn in MDP API Recently. However, we are providing a solution for this condition you can simply add a post URL from your company page one by one manually and display your LinkedIn post on your website.\"} />\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"Bulk URLs\"}>\r\n                                                <div className=\"d-flex w-100 justify-content-start mb-1\">\r\n                                                    <span className=\"text-right fw-medium\">\r\n                                                        Download the\r\n                                                        <a href={baseUrl('media/downloads/csv-sample.csv')} target='_blank' className=\"text-decoration-underline mx-1 fw-semibold\" download>Sample CSV template</a>\r\n                                                        to see an example of the format required\r\n                                                    </span>\r\n                                                </div>\r\n                                                <BulkDropzone onUploadSuccess={this.onUploadSuccess} fileName={fileName} />\r\n                                                <InfoSection text={\"You can upload 50 urls at one time.\"} />\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkedIn)","import React, { Component } from 'react'\r\nimport SearchPlace from '../../Elements/SearchPlace';\r\nimport CheckBoxField from '../../Elements/CheckboxField'\r\nimport InputField from '../../Elements/InputField';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { youtubeAutoComplete } from '../../../../../Services/Actions/addFeedAction';\r\nimport { debounce } from '../../../../../Services/Utils/utils';\r\n\r\n\r\nexport default class YoutubeTabs extends Component {\r\n\r\n    state = {\r\n        list: [],\r\n        spinnerActive: false\r\n    }\r\n\r\n    autoComplete = debounce((query, type) => youtubeAutoComplete(query, type).then(res => {\r\n        const { data } = res\r\n        if (data && Object.keys(data).length > 0) {\r\n            this.setState({ list: data.items })\r\n        }\r\n    }))\r\n\r\n\r\n    onYoutubeChange = query => {\r\n        const { onValueChange, tab } = this.props\r\n        this.setState({ spinnerActive: true })\r\n        if ([\"Play List\", \"Channel Url\", \"Shorts\"].includes(tab)) {\r\n            try {\r\n                const type = tab == \"Play List\" ? \"playlist\" : \"channel\"\r\n                onValueChange(query);\r\n                this.autoComplete(query, type);\r\n                this.setState({ spinnerActive: false })\r\n            } catch (error) {\r\n\r\n                this.setState({ spinnerActive: false })\r\n            }\r\n        }\r\n        else {\r\n            onValueChange(query);\r\n            this.setState({ spinnerActive: false })\r\n        }\r\n    }\r\n\r\n    onListClick = (item) => {\r\n        try {\r\n            const { onValueChange, tab, onChannelIdChange, } = this.props\r\n            onValueChange(tab == \"Play List\" ? item.snippet.title : item.snippet.channelTitle)\r\n            onChannelIdChange(`${tab == \"Play List\" ? item.id.playlistId : tab == \"Shorts\" ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`)\r\n            document.getElementById(`feedsfield-${tab}`).value = `https://www.youtube.com/${tab == \"Play List\" ? \"playlist?list=\" : \"channel/\"}${tab == \"Play List\" ? item.id.playlistId : tab == \"Shorts\" ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`\r\n            this.setState({ list: [] })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { tab, onValueChange, checkBox, onCheckBoxChange, onKeywordChange, keyword, error, onLatlanChange, shortError, playListError, keywordError, locationError, locationKeywordError, filter, feedIcon } = this.props\r\n        const { list, spinnerActive } = this.state\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className={`col-md-${tab == \"Location\" ? '6' : '12'}`}>\r\n                        <div className=\"mb-3\">\r\n                            {tab == \"Location\" ?\r\n                                <SearchPlace onFieldTextChange={onValueChange} onLatlanChange={onLatlanChange} error={(tab == \"Location\" && locationError)} />\r\n                                :\r\n                                <Dropdown className={`w-100 ${(tab == \"Channel Url\" && error) || (tab == \"Shorts\" && shortError) || (tab == \"Play List\" && playListError) || (tab == \"Keywords\" && keywordError) || (tab == \"Location\" && locationError) ? 'is-invalid' : ''}`} autoClose=\"outside\">\r\n                                    <Dropdown.Toggle variant='link' className=\"p-0  text-decoration-none w-100 arrow_disabled position-relative\">\r\n                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                            {feedIcon(filter)}\r\n                                        </span>\r\n                                        <input placeholder={`${tab == \"Location\" ? \"\" : \"Enter\"} ${tab == \"Shorts\" || tab == \"Channel Url\" ? \"channel url\" : tab == \"Play List\" ? \"Play List ID\" : tab == \"Keywords\" ? \"keyword\" : \"\"}`} className={`form-control form-control-lg fw-bolder px-9`} id={`feedsfield-${tab}`} type=\"text\" onChange={e => this.onYoutubeChange(e.target.value)} />\r\n                                        {spinnerActive ? <div className=\"spinner\" style={{ top: -22 }}></div> : null}\r\n                                    </Dropdown.Toggle>\r\n                                    {list && list.length ?\r\n                                        <Dropdown.Menu className=\"w-100\">\r\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n                                                <div className=\"feedDropdown\">\r\n                                                    {list.map(item => (\r\n                                                        <Dropdown.Item onClick={() => this.onListClick(item)}>\r\n                                                            <div className=\"d-flex algin-items-center\">\r\n                                                                <img className=\"h-30px w-30px object-center-cover rounded-1 me-1\" src={item.snippet.thumbnails.default.url} />\r\n                                                                <div className=\"d-flex flex-column justify-content-start\">\r\n                                                                    <p className=\"fw-bold fs-8 mb-0\">{item.snippet.channelTitle}</p>\r\n                                                                    <span className=\"fs-10 mb-0\">{`https://www.youtube.com/${tab == \"Play List\" ? \"playlist?list=\" : \"channel/\"}${tab == \"Play List\" ? item.id.playlistId : item.id.channelId}`}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Dropdown.Item>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </PerfectScrollbar>\r\n                                        </Dropdown.Menu>\r\n                                        : null}\r\n                                </Dropdown>\r\n                            }\r\n                            {(tab == \"Channel Url\" && error) || (tab == \"Shorts\" && shortError) || (tab == \"Play List\" && playListError) || (tab == \"Keywords\" && keywordError) || (tab == \"Location\" && locationError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                        </div>\r\n                    </div>\r\n                    {tab == \"Location\" ?\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"position-relative mb-3\">\r\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                    {feedIcon(4)}\r\n                                </span>\r\n                                <InputField name={\"keyword\"} className={`form-control form-control-lg fw-bold px-9 ${(tab == \"Location\" && locationKeywordError) ? 'is-invalid' : ''}`} placeholder=\"Enter keywords\" value={keyword} onChangeHandler={(e) => onKeywordChange(e.target.value)} />\r\n                            </div>\r\n                            {(tab == \"Location\" && locationKeywordError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                        </div>\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport SVG from 'react-inlinesvg';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { createFeed, createFeedAction, createPost } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport YoutubeTabs from './components/YoutubeTabs';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass YoutubeFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            textField: \"\",\r\n            moderation: false,\r\n            keyword: \"\",\r\n            error: false,\r\n            shortError: false,\r\n            playListError: false,\r\n            keywordError: false,\r\n            locationError: false,\r\n            locationKeywordError: false,\r\n            channelId: \"\",\r\n            latlng: \"\",\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    onTextFieldChange = (value) => this.setState({ textField: value, error: false, shortError: false, keywordError: false, playListError: false, keywordError: false })\r\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\r\n    onKeywordChange = (value) => this.setState({ keyword: value, locationKeywordError: false })\r\n    onChannelIdChange = (value) => this.setState({ channelId: value })\r\n    onLatlanChange = (value) => this.setState({ latlng: value, locationError: false })\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n\r\n    clearValues = (filter, feedtype) => {\r\n        this.onTextFieldChange('')\r\n        this.onChannelIdChange(\"\");\r\n        this.changeTab(filter, feedtype);\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { textField, channelId, moderation, keyword, latlng, selectedFilterId } = this.state;\r\n        const { collection, networkId } = this.props;\r\n        if (selectedFilterId == 1 && textField == \"\") {\r\n            this.setState({ error: true })\r\n        } else if (selectedFilterId == 75 && textField == '') {\r\n            this.setState({ shortError: true })\r\n        } else if (selectedFilterId == 11 && textField == '') {\r\n            this.setState({ playListError: true })\r\n        } else if (selectedFilterId == 4 && textField == '') {\r\n            this.setState({ keywordError: true })\r\n        } else if (selectedFilterId == 32 && textField == '') {\r\n            this.setState({ locationError: true })\r\n        } else if (selectedFilterId == 32 && keyword == '') {\r\n            this.setState({ locationKeywordError: true })\r\n        } else {\r\n            var collectionId = []\r\n            if (collection && collection.length > 0) {\r\n                collection.map((iCollection) => {\r\n                    collectionId.push(iCollection.value)\r\n                })\r\n            }\r\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n\r\n\r\n            var obj = {\r\n                ...isCollection,\r\n                networkId: networkId,\r\n                filter: selectedFilterId,\r\n                moderation: moderation ? 1 : 0,\r\n                feedText: textField,\r\n                channelId: channelId ? channelId : \"\",\r\n            }\r\n\r\n            if (selectedFilterId == 4) {\r\n                obj['channelId'] = \"\";\r\n            } else if (selectedFilterId == 32) {\r\n                obj['channelId'] = \"\";\r\n                obj = { ...obj, keywords: keyword, latlng };\r\n            }\r\n\r\n            this.setState({ error: false, shortError: false, keywordError: false, playListError: false, keywordError: false, loading: true })\r\n            createFeedAction(obj, networkId, (getFeedId) => {\r\n                this.props.getAllfeeds()\r\n                this.setState({ loading: false });\r\n                this.props.closeAddFeed();\r\n                if (getFeedId) {\r\n                    if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                    else {\r\n                        if (String(window.location.href).includes(\"assets\")) {\r\n                            channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                        }\r\n                        setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                    }\r\n\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 1: // Link\r\n                return <i className=\"ri-link icon-6\"></i>\r\n                break;\r\n            case 75: // Shorts\r\n                return <SVG src={baseUrl('media/icons/svg-icons/youtube-shorts.svg')} height={16} width={16} />\r\n                break;\r\n            case 11: // Play List\r\n                return <i className=\"ri-play-list-2-line icon-6\"></i>\r\n                break;\r\n            case 4: // Keyword\r\n                return <i className=\"ri-text icon-6\"></i>\r\n                break;\r\n            case 32: // Location\r\n                return <i className=\"ri-map-pin-2-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { filterTabs } = this.props;\r\n        const { textField, shortError, playListError, keywordError, locationError, locationKeywordError, channelId, moderation, keyword, error, loading, selectedFilterTab } = this.state\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {\r\n                                                filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                    const { feedName, feedtype, filter } = filterTab;\r\n                                                    return <Nav.Item className=\"p-1\" key={index}>\r\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.clearValues(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                                {this.feedIcon(filter)}\r\n                                                            </span>\r\n                                                            {capitalizeFirstLetter(feedtype)}\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => <Tab.Pane eventKey={filter.feedtype} key={filter.feedtype}>\r\n                                                <YoutubeTabs tab={filter.feedtype} error={error} onLatlanChange={this.onLatlanChange} value={textField} feedIcon={this.feedIcon} onValueChange={this.onTextFieldChange} checkBox={moderation} onCheckBoxChange={this.onCheckHandler} onKeywordChange={this.onKeywordChange} onChannelIdChange={this.onChannelIdChange} channelId={channelId} keyword={keyword} shortError={shortError} playListError={playListError} keywordError={keywordError} locationError={locationError} locationKeywordError={locationKeywordError} filter={filter.filter} />\r\n                                            </Tab.Pane>\r\n                                            ) : null}\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YoutubeFeed)","import React, { Component } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { disconnectUser, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\r\nimport ProfileImage from \"../../CommonComponents/ProfileImage/ProfileImage\";\r\n\r\nclass AccountPicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedAccount: props.connectedAcc[0],\r\n            accounts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { selectAccount, personalAccount, personal, connectedAcc } = this.props\r\n        setTimeout(() => {\r\n            if (connectedAcc && connectedAcc.length) {\r\n                this.props.onConnectedAccountChange(this.props.connectedAcc[0].ConnectedAccounts.id);\r\n                selectAccount(this.props.connectedAcc[0].ConnectedAccounts.id)\r\n                this.setState({ accounts: personal ? personalAccount : connectedAcc, selectedAccount: personal ? personalAccount[0] : connectedAcc[0] })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n\r\n    disconnectAccount = (account) => {\r\n        const {accounts} = this.state;\r\n         \r\n       this.props.disconnectAccount(account.ConnectedAccounts.id,()=>{\r\n        if( accounts.length-1 >= 1){\r\n            const updateAccountsList = accounts.filter(acc=>acc.ConnectedAccounts.id !== account.ConnectedAccounts.id);\r\n            this.props.onConnectedAccountChange(updateAccountsList[0].ConnectedAccounts.id);\r\n            this.props.selectAccount(updateAccountsList[0].ConnectedAccounts.id);\r\n            this.setState({ accounts: updateAccountsList,selectedAccount:updateAccountsList[0] })\r\n        }else{\r\n            this.props.selectAccount(null);\r\n            this.props.onConnectedAccountChange(null);\r\n        }\r\n       });\r\n        \r\n    }\r\n\r\n    deleteAccount = (account) => {\r\n        Swal.fire({\r\n            title: '<strong>Confirm</strong>',\r\n            icon: 'warning',\r\n            text:\r\n                'Do you want to disconnect account?',\r\n            showCloseButton: true,\r\n            showCancelButton: true,\r\n            focusConfirm: true,\r\n            confirmButtonText:\r\n                'Yes',\r\n            confirmButtonAriaLabel: 'Yes',\r\n            cancelButtonAriaLabel: 'Thumbs down'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.disconnectAccount(account)\r\n            }\r\n            else if (result.dismiss === \"cancel\") { }\r\n        })\r\n    }\r\n\r\n    onAccountChange = (id) => {\r\n        this.props.selectAccount(id ? id : null)\r\n        this.props.onConnectedAccountChange(id);\r\n        if(!id){\r\n            this.setState({ selectedAccount: null });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { selectedAccount, accounts } = this.state\r\n        return (\r\n            <>\r\n                {(accounts && accounts.length>0 ) ? <Dropdown className=\"w-100 mb-3\">\r\n                    <Dropdown.Toggle variant=\"none\" className=\"d-flex align-items-center btn btn-sm btn-outline-secondary w-100 justify-content-between\">\r\n                        {\r\n                        selectedAccount ?\r\n                        <div className=\"d-flex align-items-center flex-grow-1\" style={{width:'calc(100% - 70px)'}}>\r\n                            <ProfileImage className={'symbol symbol-28 symbol-circle bg-light flex-shrink-0 me-2'} \r\n                                imageSize={28} \r\n                                symbolClass={'symbol-label text-light-alt fw-bold text-uppercase fs-8'} \r\n                                name={selectedAccount.ConnectedAccounts.accountName} profileUrl={selectedAccount.ConnectedAccounts.profilePicture} networkId={selectedAccount.Network.id} />\r\n                            <div className=\"overflow-hidden w-100\">\r\n                                <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">{selectedAccount.ConnectedAccounts.accountName}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        :\r\n                        <div className=\"d-flex align-items-center flex-grow-1\">\r\n                            <i className=\"ri-account-circle-fill icon-1 text-muted me-2\"></i>\r\n                            <div className=\"overflow-hidden w-100\">\r\n                                <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">Add Another Account</p>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu className=\"w-100 navi flex-column navi-hover py-2 connectedAllAccounts\">\r\n                        <div className=\"fs-7 px-3 py-2 fw-semibold text-gray-500\">Select Account:</div>\r\n                        {accounts && accounts.length ? accounts.map(acc => (\r\n                        <Dropdown.Item className=\"justify-content-between\" key={acc.ConnectedAccounts.accountId} onClick={() => { this.setState({ selectedAccount: acc }, () => this.onAccountChange(acc.ConnectedAccounts.id)) }}>\r\n                            <div className=\"d-flex align-items-center flex-grow-1\" style={{width:'calc(100% - 70px)'}}>\r\n                                    <ProfileImage className={'symbol symbol-28 symbol-circle bg-light flex-shrink-0 me-2'} \r\n                                    imageSize={28} \r\n                                    symbolClass={'symbol-label text-light-alt fw-bold text-uppercase fs-8'} \r\n                                    name={acc.ConnectedAccounts.accountName} profileUrl={acc.ConnectedAccounts.profilePicture} networkId={acc.Network.id} />\r\n                                <div className=\"overflow-hidden w-100\">\r\n                                    <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">{acc.ConnectedAccounts.accountName}</p>\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-sm btn-danger fs-10 py-1\" onClick={() => this.deleteAccount(acc)}>Disconnect</button>\r\n                        </Dropdown.Item>\r\n                        ))\r\n                            : null\r\n                        }\r\n                        <Dropdown.Item className=\"align-items-center justify-content-between\" onClick={() => this.onAccountChange()}>\r\n                            <div className=\"d-flex align-items-center justify-content-start\">\r\n                                <i className=\"ri-account-circle-fill icon-1 text-muted me-2\"></i>\r\n                                <div className=\"fw-medium fs-8 text-dark\">Add Another Account</div>\r\n                            </div>\r\n                            <i className=\"ri-add-circle-line icon-3 text-muted ms-2\"></i>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                    :\r\n                    null\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectAccount: (id) => dispatch(selectAccount(id)),\r\n        disconnectAccount:(accountId,callback)=>dispatch(disconnectUser(accountId,callback))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPicker)","import React, { Component } from 'react';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport { connect } from 'react-redux';\r\nimport AccountPicker from '../Elements/AccountPicker';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nclass YammerFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groupId: \"\",\r\n            topicId: \"\",\r\n            moderation: false,\r\n            error: false,\r\n            topicError: false,\r\n            loading: false,\r\n            account: null,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, topicError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onConnectedAccountChange = (value) => this.setState({ account: value })\r\n\r\n    addYammerAccount = () => {\r\n        const { networkData } = this.props;\r\n        showAddAccountAlert(networkData);\r\n    }\r\n\r\n\r\n    createFeed = (connectAccountId) => {\r\n        const { groupId, topicId, moderation, selectedFilterId } = this.state;\r\n        const { collection, networkId, accountId } = this.props;\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n            })\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: networkId,\r\n            filter: selectedFilterId,\r\n            moderation: moderation ? 1 : 0,\r\n            connetedAccount: 0,\r\n            account: connectAccountId ? connectAccountId : accountId\r\n        }\r\n        if (selectedFilterId == 53) {\r\n            obj['field'] = groupId\r\n        } else if (selectedFilterId == 54) {\r\n            obj['field'] = topicId\r\n        }\r\n\r\n        this.setState({ error: false, topicError: false, loading: true })\r\n        createFeedAction(obj, networkId, (getFeedId) => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { groupId, topicId, selectedFilterTab } = this.state;\r\n        const { accountId } = this.props;\r\n\r\n\r\n        if (selectedFilterTab == 'group ID' && groupId == '') {\r\n            this.setState({ error: true });\r\n        } else if (selectedFilterTab == 'topic ID' && topicId == '') {\r\n            this.setState({ topicError: true });\r\n        }\r\n        else {\r\n\r\n            if (accountId == null) {\r\n                this.addYammerAccount();\r\n                return;\r\n            }\r\n\r\n            this.createFeed();\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n\r\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId), 0);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 53: // Group\r\n                return <i className=\"ri-group-line icon-6\"></i>\r\n                break;\r\n            case 54: // Chat\r\n                return <i className=\"ri-chat-3-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs, connectedAccountList, networkId } = this.props;\r\n        const { groupId, topicId, account, moderation, topicError, error, loading, selectedFilterTab } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\r\n                                            const { feedName, feedtype, filter } = filterTab;\r\n                                            return <Nav.Item className=\"p-1\" key={index}>\r\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                        {this.feedIcon(filter)}\r\n                                                    </span>\r\n                                                    {capitalizeFirstLetter(feedtype)}\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        })}\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"group ID\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100\">\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(53)}\r\n                                                        </span>\r\n                                                        <InputField name={\"groupId\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Yammer Group ID to fetch feed\" value={groupId} onChangeHandler={this.onChangeHandler} />\r\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"topic ID\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100\">\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(54)}\r\n                                                        </span>\r\n                                                        <InputField name={\"topicId\"} className={`form-control form-control-lg fw-bold px-9 ${topicError ? 'is-invalid' : ''}`} placeholder=\"Enter Yammer Topic ID to fetch feed\" value={topicId} onChangeHandler={this.onChangeHandler} />\r\n                                                        {topicError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YammerFeed)","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\n\r\nclass AccountSelect extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accountList: [],\r\n            selectedAccount: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { connectedAcc, onConnectedAccountChange } = this.props;\r\n        if (connectedAcc && connectedAcc.length > 0) {\r\n            let formatedOptions = connectedAcc.map(item => ({ label: item.ConnectedAccounts.accountName, value: item.ConnectedAccounts.id }));\r\n            if (formatedOptions && formatedOptions.length > 0) {\r\n                formatedOptions = [...formatedOptions, { label: 'other', value: null }];\r\n                onConnectedAccountChange(connectedAcc[0].ConnectedAccounts.id);\r\n                this.setState({ accountList: formatedOptions, selectedAccount: formatedOptions[0] });\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.props.onConnectedAccountChange(e.value);\r\n        this.setState({ selectedAccount: e });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedAccount, accountList } = this.state;\r\n        return <div className=\"col-md-12\">\r\n            <div className=\"form-group position-relative\">\r\n                <Select className=\"selectpicker\" options={accountList} classNamePrefix=\"selectpicker\" value={selectedAccount} onChange={(e) => this.onChangeHandler(e)} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default AccountSelect\r\n","import React, { Component } from 'react';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport AccountPicker from '../Elements/AccountPicker';\r\nimport AccountSelect from './components/AccountSelect';\r\nimport InfoSection from '../Elements/InfoSection';\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nclass TiktokFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hashtag: \"\",\r\n            handle: '',\r\n            hashtagPost: false,\r\n            postUrl: \"\",\r\n            moderation: false,\r\n            connetedAccount: null,\r\n            error: false,\r\n            loading: false,\r\n            selectedChildAccount: {},\r\n            personalAcc: {},\r\n            account: 0,\r\n            isAuthRequired: props.isAuthRequired,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype,\r\n            handleError: false,\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, topicError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onConnectedAccountChange = (value) => this.setState({ account: value })\r\n\r\n    addTiktokAccount = () => {\r\n        const { networkData } = this.props;\r\n        showAddAccountAlert(networkData);\r\n    }\r\n    onSelectedChildAccountChange = (value) => this.setState({ selectedChildAccount: value })\r\n\r\n    onPersonalAccChange = (value) => this.setState({ personalAcc: value })\r\n    createFeed = (connectAccountId) => {\r\n        const { postUrl, moderation, selectedFilterId, account, selectedChildAccount, personalAcc, hashtag, handle, hashtagPost } = this.state;\r\n        const { collection, networkId } = this.props;\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n            })\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: networkId,\r\n            hashtagCaption: hashtagPost ? 1 : 0,\r\n            feedText: selectedFilterId == 72 ? hashtag : handle,\r\n            filter: selectedFilterId,\r\n            moderation: moderation ? 1 : 0,\r\n\r\n        }\r\n        if (selectedFilterId == 71) {\r\n            obj['accountId'] = connectAccountId ? connectAccountId : account ? account : \"\"\r\n        }\r\n        else obj['accountId'] = \"\"\r\n\r\n        this.setState({ error: false, topicError: false, loading: true })\r\n\r\n        createFeedAction(obj, networkId, (getFeedId) => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        // const { postUrl, selectedFilterTab, account } = this.state;\r\n\r\n        // if (selectedFilterTab == 'Personal Account' && (!account || account == 0)) {\r\n        //     this.addTiktokAccount();\r\n        // } else if (selectedFilterTab == 'Post Url' && postUrl == '') {\r\n        //     this.setState({ error: true });\r\n        // } else {\r\n        //     this.createFeed();\r\n        // }\r\n\r\n\r\n\r\n        const { hashtag, handle, selectedFilterId, isAuthRequired } = this.state;\r\n        const { accountId } = this.props;\r\n        if ((!hashtag || hashtag == \"\") && selectedFilterId == 72) {\r\n            this.setState({ error: true, loading: false })\r\n        } else if ((!handle || handle == \"\") && selectedFilterId == 71) {\r\n            this.setState({ handleError: true, isLoading: false })\r\n        } else {\r\n            if ([72, 71].includes(selectedFilterId)) {\r\n                this.createFeed(accountId != null ? accountId : 0);\r\n            } else this.createFeed(null)\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n\r\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAccounts();\r\n        this.getPersonalAccounts();\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n    getPersonalAccounts = () => {\r\n        const { personalAccount, onPersonalAccChange } = this.props;\r\n        if (personalAccount && personalAccount.length > 0) {\r\n            const formatedOption = this.formatOption(personalAccount, true);\r\n            if (onPersonalAccChange) onPersonalAccChange(formatedOption[0]);\r\n            this.setState({ personalAccountList: formatedOption, allPersonalAcc: personalAccount, selectPersonal: formatedOption[0] });\r\n        }\r\n    }\r\n    formatOption = (lists, isPersonal) => {\r\n        const formatedList = lists.map((item) => ({ label: isPersonal ? item.ConnectedAccounts.accountName : item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\r\n        if (formatedList && formatedList.length > 0) {\r\n            return [...formatedList, { label: 'other', value: 0 }];\r\n        }\r\n        return []\r\n    }\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 72:\r\n            case 26: // Hashtag\r\n                return <i className=\"ri-hashtag icon-6\"></i>\r\n                break;\r\n            case 71:\r\n            case 23:\r\n            case 24: // Handle\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            case 1: // Account\r\n                return <i className=\"ri-account-circle-line icon-6\"></i>\r\n                break;\r\n            case 70: // Link\r\n                return <i className=\"ri-link icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getInfo = (tab) => {\r\n        switch (tab) {\r\n            case 'hashtag':\r\n                return 'TikTok only allows posts from the last 24 hours. If there are no recent posts in the 24-hour duration, then the top 50 posts will be aggregated. Also, all your upcoming posts will be aggregated. Posts collected via hashtags will not include any information of the user.';\r\n            case 'handle':\r\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getAccounts = () => {\r\n        const { connectedAcc } = this.props\r\n        var allAccounts = [];\r\n        if (connectedAcc && connectedAcc.length > 0) {\r\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\r\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\r\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child];\r\n                }\r\n                else {\r\n                    this.setState({ allAccounts: [] })\r\n                }\r\n            })\r\n\r\n            if (allAccounts && allAccounts.length > 0) {\r\n                const formatedOption = this.formatOption(allAccounts, false);\r\n                this.onSelectedChildAccountChange(formatedOption[0]);\r\n                this.setState({ allAccounts, formatedList: formatedOption, allConnectAcc: connectedAcc, selectValue: formatedOption[0] });\r\n            }\r\n        } else {\r\n            this.onSelectedChildAccountChange(null)\r\n            this.setState({ allAccounts: [] })\r\n        }\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\r\n    }\r\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\r\n    render() {\r\n        const { filterTabs, connectedAccountList, networkId, personalAccount } = this.props;\r\n        const { postUrl, error, loading, selectedFilterTab, handleError, hashtag, handle, hashtagPost, connetedAccount } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                        {\r\n                                            filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                const { feedName, feedtype, filter } = filterTab;\r\n                                                return <Nav.Item className=\"p-1\" key={index}>\r\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                            {this.feedIcon(filter)}\r\n                                                        </span>\r\n                                                        {capitalizeFirstLetter(feedtype)}\r\n                                                    </Nav.Link>\r\n                                                </Nav.Item>\r\n                                            })\r\n                                        }\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\r\n                                                {\r\n                                                    selectedFilterTab == 'hashtag' || selectedFilterTab == \"handle\" ?\r\n                                                        <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                                            <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                                {this.feedIcon(selectedFilterTab == \"hashtag\" ? 72 : 71)}\r\n                                                            </span>\r\n                                                            <InputField name={selectedFilterTab} className={`form-control form-control-lg fw-bold px-9 ${(selectedFilterTab == \"hashtag\" && error) || (selectedFilterTab == \"handle\" && handleError) ? 'is-invalid' : ''}`} placeholder={`Enter user ${selectedFilterTab}`} value={selectedFilterTab == \"hashtag\" ? hashtag : handle} onChangeHandler={this.onChangeHandler} />\r\n                                                            {(selectedFilterTab == \"hashtag\" && error) || (selectedFilterTab == \"handle\" && handleError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                        </div> : null\r\n                                                }\r\n                                                {\r\n                                                    selectedFilterTab == 'hashtag' ? <div className=\"hideforBSearch\">\r\n                                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                            <CheckBoxField isChecked={hashtagPost} onChangeHandler={this.onCheckHandler} name={\"hashtagPost\"}>\r\n                                                                <span className=\"form-check-label\">Get posts containing hashtag only in caption.</span>\r\n                                                            </CheckBoxField>\r\n                                                        </label>\r\n                                                    </div> : null\r\n                                                }\r\n                                                {(connectedAccountList && connectedAccountList.length > 0) ? <div style={{ display: [\"hashtag\", \"handle\"].includes(selectedFilterTab) ? 'block' : \"none\" }}> <AccountPicker connectedAcc={connectedAccountList} personalAccount={personalAccount} personal={selectedFilterTab == 'personal'} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} /> </div> : null}\r\n                                                <InfoSection text={this.getInfo(selectedFilterTab)} />\r\n                                            </Tab.Pane>\r\n                                            ) : null}\r\n                                            <Tab.Pane className=\"nav-link className= p-0\">\r\n                                                {connectedAccountList && connectedAccountList.length ? <AccountSelect connectedAcc={connectedAccountList} onConnectedAccountChange={this.onConnectedAccountChange} /> :\r\n                                                    <div className=\"py-2\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={this.addTiktokAccount}>\r\n                                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                                                <img src={baseUrl(\"media/icons/social-icons/tiktok.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                                                            </span>\r\n                                                            <div className=\"overflow-hidden signIn_txt px-4\">\r\n                                                                <span className=\"text-gray-800 mb-0 fs-8 fw-bold text-ellipsis me-2\">Connect TikTok</span>\r\n                                                            </div>\r\n                                                        </button>\r\n                                                    </div>}\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"Post Url\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className=\"position-relative w-100\">\r\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                            {this.feedIcon(70)}\r\n                                                        </span>\r\n                                                        <InputField name={\"postUrl\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Tiktok Post Url\" value={postUrl} onChangeHandler={this.onChangeHandler} />\r\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc,\r\n        personalAccount: state.addFeed.personalAccount,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TiktokFeed)\r\n","import React, { Component } from 'react';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\r\nimport InputField from '../Elements/InputField';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport { connect } from 'react-redux';\r\nimport AccountPicker from '../Elements/AccountPicker';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nclass VimeoFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handle: \"\",\r\n            hashtag: \"\",\r\n            moderation: false,\r\n            error: false,\r\n            handleError: false,\r\n            loading: false,\r\n            account: null,\r\n            isAuthRequired: props.isAuthRequired,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onConnectedAccountChange = (value) => this.setState({ account: value })\r\n\r\n    addVimeoAccount = () => {\r\n        const { networkData } = this.props;\r\n        showAddAccountAlert(networkData);\r\n    }\r\n\r\n\r\n    createFeed = (connectAccountId) => {\r\n        const { hashtag, handle, moderation, selectedFilterId } = this.state;\r\n        const { collection, networkId, accountId } = this.props;\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n            })\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: networkId,\r\n            filter: selectedFilterId,\r\n            moderation: moderation ? 1 : 0,\r\n            accountId: connectAccountId\r\n        }\r\n        if (selectedFilterId == 2) {\r\n            obj['feedText'] = hashtag\r\n        } else if (selectedFilterId == 1) {\r\n            obj['feedText'] = handle\r\n        }\r\n\r\n        this.setState({ error: false, handleError: false, loading: true })\r\n        createFeedAction(obj, networkId, (getFeedId) => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false, isAuthRequired: true });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { hashtag, handle, selectedFilterTab, isAuthRequired } = this.state;\r\n        const { accountId } = this.props;\r\n\r\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\r\n            this.setState({ error: true });\r\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\r\n            this.setState({ handleError: true });\r\n        }\r\n        else {\r\n\r\n            if (isAuthRequired) {\r\n                if (accountId == null) {\r\n                    this.addVimeoAccount();\r\n                } else {\r\n                    this.createFeed(accountId);\r\n                }\r\n            } else {\r\n                this.createFeed(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n\r\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 2: // Hashtag\r\n                return <i className=\"ri-hashtag icon-6\"></i>\r\n                break;\r\n            case 1: // Handle\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs, connectedAccountList, networkId } = this.props;\r\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                        {\r\n                                            filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                const { feedName, feedtype, filter } = filterTab;\r\n                                                return <Nav.Item className=\"p-1\" key={index}>\r\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                            {this.feedIcon(filter)}\r\n                                                        </span>\r\n                                                        {capitalizeFirstLetter(feedtype)}\r\n                                                    </Nav.Link>\r\n                                                </Nav.Item>\r\n                                            })\r\n                                        }\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\r\n                                                <div className=\"position-relative w-100 mb-3\">\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(2)}\r\n                                                    </span>\r\n                                                    <InputField name={\"hashtag\"} className={`form-control form-control-lg fw-bold px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\r\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"Handle\"}>\r\n                                                <div className=\"position-relative w-100 mb-3\">\r\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                        {this.feedIcon(1)}\r\n                                                    </span>\r\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bold px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\r\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                                {/* <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> */}\r\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VimeoFeed)","import React, { Component } from 'react';\r\n// import { AUTOCOMPLETE } from \"../../../../actions/manageFeedsAction\";\r\nimport AccountPicker from '../../Elements/AccountPicker';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { debounce } from '../../../../../Services/Utils/utils';\r\nimport InputField from '../../Elements/InputField';\r\nimport CheckBoxField from '../../Elements/CheckboxField';\r\nimport InfoSection from '../../Elements/InfoSection';\r\nimport { autoComplete } from '../../../../../Services/Actions/addFeedAction';\r\n\r\nconst FeedIcon = ({ iconId }) => {\r\n    switch (iconId) {\r\n        case 2: // Hashtag\r\n            return <i className=\"ri-hashtag icon-5\"></i>\r\n            break;\r\n        case 1:\r\n        case 7: // Handle\r\n            return <i className=\"ri-at-line icon-5\"></i>\r\n            break;\r\n        case 3: // List\r\n            return <i className=\"ri-list-check icon-5\"></i>\r\n            break;\r\n        case 5: // Advance\r\n            return <i className=\"ri-search-line icon-5\"></i>\r\n            break;\r\n        case 9: // Text\r\n            return <i className=\"ri-text icon-5\"></i>\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\nclass TwitterTabs extends Component {\r\n    state = {\r\n        showList: false,\r\n        lists: [],\r\n        spinnerActive: false, \r\n        errorMsg : 'This field is required.'\r\n    }\r\n\r\n    autoComplete = debounce((e) => {\r\n        autoComplete({\r\n            networkId: 1,\r\n            handle: e.target.value,\r\n        }).then(res => {\r\n            const { data } = res\r\n            if (data.response_code == 200) {\r\n                this.setState({ lists: data.responseData.data, showList: true, spinnerActive: false })\r\n            }\r\n            else this.setState({ lists: [], showList: false, spinnerActive: false })\r\n        }).catch(ex => {\r\n            if (ex.response) {\r\n                const { data } = ex.response;\r\n                this.setState({\r\n                    errorMsg: data.message\r\n                })\r\n            }\r\n            this.setState({ spinnerActive: false })\r\n        })\r\n    })\r\n\r\n    handleAutoComplete = (e) => {\r\n        this.props.onChangeHandler(e);\r\n        this.autoComplete(e);\r\n        this.setState({ spinnerActive: true })\r\n    }\r\n\r\n    onSelectList = (item) => {\r\n\r\n        const { onListNameChange, onListIdChange } = this.props\r\n        onListNameChange(item.name);\r\n        onListIdChange(item.id, item.owner_id);\r\n        this.setState({ showList: false })\r\n    }\r\n\r\n    render() {\r\n        const { lists, showList, spinnerActive, errorMsg } = this.state\r\n        const { hashtag, handle, networkId, onConnectedAccountChange, userName, showListError, listNameError, listName, advanced, tab, error, handleError, mentionError, advanceError, multiPhoto, listname, excludeRetweets, onChangeHandler, excludeReplies, onCheckHandler, mentions, favorites, favoriteError, connectedAccountList, filter } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"mb-2 mb-xl-3\">\r\n                    <div className=\"\">\r\n                        {tab != 'list' ?\r\n                            <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                    <FeedIcon iconId={filter} />\r\n                                </span>\r\n                                <InputField name={tab} className={`form-control form-control-lg fw-bold px-9 ${(tab == \"hashtag\" && error) || (handleError && tab == \"handle\") || (mentionError && tab == \"mentions\") || (favoriteError && tab == \"favorites\") || (advanceError && tab == \"advanced\") ? 'is-invalid' : ''}`} placeholder={tab !== \"advanced\" ? `Enter ${tab !== 'favorites' ? tab : 'the twitter handle of the user to import Liked Posts from.'}` : 'Query'} value={tab == \"hashtag\" ? hashtag : tab == \"handle\" ? handle : tab == \"mentions\" ? mentions : tab == \"advanced\" ? advanced : favorites} onChangeHandler={onChangeHandler} />\r\n                                {(tab == \"hashtag\" && error) || (handleError && tab == \"handle\") || (mentionError && tab == \"mentions\") || (favoriteError && tab == \"favorites\") || (advanceError && tab == \"advanced\") ? <span className=\"invalid-feedback\">This field is required.</span> : null}\r\n                            </div>\r\n                            :\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                        <Dropdown className={`w-100 ${showListError ? 'is-invalid' : ''}`} autoClose=\"outside\">\r\n                                            <Dropdown.Toggle variant='link' className=\"p-0 text-decoration-none w-100 arrow_disabled position-relative\">\r\n                                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                                    <FeedIcon iconId={9} />\r\n                                                </span>\r\n                                                <InputField name={\"userName\"} placeholder=\"Enter Keyword\" className={`form-control form-control-lg fw-bolder px-9`} value={userName} onChangeHandler={(e) => this.handleAutoComplete(e)} autoComplete={true} />\r\n                                                {spinnerActive ? <div className=\"spinner\" style={{ top: -22 }}></div> : null}\r\n                                            </Dropdown.Toggle>\r\n                                            {showList ? lists && lists.length > 0 ?\r\n                                            <Dropdown.Menu className=\"w-100\">\r\n                                                <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n                                                    <div className=\"feedDropdown\">\r\n                                                        {lists.map((item, index) => (\r\n                                                            <Dropdown.Item key={index} onClick={() => this.onSelectList(item)}>\r\n                                                                <div className=\"d-flex flex-column justify-content-start\">\r\n                                                                    <p className=\"fw-bold fs-8 mb-0\">{item.name}</p>\r\n                                                                    <span className=\"fs-10 mb-0\">https://twitter.com/{item.name}</span>\r\n                                                                </div>\r\n                                                            </Dropdown.Item>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </PerfectScrollbar>\r\n                                            </Dropdown.Menu>\r\n                                            : null : null}\r\n                                        </Dropdown>\r\n                                        {showListError && <span className=\"invalid-feedback\">{errorMsg}</span>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                            <FeedIcon iconId={7} />\r\n                                        </span>\r\n                                        <InputField name={\"listName\"} placeholder=\"Enter Username\" className={`form-control form-control-lg fw-bold px-9 ${listNameError ? 'is-invalid' : ''}`} value={listName} onChangeHandler={onChangeHandler} autoComplete={true} />\r\n                                        {listNameError && <span className=\"invalid-feedback\">This field is required.</span>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                        {(tab == \"hashtag\" && error) || (handleError && tab == \"handle\") || (mentionError && tab == \"mentions\") || (favoriteError && tab == \"favorites\") || (advanceError && tab == \"advanced\") ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n\r\n                        {tab == \"advanced\" ? <p className=\"fs-8 fw-medium text-gray-700 mb-1\">Use the table below to construct your query.</p> : null}\r\n                        {\r\n                            tab == \"advanced\" ? <div className=\"card mb-5\">\r\n                                <div className='card-body'>\r\n                                    <div className=\"table-responsive\" style={{ height: 200 }}>\r\n                                        <table className=\"table table-light mb-0\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style={{ width: \"20%\" }}><strong>Filter By:</strong></th>\r\n                                                    <th><strong>Example</strong></th>\r\n                                                    <th><strong>Targets Tweets:</strong></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex fw-medium\">\r\n                                                            <i className=\"ri-text icon-6 text-gray-800 me-1\"></i>\r\n                                                            Keywords\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>grapes banana</td>\r\n                                                    <td>containing both \"grapes\" and \"banana\".</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><strong></strong></td>\r\n                                                    <td>\"good time\"</td>\r\n                                                    <td>containing the exact phrase \"good time\"</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><strong></strong></td>\r\n                                                    <td>die OR alive</td>\r\n                                                    <td>containing either \"die\" or \"alive\" (or both)</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><strong></strong></td>\r\n                                                    <td>food -drink</td>\r\n                                                    <td>containing \"food\" but not \"drink\"</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><strong></strong></td>\r\n                                                    <td>#soul</td>\r\n                                                    <td>containing the hashtag \"#soul\"</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex fw-medium\">\r\n                                                            <i className=\"ri-user-line icon-6 text-gray-800 me-1\"></i>\r\n                                                            User\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>from:tagbox</td>\r\n                                                    <td>sent from the user @tagbox</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><strong></strong></td>\r\n                                                    <td>to:tagbox</td>\r\n                                                    <td>sent to the user @tagbox</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><strong></strong></td>\r\n                                                    <td>@tagbox</td>\r\n                                                    <td>mentioning @tagbox</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex fw-medium\">\r\n                                                            <i className=\"ri-link icon-6 text-gray-800 me-1\"></i>\r\n                                                            Content\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>funny filter:links</td>\r\n                                                    <td>containing \" funny\" and with a URL.</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex fw-medium\">\r\n                                                            <i className=\"ri-calendar-event-line icon-6 text-gray-800 me-1\"></i>\r\n                                                            Dates\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>champion&amp;start_time=2023-05-11T05:00:01.340Z</td>\r\n                                                    <td>containing \"champion\" and sent since date \"2023-05-11T05:00:01.340Z\" (year-month-day).</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td></td>\r\n                                                    <td>champion&amp;end_time=2023-05-17T05:00:01.340Z</td>\r\n                                                    <td>containing \"champion\" and sent before the date \"2023-05-17T05:00:01.340Z\".</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"pb-2\">\r\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                        <CheckBoxField isChecked={multiPhoto} onChangeHandler={onCheckHandler} name={\"multiPhoto\"}>\r\n                            <span className=\"form-check-label\">Add Multiple Photos</span>\r\n                        </CheckBoxField>\r\n                    </label>\r\n                    {tab != 'list' && tab != \"advanced\" ? <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                        <CheckBoxField isChecked={excludeRetweets} onChangeHandler={onCheckHandler} name={\"excludeRetweets\"}>\r\n                            <span className=\"form-check-label\">Exclude Retweets</span>\r\n                        </CheckBoxField>\r\n                    </label> : null}\r\n                    {tab != 'favorites' && tab != 'list' ? <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                        <CheckBoxField isChecked={excludeReplies} onChangeHandler={onCheckHandler} name={\"excludeReplies\"}>\r\n                            <span className=\"form-check-label\">Exclude Replies</span>\r\n                        </CheckBoxField>\r\n                    </label> : null}\r\n                </div>\r\n                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} />}\r\n                {tab != 'list' && tab != \"advanced\" && tab != \"favorites\" ?\r\n                    <InfoSection text={tab == 'hashtag' ? `Only 10 tweets will be aggregated from the last 7 days' data, after which all the upcoming tweets will be aggregated.` : tab == 'handle' ? `Initially, 10 tweets will be aggregated from the Twitter handle, after which all the upcoming tweets will be aggregated.` : tab == 'mentions' ? `Only 10 mentions from the last 7 days will be aggregated, after which all the upcoming tweets will be aggregated.` : ``} />\r\n                    : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TwitterTabs\r\n\r\n","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from 'react-bootstrap';\r\nimport { capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\r\nimport { addUserAccount, createFeedAction } from \"../../../../Services/Actions/addFeedAction\";\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport TwitterTab from \"./components/TwitterTab\";\r\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nconst FeedIcon = ({ iconId }) => {\r\n    switch (iconId) {\r\n        case 2: // Hashtag\r\n            return <i className=\"ri-hashtag icon-6\"></i>\r\n            break;\r\n        case 1:\r\n        case 7: // Handle\r\n            return <i className=\"ri-at-line icon-6\"></i>\r\n            break;\r\n        case 3: // List\r\n            return <i className=\"ri-list-check icon-6\"></i>\r\n            break;\r\n        case 5: // Advance\r\n            return <i className=\"ri-search-line icon-6\"></i>\r\n            break;\r\n        case 9: // Text\r\n            return <i className=\"ri-text icon-6\"></i>\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\nclass Twitter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hashtag: '',\r\n            handle: '',\r\n            mentions: '',\r\n            advanced: '',\r\n            userName: '',\r\n            listName: '',\r\n            favorites: '',\r\n            userId: null,\r\n            listId: null,\r\n            loading: false,\r\n            multiPhoto: true,\r\n            excludeRetweets: true,\r\n            excludeReplies: true,\r\n            connectedAccount: null,\r\n            moderation: false,\r\n            error: false,\r\n            handleError: false,\r\n            mentionError: false,\r\n            advanceError: false,\r\n            favoriteError: false,\r\n            showListError: false,\r\n            listNameError: false,\r\n            isAuthRequired: props.isAuthRequired,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\r\n    onListNameChange = (value) => this.setState({ userName: value, showListError: false })\r\n    onListIdChange = (listId, userId) => this.setState({ listId: listId, userId: userId })\r\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\r\n\r\n    addTwitterAccount = () => {\r\n        const { networkData } = this.props;\r\n        showAddAccountAlert(networkData);\r\n    }\r\n\r\n\r\n    createFeed = (connectAccountId) => {\r\n        const { hashtag, handle, excludeRetweets, excludeReplies, multiPhoto, userId, listId, listName, userName, advanced, mentions, favorites, moderation, selectedFilterId, isAuthRequired } = this.state;\r\n        const { collection, networkId, history } = this.props;\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n\r\n            })\r\n\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: networkId,\r\n            filter: selectedFilterId,\r\n            moderation: moderation ? 1 : 0,\r\n            excludeRetweet: excludeRetweets ? 1 : 0,\r\n            excludeReplies: excludeReplies ? 1 : 0,\r\n            multiplePhoto: multiPhoto ? 1 : 0,\r\n            authRequire: isAuthRequired ? 1 : 0,\r\n            accountId: connectAccountId\r\n        }\r\n\r\n        if (selectedFilterId == 2) {\r\n            obj['feedText'] = hashtag\r\n        } else if (selectedFilterId == 1) {\r\n            obj['feedText'] = handle\r\n        } else if (selectedFilterId == 7) {\r\n            obj['feedText'] = mentions\r\n        } else if (selectedFilterId == 4) {\r\n            obj['feedText'] = favorites\r\n        } else if (selectedFilterId == 5) {\r\n            obj['feedText'] = advanced\r\n        } else if (selectedFilterId == 3) {\r\n            obj['feedText'] = userName;\r\n            obj['listname'] = listName;\r\n            obj['userId'] = userId;\r\n            obj['listId'] = listId;\r\n        }\r\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\r\n\r\n        createFeedAction(obj, networkId, () => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false, isAuthRequired: true });\r\n            this.props.closeAddFeed();\r\n            history('/assets');\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { hashtag, advanced, handle, userName, listName, favorites, mentions, selectedFilterTab, isAuthRequired } = this.state;\r\n        const { accountId } = this.props;\r\n\r\n\r\n        if (selectedFilterTab == 'hashtag' && hashtag == '') {\r\n            this.setState({ error: true });\r\n        } else if (selectedFilterTab == 'handle' && handle == '') {\r\n            this.setState({ handleError: true });\r\n        } else if (selectedFilterTab == 'mentions' && mentions == '') {\r\n            this.setState({ mentionError: true });\r\n        } else if (selectedFilterTab == 'favorites' && favorites == '') {\r\n            this.setState({ favoriteError: true });\r\n        } else if (selectedFilterTab == 'advanced' && advanced == '') {\r\n            this.setState({ advanceError: true });\r\n        } else if (selectedFilterTab == 'list' && userName == '') {\r\n            this.setState({ showListError: true });\r\n        } else if (selectedFilterTab == 'list' && listName == '') {\r\n            this.setState({ listNameError: true });\r\n        } else {\r\n\r\n            if (isAuthRequired) {\r\n                if (accountId == null) {\r\n                    this.addTwitterAccount();\r\n                } else {\r\n                    this.createFeed(accountId);\r\n                }\r\n            } else {\r\n                this.createFeed(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n\r\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    render() {\r\n        const { selectedFilterTab, loading } = this.state;\r\n        const { filterTabs, networkId, connectedAccountList } = this.props;\r\n\r\n        return <>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                <div className=\"addSourceTabs\">\r\n                    <div className=\"w-100\">\r\n                        <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                        <div className=\"card card-custom gutter-b\">\r\n                            <div className=\"card-body px-xxl-5\">\r\n                                <div className=\"\">\r\n\r\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                        {\r\n                                            filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                const { feedName, feedtype, filter } = filterTab;\r\n                                                return <Nav.Item className=\"p-1\" key={index}>\r\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                            <FeedIcon iconId={filter} />\r\n                                                        </span>\r\n                                                        {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\r\n                                                    </Nav.Link>\r\n                                                </Nav.Item>\r\n                                            })\r\n                                        }\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                        <div className=\"card card-custom gutter-b\">\r\n                            <div className=\"card-body px-xxl-5\">\r\n                                <div className=\"\">\r\n                                    <Tab.Content>\r\n                                        {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\r\n                                            <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\r\n                                                <TwitterTab\r\n                                                    networkId={networkId}\r\n                                                    tab={filter.feedtype}\r\n                                                    filter={filter.filter}\r\n                                                    {...this.state}\r\n                                                    connectedAccountList={connectedAccountList}\r\n                                                    onListIdChange={this.onListIdChange}\r\n                                                    onConnectedAccountChange={this.onConnectedAccountChange}\r\n                                                    onListNameChange={this.onListNameChange}\r\n                                                    onExcRetweetChange={this.onCheckHandler}\r\n                                                    onChangeHandler={this.onChangeHandler}\r\n                                                    onCheckHandler={this.onCheckHandler}\r\n                                                />\r\n                                            </Tab.Pane>\r\n                                        )) : null}\r\n                                    </Tab.Content>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Tab.Container>\r\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Twitter)","import React, { useState } from \"react\";\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\n\r\nexport default function PlaceDropDown(props) {\r\n    const [address, setAddress] = useState(\"\");\r\n    const [list, setList] = useState(false);\r\n\r\n    const handleChange = (e) => { setAddress(e); setList(true); props.onFieldTextChange(\"\", \"\") };\r\n    const handleSelect = (e) => { };\r\n\r\n    const handleSelect1 = (v1, v2, v3) => {\r\n        props.onFieldTextChange(v1, v2, v3)\r\n        setAddress(v1);\r\n        setList(false)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <PlacesAutocomplete\r\n            value={address}\r\n            onChange={handleChange}\r\n            onSelect={handleSelect}\r\n        >\r\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n\r\n                <div className=\"position-relative w-100\">\r\n                    <i className=\"ri-map-pin-2-line icon-5 text-gray-500 position-absolute bottom-0 start-0 translate-middle-x mx-5 my-3\"></i>\r\n                    {loading ? <div className=\"spinner spinner-gray\" style={{ top: -22 }}></div> : null}\r\n                    <input {...getInputProps({ placeholder: \"Type address\" })} className={`form-control form-control-lg fw-bold px-9 ${props.error ? 'is-invalid' : ''}`} />\r\n                    {list && address.length > 0 ?\r\n                        <Dropdown className={`w-100`} show>\r\n                            <Dropdown.Menu className=\"w-100\">\r\n                                <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n                                    {suggestions.map(suggestion => {\r\n                                        return (<Dropdown.Item className=\"text-break\" {...getSuggestionItemProps(suggestion)} onClick={() => handleSelect1(suggestion.description, suggestion.placeId, suggestion.formattedSuggestion.mainText)} style={{ whiteSpace: 'normal' }}> {suggestion.description}</Dropdown.Item>);\r\n                                    })}\r\n                                </PerfectScrollbar>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        : ''}\r\n                </div>\r\n            )}\r\n        </PlacesAutocomplete>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport { baseUrl } from \"../../../../../Assets/AssetsHelper\";\r\n\r\nexport default class GoogleTab extends Component {\r\n    state = { accountOption: [], parentOption: [] }\r\n\r\n    componentDidMount() {\r\n        this.getChildAccountData()\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.connectedAcc !== this.state.parentOption) {\r\n            this.getChildAccountData()\r\n        }\r\n    }\r\n    getChildAccountData = () => {\r\n        const { connectedAcc } = this.props;\r\n        if (connectedAcc && connectedAcc.length) {\r\n            var data = connectedAcc.map((f, i) => {\r\n                return ({ 'label': f.ConnectedAccounts.accountName, 'value': f.ConnectedAccounts.id })\r\n            })\r\n            this.setState((prev) => ({ ...prev, parentOption: data }));\r\n        }\r\n\r\n    }\r\n\r\n    onAccountIdChange = (value) => {\r\n        const { childAcc } = this.props\r\n        if (value == 0) {\r\n            this.props.onAccountChildChange(value)\r\n        }\r\n        else {\r\n            var mainAccountId = childAcc.filter(f => f.ConnectedAccounts.id == value)\r\n            this.props.onAccountChildChange(value)\r\n            this.props.onConnectedAccountChange(mainAccountId[0].ConnectedAccounts.parent)\r\n        }\r\n    }\r\n\r\n    onParentSelected = (value) => {\r\n        const { connectedAcc } = this.props\r\n        this.props.onConnectedAccountChange(value);\r\n        let childAcccounts = [];\r\n        if (value !== 0) {\r\n            const selectedAcc = connectedAcc.filter(account => account.ConnectedAccounts.id === value);\r\n            childAcccounts = selectedAcc[0].ConnectedAccounts.child.map((f) => {\r\n                return ({ 'label': f.ConnectedAccounts.value2, 'value': f.ConnectedAccounts.id })\r\n            });\r\n            childAcccounts.push({ 'label': \"Other\", 'value': 0 });\r\n        }\r\n\r\n        this.setState((prev) => ({ ...prev, accountOption: childAcccounts }));\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { otherAccount, connetedAccount, accountChild, onotherAccount,onAddAccount } = this.props\r\n        const { accountOption, parentOption } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <label>Select Account</label>\r\n                        <Select className=\"selectpicker addFeedGoogle\" options={parentOption} classNamePrefix=\"selectpicker\" defaultValue={connetedAccount} onChange={(e) => this.onParentSelected(e.value)} />\r\n                        <br />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <label>Select Place</label>\r\n                        <Select className=\"selectpicker addFeedGoogle\" options={connetedAccount ? accountOption : []} classNamePrefix=\"selectpicker\" defaultValue={accountChild} onChange={(e) => { this.onAccountIdChange(e.value); onotherAccount(e.value == 0 ? true : false) }} />\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {otherAccount ?\r\n                    <div className=\"otherSection py-2\">\r\n                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\">\r\n                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                <img src={baseUrl(\"media/icons/social-icons/google.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                            </span>\r\n                            <div className=\"overflow-hidden signIn_txt px-5\">\r\n                                <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Google</span>\r\n                            </div>\r\n                        </button>\r\n                    </div> \r\n                    : null}\r\n\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\r\nimport CheckBoxField from '../Elements/CheckboxField';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { addUserAccount, createFeedAction, fetchConnectedAccounts } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport { connect } from 'react-redux';\r\nimport PlaceDropDown from './components/PlaceDropDown';\r\nimport InfoSection from '../Elements/InfoSection';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport GoogleTab from './components/GoogleTab';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nclass GoogleFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            feedText: '',\r\n            placeName: null,\r\n            placeId: null,\r\n            moderation: false,\r\n            error: false,\r\n            loading: false,\r\n            connetedAccount: 0,\r\n            accountChild: 0,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype,\r\n            otherAccount: false\r\n        }\r\n    }\r\n\r\n    onFieldTextChange = (text, id, placeName) => this.setState({ feedText: text, placeId: id, placeName: placeName, error: false })\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n    onotherAccount = (value) => this.setState({ otherAccount: value });\r\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\r\n    onAccountChildChange = (value) => this.setState({ accountChild: value })\r\n\r\n    addGoogleAccount = () => {\r\n        const { networkData } = this.props;\r\n        showAddAccountAlert(networkData);\r\n    }\r\n\r\n\r\n    createFeed = () => {\r\n        const { feedText, placeId, connetedAccount, accountChild, placeName, moderation, selectedFilterId } = this.state;\r\n        const { collection, networkId, history } = this.props;\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n            })\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: networkId,\r\n            filter: selectedFilterId,\r\n            moderation: moderation ? 1 : 0,\r\n            connetedAccount: 0,\r\n            account: 0\r\n        }\r\n        if (selectedFilterId == 33) {\r\n            obj['field33'] = feedText;\r\n            obj['field33placeId'] = placeId\r\n            obj['field33placeName'] = placeName\r\n        } else if (selectedFilterId == 29) {\r\n            obj['field33'] = '';\r\n            obj['field33placeId'] = '';\r\n            obj['field33placeName'] = '';\r\n            obj['connetedAccount'] = connetedAccount;\r\n            obj['account'] = accountChild;\r\n        }\r\n\r\n        this.setState({ error: false, topicError: false, loading: true })\r\n        createFeedAction(obj, networkId, () => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false });\r\n            this.props.closeAddFeed();\r\n            history('/assets');\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { feedText, selectedFilterTab, accountChild, connetedAccount } = this.state;\r\n\r\n        if (selectedFilterTab == 'Places' && feedText == '') {\r\n            this.setState({ error: true });\r\n        } else {\r\n            if (selectedFilterTab == 'My Places' && (connetedAccount == 0 || accountChild == 0)) {\r\n                toast.error('Need to connect google account', { autoClose: 3000 });\r\n                return;\r\n            }\r\n\r\n            this.createFeed();\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n\r\n        addUserAccount(networkId, data, () => this.props.getConnectedAccount(networkId));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 33: // Place\r\n                return <i className=\"ri-map-pin-2-line icon-6\"></i>\r\n                break;\r\n            case 29: // My Place\r\n                return <i className=\"ri-map-pin-user-fill icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs, connectedAccountList } = this.props;\r\n        const { connetedAccount, otherAccount, accountChild, moderation, error, loading, selectedFilterTab } = this.state;\r\n        var childAcc = connectedAccountList && connectedAccountList[0] && connectedAccountList[0].ConnectedAccounts && connectedAccountList[0].ConnectedAccounts.child && connectedAccountList[0].ConnectedAccounts.child.length ? connectedAccountList[0].ConnectedAccounts.child : ''\r\n\r\n        return (\r\n            <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        {filterTabs && Object.keys(filterTabs).length > 1 ?\r\n                            <div className=\"w-100\">\r\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                                <div className=\"card card-custom gutter-b\">\r\n                                    <div className=\"card-body px-xxl-5\">\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                const { feedName, feedtype, filter } = filterTab;\r\n                                                return <Nav.Item className=\"p-1\" key={index}>\r\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                            {this.feedIcon(filter)}\r\n                                                        </span>\r\n                                                        {capitalizeFirstLetter(feedtype)}\r\n                                                    </Nav.Link>\r\n                                                </Nav.Item>\r\n                                            })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            : null}\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            <Tab.Pane eventKey={\"Places\"}>\r\n                                                <div className=\"mb-2 mb-xl-3\">\r\n                                                    <div className={`${error ? 'is-invalid' : ''}`}>\r\n                                                        <PlaceDropDown onLatlanChange={this.onLatlanChange} onFieldTextChange={this.onFieldTextChange} error={error} />\r\n                                                    </div>\r\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                                                </div>\r\n                                                <InfoSection text={'Initially the latest 5 user reviews of place will be aggregated after which all the upcoming reviews will be aggregated.'} />\r\n                                            </Tab.Pane>\r\n                                            <Tab.Pane eventKey={\"My Places\"}>\r\n                                                {connectedAccountList && connectedAccountList.length > 0 ?\r\n                                                    <GoogleTab\r\n                                                        onAddAccount={this.addGoogleAccount}\r\n                                                        connectedAcc={connectedAccountList}\r\n                                                        otherAccount={otherAccount}\r\n                                                        connetedAccount={connetedAccount}\r\n                                                        accountChild={accountChild}\r\n                                                        onotherAccount={this.onotherAccount}\r\n                                                        onAccountChildChange={this.onAccountChildChange}\r\n                                                        onConnectedAccountChange={this.onConnectedAccountChange}\r\n                                                        childAcc={childAcc}\r\n                                                    />\r\n\r\n                                                    :\r\n                                                    <div className=\"otherSection py-2 mb-2\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={this.addGoogleAccount}>\r\n                                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                                                <img src={baseUrl(\"media/icons/social-icons/google.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                                                            </span>\r\n                                                            <div className=\"overflow-hidden signIn_txt px-5\">\r\n                                                                <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Google</span>\r\n                                                            </div>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                }\r\n                                                {/* {!otherAccount ? <div className=\"pb-2\">\r\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\r\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                                                        </CheckBoxField>\r\n                                                    </label>\r\n                                                </div> : null} */}\r\n\r\n                                                <InfoSection text={'Initially latest 50 user reviews will be aggregated after which all the upcoming reviews will be aggregated.'} />\r\n                                            </Tab.Pane>\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container >\r\n                <SubmitFeedRequest hideBtn={otherAccount} supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getConnectedAccount: (id) => dispatch(fetchConnectedAccounts(id)),\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleFeed)","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\nimport InputField from '../../Elements/InputField';\r\nimport CheckBoxField from '../../Elements/CheckboxField';\r\n\r\nexport default class SlackTab extends Component {\r\n    componentDidMount() {\r\n        const { accounts } = this.props;\r\n\r\n        if (accounts && accounts.length > 0) {\r\n            this.props.onSelect(accounts[0].ConnectedAccounts.id);\r\n        }\r\n    }\r\n    render() {\r\n        const { accounts, tab, moderation, onCheckHandler, onSelect, error, keyword, handleInput, selectAccount, channelError } = this.props;\r\n\r\n        const options = accounts ? accounts.map((account) => ({ label: account.ConnectedAccounts.value2, value: account.ConnectedAccounts.id })) : [];\r\n        return (<div className=\"row gx-3\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"mb-2 mb-xl-3\">\r\n                            <span className={`${channelError? 'is-invalid':''}`}>\r\n                            <Select className=\"selectpicker selectpicker-lg\" menuPlacement=\"auto\" classNamePrefix=\"selectpicker\" onChange={(e) => onSelect(e.value)} options={options} value={options[options.findIndex(i => i.value == selectAccount)]} />\r\n                            </span>\r\n                            {channelError && <span className=\"invalid-feedback\">This field is required</span>}\r\n                        </div>\r\n                    </div>\r\n                    {tab == \"ChannelKeyword\" ?\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"mb-2 mb-xl-3\">\r\n                            <div className=\"position-relative w-100 mb-3\">\r\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                    <i className=\"ri-text icon-5\"></i>\r\n                                </span>\r\n                                <InputField name={\"keyword\"} className=\"form-control form-control-lg fw-bolder px-9\" placeholder=\"Enter keyword\" value={keyword} onChangeHandler={handleInput} />\r\n                                {error && <span className=\"invalid-feedback\">This field is required</span>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : null}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\r\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\r\nimport { addUserAccount, createFeedAction, fetchConnectedAccounts } from '../../../../Services/Actions/addFeedAction';\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport { connect } from 'react-redux';\r\nimport SlackTab from './components/SlackTab';\r\nimport { toast } from 'react-toastify';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nclass SlackFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            keyword: '',\r\n            error: false,\r\n            selectedAcc: null,\r\n            moderation: false,\r\n            channelError: false,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        this.setState({ selectedAcc: e, channelError: false });\r\n    }\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false });\r\n    }\r\n\r\n    onCheckHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.checked });\r\n    }\r\n\r\n\r\n    addSlackAccount = () => {\r\n        const { networkData } = this.props;\r\n        showAddAccountAlert(networkData);\r\n    }\r\n\r\n\r\n    createFeed = () => {\r\n        const { selectedAcc, moderation, keyword, selectedFilterId } = this.state;\r\n        const { collection, networkId, connectedAccountList } = this.props;\r\n        const parentAcc = connectedAccountList && connectedAccountList.length > 0 ? connectedAccountList[0].ConnectedAccounts.id : '';\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n            })\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: networkId,\r\n            filter: selectedFilterId,\r\n            moderation: moderation ? 1 : 0,\r\n            connetedAccount: parentAcc,\r\n            account: selectedAcc,\r\n        }\r\n\r\n        if (selectedFilterId == 2) {\r\n            obj['slackkeyword'] = '';\r\n        } else if (selectedFilterId == 1) {\r\n            obj['slackkeyword'] = keyword\r\n        }\r\n\r\n        this.setState({ error: false, topicError: false, loading: true })\r\n        createFeedAction(obj, networkId, (getFeedId) => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { keyword, selectedFilterTab, selectedAcc } = this.state;\r\n\r\n        if (selectedFilterTab == 'Channel' && selectedAcc == null) {\r\n            this.setState({ channelError: true });\r\n        } else if (selectedFilterTab == 'Channel & Keyword' && selectedAcc == null) {\r\n            toast.error('Need to connect slack account', { autoClose: 3000 });\r\n        } else if (selectedFilterTab == 'Channel & Keyword' && keyword == '') {\r\n            this.setState({ error: true });\r\n        } else {\r\n            this.createFeed();\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n\r\n        addUserAccount(networkId, data, () => this.props.getConnectedAccount(networkId));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 2: // Link\r\n                return <i className=\"ri-link icon-6\"></i>\r\n                break;\r\n            case 1: // Link\r\n                return <i className=\"ri-link icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { filterTabs, connectedAccountList } = this.props;\r\n        const { keyword, selectedAcc, moderation, channelError, error, loading, selectedFilterTab } = this.state;\r\n        const connectedAccounts = (connectedAccountList && connectedAccountList.length > 0) ? connectedAccountList[0].ConnectedAccounts : [];\r\n        return (\r\n            <>\r\n                {!(connectedAccountList && connectedAccountList.length > 0) ?\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Connect Your Slack Account</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"py-2\">\r\n                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={() => this.addSlackAccount()}>\r\n                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                                <img src={baseUrl(\"media/icons/social-icons/slack.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                                            </span>\r\n                                            <div className=\"overflow-hidden signIn_txt px-5\">\r\n                                                <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Slack</span>\r\n                                            </div>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                        <div className=\"addSourceTabs\">\r\n                            <div className=\"w-100\">\r\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                                <div className=\"card card-custom gutter-b\">\r\n                                    <div className=\"card-body px-xxl-5\">\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {\r\n                                                filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                    const { feedName, feedtype, filter } = filterTab;\r\n                                                    return <Nav.Item className=\"p-1\" key={index}>\r\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                                {this.feedIcon(filter)}\r\n                                                            </span>\r\n                                                            {capitalizeFirstLetter(feedtype)}\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"w-100\">\r\n                                <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                                <div className=\"card card-custom gutter-b\">\r\n                                    <div className=\"card-body px-xxl-5\">\r\n                                        <div className=\"\">\r\n                                            <Tab.Content>\r\n                                                <Tab.Pane eventKey={\"Channel\"}>\r\n                                                    <SlackTab accounts={connectedAccounts.child} tab={'Channel'} moderation={moderation} onCheckHandler={this.onCheckHandler} error={error} keyword={keyword} handleInput={this.onChangeHandler} onSelect={this.handleSelect} selectAccount={selectedAcc} channelError={channelError} />\r\n                                                </Tab.Pane>\r\n                                                <Tab.Pane eventKey={\"Channel & Keyword\"}>\r\n                                                    <SlackTab accounts={connectedAccounts.child} tab={'ChannelKeyword'} moderation={moderation} onCheckHandler={this.onCheckHandler} error={error} keyword={keyword} handleInput={this.onChangeHandler} onSelect={this.handleSelect} selectAccount={selectedAcc} channelError={channelError} />\r\n                                                </Tab.Pane>\r\n                                            </Tab.Content>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Tab.Container>\r\n                }\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getConnectedAccount: (id) => dispatch(fetchConnectedAccounts(id)),\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SlackFeed)","import React, { Component } from 'react';\r\nimport AccountPicker from '../../Elements/AccountPicker';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport CheckBoxField from '../../Elements/CheckboxField';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { autoComplete } from '../../../../../Services/Actions/addFeedAction';\r\nimport { debounce } from '../../../../../Services/Utils/utils';\r\nimport Select from 'react-select';\r\n\r\nclass FacebookTab extends Component {\r\n    state = {\r\n        handles: [],\r\n        allAccounts: [{ ConnectedAccounts: { id: 0, value2: 'loading...' } }],\r\n        openSelect: false,\r\n        selectValue: {},\r\n        formatedList: [],\r\n        allConnectAcc: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAccounts();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.connectedAcc) {\r\n            if (this.state.allConnectAcc.length != nextProps.connectedAcc.length) {\r\n                this.getAccounts();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAccounts = () => {\r\n        const { connectedAcc, onAccountChange } = this.props\r\n        var allAccounts = []\r\n        if (connectedAcc && connectedAcc.length > 0) {\r\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\r\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\r\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child]\r\n                }\r\n                else {\r\n                    this.setState({ allAccounts: [] })\r\n                }\r\n            })\r\n\r\n            if (allAccounts && allAccounts.length > 0) {\r\n                onAccountChange(allAccounts[0].ConnectedAccounts.id, allAccounts[0].ConnectedAccounts.parent);\r\n                const formatedOption = this.formatOption(allAccounts);\r\n                this.setState({ allAccounts, allConnectAcc: connectedAcc, formatedList: formatedOption, selectValue: formatedOption[0] });\r\n            }\r\n        } else {\r\n            onAccountChange(null)\r\n            this.setState({ allAccounts: [] })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    autoComplete = debounce((value) => {\r\n        const obj = { networkId: 3, handle: value }\r\n        if (value && value.length > 2) {\r\n            autoComplete(obj).then(res => {\r\n                const { responseData, response_code } = res.data;\r\n                if (response_code == 200) {\r\n                    this.setState({ handles: responseData.data, showHandle: responseData.data.length > 0 })\r\n                }\r\n                else this.setState({ handles: [], lists: [], showHandle: false })\r\n            })\r\n        } else {\r\n            this.setState({ handles: [], lists: [], showHandle: false })\r\n        }\r\n    });\r\n\r\n    handleTextChange = value => {\r\n        this.props.onTextChange(value)\r\n        this.autoComplete(value);\r\n    }\r\n\r\n    onSelectHandle = (item) => {\r\n        const { onTextChange, tab } = this.props\r\n        onTextChange(item.link)\r\n        document.querySelector(`#${tab}-text`).value = item.link\r\n        this.setState({ showHandle: false })\r\n    }\r\n\r\n    onAccChange = (selectedOption) => {\r\n        const { onAccountChange } = this.props\r\n        const { allAccounts } = this.state;\r\n        const { value } = selectedOption;\r\n\r\n        var parent = null;\r\n        if (allAccounts && allAccounts.length) {\r\n            parent = allAccounts.find(acc => acc.ConnectedAccounts.id == value);\r\n\r\n            if (parent) {\r\n                parent = parent.ConnectedAccounts.parent\r\n            }\r\n        }\r\n        this.setState({ selectValue: selectedOption });\r\n        onAccountChange(value, parent)\r\n    }\r\n\r\n\r\n    formatOption = (lists) => {\r\n        const formatedList = lists.map((item) => ({ label: item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\r\n        if (formatedList && formatedList.length > 0) {\r\n            return [...formatedList, { label: 'other', value: 0 }];\r\n        }\r\n        return []\r\n    }\r\n\r\n    render() {\r\n        const { tab, connectedAcc, text, onTextChange, onAlbumFieldChange, errorMsg, albumUrl, albumUrlError, onAddAccount, album, feedIcon, onCheckHandler, networkId, onAlbumChange, connetedAccount, onConnectedAccountChange, authenticate, onAuthenticateChange, error } = this.props\r\n        const { handles, showHandle, formatedList, allAccounts, selectValue } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {tab == 'Page' || tab == \"Albums\" ?\r\n                    <div className=\"row\">\r\n                        {tab == 'Albums' ?\r\n                            <div className=\"col-sm-4\">\r\n                                <div className=\"mb-3\">\r\n                                    <Select className=\"selectpicker selectpicker-lg\" options={[{ label: 'Single Album', value: '65' }, { label: 'All Facebook Page Albums', value: '67' }]} classNamePrefix=\"selectpicker\" defaultValue={album} onChange={(e) => onAlbumChange(e)} />\r\n                                </div>\r\n                            </div> : null}\r\n                        <div className={tab == \"Albums\" ? \"col-sm-8\" : \"col-sm-12\"}>\r\n                            <div className=\"position-relative w-100 mb-3\">\r\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                                    {feedIcon(8)}\r\n                                </span>\r\n                                <input autoComplete=\"off\" data-limit=\"100\" placeholder={`Enter ${tab == \"Page\"?\"Page\":'Album'} URL`} value={tab == \"Page\" ? text : albumUrl} className={`form-control form-control-lg fw-bolder ps-9${(tab == \"Page\" && error) || (tab == \"Albums\" && albumUrlError) ? ' is-invalid' : ''}`} id={`${tab}-text`} onChange={(e) => tab == \"Page\" ? this.handleTextChange(e.target.value) : onAlbumFieldChange(e.target.value)} type=\"text\" />\r\n                                <div className=\"handlelist\" id=\"\" style={showHandle ? { display: \"block\" } : { display: \"none\" }}>\r\n                                    {handles && handles.length > 0 ? <Dropdown className={`w-100`} show>\r\n                                        <Dropdown.Menu className=\"w-100\">\r\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n                                                <div className=\"feedDropdown\">\r\n                                                    {handles.map(item => {\r\n                                                        return (<Dropdown.Item className=\"text-break flex-column justify-content-start align-items-start\" key={item.id} onClick={() => this.onSelectHandle(item)} style={{ whiteSpace: 'normal' }}>\r\n                                                            <p className=\"mb-1 fs-9 fw-bold\">{item.name}</p>\r\n                                                            <span className=\"fs-10\">{item.link}</span>\r\n                                                        </Dropdown.Item>);\r\n                                                    })}\r\n                                                </div>\r\n                                            </PerfectScrollbar>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown> : null}\r\n                                </div>\r\n                                {(tab == \"Page\" && error) || (tab == \"Albums\" && albumUrlError) ? <span className=\"invalid-feedback\">{errorMsg}</span> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    tab == \"My Profile Posts\"\r\n                        ?\r\n                        !(connectedAcc && connectedAcc.length > 0) ? <div className=\"otherSection py-2 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\r\n                                <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                    <img src={baseUrl(\"media/icons/social-icons/facebook.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                                </span>\r\n                                <div className=\"overflow-hidden signIn_txt px-5\">\r\n                                    <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Facebook</span>\r\n                                </div>\r\n                            </button>\r\n                        </div> : null\r\n                        :\r\n                        connectedAcc && connectedAcc.length > 0 && allAccounts && allAccounts.length > 0 ?\r\n                            <div className=\"mb-3\">\r\n                                <Select className=\"selectpicker selectpicker-lg\" options={formatedList} classNamePrefix=\"selectpicker\" value={selectValue} onChange={(e) => this.onAccChange(e)} />\r\n                            </div>\r\n                            :\r\n                            <div className=\"otherSection py-2 mb-2\">\r\n                                <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\r\n                                    <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                        <img src={baseUrl(\"media/icons/social-icons/facebook.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                                    </span>\r\n                                    <div className=\"overflow-hidden signIn_txt px-5\">\r\n                                        <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Facebook</span>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                }\r\n                {/* <div className=\"hideforBSearch\">\r\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                        <CheckBoxField isChecked={moderation} onChangeHandler={onCheckHandler} name={\"moderation\"}>\r\n                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                        </CheckBoxField>\r\n                    </label>\r\n                </div>  */}\r\n                {(connectedAcc && connectedAcc.length > 0) ? <div style={{ display: ![\"Page Reviews\", \"Page Mentions\"].includes(tab) ? 'block' : \"none\" }}><AccountPicker connectedAcc={connectedAcc} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} /></div> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FacebookTab;\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { GET_NETWORK_ICON, capitalizeFirstLetter } from '../../../../Services/Utils/utils'\r\n\r\nclass ConnectAccount extends Component {\r\n    state = {\r\n        selectedAcc: null,\r\n        accounts: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { accountList } = this.props\r\n        this.setState({ accounts: accountList })\r\n    }\r\n\r\n    createFeed = () => {\r\n        const { selectedAcc } = this.state;\r\n        const { accountList, filterId, createFeedFromPage } = this.props;\r\n        createFeedFromPage(![1, 67, 65, 26].includes(filterId) ? selectedAcc.id : accountList[0].parent, accountList[0].parent, selectedAcc.value2);\r\n    }\r\n\r\n    render() {\r\n        const {loading, networkId, onBack } = this.props\r\n        const { accounts } = this.state;\r\n\r\n        return (\r\n            <div className=\"action\" id=\"feedsinstagram\">\r\n                <div className=\"d-flex flex-column-fluid main_content connect_your_account\">\r\n                    <div className=\"container py-18\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"middle_content\">\r\n                                    <div className=\"small_container\">\r\n                                        <div className=\"instaFacebookAuth card card-custom card-body\">\r\n                                            <div className=\"pt-5\">\r\n                                                <div className=\"d-flex flex-wrap align-items-center mb-6\">\r\n                                                    <div className=\"symbol symbol-60 flex-shrink-0 me-4\">\r\n                                                        <div className=\"symbol-label\" style={{ backgroundImage: `url(${baseUrl(`media/icons/square-icons/${GET_NETWORK_ICON(networkId)}.svg`)})` }}>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <h3 className=\"d-flex flex-column flex-grow-1 my-lg-0 my-2 pe-3\">\r\n                                                        <span className=\"card-label font-weight-bolder text-dark\">Connect Profile</span>\r\n                                                        <span className=\"mt-1 font-weight-bold font-size-sm\">Select the {capitalizeFirstLetter(GET_NETWORK_ICON(networkId))} Profile You’d Like to Connect</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"noLoader\" id=\"FeedInstagramForm\">\r\n                                                <div className=\"instaConnectthroughfacebook_radio_list md-radio-list\">\r\n                                                    <div className=\"row\">\r\n                                                        {accounts && accounts.length ? accounts.map((acc, index) => (\r\n                                                            <div className=\"col-md-6\" key={acc.id}>\r\n                                                                <label\r\n                                                                    // htmlFor={`user${acc.accountId}`}\r\n                                                                    id={`user-${acc.id}`} className=\"user_row__ w-100 border-bottom p-3 m-0\">\r\n                                                                    <div className=\"d-flex flex-wrap align-items-center w-100\">\r\n                                                                        <span className={`symbol symbol-lg-45 symbol-30 random_color-${index + 1} symbol-circle me-4`}>\r\n                                                                            <span className=\"symbol-label font-size-h4 font-weight-bold\">{acc.value2[0].toUpperCase()}</span>\r\n                                                                        </span>\r\n                                                                        <div className=\"d-flex flex-column flex-grow-1 pe-3\">\r\n                                                                            <h5 className=\"text-dark-75 font-weight-bolder font-size-lg m-0\">{acc.value2}</h5>\r\n                                                                        </div>\r\n                                                                        <div className=\"d-flex align-items-center py-lg-0 py-2\">\r\n                                                                            <span className=\"option-control\">\r\n                                                                                <span className=\"radio radio-outline radio-primary\">\r\n                                                                                    <input id={`user${acc.id}`} onChange={() => this.setState({ selectedAcc: acc })} className=\"md-radiobtn\" type=\"radio\" name=\"pageSelect\" />\r\n                                                                                    <span></span>\r\n                                                                                </span>\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        )) : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span id=\"feedsFacebookPageerror\" className=\"invalid-feedback\"></span>\r\n                                                <div className=\"d-flex justify-content-end border-top pt-10\">\r\n                                                    <div onClick={onBack} className=\"btn btn-secondary me-4\">Cancel</div>\r\n                                                    <button className={`btn btn-primary ${loading ? 'spinner spinner-right disabled' : ''}`} type=\"submit\" name=\"submit\" style={{ minWidth: \"100px\" }} onClick={() =>this.createFeed()}>Connect to Tagbox</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ConnectAccount\r\n","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from 'react-bootstrap';\r\nimport { VALIDATE_URL, capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\r\nimport { addUserAccount, createFeedAction, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport FacebookTab from \"./components/FacebookTab\";\r\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\r\nimport { toast } from \"react-toastify\";\r\nimport ConnectAccount from \"../Elements/ConnectAccount\";\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\nclass FacebookFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            textField: \"\",\r\n            account: null,\r\n            albumUrl: '',\r\n            errorMsg: 'This field is required',\r\n            error: false,\r\n            albumUrlError: false,\r\n            album: { label: 'Single Album', value: '65' },\r\n            connetedAccount: null,\r\n            accountList: [],\r\n            feedObj: {},\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype\r\n        }\r\n    }\r\n\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n    onTextFieldChange = value => this.setState({ textField: value, error: false })\r\n    onAlbumFieldChange = value => this.setState({ albumUrl: value, albumUrlError: false })\r\n    onAccountChange = (value, parent) => {\r\n        if ([\"Page Reviews\", \"Page Mentions\"].includes(this.state.selectedFilterTab)) {\r\n            if (value == 0) this.props.selectAccount(null)\r\n            else this.props.selectAccount(value)\r\n        }\r\n\r\n        this.setState({ connetedAccount: parent })\r\n        this.setState({ account: value });\r\n    }\r\n\r\n\r\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\r\n    onAlbumChange = value => this.setState({ album: value })\r\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\r\n\r\n    addFacebookAccount = () => {\r\n        const { networkData } = this.props;\r\n        this.setState({ feedObj: this.createFeedPostData() });\r\n        showAddAccountAlert(networkData);\r\n    }\r\n\r\n\r\n    createFeedPostData = () => {\r\n        const { textField, album, connetedAccount, account, albumUrl, moderation, selectedFilterId } = this.state;\r\n        const { collection, networkId } = this.props;\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n\r\n            })\r\n\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: networkId,\r\n            filter: selectedFilterId == 67 ? parseInt(album.value) : selectedFilterId,\r\n            connetedAccount: [62, 55].includes(selectedFilterId) ? connetedAccount : 0,\r\n            account: [62, 55].includes(selectedFilterId) ? account : connetedAccount,\r\n            field: textField,\r\n            onlyReels: 0,\r\n            hashtagIGTV: 0,\r\n            moderation: moderation ? 1 : 0,\r\n        }\r\n        if (selectedFilterId == 67) {\r\n            obj['field'] = albumUrl;\r\n        }\r\n        if (![8, 67].includes(selectedFilterId)) {\r\n            obj['field'] = '';\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n\r\n    createFeed = () => {\r\n\r\n        let obj = this.createFeedPostData();\r\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\r\n        createFeedAction(obj, this.props.networkId, (getFeedId) => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { textField, selectedFilterId, connetedAccount, albumUrl } = this.state;\r\n        const { accountId } = this.props;\r\n\r\n        if ((!textField || textField == \"\") && selectedFilterId == 8) {\r\n            this.setState({ error: true, loading: false, errorMsg: 'This field is required' })\r\n        } else if (selectedFilterId == 8 && !VALIDATE_URL(textField)) {\r\n            this.setState({ error: true, loading: false, errorMsg: 'Please enter valid Page Url' })\r\n        } else if ((!albumUrl || albumUrl == \"\") && selectedFilterId == 67) {\r\n            this.setState({ albumUrlError: true, loading: false, errorMsg: 'This field is required' })\r\n        } else if (selectedFilterId == 67 && !VALIDATE_URL(albumUrl)) {\r\n            this.setState({ albumUrlError: true, loading: false, errorMsg: 'Please enter valid Album Url' })\r\n        } else {\r\n\r\n            if (connetedAccount && accountId) {\r\n                this.createFeed();\r\n            } else {\r\n                this.addFacebookAccount();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    createFeedFromPage = (accId, parentId, name) => {\r\n        let { feedObj } = this.state;\r\n        const { networkId, history } = this.props;\r\n\r\n        if (networkId == 3) {\r\n            feedObj = { ...feedObj, account: accId, connetedAccount: parentId }\r\n        }\r\n\r\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\r\n        createFeedAction(feedObj, networkId, (getFeedId) => {\r\n            this.setState({ loading: false });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (feedObj && Object.keys(feedObj).length > 0 && feedObj.collection && feedObj.collection != \"\" && String(feedObj.collection).split(\",\").length == 1) this.props.history(`/assets/${feedObj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n        );\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n        const { selectedFilterId } = this.state;\r\n        //55, 62 filter id \r\n        addUserAccount(networkId, data, [55, 62].includes(selectedFilterId) ? (responseData) => this.setState({ accountList: responseData }) : (connectAccountId) => this.createFeed(connectAccountId), selectedFilterId);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 8: // Page\r\n                return <i className=\"ri-flag-2-line icon-6\"></i>\r\n                break;\r\n            case 67: // Gallery\r\n                return <i className=\"ri-gallery-line icon-6\"></i>\r\n                break;\r\n            case 55: // Review\r\n                return <i className=\"ri-star-line icon-6\"></i>\r\n                break;\r\n            case 62: // Handle\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            case 1: // Account\r\n                return <i className=\"ri-account-circle-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { error, selectedFilterTab, albumUrl, albumUrlError, errorMsg, moderation, loading, connetedAccount, album, textField, account, accountList, selectedFilterId } = this.state;\r\n        const { filterTabs, networkId, connectedAccountList } = this.props;\r\n\r\n        return <>{\r\n            !(accountList && accountList.length > 0) ? <>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                    <div className=\"addSourceTabs\">\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n\r\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                            {\r\n                                                filterTabs && filterTabs.map((filterTab, index) => {\r\n                                                    const { feedName, feedtype, filter } = filterTab;\r\n                                                    return <Nav.Item className=\"p-1\" key={index}>\r\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                                {this.feedIcon(filter)}\r\n                                                            </span>\r\n                                                            {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                })\r\n                                            }\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-100\">\r\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                            <div className=\"card card-custom gutter-b\">\r\n                                <div className=\"card-body px-xxl-5\">\r\n                                    <div className=\"\">\r\n                                        <Tab.Content>\r\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\r\n                                                <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\r\n                                                    <FacebookTab\r\n                                                        onAddAccount={this.addFacebookAccount}\r\n                                                        connetedAccount={connetedAccount}\r\n                                                        onConnectedAccountChange={this.onConnectedAccountChange}\r\n                                                        tab={selectedFilterTab}\r\n                                                        text={textField}\r\n                                                        error={error}\r\n                                                        errorMsg={errorMsg}\r\n                                                        connectedAcc={connectedAccountList}\r\n                                                        onTextChange={this.onTextFieldChange}\r\n                                                        account={account}\r\n                                                        onAccountChange={this.onAccountChange}\r\n                                                        onCheckHandler={this.onCheckHandler}\r\n                                                        onAlbumChange={this.onAlbumChange}\r\n                                                        album={album}\r\n                                                        moderation={moderation}\r\n                                                        albumUrl={albumUrl}\r\n                                                        albumUrlError={albumUrlError}\r\n                                                        onAlbumFieldChange={this.onAlbumFieldChange}\r\n                                                        feedIcon={this.feedIcon}\r\n                                                    />\r\n                                                </Tab.Pane>\r\n                                            )) : null}\r\n                                        </Tab.Content>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Container>\r\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n            </> :\r\n                <ConnectAccount accountList={accountList} loading={loading} networkId={networkId} connectedAcc={connectedAccountList} filterId={selectedFilterId} createFeedFromPage={this.createFeedFromPage} onBack={() => this.setState({ accountList: [] })} />\r\n        }\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectAccount: (id) => dispatch(selectAccount(id)),\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FacebookFeed)","import React, { Component } from 'react';\r\nimport AccountPicker from '../../Elements/AccountPicker';\r\nimport { connect } from 'react-redux';\r\nimport CheckBoxField from '../../Elements/CheckboxField';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { selectAccount } from '../../../../../Services/Actions/addFeedAction';\r\nimport Select from 'react-select';\r\nimport InputField from '../../Elements/InputField';\r\nimport InfoSection from '../../Elements/InfoSection';\r\n\r\nclass InstagramTab extends Component {\r\n    state = {\r\n        allAccounts: [{ ConnectedAccounts: { id: 0, value2: 'loading...' } }],\r\n        selectValue: {},\r\n        formatedList: [],\r\n        personalAccountList: [],\r\n        selectPersonal: {},\r\n        allConnectAcc: [],\r\n        allPersonalAcc: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAccounts();\r\n        this.getPersonalAccounts();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.connectedAcc && nextProps.personalAccount) {\r\n            if (this.state.allConnectAcc.length != nextProps.connectedAcc.length) {\r\n                this.getAccounts();\r\n            }\r\n            if (this.state.allPersonalAcc.length != nextProps.personalAccount.length) {\r\n                this.getPersonalAccounts();\r\n            }\r\n        }\r\n    }\r\n\r\n    getPersonalAccounts = () => {\r\n        const { personalAccount, onPersonalAccChange } = this.props;\r\n        if (personalAccount && personalAccount.length > 0) {\r\n            const formatedOption = this.formatOption(personalAccount, true);\r\n            onPersonalAccChange(formatedOption[0]);\r\n            this.setState({ personalAccountList: formatedOption, allPersonalAcc: personalAccount, selectPersonal: formatedOption[0] });\r\n        }\r\n    }\r\n    getAccounts = () => {\r\n        const { connectedAcc, onSelectedChildAccountChange } = this.props\r\n        var allAccounts = [];\r\n        if (connectedAcc && connectedAcc.length > 0) {\r\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\r\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\r\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child];\r\n                }\r\n                else {\r\n                    this.setState({ allAccounts: [] })\r\n                }\r\n            })\r\n\r\n            if (allAccounts && allAccounts.length > 0) {\r\n                const formatedOption = this.formatOption(allAccounts, false);\r\n                onSelectedChildAccountChange(formatedOption[0]);\r\n                this.setState({ allAccounts, formatedList: formatedOption, allConnectAcc: connectedAcc, selectValue: formatedOption[0] });\r\n            }\r\n        } else {\r\n            onSelectedChildAccountChange(null)\r\n            this.setState({ allAccounts: [] })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onAccountChange = (obj) => {\r\n        const { value } = obj;\r\n        const { onPersonalAccChange, onSelectedChildAccountChange, tab } = this.props;\r\n        if (value && value != \"\") {\r\n            if (tab == 'personal') {\r\n                this.props.selectAccount(value);\r\n                onPersonalAccChange(obj);\r\n            } else {\r\n                this.props.selectAccount(value)\r\n                onSelectedChildAccountChange(obj)\r\n            }\r\n        }\r\n        else {\r\n            this.props.selectAccount(null)\r\n        }\r\n    }\r\n\r\n    formatOption = (lists, isPersonal) => {\r\n        const formatedList = lists.map((item) => ({ label: isPersonal ? item.ConnectedAccounts.accountName : item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\r\n        if (formatedList && formatedList.length > 0) {\r\n            return [...formatedList, { label: 'other', value: 0 }];\r\n        }\r\n        return []\r\n    }\r\n\r\n    getInfo = (tab) => {\r\n        switch (tab) {\r\n            case 'hashtag':\r\n                return 'Instagram only allows posts from the last 24 hours. If there are no recent posts in the 24-hour duration, then the top 50 posts will be aggregated. Also, all your upcoming posts will be aggregated. Posts collected via hashtags will not include any information of the user.';\r\n\r\n            case 'handle':\r\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\r\n\r\n            case 'stories':\r\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\r\n\r\n            case 'stories':\r\n                return 'Initially stories from the last 24 hours will be shown after which all the upcoming stories will be aggregated.';\r\n\r\n            case 'mentions':\r\n                return 'You will only get upcoming posts after creating mentions feed.';\r\n\r\n            case 'tagged':\r\n                return 'Initially the latest 32 tagged posts on Instagram will be aggregated after which all the upcoming tagged posts will be aggregated.';\r\n\r\n            case 'videos':\r\n                return 'Initially 25 videos will be aggregated through handle after which all the upcoming videos will be aggregated.';\r\n\r\n            case 'personal':\r\n                return 'Initially 32 posts uploaded on personal accounts will be aggregated after which all the upcoming posts will be aggregated.';\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { tab, connectedAcc, hashtag, handle, onTextChange, personalAccount, handleError, onAddAccount, album, moderation, onCheckHandler, hashtagPost, excludeVideo, onlyReels, networkId, onAlbumChange, connetedAccount, onConnectedAccountChange, error, feedIcon } = this.props\r\n        const { formatedList, allAccounts, selectValue, personalAccountList, selectPersonal } = this.state\r\n\r\n        return (\r\n            <>\r\n                {tab == 'hashtag' || tab == \"handle\" ?\r\n                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\r\n                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\r\n                            {feedIcon(tab == \"hashtag\" ? 26 : 24)}\r\n                        </span>\r\n                        <InputField name={tab} className={`form-control form-control-lg fw-bold px-9 ${(tab == \"hashtag\" && error) || (tab == \"handle\" && handleError) ? 'is-invalid' : ''}`} placeholder={`Enter user ${tab}`} value={tab == \"hashtag\" ? hashtag : handle} onChangeHandler={onTextChange} />\r\n                        {(tab == \"hashtag\" && error) || (tab == \"handle\" && handleError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\r\n                    </div>\r\n                    :\r\n                    tab == \"personal\" ?\r\n                        <div className=\"form-group text-center mb-6\">\r\n                            {personalAccount && personalAccount.length > 0 && personalAccountList && personalAccountList.length > 0 ?\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group position-relative\">\r\n                                        <Select className=\"selectpicker\" options={personalAccountList} classNamePrefix=\"selectpicker\" defaultValue={selectPersonal} onChange={(e) => this.onAccountChange(e)} />\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"py-2\">\r\n                                    <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\r\n                                        <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                            <img src={baseUrl(\"media/icons/social-icons/instagram.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                                        </span>\r\n                                        <div className=\"overflow-hidden signIn_txt px-5\">\r\n                                            <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Instagram</span>\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        :\r\n                        connectedAcc && connectedAcc.length > 0 && allAccounts && allAccounts.length > 0 ?\r\n                            <div className=\"position-relative w-100 mb-3\">\r\n                                <Select className=\"selectpicker selectpicker-lg\" options={formatedList} classNamePrefix=\"selectpicker\" defaultValue={selectValue} onChange={(e) => this.onAccountChange(e)} />\r\n                            </div>\r\n                            :\r\n                            <div className=\"py-2\">\r\n                                <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\r\n                                    <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\r\n                                        <img src={baseUrl(\"media/icons/social-icons/instagram.svg\")} height={43} width={43} alt=\"facebook\" />\r\n                                    </span>\r\n                                    <div className=\"overflow-hidden signIn_txt px-5\">\r\n                                        <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Instagram</span>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n\r\n                }\r\n                {\r\n                    tab == 'hashtag' ? <div className=\"hideforBSearch\">\r\n                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                            <CheckBoxField isChecked={hashtagPost} onChangeHandler={onCheckHandler} name={\"hashtagPost\"}>\r\n                                <span className=\"form-check-label\">Get posts containing hashtag only in caption.</span>\r\n                            </CheckBoxField>\r\n                        </label>\r\n                    </div> : null\r\n                }\r\n                {\r\n                    tab == \"hashtag\" || tab == 'handle' ?\r\n                        <div className=\"hideforBSearch\">\r\n                            <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                                <CheckBoxField isChecked={excludeVideo} onChangeHandler={onCheckHandler} name={\"excludeVideo\"}>\r\n                                    <span className=\"form-check-label\">Exclude Videos.</span>\r\n                                </CheckBoxField>\r\n                            </label>\r\n                        </div> : null\r\n                }\r\n                {\r\n                    tab != \"stories\" && tab != \"tagged\" ? <div className=\"hideforBSearch\">\r\n                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                            <CheckBoxField isChecked={onlyReels} onChangeHandler={onCheckHandler} name={\"onlyReels\"}>\r\n                                <span className=\"form-check-label\">Only Reels. <label className=\"badge badge-light-danger\">New</label></span>\r\n                            </CheckBoxField>\r\n                        </label>\r\n                    </div> : null\r\n                }\r\n                {/* <div className=\"hideforBSearch\">\r\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\r\n                        <CheckBoxField isChecked={moderation} onChangeHandler={onCheckHandler} name={\"moderation\"}>\r\n                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\r\n                        </CheckBoxField>\r\n                    </label>\r\n                </div> */}\r\n                {(connectedAcc && connectedAcc.length > 0) ? <div style={{ display: [\"hashtag\", \"handle\"].includes(tab) ? 'block' : \"none\" }}> <AccountPicker connectedAcc={connectedAcc} personalAccount={personalAccount} personal={tab == 'personal'} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} /> </div> : null}\r\n                <InfoSection text={this.getInfo(tab)} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectAccount: (id) => dispatch(selectAccount(id)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(InstagramTab)\r\n\r\n\r\n","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Tab } from 'react-bootstrap';\r\nimport { capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\r\nimport { addUserAccount, createFeedAction, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\r\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\r\nimport InstagramFeedTab from \"./components/InstagramTab\";\r\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\r\nimport ConnectAccount from \"../Elements/ConnectAccount\";\r\n\r\n\r\nconst channel = new BroadcastChannel('connect');\r\n\r\nclass InstagramFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hashtag: \"\",\r\n            handle: '',\r\n            error: false,\r\n            hashtagPost: false,\r\n            excludeVideo: false,\r\n            onlyReels: false,\r\n            hanldeError: false,\r\n            account: null,\r\n            connetedAccount: null,\r\n            feedObj: {},\r\n            selectedChildAccount: {},\r\n            personalAcc: {},\r\n            accountList: [],\r\n            isAuthRequired: props.isAuthRequired,\r\n            selectedFilterId: props.filterTabs[0].filter,\r\n            selectedFilterTab: props.filterTabs[0].feedtype,\r\n        }\r\n    }\r\n\r\n\r\n    changeTab = (filterId, feedtype) => {\r\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\r\n    }\r\n\r\n    onChangeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\r\n    }\r\n\r\n    onPersonalAccChange = (value) => this.setState({ personalAcc: value })\r\n    onSelectedChildAccountChange = (value) => this.setState({ selectedChildAccount: value })\r\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\r\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\r\n\r\n    addInstaAccount = () => {\r\n        const { networkData } = this.props;\r\n        this.setState({ feedObj: this.createFeedPostData() });\r\n\r\n        //need to be checked\r\n        if ((this.state.selectedFilterTab == \"personal\")) {\r\n            showAddAccountAlert({ ...networkData, id: 2, name: 'Facebook' });\r\n            return;\r\n        }\r\n\r\n        showAddAccountAlert(networkData);\r\n    }\r\n\r\n\r\n\r\n    createFeedPostData = () => {\r\n        const { onlyReels, excludeVideo, hashtagPost, hashtag, handle, personalAcc, selectedChildAccount, moderation, selectedFilterId } = this.state;\r\n        const { collection, accountId } = this.props;\r\n        var collectionId = []\r\n        if (collection && collection.length > 0) {\r\n            collection.map((iCollection) => {\r\n                collectionId.push(iCollection.value)\r\n            })\r\n        }\r\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\r\n        var obj = {\r\n            ...isCollection,\r\n            networkId: selectedFilterId == 1 ? 2 : 18,\r\n            feedText: [34, 24, 25, 66].includes(selectedFilterId) ? (selectedChildAccount && Object.keys(selectedChildAccount).length > 0) && selectedChildAccount.label : selectedFilterId == 1 ? (personalAcc && Object.keys(personalAcc).length > 0) ? personalAcc.label : \"\" : selectedFilterId == 26 ? hashtag : handle,\r\n            hashtagCaption: hashtagPost ? 1 : 0,\r\n            filter: selectedFilterId,\r\n            accountId: accountId,\r\n            hashtagIGTV: excludeVideo ? 1 : 0,\r\n            onlyReels: onlyReels ? 1 : 0,\r\n            moderation: moderation ? 1 : 0,\r\n        }\r\n\r\n        if ([34, 24, 25, 66].includes(selectedFilterId)) {\r\n            obj['accountId'] = (selectedChildAccount && Object.keys(selectedChildAccount).length > 0) ? selectedChildAccount.value : \"\"\r\n        } else if (selectedFilterId == 1) {\r\n            obj['accountId'] = (personalAcc && Object.keys(personalAcc).length > 0) ? personalAcc.value : \"\"\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\r\n    createFeed = (connectedAccId) => {\r\n        let obj = this.createFeedPostData();\r\n        if (connectedAccId != null) {\r\n            obj = { ...obj, accountId: connectedAccId }\r\n        }\r\n\r\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\r\n\r\n        createFeedAction(obj, obj.networkId, (getFeedId) => {\r\n            this.props.getAllfeeds()\r\n            this.setState({ loading: false, isAuthRequired: true });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (obj && Object.keys(obj).length > 0 && obj.collection && obj.collection != \"\" && String(obj.collection).split(\",\").length == 1) this.props.history(`/assets/${obj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { hashtag, handle, selectedFilterId, isAuthRequired } = this.state;\r\n        const { accountId } = this.props;\r\n        if ((!hashtag || hashtag == \"\") && selectedFilterId == 26) {\r\n            this.setState({ error: true, loading: false })\r\n        } else if ((!handle || handle == \"\") && selectedFilterId == 23) {\r\n            this.setState({ handleError: true, isLoading: false })\r\n        } else {\r\n            if (isAuthRequired) {\r\n                if (accountId) {\r\n                    this.createFeed(null);\r\n                } else {\r\n                    this.addInstaAccount();\r\n                }\r\n            } else {\r\n                if ([23, 26].includes(selectedFilterId)) {\r\n                    this.createFeed(accountId != null ? accountId : 0);\r\n                } else {\r\n                    if (accountId) {\r\n                        this.createFeed(null);\r\n                    } else {\r\n                        this.addInstaAccount();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    readAuthenticationCode = (event) => {\r\n        const response = JSON.parse(event.data);\r\n        const { data, networkId } = response;\r\n        const { selectedFilterId } = this.state;\r\n\r\n        //34, 24, 25, 66 filterId's\r\n        addUserAccount(networkId, data, [34, 24, 25, 66].includes(selectedFilterId) ? (responseData) => this.setState({ accountList: responseData }) : (connectAccountId) => this.createFeed(connectAccountId, true), selectedFilterId);\r\n\r\n    }\r\n\r\n    createFeedFromPage = (accId, parentId, name) => {\r\n        let { feedObj } = this.state;\r\n        const { networkId } = this.props;\r\n\r\n        if (networkId == 18) {\r\n\r\n            if ([34, 24, 25, 66].includes(parseInt(feedObj.filter))) {\r\n                feedObj.feedText = name;\r\n            }\r\n\r\n            feedObj.accountId = parentId;\r\n        }\r\n\r\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\r\n        createFeedAction(feedObj, networkId, (getFeedId) => {\r\n            this.setState({ loading: false, isAuthRequired: true });\r\n            this.props.closeAddFeed();\r\n            if (getFeedId) {\r\n                if (feedObj && Object.keys(feedObj).length > 0 && feedObj.collection && feedObj.collection != \"\" && String(feedObj.collection).split(\",\").length == 1) this.props.history(`/assets/${feedObj.collection}`);\r\n                else {\r\n                    if (String(window.location.href).includes(\"assets\")) {\r\n                        channel.postMessage(JSON.stringify({ type: 'assets-redirect' }));\r\n                    }\r\n                    setTimeout(() => this.props.history(`/assets?feedId=${getFeedId}`), 300)\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\r\n    }\r\n    feedIcon = (iconId) => {\r\n        switch (iconId) {\r\n            case 26: // Hashtag\r\n                return <i className=\"ri-hashtag icon-6\"></i>\r\n                break;\r\n            case 23:\r\n            case 24: // Handle\r\n                return <i className=\"ri-at-line icon-6\"></i>\r\n                break;\r\n            case 34: // Stories\r\n                return <i className=\"ri-donut-chart-line icon-6\"></i>\r\n                break;\r\n            case 25: // tag\r\n                return <i className=\"ri-price-tag-3-line icon-6\"></i>\r\n                break;\r\n            case 66: // Video\r\n                return <i className=\"ri-movie-line icon-6\"></i>\r\n                break;\r\n            case 1: // Account\r\n                return <i className=\"ri-account-circle-line icon-6\"></i>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        const { error, selectedFilterTab, selectedFilterId, hashtag, handle, handleError, moderation, hashtagPost, excludeVideo, onlyReels, loading, connetedAccount, account, accountList } = this.state;\r\n        const { filterTabs, networkId, connectedAccountList, personalAccount } = this.props;\r\n\r\n        return !(accountList && accountList.length > 0) ? <>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\r\n                <div className=\"addSourceTabs\">\r\n                    <div className=\"w-100\">\r\n                        <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\r\n                        <div className=\"card card-custom gutter-b\">\r\n                            <div className=\"card-body px-xxl-5\">\r\n                                <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\r\n                                    {filterTabs && filterTabs.map((filterTab, index) => {\r\n                                        const { feedName, feedtype, filter } = filterTab;\r\n                                        return <Nav.Item className=\"p-1\" key={index}>\r\n                                            <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\r\n                                                <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\r\n                                                    {this.feedIcon(filter)}\r\n                                                </span>\r\n                                                {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\r\n                                            </Nav.Link>\r\n                                        </Nav.Item>\r\n                                    })}\r\n                                </Nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-100\">\r\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\r\n                        <div className=\"card card-custom gutter-b\">\r\n                            <div className=\"card-body px-xxl-5\">\r\n                                <Tab.Content>\r\n                                    {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\r\n                                        <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\r\n                                            <InstagramFeedTab\r\n                                                onAddAccount={this.addInstaAccount}\r\n                                                connetedAccount={connetedAccount}\r\n                                                onConnectedAccountChange={this.onConnectedAccountChange}\r\n                                                tab={selectedFilterTab}\r\n                                                hashtag={hashtag}\r\n                                                error={error}\r\n                                                connectedAcc={connectedAccountList}\r\n                                                onTextChange={this.onChangeHandler}\r\n                                                account={account}\r\n                                                onCheckHandler={this.onCheckHandler}\r\n                                                moderation={moderation}\r\n                                                handle={handle}\r\n                                                handleError={handleError}\r\n                                                personalAccount={personalAccount}\r\n                                                hashtagPost={hashtagPost}\r\n                                                onlyReels={onlyReels}\r\n                                                excludeVideo={excludeVideo}\r\n                                                onPersonalAccChange={this.onPersonalAccChange}\r\n                                                onSelectedChildAccountChange={this.onSelectedChildAccountChange}\r\n                                                feedIcon={this.feedIcon}\r\n                                            />\r\n                                        </Tab.Pane>\r\n                                    )) : null}\r\n                                </Tab.Content>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Tab.Container>\r\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\r\n        </> :\r\n            <ConnectAccount accountList={accountList} loading={loading} networkId={networkId} connectedAcc={connectedAccountList} filterId={selectedFilterId} createFeedFromPage={this.createFeedFromPage} onBack={() => this.setState({ accountList: [] })} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accountId: state.addFeed.selectedAccount,\r\n        connectedAccountList: state.addFeed.connectedAcc,\r\n        personalAccount: state.addFeed.personalAccount,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectAccount: (id) => dispatch(selectAccount(id)),\r\n        getAllfeeds: () => dispatch(getFeedsData()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InstagramFeed)","\r\nimport React, { Component, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Airbnb from '../../../../Feeds/Airbnb/Airbnb';\r\nimport Flickr from '../../../../Feeds/Flickr/Flickr';\r\nimport { getConnectedAccount } from '../../../../../../Services/Actions/addFeedAction';\r\nimport Tumblr from '../../../../Feeds/Tumblr/Tumblr';\r\nimport Pinterest from '../../../../Feeds/Pinterest/Pinterest';\r\nimport Giphy from '../../../../Feeds/Giphy/Giphy';\r\nimport Rss from '../../../../Feeds/Rss/Rss';\r\nimport Yelp from '../../../../Feeds/Yelp/Yelp';\r\nimport LinkedIn from '../../../../Feeds/Linkedin/Linkedin';\r\nimport YoutubeFeed from '../../../../Feeds/Youtube/Youtube';\r\nimport YammerFeed from '../../../../Feeds/Yammer/Yammer';\r\nimport Tiktok from '../../../../Feeds/Tiktok/Tiktok';\r\nimport Vimeo from '../../../../Feeds/Vimeo/Vimeo';\r\nimport TwitterFeed from '../../../../Feeds/Twitter/Twitter';\r\nimport GoogleFeed from '../../../../Feeds/Google/Google';\r\nimport SlackFeed from '../../../../Feeds/Slack/Slack';\r\nimport FacebookFeed from '../../../../Feeds/Facebook/Facebook';\r\nimport Instagram from '../../../../Feeds/Instagram/Instagram';\r\n\r\n\r\n\r\n\r\nconst CreateFeed = (props) => {\r\n    const { filterTabs, selectedNetwork, collection, getConnectedAccount, authRequire, onBack, id, history, editMediaHandleCallback } = props;\r\n    let isAuthRequired = authRequire.includes(id);\r\n    useEffect(() => {\r\n        if (id == 18) {\r\n            getConnectedAccount(2);\r\n        }\r\n        getConnectedAccount(id);\r\n    }, [props.id])\r\n\r\n    switch (id) {\r\n        case 1:\r\n            return filterTabs ? <TwitterFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 18:\r\n            return filterTabs ? <Instagram filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 3:\r\n            return filterTabs ? <FacebookFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 5:\r\n            return filterTabs ? <Pinterest filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 23:\r\n            return filterTabs ? <Airbnb filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 7:\r\n            return filterTabs ? <YoutubeFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 11:\r\n            return filterTabs ? <Tumblr filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 12:\r\n            return filterTabs ? <Rss filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 6:\r\n            return filterTabs ? <Flickr filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 4:\r\n            return filterTabs ? <GoogleFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 8:\r\n            return filterTabs ? <Vimeo filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 28:\r\n            return filterTabs ? <Tiktok filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 10:\r\n            return filterTabs ? <LinkedIn filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 19:\r\n            return filterTabs ? <Yelp filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 21:\r\n            return filterTabs ? <YammerFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 20:\r\n            return filterTabs ? <SlackFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        case 26:\r\n            return filterTabs ? <Giphy filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\r\n\r\n        default:\r\n            return <>network id - {id}</>\r\n    }\r\n}\r\nclass AddFeedByNetwork extends Component {\r\n\r\n    render() {\r\n        const { selectedNetwork } = this.props;\r\n        return selectedNetwork ? <CreateFeed id={selectedNetwork.id} {...this.props} /> : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authRequire: state.addFeed.authRequire\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getConnectedAccount: (id) => dispatch(getConnectedAccount(id)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFeedByNetwork);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.debounce');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Copyright (c) 2016-present, Ken Hibino.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Licensed under the MIT License (MIT).\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * See https://kenny-hibino.github.io/react-places-autocomplete\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\n// transform snake_case to camelCase\nvar formattedSuggestion = function formattedSuggestion(structured_formatting) {\n  return {\n    mainText: structured_formatting.main_text,\n    secondaryText: structured_formatting.secondary_text\n  };\n};\n\nvar PlacesAutocomplete = function (_React$Component) {\n  _inherits(PlacesAutocomplete, _React$Component);\n\n  function PlacesAutocomplete(props) {\n    _classCallCheck(this, PlacesAutocomplete);\n\n    var _this = _possibleConstructorReturn(this, (PlacesAutocomplete.__proto__ || Object.getPrototypeOf(PlacesAutocomplete)).call(this, props));\n\n    _this.init = function () {\n      if (!window.google) {\n        throw new Error('[react-places-autocomplete]: Google Maps JavaScript API library must be loaded. See: https://github.com/kenny-hibino/react-places-autocomplete#load-google-library');\n      }\n\n      if (!window.google.maps.places) {\n        throw new Error('[react-places-autocomplete]: Google Maps Places library must be loaded. Please add `libraries=places` to the src URL. See: https://github.com/kenny-hibino/react-places-autocomplete#load-google-library');\n      }\n\n      _this.autocompleteService = new window.google.maps.places.AutocompleteService();\n      _this.autocompleteOK = window.google.maps.places.PlacesServiceStatus.OK;\n      _this.setState(function (state) {\n        if (state.ready) {\n          return null;\n        } else {\n          return { ready: true };\n        }\n      });\n    };\n\n    _this.autocompleteCallback = function (predictions, status) {\n      _this.setState({ loading: false });\n      if (status !== _this.autocompleteOK) {\n        _this.props.onError(status, _this.clearSuggestions);\n        return;\n      }\n      var highlightFirstSuggestion = _this.props.highlightFirstSuggestion;\n\n      _this.setState({\n        suggestions: predictions.map(function (p, idx) {\n          return {\n            id: p.id,\n            description: p.description,\n            placeId: p.place_id,\n            active: highlightFirstSuggestion && idx === 0 ? true : false,\n            index: idx,\n            formattedSuggestion: formattedSuggestion(p.structured_formatting),\n            matchedSubstrings: p.matched_substrings,\n            terms: p.terms,\n            types: p.types\n          };\n        })\n      });\n    };\n\n    _this.fetchPredictions = function () {\n      var value = _this.props.value;\n\n      if (value.length) {\n        _this.setState({ loading: true });\n        _this.autocompleteService.getPlacePredictions(_extends({}, _this.props.searchOptions, {\n          input: value\n        }), _this.autocompleteCallback);\n      }\n    };\n\n    _this.clearSuggestions = function () {\n      _this.setState({ suggestions: [] });\n    };\n\n    _this.clearActive = function () {\n      _this.setState({\n        suggestions: _this.state.suggestions.map(function (suggestion) {\n          return _extends({}, suggestion, {\n            active: false\n          });\n        })\n      });\n    };\n\n    _this.handleSelect = function (address, placeId, suggestion) {\n      _this.clearSuggestions();\n      if (_this.props.onSelect) {\n        _this.props.onSelect(address, placeId, suggestion);\n      } else {\n        _this.props.onChange(address);\n      }\n    };\n\n    _this.getActiveSuggestion = function () {\n      return _this.state.suggestions.find(function (suggestion) {\n        return suggestion.active;\n      });\n    };\n\n    _this.selectActiveAtIndex = function (index) {\n      var activeName = _this.state.suggestions.find(function (suggestion) {\n        return suggestion.index === index;\n      }).description;\n      _this.setActiveAtIndex(index);\n      _this.props.onChange(activeName);\n    };\n\n    _this.selectUserInputValue = function () {\n      _this.clearActive();\n      _this.props.onChange(_this.state.userInputValue);\n    };\n\n    _this.handleEnterKey = function () {\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.handleSelect(_this.props.value, null, null);\n      } else {\n        _this.handleSelect(activeSuggestion.description, activeSuggestion.placeId, activeSuggestion);\n      }\n    };\n\n    _this.handleDownKey = function () {\n      if (_this.state.suggestions.length === 0) {\n        return;\n      }\n\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.selectActiveAtIndex(0);\n      } else if (activeSuggestion.index === _this.state.suggestions.length - 1) {\n        _this.selectUserInputValue();\n      } else {\n        _this.selectActiveAtIndex(activeSuggestion.index + 1);\n      }\n    };\n\n    _this.handleUpKey = function () {\n      if (_this.state.suggestions.length === 0) {\n        return;\n      }\n\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.selectActiveAtIndex(_this.state.suggestions.length - 1);\n      } else if (activeSuggestion.index === 0) {\n        _this.selectUserInputValue();\n      } else {\n        _this.selectActiveAtIndex(activeSuggestion.index - 1);\n      }\n    };\n\n    _this.handleInputKeyDown = function (event) {\n      /* eslint-disable indent */\n      switch (event.key) {\n        case 'Enter':\n          event.preventDefault();\n          _this.handleEnterKey();\n          break;\n        case 'ArrowDown':\n          event.preventDefault(); // prevent the cursor from moving\n          _this.handleDownKey();\n          break;\n        case 'ArrowUp':\n          event.preventDefault(); // prevent the cursor from moving\n          _this.handleUpKey();\n          break;\n        case 'Escape':\n          _this.clearSuggestions();\n          break;\n      }\n      /* eslint-enable indent */\n    };\n\n    _this.setActiveAtIndex = function (index) {\n      _this.setState({\n        suggestions: _this.state.suggestions.map(function (suggestion, idx) {\n          if (idx === index) {\n            return _extends({}, suggestion, { active: true });\n          } else {\n            return _extends({}, suggestion, { active: false });\n          }\n        })\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var value = event.target.value;\n\n      _this.props.onChange(value);\n      _this.setState({ userInputValue: value });\n      if (!value) {\n        _this.clearSuggestions();\n        return;\n      }\n      if (_this.props.shouldFetchSuggestions) {\n        _this.debouncedFetchPredictions();\n      }\n    };\n\n    _this.handleInputOnBlur = function () {\n      if (!_this.mousedownOnSuggestion) {\n        _this.clearSuggestions();\n      }\n    };\n\n    _this.getActiveSuggestionId = function () {\n      var activeSuggestion = _this.getActiveSuggestion();\n      return activeSuggestion ? 'PlacesAutocomplete__suggestion-' + activeSuggestion.placeId : undefined;\n    };\n\n    _this.getIsExpanded = function () {\n      return _this.state.suggestions.length > 0;\n    };\n\n    _this.getInputProps = function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (options.hasOwnProperty('value')) {\n        throw new Error('[react-places-autocomplete]: getInputProps does not accept `value`. Use `value` prop instead');\n      }\n\n      if (options.hasOwnProperty('onChange')) {\n        throw new Error('[react-places-autocomplete]: getInputProps does not accept `onChange`. Use `onChange` prop instead');\n      }\n\n      var defaultInputProps = {\n        type: 'text',\n        autoComplete: 'off',\n        role: 'combobox',\n        'aria-autocomplete': 'list',\n        'aria-expanded': _this.getIsExpanded(),\n        'aria-activedescendant': _this.getActiveSuggestionId(),\n        disabled: !_this.state.ready\n      };\n\n      return _extends({}, defaultInputProps, options, {\n        onKeyDown: (0, _helpers.compose)(_this.handleInputKeyDown, options.onKeyDown),\n        onBlur: (0, _helpers.compose)(_this.handleInputOnBlur, options.onBlur),\n        value: _this.props.value,\n        onChange: function onChange(event) {\n          _this.handleInputChange(event);\n        }\n      });\n    };\n\n    _this.getSuggestionItemProps = function (suggestion) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var handleSuggestionMouseEnter = _this.handleSuggestionMouseEnter.bind(_this, suggestion.index);\n      var handleSuggestionClick = _this.handleSuggestionClick.bind(_this, suggestion);\n\n      return _extends({}, options, {\n        key: suggestion.id,\n        id: _this.getActiveSuggestionId(),\n        role: 'option',\n        onMouseEnter: (0, _helpers.compose)(handleSuggestionMouseEnter, options.onMouseEnter),\n        onMouseLeave: (0, _helpers.compose)(_this.handleSuggestionMouseLeave, options.onMouseLeave),\n        onMouseDown: (0, _helpers.compose)(_this.handleSuggestionMouseDown, options.onMouseDown),\n        onMouseUp: (0, _helpers.compose)(_this.handleSuggestionMouseUp, options.onMouseUp),\n        onTouchStart: (0, _helpers.compose)(_this.handleSuggestionTouchStart, options.onTouchStart),\n        onTouchEnd: (0, _helpers.compose)(_this.handleSuggestionMouseUp, options.onTouchEnd),\n        onClick: (0, _helpers.compose)(handleSuggestionClick, options.onClick)\n      });\n    };\n\n    _this.handleSuggestionMouseEnter = function (index) {\n      _this.setActiveAtIndex(index);\n    };\n\n    _this.handleSuggestionMouseLeave = function () {\n      _this.mousedownOnSuggestion = false;\n      _this.clearActive();\n    };\n\n    _this.handleSuggestionMouseDown = function (event) {\n      event.preventDefault();\n      _this.mousedownOnSuggestion = true;\n    };\n\n    _this.handleSuggestionTouchStart = function () {\n      _this.mousedownOnSuggestion = true;\n    };\n\n    _this.handleSuggestionMouseUp = function () {\n      _this.mousedownOnSuggestion = false;\n    };\n\n    _this.handleSuggestionClick = function (suggestion, event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      var description = suggestion.description,\n          placeId = suggestion.placeId;\n\n      _this.handleSelect(description, placeId, suggestion);\n      setTimeout(function () {\n        _this.mousedownOnSuggestion = false;\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      suggestions: [],\n      userInputValue: props.value,\n      ready: !props.googleCallbackName\n    };\n\n    _this.debouncedFetchPredictions = (0, _lodash2.default)(_this.fetchPredictions, props.debounce);\n    return _this;\n  }\n\n  _createClass(PlacesAutocomplete, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var googleCallbackName = this.props.googleCallbackName;\n\n      if (googleCallbackName) {\n        var isPlacesLoaded = window.google && window.google.maps && window.google.maps.places;\n        if (!isPlacesLoaded) {\n          window[googleCallbackName] = this.init;\n        } else {\n          this.init();\n        }\n      } else {\n        this.init();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var googleCallbackName = this.props.googleCallbackName;\n\n      if (googleCallbackName && window[googleCallbackName]) {\n        delete window[googleCallbackName];\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children({\n        getInputProps: this.getInputProps,\n        getSuggestionItemProps: this.getSuggestionItemProps,\n        loading: this.state.loading,\n        suggestions: this.state.suggestions\n      });\n    }\n  }]);\n\n  return PlacesAutocomplete;\n}(_react2.default.Component);\n\nPlacesAutocomplete.propTypes = {\n  onChange: _propTypes2.default.func.isRequired,\n  value: _propTypes2.default.string.isRequired,\n  children: _propTypes2.default.func.isRequired,\n  onError: _propTypes2.default.func,\n  onSelect: _propTypes2.default.func,\n  searchOptions: _propTypes2.default.shape({\n    bounds: _propTypes2.default.object,\n    componentRestrictions: _propTypes2.default.object,\n    location: _propTypes2.default.object,\n    offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    radius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    types: _propTypes2.default.array\n  }),\n  debounce: _propTypes2.default.number,\n  highlightFirstSuggestion: _propTypes2.default.bool,\n  shouldFetchSuggestions: _propTypes2.default.bool,\n  googleCallbackName: _propTypes2.default.string\n};\n\nPlacesAutocomplete.defaultProps = {\n  /* eslint-disable no-unused-vars, no-console */\n  onError: function onError(status, _clearSuggestions) {\n    return console.error('[react-places-autocomplete]: error happened when fetching data from Google Maps API.\\nPlease check the docs here (https://developers.google.com/maps/documentation/javascript/places#place_details_responses)\\nStatus: ', status);\n  },\n  /* eslint-enable no-unused-vars, no-console */\n  searchOptions: {},\n  debounce: 200,\n  highlightFirstSuggestion: false,\n  shouldFetchSuggestions: true\n};\n\nexports.default = PlacesAutocomplete;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar compose = exports.compose = function compose() {\n  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    fns.forEach(function (fn) {\n      return fn && fn.apply(undefined, args);\n    });\n  };\n};\n\nvar pick = exports.pick = function pick(obj) {\n  for (var _len3 = arguments.length, props = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    props[_key3 - 1] = arguments[_key3];\n  }\n\n  return props.reduce(function (newObj, prop) {\n    if (obj && obj.hasOwnProperty(prop)) {\n      newObj[prop] = obj[prop];\n    }\n    return newObj;\n  }, {});\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLatLng = exports.geocodeByPlaceId = exports.geocodeByAddress = undefined;\n\nvar _PlacesAutocomplete = require('./PlacesAutocomplete');\n\nvar _PlacesAutocomplete2 = _interopRequireDefault(_PlacesAutocomplete);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.geocodeByAddress = _utils.geocodeByAddress;\nexports.geocodeByPlaceId = _utils.geocodeByPlaceId;\nexports.getLatLng = _utils.getLatLng;\nexports.default = _PlacesAutocomplete2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar geocodeByAddress = exports.geocodeByAddress = function geocodeByAddress(address) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ address: address }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};\n\nvar getLatLng = exports.getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var latLng = {\n        lat: result.geometry.location.lat(),\n        lng: result.geometry.location.lng()\n      };\n      resolve(latLng);\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nvar geocodeByPlaceId = exports.geocodeByPlaceId = function geocodeByPlaceId(placeId) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ placeId: placeId }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};"],"names":["SubmitFeedRequest","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this$props","this","props","supportUrl","videoUrl","cancelFeed","sumbitFeed","loading","hideBtn","buttonText","_jsxs","className","children","_jsx","Suspense","fallback","_Fragment","NeedSupport","content","type","onClick","concat","Component","InputField","onChangeHandler","placeholder","name","autoComplete","onChange","CheckBoxField","isChecked","checked","Airbnb","_this","call","changeTab","filterId","feedtype","setState","selectedFilterId","selectedFilterTab","event","_this$setState","_defineProperty","target","onCheckHandler","onSubmit","_this$state","state","pageUrl","moderation","collection","networkId","history","error","obj","filter","airbnb_page_review","createFeedAction","getAllfeeds","closeAddFeed","filterTabs","_this2","_this$state2","Tab","id","defaultActiveKey","Object","keys","length","Nav","variant","map","filterTab","index","feedName","eventKey","capitalizeFirstLetter","onBack","connect","accountId","addFeed","selectedAccount","connectedAccountList","connectedAcc","dispatch","getFeedsData","Flickr","onManuallyApproveChange","hashtag","handle","handleError","collectionId","iCollection","push","isCollection","join","_objectSpread","field1","field2","feedIcon","iconId","style","zIndex","channel","BroadcastChannel","Tumblr","getFeedId","String","split","window","location","href","includes","postMessage","JSON","stringify","setTimeout","Pinterest","userBoard","errorMsg","field12boardurl","url","replace","isAuthRequired","Giphy","search","sticker","stickerError","Rss","feedUrl","urlError","fieldtitle","onClickToDwonloadSample","isRequest","saveAs","baseUrl","sampleXml","Collapse","in","maxWidth","src","height","width","alt","download","SearchPlace","_useState","useState","_useState2","_slicedToArray","address","setAddress","_useState3","_useState4","list","setList","_useState5","_useState6","spinnerActive","spinnerActiveFun","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","onLatlanChange","lat","lng","catch","console","PlacesAutocomplete","e","onFieldTextChange","onSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","top","Dropdown","show","PerfectScrollbar","options","wheelPropagation","suggestion","v1","v2","description","placeId","whiteSpace","Yelp","debounce","HttpClient","post","AUTOCOMPLETE","Latlng","latlng","response","result","data","response_code","keywordList","responseData","ex","handleOnChange","locationApiCall","perv","_objectSpread2","keywordSelected","item","prev","keyword","data_handle_playlistName","isSelectedFromList","slug","data_slug_alias","onTextFieldChange","locationError","businessUrl","businessUrlError","keywordError","businessPageUrl27","businessName28","businessKeywordfield28","businessKeyword28","autoClose","image_url","InfoSection","text","BulkDropzone","uppyOne","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","params","auth","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","on","stepName","onUploadSuccess","original_name","cancelAll","file","toast","size","close","reason","fileName","DragDrop","proudlyDisplayPoweredByUppy","hideUploadButton","showProgressDetails","disableThumbnailGenerator","showSelectedFiles","showRemoveButtonAfterComplete","disableInformer","uppy","LinkedIn","imageUrl","postUrl","YoutubeTabs","_len","args","Array","_key","query","youtubeAutoComplete","res","items","onYoutubeChange","onValueChange","tab","onListClick","_this$props2","onChannelIdChange","snippet","title","channelTitle","playlistId","channelId","document","getElementById","_this$props3","onKeywordChange","checkBox","onCheckBoxChange","shortError","playListError","locationKeywordError","thumbnails","default","YoutubeFeed","textField","_this$setState2","clearValues","_this$setState4","feedText","keywords","SVG","AccountPicker","disconnectAccount","account","accounts","ConnectedAccounts","updateAccountsList","acc","onConnectedAccountChange","selectAccount","deleteAccount","Swal","icon","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonAriaLabel","dismiss","onAccountChange","personalAccount","personal","_this3","ProfileImage","imageSize","symbolClass","accountName","profileUrl","profilePicture","Network","callback","disconnectUser","YammerFeed","addYammerAccount","networkData","showAddAccountAlert","createFeed","connectAccountId","groupId","topicId","connetedAccount","topicError","readAuthenticationCode","parse","addUserAccount","addEventListener","removeEventListener","_this$state3","AccountSelect","accountList","formatedOptions","label","_toConsumableArray","Select","classNamePrefix","TiktokFeed","addTiktokAccount","onSelectedChildAccountChange","selectedChildAccount","onPersonalAccChange","personalAcc","hashtagPost","hashtagCaption","isLoading","getPersonalAccounts","formatedOption","formatOption","personalAccountList","allPersonalAcc","selectPersonal","lists","isPersonal","formatedList","value2","getInfo","getAccounts","allAccounts","child","allConnectAcc","selectValue","_this$setState3","display","VimeoFeed","addVimeoAccount","FeedIcon","TwitterTabs","showList","message","handleAutoComplete","onSelectList","onListNameChange","onListIdChange","owner_id","userName","showListError","listNameError","listName","advanced","mentionError","advanceError","multiPhoto","excludeRetweets","listname","excludeReplies","mentions","favorites","favoriteError","Twitter","listId","userId","addTwitterAccount","excludeRetweet","multiplePhoto","authRequire","connectedAccount","TwitterTab","onExcRetweetChange","PlaceDropDown","v3","formattedSuggestion","mainText","GoogleTab","accountOption","parentOption","getChildAccountData","f","i","onAccountIdChange","childAcc","onAccountChildChange","mainAccountId","parent","onParentSelected","childAcccounts","selectedAcc","nextProps","otherAccount","accountChild","onotherAccount","onAddAccount","defaultValue","GoogleFeed","placeName","addGoogleAccount","getConnectedAccount","fetchConnectedAccounts","SlackTab","handleInput","channelError","menuPlacement","findIndex","SlackFeed","addSlackAccount","parentAcc","connectedAccounts","FacebookTab","handles","openSelect","_res$data","showHandle","handleTextChange","onTextChange","onSelectHandle","link","querySelector","onAccChange","selectedOption","find","onAlbumFieldChange","albumUrl","albumUrlError","album","onAlbumChange","authenticate","onAuthenticateChange","ConnectAccount","createFeedFromPage","backgroundImage","GET_NETWORK_ICON","toUpperCase","minWidth","FacebookFeed","addFacebookAccount","feedObj","createFeedPostData","parseInt","field","onlyReels","hashtagIGTV","VALIDATE_URL","accId","parentId","InstagramTab","_this$props4","excludeVideo","InstagramFeed","addInstaAccount","connectedAccId","hanldeError","InstagramFeedTab","CreateFeed","selectedNetwork","editMediaHandleCallback","useEffect","TwitterFeed","Instagram","Vimeo","Tiktok","AddFeedByNetwork","defineProperty","exports","_extends","assign","source","prototype","hasOwnProperty","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","require","_propTypes2","_lodash2","_helpers","__esModule","_React$Component","instance","TypeError","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","init","google","Error","maps","places","autocompleteService","AutocompleteService","autocompleteOK","PlacesServiceStatus","OK","ready","autocompleteCallback","predictions","status","highlightFirstSuggestion","p","idx","place_id","active","structured_formatting","main_text","secondaryText","secondary_text","matchedSubstrings","matched_substrings","terms","types","onError","clearSuggestions","fetchPredictions","getPlacePredictions","searchOptions","input","clearActive","getActiveSuggestion","selectActiveAtIndex","activeName","setActiveAtIndex","selectUserInputValue","userInputValue","handleEnterKey","activeSuggestion","undefined","handleDownKey","handleUpKey","handleInputKeyDown","preventDefault","handleInputChange","shouldFetchSuggestions","debouncedFetchPredictions","handleInputOnBlur","mousedownOnSuggestion","getActiveSuggestionId","getIsExpanded","defaultInputProps","role","disabled","onKeyDown","compose","onBlur","handleSuggestionMouseEnter","bind","handleSuggestionClick","onMouseEnter","onMouseLeave","handleSuggestionMouseLeave","onMouseDown","handleSuggestionMouseDown","onMouseUp","handleSuggestionMouseUp","onTouchStart","handleSuggestionTouchStart","onTouchEnd","googleCallbackName","subClass","superClass","create","constructor","setPrototypeOf","propTypes","func","isRequired","string","shape","bounds","object","componentRestrictions","offset","oneOfType","number","radius","array","bool","defaultProps","_clearSuggestions","fns","_len2","_key2","forEach","fn","pick","_len3","_key3","reduce","newObj","prop","_PlacesAutocomplete","_PlacesAutocomplete2","_utils","geocodeByPlaceId","geocoder","Geocoder","GeocoderStatus","Promise","resolve","reject","geocode","geometry"],"sourceRoot":""}