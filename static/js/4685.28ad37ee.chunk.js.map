{"version":3,"file":"static/js/4685.28ad37ee.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Swal from 'sweetalert2';\nimport { HOST_DOMAIN, INSTA_CLIENT_ID } from '../../../../../../Services/Api'\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport SocialLoginFacebook from '../../../../SocialLogin/Facebook'\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\nimport { GET_NETWORK_ICON, CAPITALIZE_FIRST_LETTER } from '../../../../../../Services/Utils/utils'\nimport { twitterConnect, flickrConnect, yammerConnect, tumblerConnect, vimeoConnect, facebookConnect } from '../../../../SocialLogin/auth'\nimport { getTwitterAuthUrl, getFbAuthUrl, getYammerAuthUrl, getVimeoAuthUrl } from '../../../../../../Layouts/Main/AuthCallback/AuthSocialAcc'\nimport { addFacebookAccount, addInstaAccount } from '../../../../../../Layouts/Main/AuthCallback/connectSocialAcc'\nimport { addUserRights } from '../../../../../../Services/Actions/addFeedAction'\nimport { sendPublishRequest, publishDeleteRequest, getRightsInstagramDetails, getInstagramDetails, InstagramPostPublish, getFacebookDetails, FacebookPublish } from '../../../../../../Services/Actions/publishActions'\nconst channel = new BroadcastChannel('connect');\nclass GetRightsSocialAccount extends Component {\n    state = {\n        connected: null,\n        showConfirm: false\n    }\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId, type } = response;\n\n        var self = this\n        if (type == \"get-rights\") {\n            console.log(\"data, networkId, type\", data, networkId, type)\n            const responseToken = JSON.parse(event.data);\n            const { modalAssetData } = this.props\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\n                addInstaAccount(data, (data) => {\n                    getRightsInstagramDetails({ access_token: data.token }).then((response) => {\n\n                        const { data } = response\n                        var accountsData = [];\n                        if (data && Object.keys(data).length > 0) {\n                            accountsData.push({ id: data.id, name: data.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        }\n\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 3) {\n                addFacebookAccount(data, networkId, (data) => {\n                    getFacebookDetails({ access_token: data.token }).then((response) => {\n                        const { pages } = response.data\n                        var accountsData = [];\n                        if (pages && pages.length > 0) {\n                            pages.map((item) => {\n                                accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                            })\n                        }\n\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\n                    })\n                })\n            }\n            // else if (modalAssetData.networkId == 1) {\n            //     getInstagramDetails({ access_token: data.token }).then((response) => {\n            //         const { accounts } = response.data\n            //         var accountsData = [];\n            //         if (accounts && accounts.length > 0) {\n            //             accounts.map((item) => {\n            //                 accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n            //             })\n            //         }\n\n            //         self.setState({ access_token: responseToken.data.access_token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\n            //     })\n            // }\n            else {\n                addUserRights(data, networkId, (data) => {\n\n                })\n            }\n\n        }\n    }\n\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    handleYes = event => {\n        this.setState({ showConfirm: true })\n    }\n    handleNo = event => {\n        this.setState({ showConfirm: true })\n    }\n    onClickSocialConnect = (data) => event => {\n        if (data && Object.keys(data).length > 0) {\n            Swal.fire({\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\n                imageHeight: 40,\n                imageWidth: 40,\n                title: `<strong>${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}</strong>`,\n                html: `Connect to ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))} and start collecting assets.`,\n                showCloseButton: true,\n                showCancelButton: false,\n                focusConfirm: true,\n                confirmButtonText: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n                confirmButtonAriaLabel: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    localStorage.setItem(\"networkId\", data.networkId);\n                    localStorage.setItem(\"connectionType\", \"get-rights\");\n                    switch (data.networkId) {\n                        case 1:\n                            getTwitterAuthUrl();\n                            break;\n                        case 6:\n                            flickrConnect(6);\n                            break;\n                        case 21:\n                            getYammerAuthUrl()\n                            break;\n                        case 11:\n                            tumblerConnect(11);\n                            break;\n                        case 8:\n                            getVimeoAuthUrl()\n                            break;\n                        case 3:\n                            getFbAuthUrl(3);\n                            break;\n                        case 2:\n                            const url1 = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url1, '_blank', \"width=786,height=786\");\n                            break;\n                        case 18:\n                            const url = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url, '_blank', \"width=786,height=786\");\n                            break;\n                        // case 18:\n                        //     getFbAuthUrl(18)\n                        //     break;\n                        default:\n                            break;\n                    }\n                }\n            });\n        }\n    }\n\n\n    render() {\n        const { showConfirm } = this.state\n        const { modalAssetData, connectedAccount } = this.props;\n\n        return <><div className=\"p-lg-6 p-3\">\n            <div className=\"m-auto\">\n                {\n                    connectedAccount && connectedAccount.data.length > 0 ? <><h3 className=\"mb-2 pb-2 fs-7 pt-1\">\n                        <span className=\"fw-medium\">Connect Account</span>\n                    </h3>\n                        <div className=\"mb-8\">\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 border border-dark bg-white w-100\">\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <div className=\"symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden\">\n                                        <img className=\"object-center-cover\" src={connectedAccount.data[0].picture} height={40} width={40} alt=\"instagram\" />\n                                    </div>\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} alt=\"\" />\n                                    </span>\n                                </div>\n                            </button>\n                            <span className=\"fw-medium\">You are logged in with this account</span>\n                        </div></> : <>{\n                            modalAssetData.networkId == 7 ? <SocialGoogleLogin onUpdateData={this.props.onUpdateData} /> : <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                                    </div>\n                                </div>\n                                {modalAssetData.networkId ?\n                                    <div className=\"d-flex\">\n                                        <span className=\"h-20px w-20px\">\n                                            <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} alt=\"network\" style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                                        </span>\n                                    </div>\n                                    : null}\n                            </button>\n                        }</>\n                }\n\n            </div>\n        </div>\n\n\n        </>\n    }\n}\n\nexport default GetRightsSocialAccount;"],"names":["channel","BroadcastChannel","GetRightsSocialAccount","state","connected","showConfirm","readAuthenticationCode","event","response","JSON","parse","data","networkId","type","self","console","log","modalAssetData","props","addInstaAccount","getRightsInstagramDetails","access_token","token","then","accountsData","Object","keys","length","push","id","name","username","picture","baseUrl","GET_NETWORK_ICON","setState","socialData","onUpdateData","addFacebookAccount","getFacebookDetails","pages","map","item","addUserRights","handleYes","handleNo","onClickSocialConnect","Swal","imageUrl","imageHeight","imageWidth","title","CAPITALIZE_FIRST_LETTER","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","result","isConfirmed","localStorage","setItem","getTwitterAuthUrl","flickrConnect","getYammerAuthUrl","tumblerConnect","getVimeoAuthUrl","getFbAuthUrl","url1","INSTA_CLIENT_ID","HOST_DOMAIN","window","open","url","addEventListener","this","removeEventListener","connectedAccount","className","src","height","width","alt","provider","onClick","style","filter","opacity","Component"],"sourceRoot":""}