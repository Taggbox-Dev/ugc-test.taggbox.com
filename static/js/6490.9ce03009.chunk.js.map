{"version":3,"file":"static/js/6490.9ce03009.chunk.js","mappings":"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","sources":["Layouts/Main/Templates/TemplateAside/TemplatePreview.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Accordion, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg';\nimport WidgetOnsiteButton from '../ThemeTemplates/Components/WidgetOnsiteButton';\nimport DisplayOnsiteStrip from '../ThemeTemplates/Components/DisplayOnsiteStrip';\nimport ThemePopUp from '../ThemeTemplates/Components/ThemePopUp/ThemePopUp';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport ModernWaterfallTemplate from './Components/ModernWaterfallTemplate';\nimport ModernSlideshowTemplate from './Components/ModernSlideshowTemplate';\nimport AtmosphereTemplate from './Components/AtmosphereTemplate';\n\nimport SquarePhoto from '../ThemeTemplates/SquarePhoto';\nimport ModernCard from '../ThemeTemplates/ModernCard';\nimport HorizontalColumns from '../ThemeTemplates/HorizontalColumns';\nimport ModernSlideShow from '../ThemeTemplates/ModernSlideShow';\nimport Atmosphere from '../ThemeTemplates/Atmosphere';\nimport GalleryPhoto from '../ThemeTemplates/GalleryPhoto';\nimport ModernWaterfall from '../ThemeTemplates/ModernWaterfall';\nimport FontHead from './FontHead';\n\nimport { createTemplate } from '../../../../Services/Actions/templateAction'\n\nconst ModernCardTemplate = React.lazy(() => import('./Components/ModernCardTemplate'));\nconst SquarePhotoTemplate = React.lazy(() => import('./Components/SquarePhotoTemplate'));\nconst HorizontalColumnTemplate = React.lazy(() => import('./Components/HorizontalColumnTemplate'));\nconst GalleryPhotoTemplate = React.lazy(() => import('./Components/GalleryPhotoTemplate'));\n\nconst ThemesPreview = ({ themeName, templateFormData, onClickToPopUp }) => {\n    switch (themeName) {\n        case 20:\n            return <ModernCard themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 4:\n            return <SquarePhoto themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 47:\n            return <HorizontalColumns themeId={themeName}{...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 21:\n            return <ModernSlideShow themeId={themeName}{...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 44:\n            return <Atmosphere themeId={themeName}{...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 50:\n            return <GalleryPhoto themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        case 58:\n            return <ModernWaterfall themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n        default:\n            return <ModernCard themeId={themeName} {...templateFormData} onClickToPopUp={onClickToPopUp} />;\n    }\n\n}\n\nclass TemplatePreview extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            templateName: \"\",\n            selectedTheme: props.defaultTheme ? { name: props.defaultTheme.name, themeId: props.defaultTheme.themeId } : {},\n            selectedThemeData: props.defaultTheme ? props.defaultTheme : null,\n            templateFormData: null,\n            isRequesting: false,\n            tempError: false,\n            popupData: null\n        }\n    }\n\n    onChooseTheme = (theme, selectedThemeData) => event => {\n        this.setState({ selectedTheme: theme, selectedThemeData: selectedThemeData, popupData: null })\n    }\n    onTextTemplateName = event => {\n        this.setState({ templateName: event.target.value, tempError: false })\n    }\n    tempFormData = (data) => {\n        this.setState({ templateFormData: data })\n    }\n    onClickSaveChanges = event => {\n        const { templateFormData, templateName, selectedThemeData } = this.state\n        const { onSiteSetting } = this.props\n        if (templateFormData && Object.keys(templateFormData).length > 0 && String(templateName).length > 0) {\n            var self = this\n\n            const onsite_settings = {\n                network: onSiteSetting.network,\n                filter: onSiteSetting.filter,\n                moderation: onSiteSetting.moderation,\n                onsite_qr_code_btn_text: templateFormData.onSiteUpload.buttonText,\n                onsite_btn_color: templateFormData.onSiteUpload.bgColor,\n                onsite_btn_txt_color: templateFormData.onSiteUpload.textColor,\n                onsite_link_font_btn: onSiteSetting.onsite_link_font_btn,\n                onsite_txt_font: templateFormData.onSiteUpload.fontFamily.family,\n                onsite_txt_font_variation: templateFormData.onSiteUpload.fontVarient.value,\n                onsite_txt_font_size: templateFormData.onSiteUpload.fontSize,\n                onsite_txt_color: templateFormData.onSiteUpload.textColor,\n                onsite_css_font_btn: onSiteSetting.onsite_css_font_btn,\n                onsite_font_varient_btn: onSiteSetting.onsite_font_varient_btn,\n                btn_fontSize: templateFormData.onSiteUpload.fontSize,\n                onsite_qr_code_status: templateFormData.onSiteUpload.qrCodeStatus,\n                onsite_button_status: templateFormData.onSiteUpload.qrCodeStatus,\n                onsite_popup_title: onSiteSetting.onsite_popup_title,\n                onsite_popup_btn_txt: onSiteSetting.onsite_popup_btn_txt,\n                onsite_popup_sub_heading: onSiteSetting.onsite_popup_sub_heading,\n                onsite_term_url: onSiteSetting.onsite_term_url,\n                onsiteImgBack: onSiteSetting.onsiteImgBack,\n                onsite_logo: onSiteSetting.onsite_logo,\n                Onsite_logoImageValue: onSiteSetting.Onsite_logoImageValue,\n                onsite_bg_color_wg: onSiteSetting.onsite_bg_color_wg,\n                onsiteBackImage: onSiteSetting.onsiteBackImage,\n                onsite_bg_image_wg: onSiteSetting.onsite_bg_image_wg,\n                Onsite_backImageValue: onSiteSetting.Onsite_backImageValue,\n                onsite_succ_msg: onSiteSetting.onsite_succ_msg,\n                onsite_thank_txt_color: onSiteSetting.onsite_thank_txt_color,\n                onsite_link_font_msg: onSiteSetting.onsite_link_font_msg,\n                onsite_css_font_msg: onSiteSetting.onsite_css_font_msg,\n                onsite_font_varient_msg: onSiteSetting.onsite_font_varient_msg,\n                onsite_thank_fontSize: onSiteSetting.onsite_thank_fontSize,\n                onsite_status: templateFormData.onSiteUpload.buttonStatus,\n                btn_radius: templateFormData.onSiteUpload.borderRadius\n            };\n            const data = {\n                \"action\": 1,\n                \"name\": templateName,\n                \"theme\": selectedThemeData.themeId,\n                \"cssStatus\": templateFormData.customCss.cssStatus ? 1 : 0,\n                \"css\": templateFormData.customCss.css,\n                \"backgroundColor\": templateFormData.background.status ? templateFormData.background.color : \"\",\n                \"transparent\": templateFormData.background.transparent ? 1 : 0,\n                \"backgroundImage\": templateFormData.background.image ? templateFormData.background.image : \"\",\n                \"backgroundImageId\": 0,\n                \"link_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"css_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"font_varient\": templateFormData.cardStyle.fontVarient && Object.keys(templateFormData.cardStyle.fontVarient).length > 0 ? templateFormData.cardStyle.fontVarient.value : \"\",\n                \"fontColor\": templateFormData.cardStyle.textColor,\n                \"cardColor\": templateFormData.cardStyle.cardColor,\n                \"postText\": 0,\n                \"postAuthor\": templateFormData.advanced.author ? 1 : 0,\n                \"postTime\": templateFormData.advanced.time ? 1 : 0,\n                \"postFeatured\": templateFormData.themeSettings.postPopUp ? 1 : 0,\n                \"minimumPostWidth\": templateFormData.themeSettings.minPostWitdh,\n                \"padding\": templateFormData.themeSettings.postPadding,\n                \"scrollDelay\": templateFormData.themeSettings.scrollSpeed,\n                \"slideDelay\": templateFormData.themeSettings.timePerSlide,\n                \"numberOfPosts\": templateFormData.themeSettings.numberOfPosts,\n                \"trimcontent\": templateFormData.themeSettings.trimContent ? 1 : 0,\n                \"playFullVideo\": 1,\n                \"randomizePost\": templateFormData.themeSettings.suffleAssets ? 1 : 0,\n                \"hideUrls\": templateFormData.themeSettings.hideUrls ? 1 : 0,\n                \"fitRow\": templateFormData.themeSettings.bestFit ? 1 : 0,\n                \"roundEdge\": 5,\n                \"cardType\": 1,\n                \"socialAction\": templateFormData.cardStyle.socialActions ? 1 : 0,\n                \"timeForPopup\": templateFormData.themeSettings.popUpduration,\n                \"authorColor\": templateFormData.cardStyle.authorColor,\n                \"iconType\": templateFormData.cardStyle.iconType ? 1 : 505,\n                \"iconColor\": templateFormData.cardStyle.socialIconColor,\n                \"fontSize\": parseInt(templateFormData.cardStyle.fontSize),\n                \"shareOption\": templateFormData.cardStyle.shareOptions ? 1 : 0,\n                \"hideContent\": templateFormData.advanced.hideContent ? 1 : 0,\n                \"numberOfCoumn\": templateFormData.themeSettings.columns && Object.keys(templateFormData.themeSettings.columns).length > 0 ? templateFormData.themeSettings.columns.value : 0,\n                \"slideDuration\": 0,\n                \"slidePost\": 0,\n                \"autoPlay\": 0,\n                \"popupSlideShow\": templateFormData.themeSettings.popupSlideShow ? 1 : 0,\n                \"customUrl\": templateFormData.themeSettings.popUpUrl && String(templateFormData.themeSettings.popUpUrl).length > 0 ? templateFormData.themeSettings.popUpUrl : \"\",\n                \"showHideOldPost\": templateFormData.themeSettings.hideOldAssets.range == 8 ? templateFormData.themeSettings.hideOldAssets.showHideOldPost : 0,\n                \"showHideOlderPost\": templateFormData.themeSettings.hideOldAssets.range ? templateFormData.themeSettings.hideOldAssets.range : 0,\n                \"loadMoreStatus\": templateFormData.themeSettings.showmore ? 1 : 0,\n                \"autoScrollStatus\": templateFormData.themeSettings.autoLoad ? 1 : 0,\n                \"hidePosts\": templateFormData.themeSettings.hideOldAssets.status ? 1 : 0,\n                \"onsite_settings\": JSON.stringify(onsite_settings),\n                \"ctaStatus\" : templateFormData.cta ? templateFormData.cta.ctaStatus ? 1 : 0 : 0,\n                \"ctaTextColor\" : templateFormData.cta ? templateFormData.cta.ctaTextColor: '',\n                \"ctaButtonColor\" : templateFormData.cta ? templateFormData.cta.ctaButtonColor: '',\n                \"buttonText\" : templateFormData.cta ? templateFormData.cta.buttonText:'',\n                \"buttonUrl\" : templateFormData.cta ? templateFormData.cta.buttonUrl: ''\n            }\n            this.setState({ isRequesting: true, tempError: false })\n            createTemplate(data).then((response) => {\n                self.setState({ isRequesting: false, tempError: false })\n                toast.success(\"New template has been successfully created.\")\n                self.props.history(\"/template\")\n            })\n        }\n        else {\n            if (String(templateName).length == 0) this.setState({ tempError: true })\n            toast.error(\"Please check all required fields.\")\n        }\n    }\n\n    onClickToPopUp = (data, callback) => {\n        if (callback) this.setState({ popupData: data }, () => callback())\n        else this.setState({ popupData: data })\n    }\n    onClosePopUp = event => this.setState({ popupData: null })\n\n    render() {\n\n        const { themeList, fonts, onSiteSetting } = this.props\n        const { selectedTheme, selectedThemeData, templateName, templateFormData, isRequesting, tempError, popupData } = this.state\n        const displayThemesId = [21, 44, 58];\n        const widgetThemesId = [4, 20, 47, 50];\n\n        return <>\n            <FontHead fonts={fonts} />\n            <div className=\"innerAside flex-shrink-0\">\n                <div className=\"card mb-4\">\n                    <div className=\"card-body p-0\">\n                        <div className=\"p-3\">\n                            <div className=\"pb-3\">\n                                <label className=\"text-gray-800 mb-2\">Template Name <strong className=\"text-danger\">*</strong></label>\n                                <div className=\"\">\n                                    <input type=\"text\" name=\"templateName\" className={`form-control form-control-sm ${tempError ? `is-invalid` : ``}`} placeholder=\"Enter Template name...\" onChange={this.onTextTemplateName} value={templateName} />\n                                    {tempError ? <div className=\"invalid-feedback\">Please provide template name</div> : null}\n                                </div>\n                            </div>\n                            <div className=\"template_aside_inner\">\n                                <Accordion defaultActiveKey=\"1\">\n                                    <Accordion.Item eventKey=\"1\" className=\"pb-3\">\n                                        <Accordion.Header className=\"w-100\">\n                                            <span className=\"fs-9 fw-medium\">{selectedTheme && selectedTheme.name ? selectedTheme.name : `Choose Theme`}</span>\n                                        </Accordion.Header>\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                                            <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"themeName\" defaultValue={4}>\n                                                {themeList.map((item, index) => {\n                                                    return <ToggleButton key={`theme_${index}`} variant='outline-secondary' id={`theme-${item.themeId}`} className={`bg-white mb-2 ${item.themeId == selectedTheme.themeId ? `` : ``}`}\n                                                        onClick={this.onChooseTheme({ name: item.name, themeId: item.themeId }, item)} value={item.themeId}>\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\n                                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${item.themeId}.png`)} height=\"40\" width=\"40\" alt={item.name} />\n                                                            </div>\n                                                            <div className=\"overflow-hidden\">\n                                                                <p className=\"fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start\">{item.name}</p>\n                                                                <p className=\"fs-9 fw-medium mb-0 text-gray-600 text-ellipsis text-start\">{item.product_type == 1 ? `Widget` : item.product_type == 2 ? `Display` : ``}</p>\n                                                            </div>\n                                                        </div>\n                                                    </ToggleButton>\n                                                })\n                                                }\n                                            </ToggleButtonGroup>\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                </Accordion>\n                                {\n                                    selectedTheme && Object.keys(selectedTheme).length > 0 ? <>{selectedTheme.themeId == 4 ? <Suspense fallback={<></>}>\n                                        <SquarePhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 21 ? <Suspense fallback={<></>}>\n                                        <ModernSlideshowTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 20 ? <Suspense fallback={<></>}>\n                                        <ModernCardTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 44 ? <Suspense fallback={<></>}>\n                                        <AtmosphereTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 50 ? <Suspense fallback={<></>}>\n                                        <GalleryPhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 47 ? <Suspense fallback={<></>}>\n                                        <HorizontalColumnTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : selectedTheme.themeId == 58 ? <Suspense fallback={<></>}>\n                                        <ModernWaterfallTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                    </Suspense> : null}</> : null\n                                }\n                            </div>\n                        </div>\n                        <div className=\"bg-white pt-2 w-100 p-3 rounded-2\">\n                            <button type=\"button\" className={`btn btn-primary w-100 ${isRequesting ? `spinner` : ``}`} onClick={selectedTheme ? this.onClickSaveChanges : null}>Save Changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex flex-column overflow-hidden w-100\">\n                <div className=\"card\">\n                    <div className=\"card-body content_wrapper\" id=\"themePreview\">\n                        <div className=\"tb_app_container\">\n                            {templateFormData && Object.keys(templateFormData).length > 0 ? <div className=\"tb_app_wrapper\" key={selectedTheme.themeId}>\n                                {widgetThemesId.includes(selectedTheme.themeId) ? <WidgetOnsiteButton onSiteUpload={this.state.templateFormData.onSiteUpload} /> : null}\n                                <ThemesPreview themeName={selectedTheme.themeId} templateFormData={this.state.templateFormData} onClickToPopUp={this.onClickToPopUp} />\n                                {displayThemesId.includes(selectedTheme.themeId) ? <DisplayOnsiteStrip onSiteUpload={this.state.templateFormData.onSiteUpload} /> : null}\n                            </div> : null}\n                            {popupData ? <ThemePopUp data={popupData} onClosePopUp={this.onClosePopUp} templateFormData={this.state.templateFormData} isWidget={widgetThemesId.includes(selectedTheme.themeId)} /> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default TemplatePreview;"],"names":["ModernCardTemplate","React","SquarePhotoTemplate","HorizontalColumnTemplate","GalleryPhotoTemplate","ThemesPreview","themeName","templateFormData","onClickToPopUp","themeId","TemplatePreview","props","onChooseTheme","theme","selectedThemeData","event","setState","selectedTheme","popupData","onTextTemplateName","templateName","target","value","tempError","tempFormData","data","onClickSaveChanges","state","onSiteSetting","Object","keys","length","String","self","onsite_settings","network","filter","moderation","onsite_qr_code_btn_text","onSiteUpload","buttonText","onsite_btn_color","bgColor","onsite_btn_txt_color","textColor","onsite_link_font_btn","onsite_txt_font","fontFamily","family","onsite_txt_font_variation","fontVarient","onsite_txt_font_size","fontSize","onsite_txt_color","onsite_css_font_btn","onsite_font_varient_btn","btn_fontSize","onsite_qr_code_status","qrCodeStatus","onsite_button_status","onsite_popup_title","onsite_popup_btn_txt","onsite_popup_sub_heading","onsite_term_url","onsiteImgBack","onsite_logo","Onsite_logoImageValue","onsite_bg_color_wg","onsiteBackImage","onsite_bg_image_wg","Onsite_backImageValue","onsite_succ_msg","onsite_thank_txt_color","onsite_link_font_msg","onsite_css_font_msg","onsite_font_varient_msg","onsite_thank_fontSize","onsite_status","buttonStatus","btn_radius","borderRadius","customCss","cssStatus","css","background","status","color","transparent","image","cardStyle","cardColor","advanced","author","time","themeSettings","postPopUp","minPostWitdh","postPadding","scrollSpeed","timePerSlide","numberOfPosts","trimContent","suffleAssets","hideUrls","bestFit","socialActions","popUpduration","authorColor","iconType","socialIconColor","parseInt","shareOptions","hideContent","columns","popupSlideShow","popUpUrl","hideOldAssets","range","showHideOldPost","showmore","autoLoad","JSON","stringify","cta","ctaStatus","ctaTextColor","ctaButtonColor","buttonUrl","isRequesting","createTemplate","then","response","toast","history","callback","onClosePopUp","defaultTheme","name","this","themeList","fonts","widgetThemesId","className","type","placeholder","onChange","defaultActiveKey","eventKey","defaultValue","map","item","index","variant","id","onClick","src","baseUrl","height","width","alt","product_type","Suspense","fallback","includes","isWidget","Component"],"sourceRoot":""}