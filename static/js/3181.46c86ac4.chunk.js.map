{"version":3,"file":"static/js/3181.46c86ac4.chunk.js","mappings":"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","sources":["Layouts/Main/CommonComponents/ColorPicker.js","Layouts/Main/Feeds/Elements/SubmitFeedRequest.js","Layouts/Main/Feeds/OnsiteUpload/components/PreviewOnsite.js","Layouts/Main/Feeds/OnsiteUpload/components/UploadImage.js","Layouts/Main/Feeds/OnsiteUpload/components/UploadLogo.js","Layouts/Main/CommonComponents/UrlInput.js","Layouts/Main/CommonComponents/CodeShareCopy.js","Layouts/Main/Feeds/OnsiteUpload/components/LinkOnsite.js","Layouts/Main/Feeds/OnsiteUpload/components/WebsiteOnsite.js","Layouts/Main/Feeds/OnsiteUpload/components/SMSMarketingOnsite.js","Layouts/Main/Feeds/OnsiteUpload/OnsiteUpload.js","Layouts/Main/PublishCommonComponents/ShareEmbedModal.js","Layouts/Main/Templates/ThemeTemplates/Components/WidgetOnsiteButton.js"],"sourcesContent":["import React, { Component } from 'react';\nimport reactCSS from 'reactcss'\nimport { ChromePicker } from 'react-color'\n\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayColorPicker: false,\n      color: props.color ? props.color : \"#fff\",\n    };\n  }\n\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleChange = (color) => {\n    this.setState({ color: color.hex }, () => this.props.onChangeColor(this.state.color))\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if(this.state.color != nextProps.color){\n      this.setState({color:nextProps.color});\n    }\n}\n  render() {\n    //const { setValue } = this.state\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          background: this.state.color,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '999',\n          top:'100%',\n          right:0\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return <><div className=\"colorPickerWrapper\" onClick={this.handleClick}>\n      <div className=\"colorPicker\" style={styles.color} />\n    </div>\n      {this.state.displayColorPicker ? <div style={styles.popover}>\n        <div style={styles.cover} onClick={this.handleClose} />\n        <ChromePicker color={this.state.color} onChange={this.handleChange} />\n      </div> : null}</>\n  }\n}\n\nexport default ColorPicker;","import React, { Component, Suspense } from 'react';\nimport NeedSupport from '../../CommonComponents/NeedSupport';\n\n\nclass SubmitFeedRequest extends Component {\n\n    render() {\n        const { supportUrl, videoUrl, cancelFeed, sumbitFeed, loading, hideBtn } = this.props;\n        return <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\n            <Suspense fallback={<></>}>\n                <NeedSupport content={'Need Help'} supportUrl={supportUrl} videoUrl={videoUrl} />\n            </Suspense>\n            <div className=\"my-1 d-flex align-items-center justify-content-end flex-wrap\">\n                <button type=\"button\" className=\"btn btn-secondary me-3\" onClick={() => cancelFeed()}>Cancel</button>\n                {!hideBtn && <button type=\"button\" className={`btn btn-primary ${loading ? 'spinner spinner-right disabled' : ''}`} onClick={() => sumbitFeed()}>Create Connection</button>}\n            </div>\n        </div>\n    }\n}\n\nexport default SubmitFeedRequest;","import { Component } from \"react\";\n\nexport default class PreviewOnsite extends Component {\n\n    render() {\n        const { title, subTitle, backgroundImage, selectedColor, btnText, logoImage } = this.props;\n        return (\n            <div className=\"form-body\">\n                <div className=\"uploader-preview\">\n                    <p className=\"text-center\"><strong>Uploader Preview</strong></p>\n                    <div className=\"onsite_preview\">\n                        <div className=\"onsite_preview_inner\" style={{ backgroundColor: selectedColor, backgroundImage: `url(${backgroundImage})` }}>\n                            <div className=\"onsite_submit_post_main\">\n                                <div className=\"tb_onsite_post_inner\">\n                                    <div className=\"tb_onsite_upload_post\">\n                                        <div className=\"tb_onsite_box\">\n                                            <div className=\"tb_onsite_box_header pt-4\">\n                                                {logoImage ? <div className=\"tb_onsite_logo_wrap\">\n                                                    <img loading=\"lazy\" src={logoImage} className=\"tb_onsite_popup_logo\" width=\"400\" height=\"50\" alt=\"logo\" />\n                                                </div> : null}\n                                            </div>\n                                            <div className=\"tb_onsite_box_title pt-0 pb-2\">\n                                                <div className=\"tb_onsite_title\">{title}</div>\n                                                <div className=\"tb_onsite_sub_heading mb-0\">{subTitle}</div>\n                                            </div>\n                                            <div className=\"tb_onsite_box_body\">\n                                                <div className=\"tb_onsite_post_tabs\">\n                                                    <div className=\"tb_onsite_separator\">OR</div>\n                                                    <div className=\"tb_onsite_tabs_nav\">\n                                                        <div className=\"tb_onsite_tabs active\">Add Caption</div>\n                                                        <div className=\"tb_onsite_tabs\">Submit Review</div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"tb_onsite_tabs_content\">\n                                                    <div className=\"tb_onsite_add_caption_tab\">\n                                                        <div className=\"tb_onsite_image_upload_box mb-3\">\n                                                            <div className=\"tb_onsite_upload_box_content\">\n                                                                <div>\n                                                                    <button type=\"button\" className=\"btn\">\n                                                                        <input className=\"uppy-DragDrop-input\" type=\"file\" hidden=\"\" name=\"files[]\" accept=\"image/*,video/*\" />\n                                                                        <div className=\"uppy-DragDrop-inner\">\n                                                                            <svg aria-hidden=\"true\" focusable=\"false\" className=\"uppy-c-icon uppy-DragDrop-arrow\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                                                                                <path d=\"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\" fillRule=\"evenodd\"></path></svg>\n                                                                            <div className=\"uppy-DragDrop-label\">Drag a video / image to upload (optional)</div>\n                                                                            <span className=\"uppy-DragDrop-note\">Video Size : Max 100MB | Photo Size : Max 15MB | Max 20 Posts</span>\n                                                                        </div>\n                                                                    </button>\n                                                                </div>\n                                                                <div className=\"tb_onsite_uploader_status\">\n                                                                    <div>\n                                                                        <div className=\"uppy-Root uppy-StatusBar is-waiting\" aria-hidden=\"true\" dir=\"ltr\">\n\n                                                                            <div className=\"uppy-StatusBar-actions\"></div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"tb_onsite_add_caption_tab\">\n                                                        <div className=\"tb_onsite_form_group mb-2\"><textarea className=\"tb_onsite_form_control_textarea\" rows=\"2\" placeholder=\"Add your caption here....\"></textarea></div>\n                                                        <div className=\"tb_onsite_form_actions\">\n                                                            <div className=\"tb_onsite_btn_primary btn-sm\">{btnText}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport { Uppy } from \"@uppy/core\";\nimport Transloadit from \"@uppy/transloadit\";\nimport GoogleDrive from '@uppy/google-drive';\nimport Url from '@uppy/url';\nimport { DashboardModal } from '@uppy/react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nconst uppyConfig = {\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\n    uppyBucket: 'cloud.taggbox.com',\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\n    companionUrl: 'https://test.taggbox.com'\n}\n\nexport default class UploadImage extends Component {\n    constructor(props) {\n        super(props)\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\n            .use(Transloadit, {\n                target: '#a',\n                params: {\n                    auth: {\n                        key: uppyConfig.uppyKey\n                    },\n                    steps: {\n                        store: {\n                            robot: \"/wasabi/store\",\n                            bucket_region: \"us-west-1\",\n                            bucket: uppyConfig.uppyBucket,\n                            key: uppyConfig.uppyAwsKey,\n                            secret: uppyConfig.uppyAwsSecret,\n                            path: 'postimage/${file.id}'\n                        }\n                    }\n                },\n                waitForEncoding: true\n            })\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n    }\n    state = {\n        backgroundModal: false\n    }\n    componentDidMount() {\n        var self = this;\n        this.uppy.on('transloadit:result', (stepName, result) => {\n            self.props.onClickTouploadImage(`https://cloud.taggbox.com/postimage/${result.id}`, () => {\n                setTimeout(() => {\n                    this.uppy.cancelAll()\n                    this.setState({ backgroundModal: false })\n                }, 300)\n            })\n        })\n    }\n    onBackgroundClose = event => {\n        this.uppy.cancelAll()\n        this.setState({ backgroundModal: false })\n    }\n    onBackgroundOpen = event => {\n        this.setState({ backgroundModal: true }, () => {\n            $(\".uppy-Dashboard-close\").click(() => {\n                this.uppy.cancelAll()\n                this.setState({ backgroundModal: false })\n            })\n        })\n    }\n    render() {\n        const { imageStyle, backgroundImage } = this.props\n        const { backgroundModal } = this.state\n        return <>\n            <div className=\"d-flex align-items-start justify-content-between flex-column py-1\">\n                <label className=\"mb-1 fs-9 fw-medium\">Background Image</label>\n                {!backgroundImage ? <button type=\"button\" className=\"btn btn-secondary btn-sm w-100 mb-2\" onClick={()=>this.setState({backgroundModal:true})}>Attach Image</button>: null}\n                {backgroundImage ? \n                <div className=\"card card-custom mb-2 w-100 rounded-1\">\n                    <div className=\"card-body d-flex flex-column p-1\">\n                        <div className=\"position-relative d-flex align-items-center cursor-pointer\">\n                            <div className=\"position-relative rounded-1 bg-light overflow-hidden w-100\" style={imageStyle}>\n                                <img className=\"img-fluid position-absolute w-100\" loading=\"lazy\" src={backgroundImage} height={500} width={300}  />\n                            </div>\n                            <div className=\"removeBanner position-absolute end-0 top-0 pt-2 pe-2\">\n                                <div className=\"d-flex align-items-center justify-content-end\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2\" onClick={()=>this.setState({backgroundModal:true})}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px\" onClick={()=>this.props.onClickTouploadImage('',()=>{})}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5zM6 6v14h12V6H6zm3 3h2v8H9V9zm4 0h2v8h-2V9z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div> : null}\n            </div>\n            {\n                backgroundModal ? <DashboardModal\n                    animateOpenClose={true}\n                    open={true}\n                    proudlyDisplayPoweredByUppy={false}\n                    inline={false}\n                    showProgressDetails={true}\n                    height={750}\n                    browserBackButtonClose={true}\n                    showRemoveButtonAfterComplete={false}\n                    uppy={this.uppy}\n                    onRequestCloseModal={this.onBackgroundClose}\n                    closeAfterFinish={true}\n                    plugins={[]}\n                /> : null\n            }\n        </>\n    }\n\n}\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport { Uppy } from \"@uppy/core\";\nimport Transloadit from \"@uppy/transloadit\";\nimport GoogleDrive from '@uppy/google-drive';\nimport Url from '@uppy/url';\nimport { DashboardModal } from '@uppy/react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nconst uppyConfig = {\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\n    uppyBucket: 'cloud.taggbox.com',\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\n    companionUrl: 'https://test.taggbox.com'\n}\n\nexport default class UploadImage extends Component {\n    constructor(props) {\n        super(props)\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\n            .use(Transloadit, {\n                target: '#a',\n                params: {\n                    auth: {\n                        key: uppyConfig.uppyKey\n                    },\n                    steps: {\n                        store: {\n                            robot: \"/wasabi/store\",\n                            bucket_region: \"us-west-1\",\n                            bucket: uppyConfig.uppyBucket,\n                            key: uppyConfig.uppyAwsKey,\n                            secret: uppyConfig.uppyAwsSecret,\n                            path: 'postimage/${file.id}'\n                        }\n                    }\n                },\n                waitForEncoding: true\n            })\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n    }\n    state = {\n        backgroundModal: false\n    }\n    componentDidMount() {\n        var self = this;\n        this.uppy.on('transloadit:result', (stepName, result) => {\n            self.props.onClickTouploadLogo(`https://cloud.taggbox.com/postimage/${result.id}`, () => {\n                setTimeout(() => {\n                    this.uppy.cancelAll()\n                    this.setState({ backgroundModal: false })\n                }, 300)\n            })\n        })\n    }\n    onBackgroundClose = event => {\n        this.uppy.cancelAll()\n        this.setState({ backgroundModal: false })\n    }\n    onBackgroundOpen = event => {\n        this.setState({ backgroundModal: true }, () => {\n            $(\".uppy-Dashboard-close\").click(() => {\n                this.uppy.cancelAll()\n                this.setState({ backgroundModal: false })\n            })\n        })\n    }\n    render() {\n        const { imageStyle, logoImage } = this.props\n        const { backgroundModal } = this.state\n        return <>\n            <div className=\"d-flex align-items-start justify-content-between flex-column py-1\">\n                <label className=\"mb-1 fs-9 fw-medium\">Logo</label>\n                {!logoImage ? <button type=\"button\" className=\"btn btn-secondary btn-sm w-100 mb-2\" onClick={() => this.setState({ backgroundModal: true })}>Attach Logo</button> : null}\n                {logoImage ?\n                    <div className=\"card card-custom mb-2 w-100 rounded-1\">\n                        <div className=\"card-body d-flex flex-column p-1\">\n                            <div className=\"position-relative d-flex align-items-center cursor-pointer\">\n                                <div className=\"position-relative rounded-1 bg-light overflow-hidden w-100\" style={imageStyle}>\n                                    <img className=\"img-fluid position-absolute w-100\" loading=\"lazy\" src={logoImage} height={500} width={300} />\n                                </div>\n                                <div className=\"removeBanner position-absolute end-0 top-0 pt-2 pe-2\">\n                                    <div className=\"d-flex align-items-center justify-content-end\">\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                            <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2\" onClick={() => this.setState({ backgroundModal: true })}>\n                                                <span className=\"svg-icon svg-icon-6 me-0\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                            </button>\n                                        </OverlayTrigger>\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                            <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px\" onClick={() => this.props.onClickTouploadLogo('', () => { })}>\n                                                <span className=\"svg-icon svg-icon-6 me-0\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5zM6 6v14h12V6H6zm3 3h2v8H9V9zm4 0h2v8h-2V9z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                            </button>\n                                        </OverlayTrigger>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> : null}\n            </div>\n            {\n                backgroundModal ? <DashboardModal\n                    animateOpenClose={true}\n                    open={true}\n                    proudlyDisplayPoweredByUppy={false}\n                    inline={false}\n                    showProgressDetails={true}\n                    height={750}\n                    browserBackButtonClose={true}\n                    showRemoveButtonAfterComplete={false}\n                    uppy={this.uppy}\n                    onRequestCloseModal={this.onBackgroundClose}\n                    closeAfterFinish={true}\n                    plugins={[]}\n                /> : null\n            }\n        </>\n    }\n\n}\n","import React, { Component } from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nimport { HOST_URL, EmbedURL } from '../../../Services/Api';\n\nclass UrlInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { showModal: false, genrateCode: false, codeCopied: false, shareLink: \"\", isLoading: false };\n    }\n    codeCopy = (id) => event => {\n        console.log(\"codeCopy\", id)\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    render() {\n        const { genrateCode, showModal, codeCopied } = this.state\n        const { inputUrl, inputId, inputSize, share, copy, edit, onClickToOpen } = this.props\n        return <div className=\"position-relative mb-2\">\n            <input type={'text'} id={inputId ? inputId : 'campaignUrl'} className={`text-ellipsis form-control ${inputSize ? `form-control-${inputSize}` : ``}`} value={inputUrl} readOnly onClick={this.codeCopy(inputId ? inputId : 'campaignUrl')} style={{ paddingRight: 70 }} />\n            <div className=\"d-flex align-items-center position-absolute top-50 translate-middle-y end-0 pe-2\">\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Url' : 'Url Copied'}</Tooltip>}>\n                    <button type=\"button\" className=\"btn btn-icon btn-xs btn-active-light btn-active-color-primary ms-1\" onClick={this.codeCopy(inputId ? inputId : 'campaignUrl')}>\n                        <i class=\"ri-file-copy-line\"></i>\n                    </button>\n                </OverlayTrigger>\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Url' : 'Url Copied'}</Tooltip>}>\n                    <button type=\"button\" className=\"btn btn-icon btn-xs btn-active-light btn-active-color-primary ms-1\" onClick={onClickToOpen(inputUrl)}>\n                        <i class=\"ri-mail-line\"></i>\n                    </button>\n                </OverlayTrigger>\n                {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit Campaign Url</Tooltip>}>\n                            <button type=\"button\" className=\"btn btn-icon btn-xs btn-active-light btn-active-color-primary ms-1\" onClick={this.EditCampaignUrlModal}>\n                                <i class=\"ri-edit-box-line\"></i>\n                            </button>\n                        </OverlayTrigger> */}\n            </div>\n        </div>\n    }\n}\n\nexport default UrlInput;","import React, { Component, Suspense } from 'react';\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nimport { EmbedURL, EMBED_MIN } from '../../../Services/Api'\nimport { mailSendRequest } from '../../../Services/Actions/mailActions';\nimport ShareEmbedModal from '../PublishCommonComponents/ShareEmbedModal';\n\n\nclass CodeShareCopy extends Component {\n    constructor() {\n        super();\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\n    }\n    shareEmbedModal = (id) => event => this.setState({\n        showModal: true,\n        id: id\n    })\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent\n        })\n    }\n\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    render() {\n        const { codeCopied } = this.state\n        const { copyText, id, height, onClickToOpen } = this.props\n\n        return <div className=\"mb-2 mb-xl-3 position-relative\">\n            <code className={`form-control textarea-min-row-${height} fs-10`} id={id} onClick={() => { this.codeCopy({ id }) }} style={{ wordBreak: 'break-all' }}>\n                {copyText}\n            </code>\n            <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                    <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy({ id }) }}>\n                        {!codeCopied ?\n                            <i class=\"ri-file-copy-line\"></i>\n                            :\n                            <i class=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                        }\n                    </button>\n                </OverlayTrigger>\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                    <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={onClickToOpen(copyText)}>\n                        <i class=\"ri-mail-line\"></i>\n                    </button>\n                </OverlayTrigger>\n            </div>\n        </div>\n\n    }\n}\n\nexport default CodeShareCopy;","import React, { Component } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport UrlInput from '../../../CommonComponents/UrlInput';\nimport CodeShareCopy from '../../../CommonComponents/CodeShareCopy';\nimport PreviewOnsite from './PreviewOnsite';\n\nclass LinkOnsite extends Component {\n\n    render() {\n        const { tinyUrl, onClickToOpen } = this.props\n        return <div className=\"d-flex align-items-start flex-column flex-md-row\">\n            <div className=\"uploadInnerAside flex-shrink-0 mb-3 mb-sm-0\">\n                <PerfectScrollbar>\n                    <div className=\"upload_aside_scroll\">\n                        <div className=\"mb-2\">\n                            <h4 className=\"mb-3 fs-9\">1. Collect & Display Content Shared </h4>\n                            <p className=\"mb-5\">Copy and share this URL with your audience, allow them to upload visual UGC and reviews, and get the liberty to repurpose users’ UGC in compelling ways.</p>\n                            <h4 className=\"mb-3 fs-9\">Uploader URL</h4>\n                            <CodeShareCopy copyText={tinyUrl} id={'smsLink'} height={3} onClickToOpen={onClickToOpen} />\n                            <h4 className=\"mb-3 fs-9\">2. The Easiest Process To Collect UGC</h4>\n                            <p className=\"mb-5\">Collect valuable UGC seamlessly by sharing this URL, and utilize this UGC for social sharing and improving conversions.</p>\n                        </div>\n                    </div>\n                </PerfectScrollbar>\n            </div>\n            <div className=\"d-flex flex-grow-1 w-100 flex-column\">\n                <UrlInput inputUrl={tinyUrl} inputId={'onsite'} inputSize={''} onClickToOpen={onClickToOpen}\n                    share={[{ status: true, tooltip: 'Share Onsite Url' }]}\n                    copy={[{ status: true, tooltip: 'Share Onsite Url' }]}\n                    edit={[{ status: true, tooltip: 'Share Onsite Url' }]} />\n                <PreviewOnsite {...this.props} />\n            </div>\n        </div>\n    }\n}\n\nexport default LinkOnsite;","import React, { Component, Suspense } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport UrlInput from '../../../CommonComponents/UrlInput';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport PreviewOnsite from './PreviewOnsite';\nimport ColorPicker from '../../../CommonComponents/ColorPicker';\nimport WidgetOnsiteButton from '../../../Templates/ThemeTemplates/Components/WidgetOnsiteButton';\n\nclass WebsiteOnsite extends Component {\n    state = { error: false, buttonText: \"Scan QR or Tap Here to Upload UGC\", bgColor: \"#000\", fcColor: \"#000\", fontSize: 8 };\n    onBGColorChange = (value) => {\n        this.setState({ bgColor: value })\n\n    }\n    onFCColorChange = (value) => {\n        this.setState({ fcColor: value })\n    }\n    onFontSize = event => {\n        this.setState({ fontSize: event.target.value })\n    }\n    onChangeText = event => {\n        this.setState({ buttonText: event.target.value })\n    }\n    render() {\n        const { error, buttonText, bgColor, fcColor, fontSize } = this.state\n        const { tinyUrl, onClickToOpen, uniqueCode } = this.props\n        return <div className=\"d-flex align-items-start flex-column flex-md-row\">\n            <div className=\"uploadInnerAside flex-shrink-0 mb-3 mb-sm-0\">\n                <PerfectScrollbar>\n                    <div className=\"upload_aside_scroll\">\n                        <div className=\"mb-2\">\n                            <label className=\"mb-1 fs-9 fw-medium\">Button Text</label>\n                            <div className=\"\">\n                                <input type=\"text\" name=\"title\" className={`form-control form-control-sm ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Button Title...\" value={buttonText} onChange={this.onChangeText} />\n                                {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                            </div>\n                        </div>\n                        <label className=\"d-flex align-items-center justify-content-between h-40px py-1 position-relative\">\n                            <span className=\"ms-0 fs-9 fw-medium\">Background Color</span>\n                            <Suspense fallback={<></>}>\n                                <ColorPicker color={bgColor} onChangeColor={this.onBGColorChange} />\n                            </Suspense>\n                        </label>\n                        <label className=\"d-flex align-items-center justify-content-between h-40px py-1 position-relative\">\n                            <span className=\"ms-0 fs-9 fw-medium\">Font Color</span>\n                            <Suspense fallback={<></>}>\n                                <ColorPicker color={fcColor} onChangeColor={this.onFCColorChange} />\n                            </Suspense>\n                        </label>\n                        <div className=\"d-flex align-items-stretch flex-column justify-content-between py-1\">\n                            <div className=\"\">\n                                <p className=\"my-2\"><span className=\"fs-9 fw-medium\">Font Size</span></p>\n                            </div>\n                            <div className=\"d-flex align-items-center w-100 mb-1\">\n                                <div className=\"d-flex flex-grow-1 pe-3\">\n                                    <div className=\"form-group pt-1 w-100\">\n                                        <input type=\"range\" className=\"form-range\" min=\"10\" max=\"30\" step=\"1\" value={fontSize} defaultValue={fontSize} id=\"formControlRange\" onChange={this.onFontSize} />\n                                    </div>\n                                </div>\n                                <div className=\"d-flex align-items-center\">\n                                    <div className=\"form-group me-1\">\n                                        <input type=\"number\" className=\"form-control form-control-sm w-54px\" value={fontSize} defaultValue={fontSize} onChange={this.onFontSize} />\n                                    </div>\n                                    px\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </PerfectScrollbar>\n\n            </div>\n            <div className=\"d-flex flex-grow-1 w-100 flex-column\">\n                <UrlInput inputUrl={tinyUrl} inputId={'onsite1'} inputSize={''} onClickToOpen={onClickToOpen}\n                    share={[{ status: true, tooltip: 'Share Onsite Url' }]}\n                    copy={[{ status: true, tooltip: 'Share Onsite Url' }]}\n                    edit={[{ status: false, tooltip: 'Share Onsite Url' }]} />\n                {/* <WidgetOnsiteButton templateFormData={''} /> */}\n\n                <code>\n                    &lt;style&gt;\n\n                    &lt;/style&gt;\n                    &lt;div class=\"tb_onsite_upload_btn_wrap\"&gt;\n                    &lt;div class=\"tb_onsite_upload_btn\"&gt;\n                    &lt;div style=\"backgroundColor: {bgColor}\" class='tb_onsite_btn'&gt;\n                    &lt;div class=\"tb_onsite_qr_btn_wrap\"&gt;\n                    &lt;div class='tb_onsite_qr_code'&gt;\n                    &lt;img src={uniqueCode} height={60} width={60} /&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"tb_onsite_btn_txt\" style=\"color: {fcColor};font-size: {fontSize}px;text-align:center;\"&gt;\n                    {buttonText}\n                    &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;/div&gt;\n                </code>\n            </div>\n        </div>\n    }\n}\n\nexport default WebsiteOnsite;","import React, { Component, Suspense } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport CodeShareCopy from '../../../CommonComponents/CodeShareCopy';\nimport UrlInput from '../../../CommonComponents/UrlInput';\nimport PreviewOnsite from './PreviewOnsite';\nimport ColorPicker from '../../../CommonComponents/ColorPicker';\n\nclass SMSMarketingOnsite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { error: false, codeCopied: false };\n    }\n\n    render() {\n        const { error } = this.state\n        const { tinyUrl, onClickToOpen } = this.props\n        return <div className=\"d-flex align-items-start flex-column flex-md-row\">\n            <div className=\"uploadInnerAside flex-shrink-0 mb-3 mb-sm-0\">\n                <PerfectScrollbar>\n                    <div className=\"upload_aside_scroll\">\n                        <div className=\"mb-2\">\n                            <h4 className=\"mb-3 fs-9\">1. The Most Authentic Way To Coll</h4>\n                            <p className=\"mb-5\">Get UGC directly from your customers and utilize it to drive conversions, and influence purchase decisions.</p>\n                            <h4 className=\"mb-3 fs-9\">Uploader URL</h4>\n                            <CodeShareCopy copyText={`Hello, there! Thank you for trusting us with your purchase. We love having customers like you and your trust and confidence mean the world to us. We can’t for you to try our product! Click the link and tell us what you think. Share your pictures, videos, and reviews with us and get featured on our socials. ${tinyUrl}`} id={'smsLink'} height={3} onClickToOpen={onClickToOpen} />\n\n                            <h4 className=\"mb-3 fs-9\">2. Send Messages The Easiest Way</h4>\n                            <p className=\"mb-5\">Simply write a message and copy it along with the generated link provided in the box, and forward it to your audience with your SMS marketing platform.</p>\n                        </div>\n                    </div>\n                </PerfectScrollbar>\n            </div>\n            <div className=\"d-flex flex-grow-1 w-100 flex-column\">\n                <div className=\"w-100 rounded-3 border border-5 p-4 border-dark mx-auto\" style={{ maxWidth: 250 }}>\n                    <h5 className=\"mb-5 h6\"><i class=\"ri-arrow-left-line\"></i> AR-Taggbox</h5>\n                    <p className=\"text-gray-500 fs-10 text-center mb-1\">02 Jan, 2022</p>\n                    <div className=\"bg-light rounded-2 p-2\">\n                        <p className=\"mb-5\">Thank you for trusting us with your purchase. We love having customers like you and your trust and confidence mean the world to us. We can’t for you to try our product! Click the link and tell us what you think. Share your pictures, videos, and reviews with us and get featured on our socials. </p>\n                        <p className=\"text-primary mb-0\">{tinyUrl}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default SMSMarketingOnsite;","\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from \"react-toastify\";\nimport { Nav, Tab } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport PreviewOnsite from './components/PreviewOnsite';\nimport UploadImage from './components/UploadImage';\nimport UploadLogo from './components/UploadLogo';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { getOnsiteSettings, updateOnsiteFeed } from '../../../../Services/Actions/addFeedAction';\nimport { mailSendRequest } from '../../../../Services/Actions/mailActions'\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport LinkOnsite from './components/LinkOnsite';\nimport WebsiteOnsite from './components/WebsiteOnsite';\nimport SMSMarketingOnsite from './components/SMSMarketingOnsite';\nconst ColorPicker = React.lazy(() => import('../../CommonComponents/ColorPicker'));\nconst ShareEmbedModal = React.lazy(() => import('../../../Main/PublishCommonComponents/ShareEmbedModal'));\n\nclass OnsiteUpload extends Component {\n    state = {\n        onSiteEnable: false,\n        loading: false,\n        title: 'Submit your post',\n        subTitle: 'You can share your reviews/rating here',\n        error: false,\n        subtitleError: false,\n        selectedColor: '#eff2f3',\n        btnText: 'Submit',\n        btnTextError: false,\n        msgError: false,\n        backgroundImage: '',\n        msg: 'The post(s) will be appeared after the admin approval',\n        tinyUrl: \"\",\n        uniqueCode: null,\n        isLoading: false,\n        showModal: false,\n        dataShare: null,\n        logoImage: null\n    }\n\n    componentWillMount() {\n        this.onLoadSettings()\n    }\n    onLoadSettings = () => {\n        getOnsiteSettings().then(response => {\n            const { response_code, responseData } = response.data;\n\n            if (response_code == 200) {\n                const { feeds } = responseData;\n\n                if (feeds && feeds.length > 0) {\n                    const { onsite_settings, collection, value4, value1 } = feeds[0];\n                    const settings = JSON.parse(onsite_settings);\n                    if (settings && Object.keys(settings).length > 0) {\n                        const { onsite_bg_color_wg, onsite_bg_image_wg, onsite_popup_btn_txt, onsite_popup_sub_heading, onsite_popup_title, onsite_succ_msg, onsite_status, onsite_logo } = settings;\n                        this.props.onUGCUploadCollection(collection)\n                        this.setState({ title: onsite_popup_title, subTitle: onsite_popup_sub_heading, btnText: onsite_popup_btn_txt, msg: onsite_succ_msg, backgroundImage: onsite_bg_image_wg, logoImage: onsite_logo, selectedColor: onsite_bg_color_wg, onSiteEnable: onsite_status == 1 ? true : false, tinyUrl: value4, uniqueCode: value1 && String(value1).length > 0 ? `https://cloud.taggbox.com/onsiteupload/images/${value1}.png` : null })\n                    }\n\n                }\n            }\n        }).catch(ex => {\n\n        })\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, subtitleError: false, subtitleError: false, btnTextError: false, msgError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onColorChange = (value) => {\n        this.setState({ selectedColor: value })\n    }\n\n    onClickTouploadImage = (value, callBack) => {\n        this.setState({ backgroundImage: value }, () => callBack())\n    }\n    onClickTouploadLogo = (value, callBack) => {\n        this.setState({ logoImage: value }, () => callBack())\n    }\n\n    onSubmit = () => {\n        const { title, subTitle, backgroundImage, selectedColor, onSiteEnable, btnText, msg, logoImage } = this.state;\n        const { collection } = this.props\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        if (title == '') {\n            this.setState({ error: true });\n        } else if (subTitle == '') {\n            this.setState({ subTitle: true });\n        } else if (btnText == '') {\n            this.setState({ btnTextError: true });\n        } else if (msg == '') {\n            this.setState({ msg: true });\n        } else {\n            const obj = {\n                ...isCollection,\n                network: 29,\n                filter: 2,\n                moderation: 0,\n                onsite_qr_code_btn_text: \"Scan QR code or click here to submit reviews/rating\",\n                onsite_btn_color: \"#000000\",\n                onsite_btn_txt_color: \"#ffffff\",\n                onsite_link_font_btn: \"Lato\",\n                onsite_css_font_btn: \"Lato\",\n                onsite_font_varient_btn: \"\",\n                btn_fontSize: 16,\n                onsite_qr_code_status: 1,\n                onsite_popup_title: title,\n                onsite_popup_btn_txt: btnText,\n                onsite_popup_sub_heading: subTitle,\n                onsite_term_url: \"https://taggbox.com/on-site-uploads-content-rights/\",\n                onsiteImgBack: \"\",\n                onsite_logo: logoImage,//\"https://cloud.taggbox.com/widget/themes/media/images/taggbox.svg\",\n                Onsite_logoImageValue: \"\",\n                onsite_bg_color_wg: selectedColor,\n                onsiteBackImage: \"\",\n                onsite_bg_image_wg: backgroundImage,\n                Onsite_backImageValue: \"\",\n                onsite_succ_msg: msg,\n                onsite_thank_txt_color: \"#000000\",\n                onsite_link_font_msg: \"Default\",\n                onsite_css_font_msg: \"Default\",\n                onsite_font_varient_msg: \"\",\n                onsite_thank_fontSize: 16,\n                onsite_status: onSiteEnable ? 1 : 0\n            };\n            this.setState({ loading: true, error: false, subtitleError: false, subtitleError: false, btnTextError: false, msgError: false });\n            updateOnsiteFeed(obj, (getFeedId) => {\n                this.props.getAllfeeds()\n                this.onLoadSettings()\n                this.setState({ loading: false });\n                //this.props.history(`/assets?feedId=${getFeedId}`);\n                //this.props.editMediaHandleCallback(false);\n            });\n        }\n\n    }\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent,\n            dataShare: null\n        })\n    }\n\n    onClickToShare = (mailId) => event => {\n        var self = this;\n        const { dataShare } = this.state\n        this.setState({ isLoading: true })\n        if (mailId && String(mailId).length > 0) {\n            mailSendRequest({ htmlCode: dataShare, email: mailId, type: 3 }).then((response) => {\n                toast.success(\"Ugc uploader url has been successfully sent.\")\n                self.setState({ showModal: false, isLoading: false })\n            })\n        }\n        else {\n            toast.error(\"Please enter email id.\")\n        }\n    }\n\n    onClickToOpen = (dataShare) => event => this.setState({\n        showModal: true,\n        dataShare\n    })\n    render() {\n        const imageStyle = {\n            paddingBottom: '66%', width: '100%'\n        };\n\n\n        const { title, subTitle, error, onSiteEnable, subtitleError, backgroundImage, loading, selectedColor, btnText, msg, btnTextError, msgError, showModal, logoImage } = this.state;\n        return <>   <Tab.Container id=\"ugc-upload\" defaultActiveKey=\"tab_uploader\">\n            <Nav variant=\"pills\" className=\"d-flex flex-row mb-3\">\n                <Nav.Item>\n                    <Nav.Link className=\"me-2\" eventKey=\"tab_uploader\">Uploader</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link className=\"me-2\" eventKey=\"tab_publish\">Publish Options</Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <Tab.Content>\n                <Tab.Pane fade={true} eventKey=\"tab_uploader\">\n                    <Tab.Container id=\"ugc-upload2\" defaultActiveKey=\"tab_uploader1\">\n                        <Nav variant=\"underline\" className=\"d-flex flex-row border-bottom mb-3\">\n                            <Nav.Item>\n                                <Nav.Link className=\"me-3 me-lg-6 px-0 fw-semibold fs-8\" eventKey=\"tab_uploader1\">\n                                    <SVG className=\"me-1\" src={baseUrl('media/icons/social-icons/onsite-upload.svg')} height={20} width={20} />\n                                    Uploader Options\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <Tab.Content>\n                            <Tab.Pane fade={true} eventKey=\"tab_uploader1\">\n                                <div className=\"d-flex align-items-start flex-column flex-md-row\">\n                                    <div className=\"uploadInnerAside flex-shrink-0 mb-3 mb-sm-0\">\n                                        <label className=\"form-check form-switch py-2 align-items-center justify-content-between mb-2 h-40px py-1\">\n                                            <span className=\"form-check-label ps-0 fs-9 fw-medium text-gray-800 me-2\">Enable</span>\n                                            <input className=\"form-check-input\" type=\"checkbox\" name=\"onSiteEnable\" checked={onSiteEnable} onChange={(e) => this.onCheckHandler(e)} />\n                                        </label>\n                                        <PerfectScrollbar>\n                                            <div className=\"upload_aside_scroll\">\n                                                <div className=\"mb-2\">\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Title</label>\n                                                    <div className=\"\">\n                                                        <input type=\"text\" name=\"title\" className={`form-control form-control-sm ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Sub Title...\" value={title} onChange={(e) => this.onChangeHandler(e)} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                <div className=\"mb-2\">\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Sub Heading</label>\n                                                    <div className=\"\">\n                                                        <input type=\"text\" name=\"subTitle\" className={`form-control form-control-sm ${subtitleError ? 'is-invalid' : ''}`} placeholder=\"Enter Title...\" value={subTitle} onChange={(e) => this.onChangeHandler(e)} />\n                                                        {subtitleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                <label className=\"d-flex align-items-center justify-content-between h-40px py-1 position-relative\">\n                                                    <span className=\"ms-0 fs-9 fw-medium\">Background Color</span>\n                                                    <Suspense fallback={<></>}>\n                                                        <ColorPicker color={selectedColor} onChangeColor={this.onColorChange} />\n                                                    </Suspense>\n                                                </label>\n\n                                                <UploadLogo imageStyle={imageStyle} logoImage={logoImage} onClickTouploadLogo={this.onClickTouploadLogo} />\n                                                <UploadImage imageStyle={imageStyle} backgroundImage={backgroundImage} onClickTouploadImage={this.onClickTouploadImage} />\n                                                <div className=\"mb-2\">\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Submit Button Text</label>\n                                                    <div className=\"\">\n                                                        <input type=\"text\" name=\"btnText\" className={`form-control form-control-sm ${btnTextError ? 'is-invalid' : ''}`} placeholder=\"Enter Button Text...\" value={btnText} onChange={(e) => this.onChangeHandler(e)} />\n                                                        {btnTextError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                <div className=\"mb-2\">\n                                                    <label className=\"mb-1 fs-9 fw-medium\">Thank You Message</label>\n                                                    <div className=\"w-100 pb-2\">\n                                                        <textarea className={`form-control textarea-min-row-5 fs-9 ${msgError ? 'is-invalid' : ''}`} name=\"msg\" row={5} value={msg} onChange={(e) => this.onChangeHandler(e)}  >\n                                                        </textarea>\n                                                        {msgError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </PerfectScrollbar>\n                                    </div>\n                                    <div className=\"d-flex flex-grow-1 w-100 flex-column\">\n                                        <PreviewOnsite {...this.state} />\n                                    </div>\n                                </div>\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Tab.Container>\n                </Tab.Pane>\n                <Tab.Pane fade={true} eventKey=\"tab_publish\">\n                    <Tab.Container id=\"tab_publish_in\" defaultActiveKey=\"tab_link\">\n                        <Nav variant=\"underline\" className=\"d-flex flex-row border-bottom mb-3\">\n                            <Nav.Item>\n                                <Nav.Link className=\"me-3 me-lg-6 px-0 fw-medium fs-8\" eventKey=\"tab_link\">\n                                    <i class=\"ri-links-fill me-1\"></i>\n                                    Link\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link className=\"me-3 me-lg-6 px-0 fw-medium fs-8\" eventKey=\"tab_website\">\n                                    <i class=\"ri-window-line me-1\"></i>\n                                    Website\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link className=\"me-3 me-lg-6 px-0 fw-medium fs-8\" eventKey=\"tab_sms\">\n                                    <i class=\"ri-message-line me-1\"></i>\n                                    SMS Marketing\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <Tab.Content>\n                            <Tab.Pane fade={true} eventKey=\"tab_link\">\n                                <LinkOnsite {...this.state} onClickToOpen={this.onClickToOpen} />\n                            </Tab.Pane>\n                            <Tab.Pane fade={true} eventKey=\"tab_website\">\n                                <WebsiteOnsite {...this.state} onClickToOpen={this.onClickToOpen} />\n                            </Tab.Pane>\n                            <Tab.Pane fade={true} eventKey=\"tab_sms\">\n                                <SMSMarketingOnsite {...this.state} onClickToOpen={this.onClickToOpen} />\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Tab.Container>\n                </Tab.Pane>\n            </Tab.Content>\n        </Tab.Container>\n\n\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n\n            <Suspense fallback={<></>}>\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this ugc uploader url with your team. Enter the email Id to send the ugc uploader url directly to them\" heading=\"Send ugc uploader url by email\" /> : null}\n            </Suspense>\n        </>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OnsiteUpload)","import React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nclass ShareEmbedModal extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        emailId: \"\"\n    };\n\n    handleClose = event => this.props.shareEmbedCallback(false)\n\n    onChangeEmail = event => this.setState({ emailId: event.target.value })\n\n    render() {\n        const { shareEmbedModal, isLoading, text, heading } = this.props\n        const { emailId } = this.state\n        return <Modal show={shareEmbedModal} onHide={this.handleClose}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{heading}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0 pt-4\">\n                    <p className=\"text-center mb-4\">{text}</p>\n                    <div className=\"mb-3 mb-xl-4\">\n                        <textarea className=\"form-control\" placeholder=\"Ex: support@taggbox.com,info@taggbox.com\" value={emailId} onChange={this.onChangeEmail}></textarea>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer className=\"p-3\">\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0\">\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm btn-min-w me-3\" onClick={this.handleClose}>Cancel</button>\n                    <button type=\"button\" className={`btn btn-primary btn-sm btn-min-w ${isLoading ? `spinner` : ``}`} onClick={this.props.onClickToShare(this.state.emailId)}>Share Code</button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    }\n}\n\nexport default ShareEmbedModal;\n","import React, { Component } from 'react';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport SVG from 'react-inlinesvg';\nclass WidgetOnsiteButton extends Component {\n    render() {\n        const { onSiteUpload } = this.props.templateFormData\n        const ButtonBgStyle = {\n            fontFamily: onSiteUpload.onsite_css_font_btn,\n            backgroundColor: onSiteUpload.bgColor\n        }\n\n        const QRButtonText = onSiteUpload.qrCodeStatus || onSiteUpload.buttonText != '' ? onSiteUpload.buttonText : ''\n\n        const buttonStyle = onSiteUpload && Object.keys(onSiteUpload).length > 0 ? {\n            fontFamily: onSiteUpload.fontFamily ? onSiteUpload.fontFamily.family : \"\",\n            color: onSiteUpload.textColor,\n            fontSize: onSiteUpload.fontSize + 'px',\n            textAlign: onSiteUpload.qrCodeStatus === 1 ? 'left' : 'center'\n        } : null\n        return onSiteUpload.buttonStatus && (onSiteUpload.qrCodeStatus == 1 || QRButtonText !== '') ? <div className=\"tb_onsite_upload_btn_wrap\">\n            <div className=\"tb_onsite_upload_btn\">\n                <div style={ButtonBgStyle} className='tb_onsite_btn'>\n                    <div className=\"tb_onsite_qr_btn_wrap\">\n                        {onSiteUpload.qrCodeStatus == 1 ? <div className='tb_onsite_qr_code'>\n                            <SVG src={baseUrl('media/icons/svg-icons/qr-code.svg')} height={60} width={60} />\n                        </div> : null}\n                        {QRButtonText !== '' ?\n                            <div className={`tb_onsite_btn_txt tb-cTBfont-${onSiteUpload && Object.keys(onSiteUpload.fontVarient).length > 0 ? onSiteUpload.fontVarient.value : \"\"}`} style={buttonStyle}>\n                                {QRButtonText}\n                            </div> : ''}\n                    </div>\n                </div>\n            </div>\n        </div> : null\n    }\n}\n\nexport default WidgetOnsiteButton;"],"names":["ColorPicker","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","hex","onChangeColor","nextProps","this","styles","reactCSS","background","swatch","padding","borderRadius","boxShadow","display","cursor","popover","position","zIndex","top","right","cover","bottom","left","className","onClick","style","onChange","Component","SubmitFeedRequest","supportUrl","videoUrl","cancelFeed","sumbitFeed","loading","hideBtn","Suspense","fallback","content","type","PreviewOnsite","title","subTitle","backgroundImage","selectedColor","btnText","logoImage","backgroundColor","src","width","height","alt","hidden","name","accept","focusable","viewBox","d","fillRule","dir","rows","placeholder","uppyConfig","UploadImage","backgroundModal","onBackgroundClose","event","uppy","cancelAll","onBackgroundOpen","$","click","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","target","params","auth","key","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","GoogleDrive","companionUrl","Url","self","on","stepName","result","onClickTouploadImage","id","setTimeout","imageStyle","OverlayTrigger","placement","overlay","Tooltip","xmlns","fill","animateOpenClose","open","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","onRequestCloseModal","closeAfterFinish","plugins","onClickTouploadLogo","UrlInput","codeCopy","console","log","codeCopied","COPY_TO_CLIPBOARD","showModal","genrateCode","shareLink","isLoading","inputUrl","inputId","inputSize","onClickToOpen","share","copy","edit","value","readOnly","paddingRight","class","CodeShareCopy","shareEmbedModal","shareEmbedCallback","shareEmbedEvent","widthSign","heightSign","copyText","wordBreak","LinkOnsite","tinyUrl","status","tooltip","WebsiteOnsite","error","buttonText","bgColor","fcColor","fontSize","onBGColorChange","onFCColorChange","onFontSize","onChangeText","uniqueCode","min","max","step","defaultValue","SMSMarketingOnsite","maxWidth","React","ShareEmbedModal","OnsiteUpload","onSiteEnable","subtitleError","btnTextError","msgError","msg","dataShare","onLoadSettings","getOnsiteSettings","then","response","data","response_code","responseData","feeds","length","onsite_settings","collection","value4","value1","settings","JSON","parse","Object","keys","onsite_bg_color_wg","onsite_bg_image_wg","onsite_popup_btn_txt","onsite_popup_sub_heading","onsite_popup_title","onsite_succ_msg","onsite_status","onsite_logo","onUGCUploadCollection","String","catch","ex","onChangeHandler","onCheckHandler","checked","onColorChange","callBack","onSubmit","collectionId","map","iCollection","push","isCollection","join","obj","network","filter","moderation","onsite_qr_code_btn_text","onsite_btn_color","onsite_btn_txt_color","onsite_link_font_btn","onsite_css_font_btn","onsite_font_varient_btn","btn_fontSize","onsite_qr_code_status","onsite_term_url","onsiteImgBack","Onsite_logoImageValue","onsiteBackImage","Onsite_backImageValue","onsite_thank_txt_color","onsite_link_font_msg","onsite_css_font_msg","onsite_font_varient_msg","onsite_thank_fontSize","updateOnsiteFeed","getFeedId","getAllfeeds","onClickToShare","mailId","mailSendRequest","htmlCode","email","toast","paddingBottom","Tab","defaultActiveKey","Nav","variant","eventKey","fade","baseUrl","e","row","onBack","text","heading","connect","dispatch","getFeedsData","emailId","onChangeEmail","show","onHide","centered","closeButton","WidgetOnsiteButton","onSiteUpload","templateFormData","ButtonBgStyle","fontFamily","QRButtonText","qrCodeStatus","buttonStyle","family","textColor","textAlign","buttonStatus","fontVarient"],"sourceRoot":""}