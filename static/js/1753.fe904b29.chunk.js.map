{"version":3,"file":"static/js/1753.fe904b29.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AssetsModal/AssetsModal.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { Modal, Dropdown } from 'react-bootstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport SVG from 'react-inlinesvg';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger, SubMenu } from \"react-contextmenu\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { GET_MEDIA_NAME } from '../../../../Services/Utils/utils'\r\nconst ModalMedia = React.lazy(() => import('./Elements/ModalMedia'));\r\nconst AssetsModalAside = React.lazy(() => import('./Elements/AssetsModalAside'));\r\nconst MoveTo = React.lazy(() => import('../Components/Actions/MoveTo'));\r\n\r\nclass AssetsModal extends Component {\r\n\r\n    state = {\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.modalCallback(false)\r\n    };\r\n    handleDragDrop = () => {\r\n\r\n    };\r\n    render() {\r\n        const { modalToggle, modalAssetData, exportDonwloadMedia, rightsHandleModalShow, addTagModalShow, postPostCopy, deleteAsset, collections, networkData, isTrash, onClickPutBack, onClickDeletePermanently, editMediaModalShow, postPostMove, postPostUpdate, currentIndex } = this.props\r\n\r\n        return <Modal size={'full'} show={modalToggle} className=\"assets_modal border-0 p-0\" backdrop={false}>\r\n            <Modal.Header className=\"border-0 p-0\">\r\n                <div className=\"ass_modal_actions d-flex flex-grow-1 justify-content-lg-end justify-content-between\">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                        <div className=\"d-none d-lg-flex\">\r\n                            {\r\n                                isTrash ? <>\r\n                                    <Button variant={'link'} className=\"text-decoration-none p-0 d-inline-flex align-items-center me-3\" onClick={onClickPutBack(modalAssetData)}>\r\n                                        <i className=\"ri-restart-line icon-6 me-1\"></i>\r\n                                        <span className=\"text-gray-800 fs-7\">Restore</span>\r\n                                    </Button>\r\n\r\n                                    <Button variant={'link'} className=\"text-decoration-none p-0 d-inline-flex align-items-center me-3\" onClick={onClickDeletePermanently(modalAssetData)}>\r\n                                        <i className=\"ri-delete-bin-6-line icon-6 me-1\"></i>\r\n                                        <span className=\"text-gray-800 fs-7\">Delete Permanently</span>\r\n                                    </Button>\r\n                                </> : <>\r\n\r\n                                    <Button variant={'link'} className=\"text-decoration-none p-0 d-inline-flex align-items-center me-3\" onClick={editMediaModalShow ? editMediaModalShow(modalAssetData) : null}>\r\n                                        <span className=\"svg-icon text-dark\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/magic-stick.svg')} height={15} width={15} />\r\n                                        </span>\r\n                                        <span className=\"menu-title\">Edit</span>\r\n                                    </Button>\r\n                                    <Button variant={'link'} className=\"text-decoration-none p-0 d-inline-flex align-items-center me-3\" onClick={addTagModalShow ? addTagModalShow(modalAssetData) : null}>\r\n                                        <i className=\"ri-price-tag-3-line icon-6 me-1 text-dark\"></i>\r\n                                        <span className=\"text-gray-800 fs-7\">Add Tag</span>\r\n                                    </Button>\r\n                                    <Dropdown align=\"start\" className=\"block-center position-relative\">\r\n                                        <Dropdown.Toggle variant=\"link\" className=\"text-decoration-none p-0 d-inline-flex align-items-center me-2 arrow_disabled\" >\r\n                                            <i className=\"ri-file-copy-line icon-6 me-1 text-dark\"></i>\r\n                                            <span className=\"menu-title\">Copy</span>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu style={{ width: 230 }}>\r\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n                                                <div style={{ minHeight: 180, maxHeight: 380 }}>\r\n                                                    {collections && collections.length > 0 ?\r\n                                                        collections.map((cItem, index) =>\r\n                                                            <div key={index} className=\"menu-item text-decoration-none\">\r\n                                                                <MenuItem className=\"dropdown-item\" onClick={postPostCopy ? postPostCopy({ collection: String(modalAssetData.collection), destination: String(cItem.id), id: modalAssetData.id }) : null}>\r\n                                                                    <div className=\"symbol symbol-24 flex-shrink-0 me-2 bg-light\" style={{ borderRadius: 2 }}>\r\n                                                                        {cItem.thumbnails ? <img className=\"img-fluid object-center-cover\" src={cItem.thumbnails} height={54} width={54} alt={GET_MEDIA_NAME(cItem.thumbnails)} /> :  <i className=\"ri-folder-open-line\"></i>}\r\n                                                                    </div>\r\n                                                                    <span className=\"menu-title\">{cItem.name}</span>\r\n                                                                </MenuItem>\r\n                                                            </div>\r\n                                                        ) : null}\r\n                                                </div>\r\n                                            </PerfectScrollbar>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n\r\n                                    <Dropdown align=\"start\" className=\"block-center position-relative\">\r\n                                        <Dropdown.Toggle variant=\"link\" className=\"text-decoration-none p-0 d-inline-flex align-items-center me-2 arrow_disabled\">\r\n                                            <i className=\"ri-arrow-right-circle-line icon-6 me-1 text-dark\"></i>\r\n                                            <span className=\"text-gray-800 fs-7\">Move to</span>\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        {collections && collections.length > 0 ?\r\n                                            <Dropdown.Menu style={{ width: 230 }}>\r\n                                                <PerfectScrollbar>\r\n                                                    <div style={{ minHeight: 180, maxHeight: 380 }}>\r\n                                                        {\r\n                                                            collections.map((cItem, index) => <div key={index} className=\"menu-item\" onClick={postPostMove ? postPostMove(modalAssetData.id, modalAssetData.collection, cItem.id) : null}>\r\n                                                                <Dropdown.Item>\r\n                                                                    <div className=\"symbol symbol-24 flex-shrink-0 me-2 bg-light\" style={{ borderRadius: 2 }}>\r\n                                                                        {cItem.thumbnails ? <img className=\"img-fluid object-center-cover\" src={cItem.thumbnails} height={54} width={54} alt={GET_MEDIA_NAME(cItem.thumbnails)} /> :\r\n                                                                           <i className=\"ri-folder-open-line\"></i>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    <span className=\"menu-title text-break\">{cItem.name}</span>\r\n                                                                </Dropdown.Item>\r\n                                                            </div>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                </PerfectScrollbar>\r\n                                            </Dropdown.Menu>\r\n                                            : null}\r\n                                    </Dropdown>\r\n\r\n                                    {(modalAssetData && modalAssetData.Feed && Object.keys(modalAssetData.Feed).length > 0 && (modalAssetData.networkId == 1 || (modalAssetData.networkId == 3 && modalAssetData.Feed.filterId == 62) || modalAssetData.networkId == 7 || modalAssetData.networkId == 8 || modalAssetData.networkId == 6 || modalAssetData.networkId == 11 || modalAssetData.networkId == 21 || (modalAssetData.networkId == 18 && (modalAssetData.Feed.filterId == 24 || modalAssetData.Feed.filterId == 25 || modalAssetData.Feed.filterId == 26)) || modalAssetData.networkId == 28)) ? <button type=\"button\" className=\"btn btn-link p-0 d-inline-flex align-items-center me-3 text-decoration-none\" onClick={rightsHandleModalShow ? rightsHandleModalShow(modalAssetData) : null}>\r\n                                        <span className=\"svg-icon text-dark\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={15} width={15} />\r\n                                        </span>\r\n                                        <span className=\"text-gray-800 fs-7\">Get Rights</span>\r\n                                    </button> : null}\r\n                                    <Dropdown align=\"start\" className=\"block-center position-relative\">\r\n                                        <Dropdown.Toggle variant=\"link\" className=\"text-decoration-none p-0 d-inline-flex align-items-center me-2 arrow_disabled\" >\r\n                                            <span className=\"svg-icon text-dark\">\r\n                                                <SVG src={baseUrl('media/icons/svg-icons/publish-line.svg')} height={15} width={15} />\r\n                                            </span>\r\n                                            <span className=\"text-gray-800 fs-7\">Publish to</span>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu style={{ width: 230 }}>\r\n                                            <PerfectScrollbar>\r\n                                                <div className=\"submenu_contxt_wrap\">\r\n                                                    <div className=\"menu-item text-decoration-none\">\r\n                                                        <MenuItem className=\"dropdown-item\" onClick={event => this.props.history(`/social-publish?assetId=${modalAssetData.id}`)}>\r\n                                                            <i className=\"ri-navigation-line icon-6 me-1\" style={{transform:'scaleX(-1)'}}></i>\r\n                                                            <span className=\"menu-title\">Social Publish</span>\r\n                                                        </MenuItem>\r\n                                                    </div>\r\n                                                    <div className=\"menu-item text-decoration-none\">\r\n                                                        <MenuItem className=\"dropdown-item\" onClick={event => this.props.history(`/print-media?assetId=${modalAssetData.id}`)}>\r\n                                                            <span className=\"svg-icon svg-icon-5\">\r\n                                                                <SVG src={baseUrl('media/icons/svg-icons/print-media-2.svg')} height={15} width={15} />\r\n                                                            </span>\r\n                                                            <span className=\"menu-title\">Print Media</span>\r\n                                                        </MenuItem>\r\n                                                    </div>\r\n                                                    <div className=\"menu-item text-decoration-none\">\r\n                                                        <MenuItem className=\"dropdown-item disabled\" onClick={event => this.props.history('/social-ads')}>\r\n                                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Coming soon</Tooltip>}><>\r\n                                                                <span className=\"svg-icon svg-icon-5\">\r\n                                                                    <SVG src={baseUrl('media/icons/svg-icons/speaker-line.svg')} height={15} width={15} />\r\n                                                                </span>\r\n                                                                <span className=\"menu-title\">Social Ads</span>\r\n                                                            </>\r\n                                                            </OverlayTrigger>\r\n                                                        </MenuItem>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </PerfectScrollbar>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                    <Button variant={'link'} className=\"text-decoration-none p-0 d-inline-flex align-items-center me-3\">\r\n                                        <i className={`icon-6 me-1 ${modalAssetData.pin == 1 ? 'ri-eye-line' : 'ri-eye-off-line'}`}></i>\r\n                                        <span className=\"text-gray-800 fs-7\">{modalAssetData.pin == 1 ? 'Show' : 'Hide' }</span>\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n\r\n                        </div>\r\n                        {!isTrash ? <Dropdown align=\"end\" className=\"block-center position-relative\">\r\n                            <Dropdown.Toggle variant=\"link\" className=\"text-decoration-none p-1 arrow_disabled d-flex align-items-center\">\r\n                                <i className=\"ri-more-2-fill icon-6 me-0\"></i>\r\n                                <span className=\"text-gray-800 fs-7 d-flex d-lg-none\">Actions</span>\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <div className=\"d-block d-lg-none\">\r\n                                    <div className=\"menu-item\">\r\n                                        <Dropdown.Item onClick={editMediaModalShow ? editMediaModalShow(modalAssetData) : null}>\r\n                                            <span className=\"svg-icon\">\r\n                                                <SVG src={baseUrl('media/icons/svg-icons/magic-stick.svg')} height={15} width={15} />\r\n                                            </span>\r\n                                            <span className=\"menu-title\">Edit</span>\r\n                                        </Dropdown.Item>\r\n                                    </div>\r\n                                    <div className=\"menu-item\">\r\n                                        <Dropdown.Item onClick={addTagModalShow ? addTagModalShow(modalAssetData) : null}>\r\n                                            <i className=\"ri-price-tag-3-line icon-6 me-1 text-dark\"></i>\r\n                                            <span className=\"menu-title\">Add Tag</span>\r\n                                        </Dropdown.Item>\r\n                                    </div>\r\n                                    {(modalAssetData && modalAssetData.Feed && Object.keys(modalAssetData.Feed).length > 0 && (modalAssetData.networkId == 1 || (modalAssetData.networkId == 3 && modalAssetData.Feed.filterId == 62) || modalAssetData.networkId == 7 || modalAssetData.networkId == 8 || modalAssetData.networkId == 6 || modalAssetData.networkId == 11 || modalAssetData.networkId == 21 || (modalAssetData.networkId == 18 && (modalAssetData.Feed.filterId == 24 || modalAssetData.Feed.filterId == 25 || modalAssetData.Feed.filterId == 26)) || modalAssetData.networkId == 28)) ?\r\n                                        <div className=\"menu-item\" onClick={deleteAsset ? deleteAsset(modalAssetData) : null}>\r\n                                            <Dropdown.Item onClick={rightsHandleModalShow ? rightsHandleModalShow(modalAssetData) : null}>\r\n                                                <span className=\"svg-icon\">\r\n                                                    <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={15} width={15} />\r\n                                                </span>\r\n                                                <span className=\"menu-title\">Get Rights</span>\r\n                                            </Dropdown.Item>\r\n                                        </div> : null}\r\n                                </div>\r\n                                <div className=\"menu-item\" onClick={exportDonwloadMedia ? exportDonwloadMedia(modalAssetData.postFile) : null}>\r\n                                    <Dropdown.Item>\r\n                                        <i className=\"ri-download-2-line icon-6 me-1\"></i>\r\n                                        <span className=\"menu-title\">Export/Download</span>\r\n                                    </Dropdown.Item>\r\n                                </div>\r\n                                <div className=\"menu-item\" onClick={deleteAsset ? deleteAsset(modalAssetData) : null}>\r\n                                    <Dropdown.Item>\r\n                                        <i className=\"ri-delete-bin-6-line icon-6 me-1 text-dark\"></i>\r\n                                        <span className=\"menu-title\">Move to Trash</span>\r\n                                    </Dropdown.Item>\r\n                                </div>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown> : null}\r\n                    </div>\r\n                </div>\r\n                <div className=\"assets_m_header_sidebar d-flex justify-content-between align-items-center px-lg-3 px-2 h-100 bg-white\">\r\n                    <span className=\"text-gray-800 fs-7 me-2 d-none d-lg-flex\">Details</span>\r\n                    <button type=\"button\" className=\"btn-close ms-0 text-light\" onClick={this.handleClose}></button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex align-items-center border-0 flex-wrap\">\r\n                <div className=\"assets_modal_inner flex-column flex-grow-1 block-center p-lg-4 p-xxl-5 position-relative mb-2 mb-lg-0 overflow-hidden\">\r\n                    <button type=\"button\" className=\"assets_modal_arrow_left btn btn-secondary rounded-circle position-absolute box-shadow p-0\" onClick={this.props.slideAssets(currentIndex - 1)}>\r\n                        <i className=\"ri-arrow-left-s-line icon-2 me-0\"></i>\r\n                    </button>\r\n                    <Suspense fallback={<></>}>\r\n                        <ModalMedia modalAssetData={modalAssetData} networkData={networkData} key={modalAssetData.id} />\r\n                    </Suspense>\r\n                    <button type=\"button\" className=\"assets_modal_arrow_right btn btn-secondary rounded-circle position-absolute box-shadow p-0\" onClick={this.props.slideAssets(currentIndex + 1)}>\r\n                        <i className=\"ri-arrow-right-s-line icon-2 me-0\"></i>\r\n                    </button>\r\n                </div>\r\n                <Suspense fallback={<></>}>\r\n                    {modalAssetData ? <AssetsModalAside modalAssetData={modalAssetData} collections={collections} isTrash={isTrash} postPostUpdate={postPostUpdate} key={modalAssetData.id} /> : null}\r\n                </Suspense>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        networkData: state.networks.networkData,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsModal);"],"names":["ModalMedia","React","AssetsModalAside","AssetsModal","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","handleClose","props","modalCallback","handleDragDrop","_createClass","key","value","_this2","_this$props","this","modalToggle","modalAssetData","exportDonwloadMedia","rightsHandleModalShow","addTagModalShow","postPostCopy","deleteAsset","collections","networkData","isTrash","onClickPutBack","onClickDeletePermanently","editMediaModalShow","postPostMove","postPostUpdate","currentIndex","_jsxs","Modal","size","show","className","backdrop","children","_jsx","_Fragment","Button","variant","onClick","SVG","src","baseUrl","height","width","Dropdown","align","style","PerfectScrollbar","options","wheelPropagation","minHeight","maxHeight","map","cItem","index","MenuItem","collection","String","destination","id","borderRadius","thumbnails","alt","GET_MEDIA_NAME","name","Feed","Object","keys","networkId","filterId","type","event","history","transform","OverlayTrigger","placement","overlay","Tooltip","pin","postFile","slideAssets","Suspense","fallback","Component","connect","networks"],"sourceRoot":""}