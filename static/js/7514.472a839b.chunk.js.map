{"version":3,"file":"static/js/7514.472a839b.chunk.js","mappings":"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","sources":["Layouts/Main/DisplayScreen/Components/Filters/AndOr.js","Layouts/Main/DisplayScreen/Components/Filters/AssetsTypes.js","Layouts/Main/DisplayScreen/Components/Filters/Collections.js","Layouts/Main/DisplayScreen/Components/Filters/Network.js","Layouts/Main/DisplayScreen/Components/Filters/UgcRights.js","Layouts/Main/DisplayScreen/Components/Filters/Tags.js","Layouts/Main/DisplayScreen/Components/Filters/Connection.js","Layouts/Main/DisplayScreen/Components/Filters/index.js","Layouts/Main/DisplayScreen/Components/Template/index.js","Layouts/Main/DisplayScreen/Components/Platforms/index.js","Layouts/Main/DisplayScreen/EditWebEmbed.js","Layouts/Main/DisplayScreen/Components/EmbedList/index.js","Layouts/Main/DisplayScreen/Components/DisplayScreenAside.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/react-select/dist/useCreatable-80ca1682.esm.js","../node_modules/react-select/creatable/dist/react-select-creatable.esm.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { capitalizeFirstLetter } from '../../../../../Services/Utils/utils';\r\n\r\n\r\nclass AndOrCondition extends Component {\r\n    render() {\r\n\r\n        const { condition,conditionApply } = this.props\r\n        return <Dropdown align=\"start\" className=\"block-center position-relative\">\r\n            <Dropdown.Toggle variant=\"secondary\" className=\"arrow_disabled\">\r\n                {capitalizeFirstLetter(condition)}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"btn-min-w\">\r\n                <div className=\"menu-item\">\r\n                    <Dropdown.Item className={condition == `and` ? `active` : ``} onClick={conditionApply(\"and\")}>And</Dropdown.Item>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <Dropdown.Item className={condition == `or` ? `active` : ``} onClick={conditionApply(\"or\")}>Or</Dropdown.Item>\r\n                </div>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n}\r\n\r\nexport default AndOrCondition","\r\nimport React, { Component } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport AndOrCondition from './AndOr'\r\nclass AssetsTypes extends Component {\r\n    render() {\r\n\r\n        const { onAssetsApply, onSelectAllAssetsApply, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\r\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\r\n                    <Accordion.Item eventKey={'assetsType'} className=\"pb-2\">\r\n                    <div className=\"d-flex\">\r\n                        <Accordion.Header className=\"me-1\">\r\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\r\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                        <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\r\n                                    </svg>\r\n                                </span>\r\n                                <div className=\"fs-9 fw-medium\">Assets Type</div>\r\n                            </div>\r\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\r\n                        </Accordion.Header>\r\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\r\n                    </div>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\r\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllassets\">\r\n                                <div className=\"navi-text\">\r\n                                    <p className=\"fs-9 fw-medium mb-0\">Select All</p>\r\n                                </div>\r\n                            </label>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllassets\" checked={Object.keys(state.assetsApply).length >= 3 ? true : false} onClick={onSelectAllAssetsApply} />\r\n                        </div>\r\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\r\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"image_assets\">\r\n                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"navi-text\">\r\n                                    <p className=\"fs-9 fw-medium mb-0\">Image Assets</p>\r\n                                </div>\r\n                            </label>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"image_assets\" checked={Object.keys(state.assetsApply).includes(\"2,4\") ? true : false} onClick={onAssetsApply(\"2,4\")} />\r\n                        </div>\r\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\r\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"video_assets\">\r\n                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                <path d=\"M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993zM4 5v14h16V5H4zm6.622 3.415l4.879 3.252a.4.4 0 0 1 0 .666l-4.88 3.252a.4.4 0 0 1-.621-.332V8.747a.4.4 0 0 1 .622-.332z\" fill=\"currentColor\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"navi-text\">\r\n                                    <p className=\"fs-9 fw-medium mb-0\">Video Assets</p>\r\n                                </div>\r\n                            </label>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"video_assets\" checked={Object.keys(state.assetsApply).includes(\"3,5\") ? true : false} onClick={onAssetsApply(\"3,5\")} />\r\n                        </div>\r\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\r\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"text_assets\">\r\n                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                <path d=\"M13 6v15h-2V6H5V4h14v2z\" fill=\"currentColor\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"navi-text\">\r\n                                    <p className=\"fs-9 fw-medium mb-0\">Text Assets</p>\r\n                                </div>\r\n                            </label>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"text_assets\" checked={Object.keys(state.assetsApply).includes(\"1\") ? true : false} onClick={onAssetsApply(\"1\")} />\r\n                        </div>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n                </Accordion>\r\n    }\r\n}\r\n\r\nexport default AssetsTypes","\r\nimport React, { Component } from 'react';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport AndOrCondition from './AndOr'\r\n\r\nclass Collections extends Component {\r\n    render() {\r\n\r\n\r\n        const { state, onCollectionSearchFilter, onCollectionSelectAll, onCollectionApply, conditionApply, filterApply, filterKey, indexFilter, isLast, onSelectActive } = this.props\r\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\r\n            <Accordion.Item eventKey={'collection'} className=\"pb-2\">\r\n                <div className=\"d-flex\">\r\n                    <Accordion.Header className=\"me-1\">\r\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\r\n                            <span className=\"svg-icon svg-icon-4 text-gray-800\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2zM8 19h12v-8H8v8zm-2 0v-9a1 1 0 0 1 1-1h13V7h-8.414l-2-2H4v14h2z\" fill=\"currentColor\" /></svg>\r\n                            </span>\r\n                            <div className=\"fs-9 fw-medium\">Collection</div>\r\n                        </div>\r\n                        <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\r\n                    </Accordion.Header>\r\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\r\n                </div>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    {state.collectionList && Object.keys(state.collectionList).length > 0 ?\r\n                        <>\r\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\r\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchCollection\">\r\n                                    <div className=\"navi-text\">\r\n                                        <p className=\"fs-9 fw-medium mb-0\">Search Collection</p>\r\n                                    </div>\r\n                                </label>\r\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onCollectionSelectAll} checked={Object.keys(state.selectedCollection).length >= state.collectionList.length ? true : false} />\r\n                            </div>\r\n                            <div className=\"form-group mb-2\">\r\n                                <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchCollection\" placeholder=\"Search your collection...\" onChange={onCollectionSearchFilter} />\r\n                            </div>\r\n                            <div className=\"\">\r\n                                {\r\n                                    state.collectionList.map((item) => <div className=\"dropdown-item px-0\">\r\n                                        <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`coolection_${item.id}`}>\r\n                                            <span className=\"symbol symbol-22\">\r\n                                                <img className=\"object-center-cover\" src={item.thumbnails} height={20} width={20} alt=\"\" />\r\n                                            </span>\r\n                                            <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\r\n                                        </label>\r\n                                        <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"\" id={`coolection_${item.id}`} checked={Object.keys(state.selectedCollection).includes(`${item.id}`) ? true : false} onClick={onCollectionApply(item.id)} />\r\n                                    </div>)\r\n                                }\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <div className=\"py-4\">\r\n                            <h6 className=\"text-center fs-9 mb-0 text-gray-700\">No Collections Available</h6>\r\n                        </div>\r\n                    }\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </Accordion>\r\n    }\r\n}\r\n\r\nexport default Collections\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\r\nimport AndOrCondition from './AndOr'\r\nclass Network extends Component {\r\n\r\n\r\n    render() {\r\n        const { state, onNetworkApply, onClickSelectAll, onSearchFilter, filterApply, filterKey, conditionApply, indexFilter,isLast,onSelectActive } = this.props\r\n\r\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\r\n                <Accordion.Item eventKey={'source'} className=\"pb-2\">\r\n                    <div className=\"d-flex\">\r\n                        <Accordion.Header className=\"me-1\">\r\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\r\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                                        <path id=\"Path_1\" data-name=\"Path 1\" d=\"M0,0H24V24H0Z\" fill=\"none\" />\r\n                                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M8.365,20.286A9.309,9.309,0,0,1,2.9,14.82a3.246,3.246,0,0,1,0-6.455A9.309,9.309,0,0,1,8.365,2.9a3.246,3.246,0,0,1,6.455,0,9.309,9.309,0,0,1,5.465,5.466,3.246,3.246,0,0,1,0,6.455,9.311,9.311,0,0,1-5.466,5.465,3.246,3.246,0,0,1-6.455,0Zm1.836-.347a1.391,1.391,0,0,0,2.782.048v-.1a1.391,1.391,0,0,0-2.782.048ZM6.328,16.818a7.393,7.393,0,0,0,2.388,1.614,3.247,3.247,0,0,1,5.751,0,7.444,7.444,0,0,0,3.965-3.963,3.247,3.247,0,0,1,0-5.752,7.447,7.447,0,0,0-3.964-3.964,3.247,3.247,0,0,1-5.752,0A7.444,7.444,0,0,0,4.752,8.716a3.247,3.247,0,0,1,0,5.752A7.427,7.427,0,0,0,6.328,16.818Zm12.22-5.226a1.391,1.391,0,1,0,1.39-1.391A1.392,1.392,0,0,0,18.548,11.592Zm-15.3,1.391a1.391,1.391,0,1,0-1.391-1.391A1.393,1.393,0,0,0,3.246,12.983ZM10.2,3.246a1.391,1.391,0,0,0,2.782.048V3.2a1.391,1.391,0,0,0-2.782.048Z\" transform=\"translate(0.408 0.408)\" fill=\"currentColor\" />\r\n                                    </svg>\r\n                                </span>\r\n                                <div className=\"fs-9 fw-medium\">Network</div>\r\n                            </div>\r\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\r\n                        </Accordion.Header>\r\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\r\n                    </div>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\r\n                        <>\r\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\r\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\r\n                                <div className=\"navi-text\">\r\n                                    <p className=\"fs-9 fw-medium mb-0\">Search Network</p>\r\n                                </div>\r\n                            </label>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onClickSelectAll} checked={Object.keys(state.selectedNetwork).length >= state.networkData.length ? true : false} />\r\n                        </div>\r\n                        <div className=\"form-group mb-2\">\r\n                            <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchNetwork\" placeholder=\"Search your network...\" onChange={onSearchFilter} />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            {\r\n                                state.networkData.map((item) => {\r\n                                    return <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\r\n                                        <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`filter_${GET_NETWORK_ICON(item.id)}`}>\r\n                                            <span className=\"symbol symbol-22\">\r\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.id)}.svg`)} height={20} width={20} alt={item.name} />\r\n                                            </span>\r\n                                            <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\r\n                                        </label>\r\n                                        <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"phone\" id={`filter_${GET_NETWORK_ICON(item.id)}`} checked={Object.keys(state.selectedNetwork).includes(`${item.id}`) ? true : false} onClick={onNetworkApply(item.id)} />\r\n                                    </div>\r\n                                })\r\n                            }\r\n\r\n                        </div>\r\n                        </>\r\n                        :\r\n                        <div className=\"py-4\">\r\n                            <h6 className=\"text-center fs-8 mb-0\">No Networks Available</h6>\r\n                        </div>\r\n                        }\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n    }\r\n}\r\n\r\nexport default Network;","import React, { Component } from 'react';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport AndOrCondition from './AndOr'\r\nclass UgcRights extends Component {\r\n    render() {\r\n        const { onSelectAllUgcRigths, onUgcRigths, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\r\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\r\n                    <Accordion.Item eventKey={'ugcrights'} className=\"pb-2\">\r\n                        <div className=\"d-flex\">\r\n                            <Accordion.Header className=\"me-1\">\r\n                                <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\r\n                                    <span className=\"svg-icon svg-icon-4 text-gray-800\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\r\n                                            <path fill=\"none\" d=\"M0 0H24V24H0z\" />\r\n                                            <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <div className=\"fs-9 fw-medium\">UGC Rights</div>\r\n                                </div>\r\n                                <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\r\n                            </Accordion.Header>\r\n                            <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\r\n                        </div>\r\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                            <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\r\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllugc\">\r\n                                    <div className=\"navi-text\">\r\n                                        <p className=\"fs-9 fw-medium mb-0\">Select All</p>\r\n                                    </div>\r\n                                </label>\r\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllugc\" checked={Object.keys(state.ugcRigths).length >= 3 ? true : false} onClick={onSelectAllUgcRigths} />\r\n                            </div>\r\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\r\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_approved\">\r\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                        <div className=\"symbol-label\">\r\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\r\n                                                    <path fill=\"none\" d=\"M0 0H24V24H0z\" />\r\n                                                    <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"navi-text\">\r\n                                        <p className=\"fs-9 fw-medium mb-0\">Approved</p>\r\n                                    </div>\r\n                                </label>\r\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_approved\" checked={Object.keys(state.ugcRigths).includes(\"2\") ? true : false} onClick={onUgcRigths(\"2\")} />\r\n                            </div>\r\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\r\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_pending\">\r\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                        <div className=\"symbol-label\">\r\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.235\" height=\"11.896\" viewBox=\"0 0 10.235 11.896\">\r\n                                                    <path fill=\"none\" d=\"M0 0H24V24H0z\" />\r\n                                                    <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.541,7.541,0,0,1-3.436-2.79A7.531,7.531,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.029,1.029,0,0,1,.4-.08,1.018,1.018,0,0,1,.4.082l4.065,1.688a1.039,1.039,0,0,1,.647.968v2.054a7.529,7.529,0,0,1-1.285,4.235,7.541,7.541,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.061,1.061,0,0,1-564.279-307.182ZM-563.9-318l-4.073,1.692a.047.047,0,0,0-.031.044v2.055a6.534,6.534,0,0,0,1.115,3.677,6.529,6.529,0,0,0,2.983,2.422.066.066,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.548,6.548,0,0,0,2.986-2.422,6.549,6.549,0,0,0,1.115-3.677v-2.055a.045.045,0,0,0-.029-.044l-4.07-1.69a.041.041,0,0,0-.02-.005Zm.867,6.986h0l-1.291-1.294a.6.6,0,0,1-.176-.41v-1.955a.593.593,0,0,1,.59-.591.593.593,0,0,1,.592.59v1.71l1.117,1.117a.583.583,0,0,1,.172.415.584.584,0,0,1-.172.416.584.584,0,0,1-.416.172A.583.583,0,0,1-563.029-311.012Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"navi-text\">\r\n                                        <p className=\"fs-9 fw-medium mb-0\">Pending</p>\r\n                                    </div>\r\n                                </label>\r\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_pending\" checked={Object.keys(state.ugcRigths).includes(\"1\") ? true : false} onClick={onUgcRigths(\"1\")} />\r\n                            </div>\r\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\r\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_rejected\">\r\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                        <div className=\"symbol-label\">\r\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.235\" height=\"11.896\" viewBox=\"0 0 10.235 11.896\">\r\n                                                    <path fill=\"none\" d=\"M0 0H24V24H0z\" />\r\n                                                    <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.541,7.541,0,0,1-3.436-2.79A7.531,7.531,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.029,1.029,0,0,1,.4-.08,1.018,1.018,0,0,1,.4.082l4.065,1.688a1.039,1.039,0,0,1,.647.968v2.054a7.529,7.529,0,0,1-1.285,4.235,7.541,7.541,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.061,1.061,0,0,1-564.279-307.182ZM-563.9-318l-4.073,1.692a.047.047,0,0,0-.031.044v2.055a6.534,6.534,0,0,0,1.115,3.677,6.529,6.529,0,0,0,2.983,2.422.066.066,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.548,6.548,0,0,0,2.986-2.422,6.549,6.549,0,0,0,1.115-3.677v-2.055a.045.045,0,0,0-.029-.044l-4.07-1.69a.041.041,0,0,0-.02-.005Zm-1.595,6.866a.432.432,0,0,1-.313-.314.432.432,0,0,1,.125-.42l1.186-1.186-1.186-1.186a.431.431,0,0,1-.125-.42.43.43,0,0,1,.313-.313.411.411,0,0,1,.105-.013.431.431,0,0,1,.315.137l1.186,1.187,1.187-1.187a.438.438,0,0,1,.42-.124.43.43,0,0,1,.313.313.431.431,0,0,1-.125.42l-1.186,1.186,1.186,1.185a.432.432,0,0,1,.125.42.432.432,0,0,1-.313.314.438.438,0,0,1-.42-.125l-1.186-1.186-1.187,1.187a.437.437,0,0,1-.319.137A.431.431,0,0,1-565.491-311.132Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"navi-text\">\r\n                                        <p className=\"fs-9 fw-medium mb-0\">Rejected</p>\r\n                                    </div>\r\n                                </label>\r\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_rejected\" checked={Object.keys(state.ugcRigths).includes(\"3\") ? true : false} onClick={onUgcRigths(\"3\")} />\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n    }\r\n}\r\n\r\nexport default UgcRights\r\n","\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport AndOrCondition from './AndOr'\r\n\r\nclass Tags extends Component {\r\n    state = {\r\n        tagString: [],\r\n        newTag: \"\",\r\n        listTags: [],\r\n        selectedOption: null\r\n    };\r\n\r\n    onClickToRemoveTag = (index) => event => {\r\n        let { tagString } = this.state;\r\n        tagString.splice(index, 1)\r\n        this.setState({ tagString })\r\n\r\n    }\r\n    componentWillMount() {\r\n        const { tagList } = this.props\r\n        if (tagList && tagList.length > 0) {\r\n            var listTags = []\r\n            tagList.map((item) => {\r\n                listTags.push({ value: item, label: item })\r\n            })\r\n            this.setState({ listTags })\r\n\r\n\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        const { modalAssetData } = this.props\r\n        if (modalAssetData && Object.keys(modalAssetData).length > 0) {\r\n            if (modalAssetData.tags && String(modalAssetData.tags).length > 0) this.setState({ tagString: String(modalAssetData.tags).split(\",\") })\r\n        }\r\n    }\r\n\r\n    onClickNewAddTag = event => {\r\n        const { newTag, tagString } = this.state;\r\n        const { modalAssetData } = this.props\r\n        if (newTag && String(newTag).length >= 3) {\r\n            tagString.push(newTag)\r\n            this.setState({ tagString, newTag: \"\", selectedOption: null })\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    addNewTag = event => this.setState({ newTag: event.target.value })\r\n\r\n\r\n    setNewTags = (selectedOption) => {\r\n        if (selectedOption.value) {\r\n            this.setState({ newTag: \"\", selectedOption: null }, () => this.props.onTagApply(selectedOption.value))\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { tagString, newTag, listTags, selectedOption } = this.state\r\n        const { state, onTagRemove, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\r\n\r\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\r\n                    <Accordion.Item eventKey={'tags'} className=\"pb-2\">\r\n                    <div className=\"d-flex\">\r\n                        <Accordion.Header className=\"me-1\">\r\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\r\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                        <path d=\"M10.9 2.1l9.899 1.415 1.414 9.9-9.192 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414L10.9 2.1zm.707 2.122L3.828 12l8.486 8.485 7.778-7.778-1.06-7.425-7.425-1.06zm2.12 6.364a2 2 0 1 1 2.83-2.829 2 2 0 0 1-2.83 2.829z\" fill=\"currentColor\" />\r\n                                    </svg>\r\n                                </span>\r\n                                <div className=\"fs-9 fw-medium\">Tags</div>\r\n                            </div>\r\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\r\n                        </Accordion.Header>\r\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\r\n                    </div>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\r\n                        <>\r\n                        <div className=\"form-group mb-2\">\r\n                            <CreatableSelect isClearable options={listTags} onChange={this.setNewTags} value={selectedOption} />\r\n                        </div>\r\n                        <div className=\"tags-group tags-group-sm d-flex align-items-center flex-wrap\">\r\n                            {\r\n                                state.tagApply ? state.tagApply.map((tagItem, tagKey) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-1 mb-1\">\r\n                                    {tagItem}\r\n                                    <button className=\"btn p-0 ms-1\" onClick={onTagRemove(tagKey)}>\r\n                                        <span className=\"svg-icon me-0\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </button>\r\n                                </div>) : null\r\n                            }\r\n                        </div>\r\n                        </>\r\n                        :\r\n                        <div className=\"py-4\">\r\n                            <h6 className=\"text-center fs-8 mb-0\">No Tags Available</h6>\r\n                        </div>\r\n                        }\r\n                    </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tagList: state.tags.tagList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Tags);\r\n","\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Accordion } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\r\nimport AndOrCondition from './AndOr'\r\n\r\nclass Connection extends Component {\r\n\r\n\r\n    render() {\r\n        const { state, onconnectionApply, onConnectionSelectAll, onConnectionSearchFilter, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\r\n        console.log('state.feedData', state.feedData)\r\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\r\n                <Accordion.Item eventKey={'connection'} className=\"pb-2\">\r\n                    <div className=\"d-flex\">\r\n                        <Accordion.Header className=\"me-1\">\r\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\r\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                                        <path fill=\"none\" d=\"M0 0H24V24H0z\" />\r\n                                        <g><path id=\"Path_2321\" data-name=\"Path 2321\" d=\"M21,14v5a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V5A2,2,0,0,1,5,3h5V5H5V19H19V14Z\" fill=\"#313a53\" />\r\n                                            <path id=\"Path_2322\" data-name=\"Path 2322\" d=\"M21,7H17V3H15V7H11V9h4v4h2V9h4\" fill=\"currentColor\" /></g>\r\n                                    </svg>\r\n                                </span>\r\n                                <div className=\"fs-9 fw-medium\">Connections</div>\r\n                            </div>\r\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\r\n                        </Accordion.Header>\r\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\r\n                    </div>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\r\n                        <>\r\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\r\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\r\n                                <div className=\"navi-text\">\r\n                                    <p className=\"fs-9 fw-medium mb-0\">Search Connection</p>\r\n                                </div>\r\n                            </label>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" onClick={onConnectionSelectAll} checked={Object.keys(state.selectedConnection).length >= state.feedData.length ? true : false} />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            {\r\n                                state.feedData.map((item) => <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\r\n                                    <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`connection`}>\r\n                                        <span className=\"symbol symbol-22\">\r\n                                            <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={'twitter'} />\r\n                                        </span>\r\n                                        <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\r\n                                    </label>\r\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" id={item.feedId} name={item.feedId} value={item.feedId} onClick={onconnectionApply(item.feedId)} checked={Object.keys(state.selectedConnection).includes(`${item.feedId}`) ? true : false} />\r\n                                </div>)\r\n                            }\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <div className=\"py-4\">\r\n                            <h6 className=\"text-center fs-8 mb-0\">No Connections Available</h6>\r\n                        </div>\r\n                        }\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n\r\n            </Accordion>\r\n    }\r\n}\r\nexport default Connection;","import React, { Component } from 'react';\r\nimport AssetsTypes from './AssetsTypes';\r\nimport Collections from './Collections';\r\nimport Network from './Network';\r\nimport UgcRights from './UgcRights';\r\nimport Tags from './Tags';\r\nimport Connection from './Connection';\r\n\r\n\r\n\r\nclass Filters extends Component {\r\n    render() {\r\n\r\n        const { filterKey, isLast } = this.props\r\n\r\n        return <div className=\"publish_filters\">\r\n            {filterKey == \"collection\" ? <Collections {...this.props} />\r\n                : filterKey == \"source\" ? <Network {...this.props} />\r\n                    : filterKey == \"assetsType\" ? <AssetsTypes {...this.props} />\r\n                        : filterKey == \"tags\" ? <Tags {...this.props} />\r\n                            : filterKey == \"ugcrights\" ? <UgcRights {...this.props} />\r\n                                : filterKey == \"connection\" ? <Connection {...this.props} /> : null\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Filters","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\r\n\r\nconst removeDuplicate = (data) => {\r\n    try {\r\n        var updateFilter = []\r\n        var updateKey = {}\r\n        data.map((item) => {\r\n            if (!updateKey[item.id]) {\r\n                updateFilter.push(item)\r\n                updateKey[item.id] = true\r\n            }\r\n\r\n        })\r\n        return updateFilter\r\n    }\r\n    catch (ex) {\r\n        return data\r\n    }\r\n}\r\n\r\nclass Templates extends Component {\r\n    state = {\r\n        templeteList: [],\r\n        isUpdate: false\r\n    }\r\n    componentWillMount() {\r\n        this.onLoad()\r\n    }\r\n    onLoad = () => {\r\n        var self = this\r\n        const { templeteList } = this.props\r\n        console.log(\"templeteList\", templeteList, this.props)\r\n        //if (templeteList && templeteList.length > 0) {\r\n        self.setState({ templeteList: removeDuplicate(templeteList) })\r\n        //}\r\n        // else {\r\n        //     getTemplateList({ type: 2 }).then((Response) => {\r\n        //         const { responseData } = Response.data\r\n        //         self.setState({ templeteList: removeDuplicate(responseData.templates) })\r\n        //         self.props.getTemplateListDispatch(removeDuplicate(responseData.templates))\r\n        //     })\r\n        // }\r\n    }\r\n    onFiltertemplateName = (id) => {\r\n        const { templeteList } = this.state;\r\n\r\n        if (templeteList && templeteList.length > 0) {\r\n            const updated = templeteList.filter((item) => item.id == id)\r\n            if (updated && updated.length > 0) {\r\n                return updated[0].name\r\n            }\r\n            else return \"\"\r\n        }\r\n        else return \"\"\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { templeteList } = this.state;\r\n        const { onSelectTemplate, state } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-2\">Select Template</label>\r\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">{state.selectedTemplate ? state.selectedTemplate.name ? state.selectedTemplate.name : this.onFiltertemplateName(state.selectedTemplate.id) : `Please select template.`}</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    {templeteList && templeteList.length > 0 ?\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\" defaultValue={0}>\r\n                            {templeteList.map((temp, index) => {\r\n                                return <><ToggleButton key={`template_id_${index}`} className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"tbg-radio-1\" value={index} onClick={onSelectTemplate(temp)}>\r\n                                    <div className=\"card-body p-2\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"symbol symbol-50 flex-shrink-0 me-2\">\r\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/ModernCard.png`)} height={50} width={50} alt=\"ModernCard\" />\r\n                                            </div>\r\n                                            <div className=\"overflow-hidden text-start\">\r\n                                                <p className={`fs-7 fw-semibold mb-1 text-ellipsis text-gray-dark`}>{temp.name}</p>\r\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ToggleButton></>\r\n                            })}\r\n                        </ToggleButtonGroup>\r\n                        : null}\r\n                    <div className=\"text-center\">\r\n                        <Link to={'/template/add'} className=\"btn btn-sm p-0\">\r\n                            <span className=\"svg-icon\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                    <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\" fill=\"currentColor\" />\r\n                                </svg>\r\n                            </span>\r\n                            Create New Template\r\n                        </Link>\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);","import React, { Component } from 'react';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\n\r\nconst platformName = (platform) => {\r\n    switch (platform) {\r\n        case 'p-cast':\r\n            return 'Cast'\r\n        case 'p-chromecast':\r\n            return 'Chromecast'\r\n        case 'p-firetvstick':\r\n            return 'Fire Tv Stick'\r\n        case 'p-androidtv':\r\n            return 'Android Tv'\r\n        case 'p-Aptoide':\r\n            return 'Aptoide'\r\n        case 'p-wired':\r\n            return 'Wired'\r\n\r\n        case 'p-screen-cloud':\r\n            return 'Screen Cloud';\r\n        case 'p-yodeck':\r\n            return 'Yodeck';\r\n        case 'p-onsign':\r\n            return 'Onsign';\r\n        case 'p-rise-vision':\r\n            return 'Rise Vision';\r\n        case 'p-optisign':\r\n            return 'Optisign';\r\n        case 'p-raydiant':\r\n            return 'Raydiant'\r\n        case 'p-enplug':\r\n            return 'Enplug';\r\n        case 'p-novi-sign':\r\n            return 'Novi Sign';\r\n        case 'dp-other':\r\n            return 'Other';\r\n\r\n\r\n        case 'p-6connex':\r\n            return '6Connex';\r\n        case 'p-zuddl':\r\n            return 'Zuddl';\r\n        case 'p-gevme':\r\n            return 'Gevme';\r\n        case 'p-vfairs':\r\n            return 'Vfairs';\r\n        case 'p-workcast':\r\n            return 'Workcast';\r\n        case 'p-pathable':\r\n            return 'Pathable';\r\n\r\n        case 'p-hubilo':\r\n            return 'Hubilo';\r\n        case 'ev-other':\r\n            return 'Other';\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nclass Platforms extends Component {\r\n\r\n    render() {\r\n        const { onSelectedPlatform, state, genratedCodeModal } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-2\">Select Display Platform</label>\r\n            <Accordion.Item eventKey=\"9\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100 d-flex align-items-center\">\r\n                    <p className=\"fs-9 fw-medium mb-0\">{`${state.selectedPlatform == 's-projector' ? `Projector / TV` : state.selectedPlatform == 's-signage' ? `Digital Signage` : state.selectedPlatform == 's-event' ? `Virtual / Hybrid Events` : `Select Display Platform`}`}</p>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"select-platform\" value={state.selectedPlatform}>\r\n                        <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 text-gray-800 ${state.selectedPlatform == 's-projector' ? `border-primary` : ``}`} variant=\"outline-primary\" id=\"s-projector\" value={'s-projector'} onClick={onSelectedPlatform('s-projector')}>\r\n                            <div className=\"card-body p-2 d-flex align-items-center\">\r\n                                <span className=\"svg-icon svg-icon-3 text-gray-800\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                        <path d=\"M2 4.00087C2 3.44811 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44463 22 4.00087V17.9991C22 18.5519 21.5447 19 21.0082 19H2.9918C2.44405 19 2 18.5554 2 17.9991V4.00087ZM4 5V17H20V5H4ZM5 20H19V22H5V20Z\" fill=\"currentColor\"></path>\r\n                                    </svg>\r\n                                </span>\r\n                                <p className=\"fs-9 fw-medium mb-0\">Projector / TV</p>\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 text-gray-800 ${state.selectedPlatform == 's-signage' ? `border-primary` : ``}`} variant=\"outline-primary\" id=\"s-signage\" value={'s-signage'} onClick={onSelectedPlatform('s-signage')}>\r\n                            <div className=\"card-body p-2 d-flex align-items-center\">\r\n                                <span className=\"svg-icon svg-icon-3 text-gray-800\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M6 4V20H18V4H6ZM5 2H19C19.5523 2 20 2.44772 20 3V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V3C4 2.44772 4.44772 2 5 2ZM12 17C12.5523 17 13 17.4477 13 18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18C11 17.4477 11.4477 17 12 17Z\" fill=\"currentColor\"></path>\r\n                                    </svg>\r\n                                </span>\r\n                                <p className=\"fs-9 fw-medium mb-0\">Digital Signage</p>\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 text-gray-800 ${state.selectedPlatform == 's-event' ? `border-primary` : ``}`} variant=\"outline-primary\" id=\"s-event\" value={'s-event'} onClick={onSelectedPlatform('s-event')}>\r\n                            <div className=\"card-body p-2 d-flex align-items-center\">\r\n                                <span className=\"svg-icon svg-icon-3 text-gray-800\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M21 3C21.5523 3 22 3.44772 22 4V11H20V5H4V19H10V21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3H21ZM21 13C21.5523 13 22 13.4477 22 14V20C22 20.5523 21.5523 21 21 21H13C12.4477 21 12 20.5523 12 20V14C12 13.4477 12.4477 13 13 13H21ZM20 15H14V19H20V15Z\" fill=\"currentColor\"></path>\r\n                                    </svg>\r\n                                </span>\r\n                                <p className=\"fs-9 fw-medium mb-0\">Virtual / Hybrid Events</p>\r\n                            </div>\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n            {state.selectedPlatform == 's-projector' ? <Accordion.Item eventKey=\"10\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"display-platform\" defaultValue={'p-cast'}>\r\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-cast\" value={'p-cast'} onClick={e => this.props.embedCodeCallback('p-cast')}>\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/cast.svg')} alt=\"cast\" height={26} width={80} />\r\n                                </div>\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-chromecast\" value={'p-chromecast'} onClick={e => this.props.embedCodeCallback('p-chromecast')}>\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/chromecast.svg')} alt=\"chromecast\" height={44} width={100} />\r\n                                </div>\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-firetvstick\" value={'p-firetvstick'} onClick={e => this.props.embedCodeCallback('p-firetvstick')}>\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/firetvstick.svg')} alt=\"firetvstick\" height={30} width={80} />\r\n                                </div>\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-androidtv\" value={'p-androidtv'} onClick={e => this.props.embedCodeCallback('p-androidtv')}>\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/androidtv.svg')} alt=\"androidtv\" height={45} width={85} />\r\n                                </div>\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-Aptoide\" value={'p-Aptoide'} onClick={e => this.props.embedCodeCallback('p-Aptoide')}>\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/Aptoide-tv.svg')} alt=\"Aptoide\" height={32} width={110} />\r\n                                </div>\r\n                            </div>\r\n                        </ToggleButton>\r\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-wired\" value={'p-wired'} onClick={e => this.props.embedCodeCallback('p-wired')}>\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"block-center text-center h-46px w-100\">\r\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/wired.svg')} alt=\"wired\" height={30} width={86} />\r\n                                </div>\r\n                            </div>\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Accordion.Body>\r\n            </Accordion.Item> :\r\n                state.selectedPlatform == 's-signage' ? <Accordion.Item eventKey=\"11\" className=\"pb-3\">\r\n                    <Accordion.Header className=\"w-100\">\r\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-screen-cloud'}>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-screen-cloud\" value={'p-screen-cloud'} onClick={e => this.props.embedCodeCallback('p-screen-cloud')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/screen-cloud.svg')} alt=\"screen-cloud\" height={26} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-yodeck\" value={'p-yodeck'} onClick={e => this.props.embedCodeCallback('p-yodeck')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/yodeck.svg')} alt=\"yodeck\" height={44} width={100} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-onsign\" value={'p-onsign'} onClick={e => this.props.embedCodeCallback('p-onsign')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/onsign-tv.svg')} alt=\"onsign\" height={30} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-rise-vision\" value={'p-rise-vision'} onClick={e => this.props.embedCodeCallback('p-rise-vision')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/rise-vision.svg')} alt=\"rise-vision\" height={40} width={75} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-optisign\" value={'p-optisign'} onClick={e => this.props.embedCodeCallback('p-optisign')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/optisign.svg')} alt=\"optisign\" height={32} width={110} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-raydiant\" value={'p-raydiant'} onClick={e => this.props.embedCodeCallback('p-raydiant')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/raydiant.svg')} alt=\"raydiant\" height={30} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-enplug\" value={'p-enplug'} onClick={e => this.props.embedCodeCallback('p-enplug')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/enplug.svg')} alt=\"enplug\" height={30} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-novi-sign\" value={'p-novi-sign'} onClick={e => this.props.embedCodeCallback('p-novi-sign')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/novi-sign.svg')} alt=\"novi-sign\" height={26} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"dp-other\" value={'dp-other'} onClick={e => this.props.embedCodeCallback('p-other')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/other.svg')} alt=\"other\" height={26} width={70} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Accordion.Body>\r\n                </Accordion.Item> : state.selectedPlatform == 's-event' ? <Accordion.Item eventKey=\"12\" className=\"pb-3\">\r\n                    <Accordion.Header className=\"w-100\">\r\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-6connex'}>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-6connex\" value={'p-6connex'} onClick={e => this.props.embedCodeCallback('p-6connex')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/6connex.svg')} alt=\"6connex\" height={26} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-zuddl\" value={'p-zuddl'} onClick={e => this.props.embedCodeCallback('p-zuddl')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/zuddl.svg')} alt=\"zuddl\" height={44} width={100} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-gevme\" value={'p-gevme'} onClick={e => this.props.embedCodeCallback('p-gevme')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/gevme.svg')} alt=\"gevme\" height={30} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-vfairs\" value={'p-vfairs'} onClick={e => this.props.embedCodeCallback('p-vfairs')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/vfairs.svg')} alt=\"vfairs\" height={40} width={75} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-workcast\" value={'p-workcast'} onClick={e => this.props.embedCodeCallback('p-workcast')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/workcast.svg')} alt=\"workcast\" height={32} width={110} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-pathable\" value={'p-pathable'} onClick={e => this.props.embedCodeCallback('p-pathable')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/pathable.svg')} alt=\"pathable\" height={30} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-hubilo\" value={'p-hubilo'} onClick={e => this.props.embedCodeCallback('p-hubilo')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/hubilo.svg')} alt=\"hubilo\" height={26} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"ev-other\" value={'ev-other'} onClick={e => this.props.embedCodeCallback('ev-other')}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/other.svg')} alt=\"other\" height={26} width={70} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Accordion.Body>\r\n                </Accordion.Item> : null}\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nexport default Platforms;","import React, { Component, Suspense } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from 'sweetalert2';\r\nimport { connect } from \"react-redux\";\r\nimport { Dropdown, Tab } from 'react-bootstrap';\r\nimport { getCollectionList } from '../../../Services/Actions/homeActions'\r\nimport { updatePublishRequest, getPublishList, publishDeleteRequest } from '../../../Services/Actions/publishActions'\r\n\r\nimport { capitalizeFirstLetter } from '../../../Services/Utils/utils';\r\nimport { id } from 'date-fns/locale';\r\nconst HtmlEmbed = React.lazy(() => import('./Components/DisplayPlatforms/CastUrl'));\r\nconst WordPressEmbed = React.lazy(() => import('./Components/DisplayPlatforms/WiredUrl'));\r\nconst WixEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AptoideCode'));\r\nconst SquarespaceEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AndroidTvCode'));\r\nconst ShopifyEmbed = React.lazy(() => import('./Components/DisplayPlatforms/FireStickCode'));\r\nconst OtherEmbed = React.lazy(() => import('./Components/DisplayPlatforms/ChromecastUrl'));\r\n\r\nconst DisplayScreenAside = React.lazy(() => import('./Components/DisplayScreenAside'));\r\n// const EditWebEmbedAside = React.lazy(() => import('./Components/EditWebEmbedAside'));\r\n\r\nconst dataWithComma = (updateData) => {\r\n    var dataCollection = {}\r\n    if (updateData && String(updateData).length > 0)\r\n        String(updateData).split(\",\").map((item) => {\r\n            dataCollection[item] = true\r\n        })\r\n    return dataCollection\r\n}\r\nconst tagDataWithComma = (updateData) => {\r\n    var dataCollection = []\r\n    if (updateData && String(updateData).length > 0)\r\n        String(updateData).split(\",\").map((item) => {\r\n            dataCollection.push(item)\r\n        })\r\n    return dataCollection\r\n}\r\nconst assetsData = (data) => {\r\n    var dataCollection = {}\r\n    if (data && String(data).length > 0) {\r\n        if (String(data).includes(\"2,4\")) {\r\n            dataCollection[\"2,4\"] = true\r\n        }\r\n        else if (String(data).includes(\"3,5\")) {\r\n            dataCollection[\"3,5\"] = true\r\n        }\r\n        if (String(data).includes(\"1\")) {\r\n            dataCollection[\"1\"] = true\r\n        }\r\n    }\r\n\r\n    return dataCollection\r\n}\r\n\r\nconst chooseActiveFilter = (assetsType, collection, connection, source, tags, ugcrights) => {\r\n    var dataCollection = {}\r\n    if (assetsType) {\r\n        dataCollection[\"assetsType\"] = true\r\n    }\r\n    if (collection) {\r\n        dataCollection[\"collection\"] = true\r\n    }\r\n    if (connection) {\r\n        dataCollection[\"connection\"] = true\r\n    }\r\n    if (source) {\r\n        dataCollection[\"source\"] = true\r\n    }\r\n    if (tags) {\r\n        dataCollection[\"tags\"] = true\r\n    }\r\n    if (ugcrights) {\r\n        dataCollection[\"ugcrights\"] = true\r\n    }\r\n    return dataCollection\r\n}\r\n\r\nclass WebEmbed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"CommonComponents/Breadcrumbs Edit\", props)\r\n        const { item, templeteList } = props\r\n        var templateData = {}\r\n        if (templeteList && templeteList.length > 0) {\r\n            const DataTemp = templeteList.filter((temp) => temp.id == item.template)\r\n            if (DataTemp && DataTemp.length > 0) templateData = DataTemp[0]\r\n            else templateData = { id: item.template }\r\n\r\n        }\r\n        else templateData = { id: item.template }\r\n        this.state = {\r\n            showGenratedCode: 'p-cast',\r\n            chooseFilter: chooseActiveFilter(item.assets_type, item.collection, item.source, item.network, item.tags, item.ugc_status),\r\n            collectionApply: [],\r\n            sourceApply: {},\r\n            assetsApply: assetsData(item.assets_type),\r\n            tagApply: tagDataWithComma(item.tags),\r\n            ugcRigths: {},\r\n            selectedPlatform: null,\r\n            selectedTemplate: templateData,\r\n            condition: String(item.filterType).toLowerCase(),\r\n            networkData: [],\r\n            feedData: [],\r\n            selectedNetwork: dataWithComma(item.network),\r\n            selectedConnection: dataWithComma(item.source),\r\n            textSearch: \"\",\r\n            textConnectionSearch: \"\",\r\n            collectionList: [],\r\n            collectionCompleteList: [],\r\n            selectedCollection: dataWithComma(item.collection),\r\n            collectionSearch: \"\",\r\n            genrateCode: false,\r\n            publishList: [],\r\n            responseData: item,\r\n            activeFilter: null,\r\n            selectedWebEmbed: null,\r\n            publishCodeName: item.name ? item.name : \"Untitled-1\",\r\n            id: item.id,\r\n            isUpdating: false\r\n        };\r\n    }\r\n\r\n    timeout = 0;\r\n    componentWillMount() {\r\n        this.onLoadCollectionList()\r\n    }\r\n    componentDidMount() {\r\n        const { networks, feedData } = this.props\r\n        this.setState({ networkData: networks, feedData: feedData.feeds })\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { networks, feedData } = nextProps\r\n        this.setState({ networkData: networks, feedData: feedData.feeds })\r\n    }\r\n\r\n\r\n    onClickToDelete = (data) => event => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You want to delete this\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                var self = this;\r\n                publishDeleteRequest(data).then((response) => {\r\n                    self.onLoadPublish()\r\n                    toast.success('Your widget has been deleted.')\r\n\r\n                })\r\n\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    onTagApply = (value) => {\r\n        const { tagApply } = this.state\r\n        tagApply.push(value)\r\n        this.setState({ tagApply })\r\n    }\r\n    onTagRemove = (index) => event => {\r\n        let { tagApply } = this.state;\r\n        tagApply.splice(index, 1)\r\n        this.setState({ tagApply })\r\n    }\r\n\r\n    conditionApply = (condition) => event => {\r\n        this.setState({ condition })\r\n    }\r\n    filterApply = (filterKey) => event => {\r\n        const { chooseFilter } = this.state;\r\n        if (chooseFilter[filterKey]) {\r\n            delete chooseFilter[filterKey]\r\n            this.setState({ chooseFilter: chooseFilter })\r\n        }\r\n        else {\r\n            chooseFilter[filterKey] = true;\r\n            this.setState({ chooseFilter })\r\n        }\r\n\r\n    }\r\n    onSelectActive = (activeKey) => event => {\r\n        this.setState({ activeKey: this.state.activeKey == activeKey ? \"\" : activeKey })\r\n    }\r\n    shareEmbedModal = event => this.setState({\r\n        showGenratedCode: true\r\n    })\r\n    genratedCodeCallback = event => {\r\n        this.setState({\r\n            showGenratedCode: event\r\n        })\r\n    }\r\n    renderSwitch = (platform) => {\r\n        const { responseData } = this.state\r\n\r\n        switch (platform) {\r\n            case 'p-html':\r\n                return <HtmlEmbed data={responseData} />;\r\n            case 'p-wordpress':\r\n                return <WordPressEmbed data={responseData} />;\r\n            case 'p-wix':\r\n                return <WixEmbed data={responseData} />;\r\n            case 'p-squarespace':\r\n                return <SquarespaceEmbed data={responseData} />;\r\n            case 'p-shopify':\r\n                return <ShopifyEmbed data={responseData} />;\r\n            case 'p-other':\r\n                return <OtherEmbed data={responseData} />;\r\n            default:\r\n                return <HtmlEmbed data={responseData} />;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onSelectTemplate = (template) => event => this.setState({ selectedTemplate: template })\r\n    onSelectedPlatform = (selectedPlatform) => event => {\r\n        this.setState({ selectedPlatform: selectedPlatform })\r\n    }\r\n\r\n    onUgcRigths = (value) => event => {\r\n        const { ugcRigths } = this.state;\r\n        if (ugcRigths[value]) {\r\n            delete ugcRigths[value]\r\n            this.setState({ ugcRigths: ugcRigths })\r\n        }\r\n        else {\r\n            ugcRigths[value] = true;\r\n            this.setState({ ugcRigths })\r\n        }\r\n    }\r\n    onSelectAllUgcRigths = event => {\r\n        const { ugcRigths } = this.state;\r\n        if (ugcRigths && Object.keys(ugcRigths).length >= 3) {\r\n            this.setState({ ugcRigths: {} })\r\n        }\r\n        else {\r\n            this.setState({\r\n                ugcRigths: {\r\n                    \"1\": true, \"2\": true, \"3\": true\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onconnectionApply = (value) => event => {\r\n        const { selectedConnection } = this.state;\r\n        if (selectedConnection[value]) {\r\n            delete selectedConnection[value]\r\n            this.setState({ selectedConnection: selectedConnection })\r\n        }\r\n        else {\r\n            selectedConnection[value] = true;\r\n            this.setState({ selectedConnection })\r\n        }\r\n    }\r\n    onConnectionSelectAll = event => {\r\n        const { selectedConnection, feedData } = this.state;\r\n        if (selectedConnection && Object.keys(selectedConnection).length >= feedData.length) {\r\n            this.setState({ selectedConnection: {} })\r\n        }\r\n        else {\r\n            var dataNetwork = {}\r\n            feedData.map((item) => {\r\n                dataNetwork[item.feedId] = true\r\n            })\r\n            this.setState({\r\n                selectedConnection: dataNetwork\r\n            })\r\n        }\r\n    }\r\n    onConnectionSearchFilter = event => {\r\n        var searchText = event.target.value; // this is the search text\r\n        console.log(\"searchText\", searchText)\r\n        if (this.timeout) clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(() => {\r\n            this.setState({ textConnectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadConnectionFilterData())\r\n        }, 1000);\r\n    }\r\n    onLoadConnectionFilterData = () => {\r\n        const { feedData } = this.props\r\n        const { textConnectionSearch } = this.state;\r\n        console.log(\"textConnectionSearch\", textConnectionSearch)\r\n        const searchData = feedData.filter((item) => String(item.name).toLowerCase().includes(textConnectionSearch))\r\n        this.setState({ feedData: searchData })\r\n    }\r\n    onAssetsApply = (value) => event => {\r\n        const { assetsApply } = this.state;\r\n        if (assetsApply[value]) {\r\n            delete assetsApply[value]\r\n            this.setState({ assetsApply: assetsApply })\r\n        }\r\n        else {\r\n            assetsApply[value] = true;\r\n            this.setState({ assetsApply })\r\n        }\r\n    }\r\n\r\n    onSelectAllAssetsApply = event => {\r\n        const { assetsApply } = this.state;\r\n        if (assetsApply && Object.keys(assetsApply).length >= 3) {\r\n            this.setState({ assetsApply: {} })\r\n        }\r\n        else {\r\n            this.setState({\r\n                assetsApply: {\r\n                    \"1\": true, \"2,4\": true, \"3,5\": true\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onNetworkApply = (value) => event => {\r\n        const { selectedNetwork } = this.state;\r\n        if (selectedNetwork[value]) {\r\n            delete selectedNetwork[value]\r\n            this.setState({ selectedNetwork: selectedNetwork })\r\n        }\r\n        else {\r\n            selectedNetwork[value] = true;\r\n            this.setState({ selectedNetwork })\r\n        }\r\n    }\r\n    onClickSelectAll = event => {\r\n        const { selectedNetwork, networkData } = this.state;\r\n        if (selectedNetwork && Object.keys(selectedNetwork).length >= networkData.length) {\r\n            this.setState({ selectedNetwork: {} })\r\n        }\r\n        else {\r\n            var dataNetwork = {}\r\n            networkData.map((item) => {\r\n                dataNetwork[item.id] = true\r\n            })\r\n            this.setState({\r\n                selectedNetwork: dataNetwork\r\n            })\r\n        }\r\n    }\r\n    onSearchFilter = event => {\r\n        var searchText = event.target.value; // this is the search text\r\n        if (this.timeout) clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(() => {\r\n            this.setState({ textSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadFilterData())\r\n        }, 1000);\r\n    }\r\n    onLoadFilterData = () => {\r\n        const { networks } = this.props\r\n        const { textSearch } = this.state;\r\n        const searchData = networks.filter((item) => String(item.name).toLowerCase().includes(textSearch))\r\n        this.setState({ networkData: searchData })\r\n    }\r\n\r\n    onLoadCollectionList = () => {\r\n        var self = this;\r\n        const { collectionData } = this.props;\r\n        if (collectionData && Object.keys(collectionData).length > 0 && collectionData.collectionList.length > 0) {\r\n            self.setState({ collectionList: collectionData.collectionList, collectionCompleteList: collectionData.collectionList, assetsCount: collectionData.assetsCount })\r\n        }\r\n        else {\r\n            getCollectionList().then((response) => {\r\n                const { responseData } = response.data;\r\n                if (responseData && Object.keys(responseData).length > 0) {\r\n                    self.setState({ collectionList: responseData.collection, collectionCompleteList: responseData.collection })\r\n                }\r\n            }).catch((ex) => {\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onCollectionApply = (value) => event => {\r\n        const { selectedCollection } = this.state;\r\n        if (selectedCollection[value]) {\r\n            delete selectedCollection[value]\r\n            this.setState({ selectedCollection: selectedCollection })\r\n        }\r\n        else {\r\n            selectedCollection[value] = true;\r\n            this.setState({ selectedCollection })\r\n        }\r\n    }\r\n    onCollectionSelectAll = event => {\r\n        const { selectedCollection, collectionList } = this.state;\r\n        if (selectedCollection && Object.keys(selectedCollection).length >= collectionList.length) {\r\n            this.setState({ selectedCollection: {} })\r\n        }\r\n        else {\r\n            var dataCollection = {}\r\n            collectionList.map((item) => {\r\n                dataCollection[item.id] = true\r\n            })\r\n            this.setState({\r\n                selectedCollection: dataCollection\r\n            })\r\n        }\r\n    }\r\n    onCollectionSearchFilter = event => {\r\n        var searchText = event.target.value; // this is the search text\r\n        if (this.timeout) clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(() => {\r\n            this.setState({ collectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadCollectionFilterData())\r\n        }, 1000);\r\n    }\r\n    onLoadCollectionFilterData = () => {\r\n        const { collectionSearch, collectionCompleteList } = this.state;\r\n        const searchData = collectionCompleteList.filter((item) => String(item.name).toLowerCase().includes(collectionSearch))\r\n        this.setState({ collectionList: searchData })\r\n    }\r\n    onChangeName = event => {\r\n        this.setState({ publishCodeName: event.target.value })\r\n    }\r\n    onRequestPublish = event => {\r\n        const { id, selectedTemplate, selectedCollection, selectedConnection, selectedNetwork, condition, showGenratedCode, ugcRigths, assetsApply, publishCodeName, tagApply } = this.state\r\n        var self = this;\r\n\r\n        var collection = []\r\n        var template = \"\"\r\n        var source = []\r\n        var type = []\r\n        var tags = []\r\n        var network = []\r\n        var ugcRigthsU = []\r\n\r\n        if (ugcRigths && Object.keys(ugcRigths).length > 0) {\r\n            Object.keys(ugcRigths).map((item) => {\r\n                ugcRigthsU.push(item)\r\n            })\r\n        }\r\n        if (selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) {\r\n            template = selectedTemplate.id\r\n        }\r\n\r\n        if (selectedNetwork && Object.keys(selectedNetwork).length > 0) {\r\n            Object.keys(selectedNetwork).map((item) => {\r\n                network.push(item)\r\n            })\r\n        }\r\n        if (selectedCollection && Object.keys(selectedCollection).length > 0) {\r\n            Object.keys(selectedCollection).map((item) => {\r\n                collection.push(item)\r\n            })\r\n        }\r\n        if (selectedConnection && Object.keys(selectedConnection).length > 0) {\r\n            Object.keys(selectedConnection).map((item) => {\r\n                source.push(item)\r\n            })\r\n        }\r\n        if (assetsApply && Object.keys(assetsApply).length > 0) {\r\n            Object.keys(assetsApply).map((item) => {\r\n                type.push(item)\r\n            })\r\n        }\r\n        if (tagApply && tagApply.length > 0) {\r\n            tags = tagApply\r\n        }\r\n        if ((selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.Theme.id) && (collection.length > 0 || source.length > 0 || tags.length > 0 || type.length > 0 || ugcRigthsU.length > 0 || network.length > 0)) {\r\n            const data = {\r\n                id: id,\r\n                name: publishCodeName,\r\n                \"template\": template,\r\n                \"collection\": collection.join(\",\"),\r\n                \"source\": source.join(\",\"),\r\n                \"assets_type\": type.join(\",\"),\r\n                \"tags\": tags.join(\",\"),\r\n                \"ugc_status\": ugcRigthsU.join(\",\"),\r\n                \"publish_type\": 4,\r\n                \"campaign_type\": \"\",\r\n                \"screen_type\": \"\",\r\n                \"platform\": \"\",\r\n                network: network.join(\",\"),\r\n                filterType: String(condition).toUpperCase()\r\n\r\n            }\r\n            this.setState({ isUpdating: true })\r\n            updatePublishRequest(data).then((response) => {\r\n                const { status, response_code, response_message } = response.data\r\n                if (status == \"success\") {\r\n                    toast.success(\"Publish digital screen successfully updated.\")\r\n                    self.setState({ isUpdating: false }, () => self.props.onLoadPublish())\r\n                    //self.setState({ responseData: response.data }, () => self.props.onLoadPublish())\r\n                }\r\n                else toast.error(response_message)\r\n\r\n            }).catch((ex) => {\r\n\r\n            })\r\n        }\r\n    }\r\n    onResetFilter = event => {\r\n        this.setState({\r\n            showGenratedCode: 'p-cast',\r\n            chooseFilter: {},\r\n            collectionApply: [],\r\n            sourceApply: {},\r\n            assetsApply: {},\r\n            tagApply: [],\r\n            ugcRigths: {},\r\n            selectedTemplate: null,\r\n            selectedPlatform: null,\r\n            condition: \"or\",\r\n            selectedNetwork: {},\r\n            selectedConnection: {},\r\n            textSearch: \"\",\r\n            textConnectionSearch: \"\",\r\n            selectedCollection: {},\r\n            collectionSearch: \"\",\r\n            genrateCode: false,\r\n            responseData: null,\r\n            activeFilter: null,\r\n            publishCodeName: \"\",\r\n            isUpdating: false\r\n\r\n        })\r\n    }\r\n    onUpdateReponseData = (data) => {\r\n        this.setState({ responseData: data })\r\n    }\r\n\r\n    render() {\r\n        const { showGenratedCode, chooseFilter, genrateCode, responseData, activeFilter } = this.state\r\n\r\n        const { networks, history } = this.props\r\n        return <>\r\n            {networks && networks.length > 0 ? <DisplayScreenAside genratedCodeCallback={this.genratedCodeCallback} genratedCodeModal={showGenratedCode} filterApply={this.filterApply} state={this.state} onSelectTemplate={this.onSelectTemplate} onSelectedPlatform={this.onSelectedPlatform} onSelectAllUgcRigths={this.onSelectAllUgcRigths} onUgcRigths={this.onUgcRigths} onTagRemove={this.onTagRemove} onTagApply={this.onTagApply} onAssetsApply={this.onAssetsApply} onconnectionApply={this.onconnectionApply} onSelectAllAssetsApply={this.onSelectAllAssetsApply} onNetworkApply={this.onNetworkApply} onClickSelectAll={this.onClickSelectAll} onSearchFilter={this.onSearchFilter} onCollectionSearchFilter={this.onCollectionSearchFilter}\r\n                onCollectionSelectAll={this.onCollectionSelectAll}\r\n                onCollectionApply={this.onCollectionApply} conditionApply={this.conditionApply} onConnectionSearchFilter={this.onConnectionSearchFilter} onConnectionSelectAll={this.onConnectionSelectAll} onClickToDelete={this.onClickToDelete} onResetFilter={this.onResetFilter} activeFilter={activeFilter} history={history} onChangeName={this.onChangeName} onUpdateReponseData={this.onUpdateReponseData} onLoadPublish={this.onLoadPublish} onSelectActive={this.onSelectActive} onRequestPublish={this.onRequestPublish} isPublishEdit={true} key={\"edit_filter\"} /> : null}\r\n        </>\r\n\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        networks: state.networks.networkData,\r\n        feedData: state.feedData.filterList,\r\n        collectionData: state.collection,\r\n        templeteList: state.templates.templeteList\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WebEmbed);","import React, { Component, Suspense } from 'react';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport EditWebEmbed from '../../EditWebEmbed'\r\nimport { getAssetsCount } from '../../../../../Services/Actions/assetsActions'\r\n\r\nclass EmbedList extends Component {\r\n    state = {\r\n        active: null\r\n    }\r\n    onClickToEdit = (item) => event => {\r\n        var self = this\r\n        getAssetsCount(item.id).then((response) => {\r\n            const { publishCode, assestCount } = response.data\r\n            self.props.onUpdateReponseData({ assestCount: assestCount, publishCode: publishCode })\r\n        }).catch((ex) => {\r\n            self.props.onUpdateReponseData({ assestCount: 0, publishCode: item })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { state, history, onLoadPublish } = this.props\r\n        const { active } = this.state\r\n        return <Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\r\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\r\n                console.log(\"item\", item)\r\n                return <Accordion.Item eventKey={pIndex}>\r\n                    <div className=\"menu-item\" key={`di_sc${pIndex}`}>\r\n                        <Accordion.Header className=\"w-100 disable_arrow\">\r\n                            <div className=\"d-flex justify-content-between align-items-center w-100\" onClick={this.onClickToEdit(item)}>\r\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Edit</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px me-2\">\r\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                    <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Remove</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px\"\r\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id })}>\r\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                    <path d=\"M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5zM6 6v14h12V6H6zm3 3h2v8H9V9zm4 0h2v8h-2V9z\" fill=\"currentColor\" />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Header>\r\n                    </div>\r\n                    <Accordion.Body className=\"p-0 pt-3\">\r\n                        <EditWebEmbed history={history} item={item} key={`edit_digital_screen${pIndex}`} onLoadPublish={onLoadPublish} />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n\r\n            })\r\n            }\r\n        </Accordion>\r\n    }\r\n\r\n}\r\nexport default EmbedList\r\n\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { connect } from \"react-redux\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import Select from 'react-select';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\r\nimport { EmbedURL } from '../../../../Services/Api'\r\nimport Filters from './Filters';\r\nimport Templates from './Template';\r\nimport Platforms from './Platforms';\r\nimport EmbedList from './EmbedList'\r\n\r\nclass DisplayScreenAside extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        showModal: false,\r\n        //setValue : '',\r\n        publishList: []\r\n    };\r\n    componentDidMount() {\r\n        const clickResetFilter = document.querySelector(\"#billing_tab_panel-tab-aside-assets_filter\")\r\n        if (clickResetFilter) {\r\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\r\n        }\r\n    }\r\n\r\n    handleSelect(date) {\r\n        console.log(date); // native Date object\r\n    }\r\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\r\n\r\n\r\n    render() {\r\n        //const { setValue } = this.state\r\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList } = this.props\r\n        console.log(\"this.props\", this.props.isPublishEdit)\r\n        return <div className=\"card-body\">\r\n            <PerfectScrollbar>\r\n                <div className=\"innerAsideWrapper\">\r\n                    <div className=\"d-flex align-items-start justify-content-between\">\r\n                        <h6 className=\"fs-7 fw-bolder mb-0\">{`${isPublishEdit ? `Edit` : `Add`} Filter`}</h6>\r\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm py-1\" onClick={event => history(\"/web-embed/\")}>New</button> */}\r\n                    </div>\r\n                    <Tab.Container id={`${isPublishEdit ? `edit_billing_tab_panel` : `billing_tab_panel`}`} defaultActiveKey=\"aside-assets_filter\">\r\n                        <Nav variant=\"nav\" className=\"border-bottom mb-3\">\r\n                            <Nav.Item className=\"\">\r\n                                <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\" onClick={isPublishEdit ? event => this.props.onUpdateReponseData(null) : null}>Assets Filter</Nav.Link>\r\n                            </Nav.Item>\r\n                            {!isPublishEdit ? <Nav.Item className=\"\">\r\n                                <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\r\n                            </Nav.Item> : null}\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aside-assets_filter\">\r\n                                <label className=\"text-gray-800 mb-2\">Name</label>\r\n                                <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n                                {\r\n                                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                                }\r\n\r\n                                <Accordion defaultActiveKey={\"0\"}>\r\n                                    <Accordion.Item eventKey=\"0\" className=\"pb-3\">\r\n                                        <Accordion.Header className=\"add_fillter_btn\">\r\n                                            <span className=\"svg-icon svg-icon-3 text-gray-800\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11 11V5H13V11H19V13H13V19H11V13H5V11H11Z\" fill=\"currentColor\"></path></svg>\r\n                                            </span>\r\n                                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                                        </Accordion.Header>\r\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2zM8 19h12v-8H8v8zm-2 0v-9a1 1 0 0 1 1-1h13V7h-8.414l-2-2H4v14h2z\" fill=\"currentColor\" /></svg>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\r\n                                                    <span className=\"fs-9 text-gray-500\">Select the preferred collection</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none  disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M0,0H24V24H0Z\" fill=\"none\" />\r\n                                                                <path id=\"Path_4\" data-name=\"Path 4\" d=\"M8.365,20.286A9.309,9.309,0,0,1,2.9,14.82a3.246,3.246,0,0,1,0-6.455A9.309,9.309,0,0,1,8.365,2.9a3.246,3.246,0,0,1,6.455,0,9.309,9.309,0,0,1,5.465,5.466,3.246,3.246,0,0,1,0,6.455,9.311,9.311,0,0,1-5.466,5.465,3.246,3.246,0,0,1-6.455,0Zm1.836-.347a1.391,1.391,0,0,0,2.782.048v-.1a1.391,1.391,0,0,0-2.782.048ZM6.328,16.818a7.393,7.393,0,0,0,2.388,1.614,3.247,3.247,0,0,1,5.751,0,7.444,7.444,0,0,0,3.965-3.963,3.247,3.247,0,0,1,0-5.752,7.447,7.447,0,0,0-3.964-3.964,3.247,3.247,0,0,1-5.752,0A7.444,7.444,0,0,0,4.752,8.716a3.247,3.247,0,0,1,0,5.752A7.427,7.427,0,0,0,6.328,16.818Zm12.22-5.226a1.391,1.391,0,1,0,1.39-1.391A1.392,1.392,0,0,0,18.548,11.592Zm-15.3,1.391a1.391,1.391,0,1,0-1.391-1.391A1.393,1.393,0,0,0,3.246,12.983ZM10.2,3.246a1.391,1.391,0,0,0,2.782.048V3.2a1.391,1.391,0,0,0-2.782.048Z\" transform=\"translate(0.408 0.408)\" fill=\"currentColor\" />\r\n                                                            </svg>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\r\n                                                    <span className=\"fs-9 text-gray-500\">Choose the required network</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                                                                <path fill=\"none\" d=\"M0 0H24V24H0z\" />\r\n                                                                <g><path id=\"Path_2321\" data-name=\"Path 2321\" d=\"M21,14v5a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V5A2,2,0,0,1,5,3h5V5H5V19H19V14Z\" fill=\"#313a53\" />\r\n                                                                    <path id=\"Path_2322\" data-name=\"Path 2322\" d=\"M21,7H17V3H15V7H11V9h4v4h2V9h4\" fill=\"currentColor\" /></g>\r\n                                                            </svg>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\r\n                                                    <span className=\"fs-9 text-gray-500\">Select the connection type</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                                <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\r\n                                                            </svg>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\r\n                                                    <span className=\"fs-9 text-gray-500\">Choose the type of asset</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                                <path d=\"M10.9 2.1l9.899 1.415 1.414 9.9-9.192 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414L10.9 2.1zm.707 2.122L3.828 12l8.486 8.485 7.778-7.778-1.06-7.425-7.425-1.06zm2.12 6.364a2 2 0 1 1 2.83-2.829 2 2 0 0 1-2.83 2.829z\" fill=\"currentColor\" />\r\n                                                            </svg>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\r\n                                                    <span className=\"fs-9 text-gray-500\">Select the preferred tag</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\r\n                                                                <path fill=\"none\" d=\"M0 0H24V24H0z\" />\r\n                                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\r\n                                                            </svg>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\r\n                                                    <span className=\"fs-9 text-gray-500\">Select the preferred ugc rights status</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                    {templeteList.length > 0 ? <Templates {...this.props} /> : null}\r\n                                    <Platforms {...this.props} embedCodeCallback={this.embedCodeCallback} />\r\n                                </Accordion>\r\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n                                    <button type=\"button\" className={`btn btn-primary btn-sm ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Changes</button>\r\n                                </div>\r\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n                                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\r\n                                </div>\r\n\r\n\r\n\r\n                            </Tab.Pane>\r\n                            {!isPublishEdit ? <Tab.Pane eventKey=\"filter-assets_published\">\r\n                                <EmbedList {...this.props} />\r\n                            </Tab.Pane> : null}\r\n                        </Tab.Content>\r\n                    </Tab.Container>\r\n                </div>\r\n            </PerfectScrollbar>\r\n        </div>\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DisplayScreenAside);","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/utilities/transitions/#collapse-props).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useMemo, useCallback } from 'react';\nimport { I as cleanValue, D as valueTernary } from './index-827f44ad.esm.js';\nimport { g as getOptionValue, b as getOptionLabel } from './Select-2497890d.esm.js';\n\nvar _excluded = [\"allowCreateWhileLoading\", \"createOptionPosition\", \"formatCreateLabel\", \"isValidNewOption\", \"getNewOptionData\", \"onCreateOption\", \"options\", \"onChange\"];\nvar compareOption = function compareOption() {\n  var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var option = arguments.length > 1 ? arguments[1] : undefined;\n  var accessors = arguments.length > 2 ? arguments[2] : undefined;\n  var candidate = String(inputValue).toLowerCase();\n  var optionValue = String(accessors.getOptionValue(option)).toLowerCase();\n  var optionLabel = String(accessors.getOptionLabel(option)).toLowerCase();\n  return optionValue === candidate || optionLabel === candidate;\n};\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return \"Create \\\"\".concat(inputValue, \"\\\"\");\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions, accessors) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  }\n};\nfunction useCreatable(_ref) {\n  var _ref$allowCreateWhile = _ref.allowCreateWhileLoading,\n    allowCreateWhileLoading = _ref$allowCreateWhile === void 0 ? false : _ref$allowCreateWhile,\n    _ref$createOptionPosi = _ref.createOptionPosition,\n    createOptionPosition = _ref$createOptionPosi === void 0 ? 'last' : _ref$createOptionPosi,\n    _ref$formatCreateLabe = _ref.formatCreateLabel,\n    formatCreateLabel = _ref$formatCreateLabe === void 0 ? builtins.formatCreateLabel : _ref$formatCreateLabe,\n    _ref$isValidNewOption = _ref.isValidNewOption,\n    isValidNewOption = _ref$isValidNewOption === void 0 ? builtins.isValidNewOption : _ref$isValidNewOption,\n    _ref$getNewOptionData = _ref.getNewOptionData,\n    getNewOptionData = _ref$getNewOptionData === void 0 ? builtins.getNewOptionData : _ref$getNewOptionData,\n    onCreateOption = _ref.onCreateOption,\n    _ref$options = _ref.options,\n    propsOptions = _ref$options === void 0 ? [] : _ref$options,\n    propsOnChange = _ref.onChange,\n    restSelectProps = _objectWithoutProperties(_ref, _excluded);\n  var _restSelectProps$getO = restSelectProps.getOptionValue,\n    getOptionValue$1 = _restSelectProps$getO === void 0 ? getOptionValue : _restSelectProps$getO,\n    _restSelectProps$getO2 = restSelectProps.getOptionLabel,\n    getOptionLabel$1 = _restSelectProps$getO2 === void 0 ? getOptionLabel : _restSelectProps$getO2,\n    inputValue = restSelectProps.inputValue,\n    isLoading = restSelectProps.isLoading,\n    isMulti = restSelectProps.isMulti,\n    value = restSelectProps.value,\n    name = restSelectProps.name;\n  var newOption = useMemo(function () {\n    return isValidNewOption(inputValue, cleanValue(value), propsOptions, {\n      getOptionValue: getOptionValue$1,\n      getOptionLabel: getOptionLabel$1\n    }) ? getNewOptionData(inputValue, formatCreateLabel(inputValue)) : undefined;\n  }, [formatCreateLabel, getNewOptionData, getOptionLabel$1, getOptionValue$1, inputValue, isValidNewOption, propsOptions, value]);\n  var options = useMemo(function () {\n    return (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(_toConsumableArray(propsOptions)) : [].concat(_toConsumableArray(propsOptions), [newOption]) : propsOptions;\n  }, [allowCreateWhileLoading, createOptionPosition, isLoading, newOption, propsOptions]);\n  var onChange = useCallback(function (newValue, actionMeta) {\n    if (actionMeta.action !== 'select-option') {\n      return propsOnChange(newValue, actionMeta);\n    }\n    var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n    if (valueArray[valueArray.length - 1] === newOption) {\n      if (onCreateOption) onCreateOption(inputValue);else {\n        var newOptionData = getNewOptionData(inputValue, inputValue);\n        var newActionMeta = {\n          action: 'create-option',\n          name: name,\n          option: newOptionData\n        };\n        propsOnChange(valueTernary(isMulti, [].concat(_toConsumableArray(cleanValue(value)), [newOptionData]), newOptionData), newActionMeta);\n      }\n      return;\n    }\n    propsOnChange(newValue, actionMeta);\n  }, [getNewOptionData, inputValue, isMulti, name, newOption, onCreateOption, propsOnChange, value]);\n  return _objectSpread(_objectSpread({}, restSelectProps), {}, {\n    options: options,\n    onChange: onChange\n  });\n}\n\nexport { useCreatable as u };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { S as Select } from '../../dist/Select-2497890d.esm.js';\nimport { u as useStateManager } from '../../dist/useStateManager-7e1e8489.esm.js';\nimport { u as useCreatable } from '../../dist/useCreatable-80ca1682.esm.js';\nexport { u as useCreatable } from '../../dist/useCreatable-80ca1682.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../../dist/index-827f44ad.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\nimport 'memoize-one';\n\nvar CreatableSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var creatableProps = useStateManager(props);\n  var selectProps = useCreatable(creatableProps);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, selectProps));\n});\n\nexport default CreatableSelect;\n"],"names":["AndOrCondition","this","props","condition","conditionApply","Dropdown","align","className","variant","capitalizeFirstLetter","onClick","Component","AssetsTypes","onAssetsApply","onSelectAllAssetsApply","state","filterApply","filterKey","onSelectActive","indexFilter","isLast","Accordion","activeKey","onSelect","eventKey","xmlns","viewBox","width","height","fill","d","type","AndOr","htmlFor","name","value","id","checked","Object","keys","assetsApply","length","includes","Collections","onCollectionSearchFilter","onCollectionSelectAll","onCollectionApply","collectionList","selectedCollection","placeholder","onChange","map","item","src","thumbnails","alt","Network","onNetworkApply","onClickSelectAll","onSearchFilter","transform","feedData","selectedNetwork","networkData","GET_NETWORK_ICON","baseUrl","UgcRights","onSelectAllUgcRigths","onUgcRigths","ugcRigths","Tags","tagString","newTag","listTags","selectedOption","onClickToRemoveTag","index","event","splice","setState","onClickNewAddTag","modalAssetData","String","push","addNewTag","target","setNewTags","onTagApply","tagList","label","tags","split","onTagRemove","isClearable","options","tagApply","tagItem","tagKey","connect","Connection","onconnectionApply","onConnectionSelectAll","onConnectionSearchFilter","console","log","selectedConnection","networkId","feedId","Filters","removeDuplicate","data","updateFilter","updateKey","ex","Templates","templeteList","isUpdate","onLoad","self","onFiltertemplateName","updated","filter","onSelectTemplate","selectedTemplate","ToggleButtonGroup","defaultValue","temp","ToggleButton","Theme","to","templates","dispatch","getTemplateListDispatch","platformName","platform","Platforms","onSelectedPlatform","genratedCodeModal","selectedPlatform","showGenratedCode","e","embedCodeCallback","HtmlEmbed","React","WordPressEmbed","WixEmbed","SquarespaceEmbed","ShopifyEmbed","OtherEmbed","DisplayScreenAside","dataWithComma","updateData","dataCollection","tagDataWithComma","assetsData","chooseActiveFilter","assetsType","collection","connection","source","ugcrights","WebEmbed","timeout","onClickToDelete","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","publishDeleteRequest","response","onLoadPublish","toast","chooseFilter","shareEmbedModal","genratedCodeCallback","renderSwitch","responseData","template","dataNetwork","searchText","clearTimeout","setTimeout","textConnectionSearch","toLowerCase","onLoadConnectionFilterData","searchData","textSearch","onLoadFilterData","networks","onLoadCollectionList","collectionData","collectionCompleteList","assetsCount","getCollectionList","catch","collectionSearch","onLoadCollectionFilterData","onChangeName","publishCodeName","onRequestPublish","network","ugcRigthsU","join","filterType","toUpperCase","isUpdating","updatePublishRequest","status","response_message","response_code","onResetFilter","collectionApply","sourceApply","genrateCode","activeFilter","onUpdateReponseData","templateData","DataTemp","assets_type","ugc_status","publishList","selectedWebEmbed","feeds","nextProps","history","isPublishEdit","filterList","EmbedList","active","onClickToEdit","getAssetsCount","publishCode","assestCount","defaultActiveKey","pIndex","OverlayTrigger","placement","overlay","Tooltip","EditWebEmbed","showModal","clickResetFilter","document","querySelector","addEventListener","date","Tab","Nav","Template","isAccordionItemSelected","activeEventKey","Array","isArray","context","displayName","AccordionCollapse","ref","as","bsPrefix","children","useContext","AccordionContext","useBootstrapPrefix","_jsx","Collapse","in","classNames","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","alwaysOpen","eventKeyPassed","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","useUncontrolled","flush","controlledProps","prefix","assign","Button","Item","Header","Body","_excluded","compareOption","inputValue","arguments","undefined","option","accessors","candidate","optionValue","getOptionValue","optionLabel","getOptionLabel","builtins","formatCreateLabel","concat","isValidNewOption","selectValue","selectOptions","some","getNewOptionData","__isNew__","forwardRef","selectProps","_ref","_ref$allowCreateWhile","allowCreateWhileLoading","_ref$createOptionPosi","createOptionPosition","_ref$formatCreateLabe","_ref$isValidNewOption","_ref$getNewOptionData","onCreateOption","_ref$options","propsOptions","propsOnChange","restSelectProps","_objectWithoutProperties","_restSelectProps$getO","getOptionValue$1","_restSelectProps$getO2","getOptionLabel$1","isLoading","isMulti","newOption","cleanValue","_toConsumableArray","useCallback","newValue","actionMeta","action","valueArray","newOptionData","newActionMeta","valueTernary","_objectSpread","useCreatable","useStateManager","Select","_extends"],"sourceRoot":""}