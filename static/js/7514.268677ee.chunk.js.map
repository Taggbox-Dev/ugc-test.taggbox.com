{"version":3,"file":"static/js/7514.268677ee.chunk.js","mappings":"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","sources":["Layouts/Main/DisplayScreen/Components/Filters/AndOr.js","Layouts/Main/DisplayScreen/Components/Filters/AssetsTypes.js","Layouts/Main/DisplayScreen/Components/Filters/Collections.js","Layouts/Main/DisplayScreen/Components/Filters/Network.js","Layouts/Main/DisplayScreen/Components/Filters/UgcRights.js","Layouts/Main/DisplayScreen/Components/Filters/Tags.js","Layouts/Main/DisplayScreen/Components/Filters/Connection.js","Layouts/Main/DisplayScreen/Components/Filters/index.js","Layouts/Main/DisplayScreen/Components/Template/index.js","Layouts/Main/DisplayScreen/Components/Platforms/index.js","Layouts/Main/DisplayScreen/EditWebEmbed.js","Layouts/Main/DisplayScreen/Components/EmbedList/index.js","Layouts/Main/DisplayScreen/Components/DisplayScreenAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { capitalizeFirstLetter } from '../../../../../Services/Utils/utils';\n\n\nclass AndOrCondition extends Component {\n    render() {\n\n        const { condition,conditionApply } = this.props\n        return <Dropdown align=\"start\" className=\"block-center position-relative\">\n            <Dropdown.Toggle variant=\"secondary\" size={'sm'} className=\"arrow_disabled\">\n                {capitalizeFirstLetter(condition)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"btn-min-w\">\n                <div className=\"menu-item\">\n                    <Dropdown.Item className={condition == `and` ? `active` : ``} onClick={conditionApply(\"and\")}>And</Dropdown.Item>\n                </div>\n                <div className=\"menu-item\">\n                    <Dropdown.Item className={condition == `or` ? `active` : ``} onClick={conditionApply(\"or\")}>Or</Dropdown.Item>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    }\n}\n\nexport default AndOrCondition","\nimport React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport AndOrCondition from './AndOr'\nclass AssetsTypes extends Component {\n    render() {\n\n        const { onAssetsApply, onSelectAllAssetsApply, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'assetsType'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <i className=\"ri-image-line text-gray-800 me-1\"></i>\n                                <div className=\"fs-9 fw-medium\">Assets Type</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllassets\">\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Select All</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllassets\" checked={Object.keys(state.assetsApply).length >= 3 ? true : false} onClick={onSelectAllAssetsApply} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"image_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-image-line text-gray-800 icon-6\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Image Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"image_assets\" checked={Object.keys(state.assetsApply).includes(\"2,4\") ? true : false} onClick={onAssetsApply(\"2,4\")} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"video_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-movie-line text-gray-800 icon-6\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Video Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"video_assets\" checked={Object.keys(state.assetsApply).includes(\"3,5\") ? true : false} onClick={onAssetsApply(\"3,5\")} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"text_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-text text-gray-800 icon-6\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Text Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"text_assets\" checked={Object.keys(state.assetsApply).includes(\"1\") ? true : false} onClick={onAssetsApply(\"1\")} />\n                        </div>\n                    </Accordion.Body>\n                </Accordion.Item>\n                </Accordion>\n    }\n}\n\nexport default AssetsTypes","\nimport React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport AndOrCondition from './AndOr';\nimport { GET_MEDIA_NAME } from '../../../../../Services/Utils/utils';\nimport CollectionThumb from '../../../CommonComponents/CollectionThumb';\n\nclass Collections extends Component {\n    render() {\n        const { state, onCollectionSearchFilter, onCollectionSelectAll, onCollectionApply, conditionApply, filterApply, filterKey, indexFilter, isLast, onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\n            <Accordion.Item eventKey={'collection'} className=\"pb-2\">\n                <div className=\"d-flex\">\n                    <Accordion.Header className=\"me-1\">\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                            <i className=\"ri-folder-4-line text-gray-800 me-1\"></i>\n                            <div className=\"fs-9 fw-medium\">Collection</div>\n                        </div>\n                        <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                    </Accordion.Header>\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                </div>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchCollection\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Search Collection</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onCollectionSelectAll} checked={Object.keys(state.selectedCollection).length >= state.collectionCompleteList.length ? true : false} />\n                            </div>\n                            <div className=\"form-group mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchCollection\" placeholder=\"Search your collection...\" onChange={onCollectionSearchFilter} />\n                            </div>\n                            {state.collectionList && Object.keys(state.collectionList).length > 0 ? \n                                <div className=\"\">\n                                    {\n                                        state.collectionList.map((item) => <div className=\"dropdown-item px-0\">\n                                            <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`coolection_${item.id}`}>\n                                                <CollectionThumb symbolClasses={'symbol symbol-22 bg-light'} iconClass={'text-gray-700 me-0 fw-normal'} thumb={item.thumbnails} thumbName={GET_MEDIA_NAME(item.thumbnails)} />\n                                                <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                            </label>\n                                            <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"\" id={`coolection_${item.id}`} checked={Object.keys(state.selectedCollection).includes(`${item.id}`) ? true : false} onClick={onCollectionApply(item.id)} />\n                                        </div>)\n                                    }\n                                </div>:\n                                <div className=\"py-4\">\n                                    <h6 className=\"text-center fs-9 mb-0 text-gray-700\">{state.isCollection ? `Loading...` : `No Collections Available`}</h6>\n                                </div>\n                            }\n                        </>\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    }\n}\n\nexport default Collections\n","\nimport React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\nimport AndOrCondition from './AndOr'\nclass Network extends Component {\n    state = {\n        networkList: null\n    }\n    componentDidMount() { this.feedNetworkList() }\n    componentDidUpdate(prevProps)\n    {\n        if(prevProps.state.networkData != this.props.state.networkData) this.feedNetworkList()\n    }\n    feedNetworkList = () => {\n        const { feedData, networkData } = this.props.state\n        let networkConnectionId = []\n        networkConnectionId = feedData ? feedData.map((item) => item.networkId) : []\n        networkConnectionId = [...new Set(networkConnectionId)]\n        if (networkConnectionId.includes(18)) { networkConnectionId.splice(networkConnectionId.indexOf(18), 1, 2) }\n        const networksList = networkData.filter(network => networkConnectionId.includes(network.id))\n        this.setState({ networkList: networksList })\n    }\n    render() {\n        const { state, onNetworkApply, onClickSelectAll, onSearchFilter, filterApply, filterKey, conditionApply, indexFilter, isLast, onSelectActive } = this.props\n        const { networkList } = this.state\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\n            <Accordion.Item eventKey={'source'} className=\"pb-2\">\n                <div className=\"d-flex\">\n                    <Accordion.Header className=\"me-1\">\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                            <span className=\"svg-icon text-gray-800 d-flex\">\n                                <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                            </span>\n                            <div className=\"fs-9 fw-medium\">Network</div>\n                        </div>\n                        <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                    </Accordion.Header>\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                </div>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Search Network</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onClickSelectAll} checked={networkList && (Object.keys(state.selectedNetwork).length >= networkList.length) && networkList.length !=0 ? true : false} />\n                            </div>\n                            <div className=\"form-group mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchNetwork\" placeholder=\"Search your network...\" onChange={onSearchFilter} />\n                            </div>\n                            {networkList && networkList.length > 0 ?\n                                <div className=\"\">\n                                    {\n                                        networkList.map((item) => {\n                                            return <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                                <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`filter_${GET_NETWORK_ICON(item.id)}`}>\n                                                    <span className=\"symbol symbol-22\">\n                                                        <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.id)}.svg`)} height={20} width={20} alt={item.name} />\n                                                    </span>\n                                                    <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                                </label>\n                                                <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"phone\" id={`filter_${GET_NETWORK_ICON(item.id)}`} checked={Object.keys(state.selectedNetwork).includes(`${item.id}`) ? true : false} onClick={onNetworkApply(item.id)} />\n                                            </div>\n                                        })\n\n                                    }\n\n                                </div>:\n                                <div className=\"py-4\">\n                                    <h6 className=\"text-center fs-8 mb-0\">No Networks Available</h6>\n                                </div>\n                            }\n                        </>\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    }\n}\n\nexport default Network;","import React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport AndOrCondition from './AndOr'\nclass UgcRights extends Component {\n    render() {\n        const { onSelectAllUgcRigths, onUgcRigths, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'ugcrights'} className=\"pb-2\">\n                        <div className=\"d-flex\">\n                            <Accordion.Header className=\"me-1\">\n                                <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                    <span className=\"svg-icon text-gray-800 d-flex\">\n                                        <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                    </span>\n                                    <div className=\"fs-9 fw-medium\">UGC Rights</div>\n                                </div>\n                                <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                            </Accordion.Header>\n                            <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                        </div>\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                            <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllugc\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Select All</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllugc\" checked={Object.keys(state.ugcRigths).length >= 3 ? true : false} onClick={onSelectAllUgcRigths} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_approved\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Approved</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_approved\" checked={Object.keys(state.ugcRigths).includes(\"2\") ? true : false} onClick={onUgcRigths(\"2\")} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_pending\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/rights-pending-line.svg')} height={18} width={18} />\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Pending</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_pending\" checked={Object.keys(state.ugcRigths).includes(\"1\") ? true : false} onClick={onUgcRigths(\"1\")} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_rejected\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/rights-rejected-line.svg')} height={18} width={18} />\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Rejected</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_rejected\" checked={Object.keys(state.ugcRigths).includes(\"3\") ? true : false} onClick={onUgcRigths(\"3\")} />\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n    }\n}\n\nexport default UgcRights\n","\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Accordion } from 'react-bootstrap';\nimport CreatableSelect from 'react-select/creatable';\nimport AndOrCondition from './AndOr'\n\nclass Tags extends Component {\n    state = {\n        tagString: [],\n        newTag: \"\",\n        listTags: [],\n        selectedOption: null\n    };\n\n    onClickToRemoveTag = (index) => event => {\n        let { tagString } = this.state;\n        tagString.splice(index, 1)\n        this.setState({ tagString })\n\n    }\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n\n    }\n    componentDidMount() {\n        const { modalAssetData } = this.props\n        if (modalAssetData && Object.keys(modalAssetData).length > 0) {\n            if (modalAssetData.tags && String(modalAssetData.tags).length > 0) this.setState({ tagString: String(modalAssetData.tags).split(\",\") })\n        }\n    }\n\n    onClickNewAddTag = event => {\n        const { newTag, tagString } = this.state;\n        const { modalAssetData } = this.props\n        if (newTag && String(newTag).length >= 3) {\n            tagString.push(newTag)\n            this.setState({ tagString, newTag: \"\", selectedOption: null })\n        }\n        else {\n\n        }\n    }\n    addNewTag = event => this.setState({ newTag: event.target.value })\n\n\n    setNewTags = (selectedOption) => {\n        if (selectedOption.value) {\n            this.setState({ newTag: \"\", selectedOption: null }, () => this.props.onTagApply(selectedOption.value))\n        }\n    };\n\n    render() {\n        const { tagString, newTag, listTags, selectedOption } = this.state\n        const { state, onTagRemove, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'tags'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <i className=\"ri-price-tag-3-line text-gray-800 me-1\"></i>\n                                <div className=\"fs-9 fw-medium\">Tags</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                        <div className=\"form-group mb-2\">\n                            <CreatableSelect className=\"selectpicker\" classNamePrefix={'selectpicker'} isClearable options={listTags} onChange={this.setNewTags} value={selectedOption} />\n                        </div>\n                        <div className=\"tags-group tags-group-sm d-flex align-items-center flex-wrap\">\n                            {\n                                state.tagApply ? state.tagApply.map((tagItem, tagKey) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-1 mb-1\">\n                                    {tagItem}\n                                    <button className=\"btn p-0 ms-1\" onClick={onTagRemove(tagKey)}>\n                                        <i className=\"ri-price-tag-3-line\"></i>\n                                    </button>\n                                </div>) : null\n                            }\n                        </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Tags Available</h6>\n                        </div>\n                        }\n                    </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        tagList: state.tags.tagList\n    }\n}\n\nexport default connect(mapStateToProps)(Tags);\n","\nimport React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Accordion } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\nimport AndOrCondition from './AndOr'\n\nclass Connection extends Component {\n\n\n    render() {\n        const { state, onconnectionApply, onConnectionSelectAll, onConnectionSearchFilter, conditionApply, filterApply, filterKey, indexFilter, isLast, onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\n            <Accordion.Item eventKey={'connection'} className=\"pb-2\">\n                <div className=\"d-flex\">\n                    <Accordion.Header className=\"me-1\">\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                            <span className=\"svg-icon text-gray-800 d-flex\">\n                                <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                            </span>\n                            <div className=\"fs-9 fw-medium\">Connections</div>\n                        </div>\n                        <button type=\"button\" className=\"close_filter btn btn-link btn-icon btn-sm position-absolute end-0 top-0 w-26px h-34px\" onClick={filterApply(filterKey)}></button>\n                    </Accordion.Header>\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                </div>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Select All</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" onClick={onConnectionSelectAll} checked={Object.keys(state.selectedConnection).length >= state.feedData.length ? true : false} />\n                            </div>\n                            <div className=\"\">\n                                {\n                                    state.feedData.map((item) => <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                        <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`conn-${item.feedId}`}>\n                                            <span className=\"symbol symbol-22\">\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={'twitter'} />\n                                            </span>\n                                            <span className=\"form-check-label text-gray-800 text-ellipsis\">{ReactHtmlParser(item.name)}</span>\n                                        </label>\n                                        <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" id={`conn-${item.feedId}`} name={item.feedId} value={item.feedId} onClick={onconnectionApply(item.feedId)} checked={Object.keys(state.selectedConnection).includes(`${item.feedId}`) ? true : false} />\n                                    </div>)\n                                }\n                            </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Connections Available</h6>\n                        </div>\n                    }\n                </Accordion.Body>\n            </Accordion.Item>\n\n        </Accordion>\n    }\n}\nexport default Connection;","import React, { Component } from 'react';\nimport AssetsTypes from './AssetsTypes';\nimport Collections from './Collections';\nimport Network from './Network';\nimport UgcRights from './UgcRights';\nimport Tags from './Tags';\nimport Connection from './Connection';\n\n\n\nclass Filters extends Component {\n    render() {\n\n        const { filterKey, isLast } = this.props\n\n        return <div className=\"publish_filters\">\n            {filterKey == \"collection\" ? <Collections {...this.props} />\n                : filterKey == \"source\" ? <Network {...this.props} />\n                    : filterKey == \"assetsType\" ? <AssetsTypes {...this.props} />\n                        : filterKey == \"tags\" ? <Tags {...this.props} />\n                            : filterKey == \"ugcrights\" ? <UgcRights {...this.props} />\n                                : filterKey == \"connection\" ? <Connection {...this.props} /> : null\n            }\n        </div>\n    }\n}\n\nexport default Filters","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\n\nconst removeDuplicate = (data) => {\n    try {\n        var updateFilter = []\n        var updateKey = {}\n        data.map((item) => {\n            if (!updateKey[item.id]) {\n                updateFilter.push(item)\n                updateKey[item.id] = true\n            }\n\n        })\n        return updateFilter\n    }\n    catch (ex) {\n        return data\n    }\n}\n\nclass Templates extends Component {\n    state = {\n        templeteList: [],\n        isUpdate: false,\n        selectTemp:null\n    }\n    componentWillMount() {setTimeout(() => {this.onLoad()}, 100);}\n    onLoad = () => {\n        var self = this\n        const { templeteList, state } = this.props\n        self.setState({ templeteList: removeDuplicate(templeteList), selectTemp:state.selectedTemplate })\n    }\n    onFiltertemplateName = (id) => {\n        const { templeteList } = this.state;\n\n        if (templeteList && templeteList.length > 0) {\n            const updated = templeteList.filter((item) => item.id == id)\n            if (updated && updated.length > 0) {\n                return updated[0].name\n            }\n            else return \"\"\n        }\n        else return \"\"\n\n    }\n\n\n    render() {\n        const { templeteList, selectTemp } = this.state;\n        const { onSelectTemplate, state } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Template <strong className=\"text-danger\">*</strong></label>\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-9 fw-medium\">{selectTemp ? selectTemp.name ? selectTemp.name : this.onFiltertemplateName(selectTemp.id) : `Please select template.`}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {templeteList && templeteList.length > 0 ?\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\" defaultValue={0}>\n                            {templeteList.map((temp, index) => {\n                                return <><ToggleButton key={`template_id_${index}`} className={`mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={()=>{this.setState({selectTemp:temp},()=>{onSelectTemplate(temp)})}}>\n                                        <div className=\"d-flex align-items-center\">\n                                            <div className=\"symbol symbol-44 flex-shrink-0 me-2\">\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height={50} width={50} alt={temp.name} />\n                                            </div>\n                                            <div className=\"overflow-hidden text-start\">\n                                                <p className={`fs-8 fw-semibold mb-1 text-ellipsis text-gray-dark`}>{temp.name}</p>\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\n                                            </div>\n                                        </div>\n                                </ToggleButton></>\n                            })}\n                        </ToggleButtonGroup>\n                        : null}\n                    <div className=\"text-center\">\n                        <Link to={'/template/add'} className=\"btn btn-link text-decoration-none btn-sm p-0\">\n                            <i className=\"ri-add-line\"></i>\n                            Create New Template\n                        </Link>\n                    </div>\n                </Accordion.Body>\n            </Accordion.Item>\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\n\nconst platformName = (platform) => {\n    switch (platform) {\n        case 'p-cast':\n            return 'Cast'\n        case 'p-chromecast':\n            return 'Chromecast'\n        case 'p-firetvstick':\n            return 'Fire Tv Stick'\n        case 'p-androidtv':\n            return 'Android Tv'\n        case 'p-Aptoide':\n            return 'Aptoide'\n        case 'p-wired':\n            return 'Wired'\n\n        case 'p-screen-cloud':\n            return 'Screen Cloud';\n        case 'p-yodeck':\n            return 'Yodeck';\n        case 'p-onsign':\n            return 'Onsign';\n        case 'p-rise-vision':\n            return 'Rise Vision';\n        case 'p-optisign':\n            return 'Optisign';\n        case 'p-raydiant':\n            return 'Raydiant'\n        case 'p-enplug':\n            return 'Enplug';\n        case 'p-novi-sign':\n            return 'Novi Sign';\n        case 'dp-other':\n            return 'Other';\n\n\n        case 'p-6connex':\n            return '6Connex';\n        case 'p-zuddl':\n            return 'Zuddl';\n        case 'p-gevme':\n            return 'Gevme';\n        case 'p-vfairs':\n            return 'Vfairs';\n        case 'p-workcast':\n            return 'Workcast';\n        case 'p-pathable':\n            return 'Pathable';\n\n        case 'p-hubilo':\n            return 'Hubilo';\n        case 'ev-other':\n            return 'Other';\n        default:\n            return \"\";\n    }\n}\n\nclass Platforms extends Component {\n\n    render() {\n        const { onSelectedPlatform, state, themeSkin } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Display Platform</label>\n            <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100 d-flex align-items-center\">\n                    <p className=\"fs-9 fw-medium mb-0\">{`${state.selectedPlatform == 's-projector' ? `Projector / TV` : state.selectedPlatform == 's-signage' ? `Digital Signage` : state.selectedPlatform == 's-event' ? `Virtual / Hybrid Events` : `Select Display Platform`}`}</p>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"selectPlatfrom\" value={state.selectedPlatform} defaultValue={'s-projector'}>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_projector\" value=\"s-projector\" onClick={onSelectedPlatform('s-projector')}>\n                            <i className=\"ri-tv-2-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Projector / TV</p>\n                        </ToggleButton>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_signage\" value=\"s-signage\" onClick={onSelectedPlatform('s-signage')}>\n                            <i className=\"ri-tablet-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Digital Signage</p>\n                        </ToggleButton>\n                        <ToggleButton className={`d-flex align-items-center mb-2 text-gray-800 bg-white`} variant=\"outline-secondary\" id=\"s_event\" value=\"s-event\" onClick={onSelectedPlatform('s-event')}>\n                            <i className=\"ri-picture-in-picture-line icon-5 text-gray-800\"></i>\n                            <p className=\"fs-9 fw-medium mb-0\">Virtual / Hybrid Events</p>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item>\n            {state.selectedPlatform == 's-projector' ? <Accordion.Item eventKey=\"10\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"display-platform\" defaultValue={'p-cast'}>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-cast\" value={'p-cast'} onClick={e => this.props.embedCodeCallback('p-cast')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/cast${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"cast\" height={26} width={80} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-chromecast\" value={'p-chromecast'} onClick={e => this.props.embedCodeCallback('p-chromecast')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/chromecast${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"chromecast\" height={44} width={100} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-firetvstick\" value={'p-firetvstick'} onClick={e => this.props.embedCodeCallback('p-firetvstick')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/firetvstick${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"firetvstick\" height={30} width={80} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-androidtv\" value={'p-androidtv'} onClick={e => this.props.embedCodeCallback('p-androidtv')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/androidtv${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"androidtv\" height={45} width={85} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-Aptoide\" value={'p-Aptoide'} onClick={e => this.props.embedCodeCallback('p-Aptoide')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/Aptoide-tv${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"Aptoide\" height={32} width={110} />\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-wired\" value={'p-wired'} onClick={e => this.props.embedCodeCallback('p-wired')}>\n                            <div className=\"block-center text-center h-46px w-100\">\n                                <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/wired${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"wired\" height={30} width={86} />\n                            </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item> :\n                state.selectedPlatform == 's-signage' ? <Accordion.Item eventKey=\"11\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-screen-cloud'}>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-screen-cloud\" value={'p-screen-cloud'} onClick={e => this.props.embedCodeCallback('p-screen-cloud')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/screen-cloud${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"screen-cloud\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-yodeck\" value={'p-yodeck'} onClick={e => this.props.embedCodeCallback('p-yodeck')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/yodeck${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"yodeck\" height={44} width={100} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-onsign\" value={'p-onsign'} onClick={e => this.props.embedCodeCallback('p-onsign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/onsign-tv${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"onsign\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-rise-vision\" value={'p-rise-vision'} onClick={e => this.props.embedCodeCallback('p-rise-vision')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/rise-vision${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"rise-vision\" height={40} width={75} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-optisign\" value={'p-optisign'} onClick={e => this.props.embedCodeCallback('p-optisign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/optisign${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"optisign\" height={32} width={110} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-raydiant\" value={'p-raydiant'} onClick={e => this.props.embedCodeCallback('p-raydiant')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/raydiant${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"raydiant\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-enplug\" value={'p-enplug'} onClick={e => this.props.embedCodeCallback('p-enplug')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/enplug${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"enplug\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-novi-sign\" value={'p-novi-sign'} onClick={e => this.props.embedCodeCallback('p-novi-sign')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/novi-sign${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"novi-sign\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"dp-other\" value={'dp-other'} onClick={e => this.props.embedCodeCallback('p-other')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"other\" height={26} width={70} />\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : state.selectedPlatform == 's-event' ? <Accordion.Item eventKey=\"12\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-9 fw-medium\">{platformName(state.showGenratedCode)}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-6connex'}>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-6connex\" value={'p-6connex'} onClick={e => this.props.embedCodeCallback('p-6connex')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/6connex${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"6connex\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-zuddl\" value={'p-zuddl'} onClick={e => this.props.embedCodeCallback('p-zuddl')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/zuddl${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"zuddl\" height={44} width={100} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-gevme\" value={'p-gevme'} onClick={e => this.props.embedCodeCallback('p-gevme')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/gevme${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"gevme\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-vfairs\" value={'p-vfairs'} onClick={e => this.props.embedCodeCallback('p-vfairs')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/vfairs${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"vfairs\" height={40} width={75} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-workcast\" value={'p-workcast'} onClick={e => this.props.embedCodeCallback('p-workcast')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/workcast${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"workcast\" height={32} width={110} />\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-pathable\" value={'p-pathable'} onClick={e => this.props.embedCodeCallback('p-pathable')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/pathable${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"pathable\" height={30} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"p-hubilo\" value={'p-hubilo'} onClick={e => this.props.embedCodeCallback('p-hubilo')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/hubilo${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"hubilo\" height={26} width={80} />\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"mb-2\" variant=\"outline-secondary\" id=\"ev-other\" value={'ev-other'} onClick={e => this.props.embedCodeCallback('ev-other')}>\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl(`media/images/display-platform/other${themeSkin=='dark'?'-dark':''}.svg`)} alt=\"other\" height={26} width={70} />\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : null}\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        themeSkin: state.themeSkin.themeSkin\n    }\n}\nexport default connect(mapStateToProps)(Platforms);","import React, { Component, Suspense } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Tab } from 'react-bootstrap';\nimport { getCollectionList } from '../../../Services/Actions/homeActions'\nimport { updatePublishRequest, getPublishList, publishDeleteRequest } from '../../../Services/Actions/publishActions'\n\nimport { capitalizeFirstLetter } from '../../../Services/Utils/utils';\nimport { id } from 'date-fns/locale';\nconst HtmlEmbed = React.lazy(() => import('./Components/DisplayPlatforms/CastUrl'));\nconst WordPressEmbed = React.lazy(() => import('./Components/DisplayPlatforms/WiredUrl'));\nconst WixEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AptoideCode'));\nconst SquarespaceEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AndroidTvCode'));\nconst ShopifyEmbed = React.lazy(() => import('./Components/DisplayPlatforms/FireStickCode'));\nconst OtherEmbed = React.lazy(() => import('./Components/DisplayPlatforms/ChromecastUrl'));\n\nconst DisplayScreenAside = React.lazy(() => import('./Components/DisplayScreenAside'));\n// const EditWebEmbedAside = React.lazy(() => import('./Components/EditWebEmbedAside'));\n\nconst dataWithComma = (updateData) => {\n    var dataCollection = {}\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection[item] = true\n        })\n    return dataCollection\n}\nconst tagDataWithComma = (updateData) => {\n    var dataCollection = []\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection.push(item)\n        })\n    return dataCollection\n}\nconst assetsData = (data) => {\n    var dataCollection = {}\n    if (data && String(data).length > 0) {\n        if (String(data).includes(\"2,4\")) {\n            dataCollection[\"2,4\"] = true\n        }\n        else if (String(data).includes(\"3,5\")) {\n            dataCollection[\"3,5\"] = true\n        }\n        if (String(data).includes(\"1\")) {\n            dataCollection[\"1\"] = true\n        }\n    }\n\n    return dataCollection\n}\n\nconst chooseActiveFilter = (assetsType, collection, connection, source, tags, ugcrights) => {\n    var dataCollection = {}\n    if (assetsType) {\n        dataCollection[\"assetsType\"] = true\n    }\n    if (collection) {\n        dataCollection[\"collection\"] = true\n    }\n    if (connection) {\n        dataCollection[\"connection\"] = true\n    }\n    if (source) {\n        dataCollection[\"source\"] = true\n    }\n    if (tags) {\n        dataCollection[\"tags\"] = true\n    }\n    if (ugcrights) {\n        dataCollection[\"ugcrights\"] = true\n    }\n    return dataCollection\n}\n\nclass WebEmbed extends Component {\n    constructor(props) {\n        super(props);\n        const { item, templeteList } = props\n        var templateData = {}\n        if (templeteList && templeteList.length > 0) {\n            const DataTemp = templeteList.filter((temp) => temp.id == item.template)\n            if (DataTemp && DataTemp.length > 0) templateData = DataTemp[0]\n            else templateData = { id: item.template }\n\n        }\n        else templateData = { id: item.template }\n        this.state = {\n            showGenratedCode: item.platform ? item.platform : 'p-cast',\n            chooseFilter: chooseActiveFilter(item.assets_type, item.collection, item.source, item.network, item.tags, item.ugc_status),\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: assetsData(item.assets_type),\n            tagApply: tagDataWithComma(item.tags),\n            ugcRigths: {},\n            selectedPlatform: item.screen_type ? item.screen_type == \"1\" ? 's-projector' : item.screen_type == '2' ? 's-signage': item.screen_type == '3' ? 's-event' : \"\" : '',\n            selectedTemplate: templateData,\n            condition: String(item.filterType).toLowerCase(),\n            networkData: [],\n            feedData: [],\n            selectedNetwork: dataWithComma(item.network),\n            selectedConnection: dataWithComma(item.source),\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            collectionList: [],\n            collectionCompleteList: [],\n            selectedCollection: dataWithComma(item.collection),\n            collectionSearch: \"\",\n            genrateCode: false,\n            publishList: [],\n            responseData: item,\n            activeFilter: null,\n            selectedWebEmbed: null,\n            publishCodeName: item.name ? item.name : \"Untitled-1\",\n            id: item.id,\n            isUpdating: false,\n            isCollection: true\n        };\n    }\n\n    timeout = 0;\n    componentWillMount() {\n        this.onLoadCollectionList()\n    }\n    componentDidMount() {\n        const { networks, feedData } = this.props\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n\n    }\n    componentWillReceiveProps(nextProps) {\n        const { networks, feedData } = nextProps\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n    }\n\n\n    onClickToDelete = (data) => event => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You want to delete this\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                var self = this;\n                publishDeleteRequest(data).then((response) => {\n                    self.onLoadPublish()\n                    toast.success('Your widget has been deleted.')\n\n                })\n\n\n            }\n        })\n\n    }\n\n    onTagApply = (value) => {\n        const { tagApply } = this.state\n        tagApply.push(value)\n        this.setState({ tagApply })\n    }\n    onTagRemove = (index) => event => {\n        let { tagApply } = this.state;\n        tagApply.splice(index, 1)\n        this.setState({ tagApply })\n    }\n\n    conditionApply = (condition) => event => {\n        this.setState({ condition })\n    }\n    filterApply = (filterKey) => event => {\n        const { chooseFilter } = this.state;\n        var updateFilter = {}\n        if (chooseFilter[filterKey]) {\n            delete chooseFilter[filterKey]\n            if (filterKey == \"collection\") updateFilter = { selectedCollection: {} }\n            if (filterKey == \"source\") updateFilter = { selectedNetwork: {} }\n            if (filterKey == \"assetsType\") updateFilter = { assetsApply: {} }\n            if (filterKey == \"tags\") updateFilter = { tagApply: [] }\n            if (filterKey == \"ugcrights\") updateFilter = { ugcRigths: {} }\n            if (filterKey == \"connection\") updateFilter = { selectedConnection: {} }\n            this.setState({ chooseFilter: chooseFilter, activeKey: \"\", ...updateFilter })\n        }\n        else {\n            chooseFilter[filterKey] = true;\n            this.setState({ chooseFilter, activeKey: filterKey })\n        }\n\n    }\n    onSelectActive = (activeKey) => event => {\n        this.setState({ activeKey: this.state.activeKey == activeKey ? \"\" : activeKey })\n    }\n    shareEmbedModal = event => this.setState({\n        showGenratedCode: true\n    })\n    genratedCodeCallback = event => {\n        this.setState({\n            showGenratedCode: event\n        })\n    }\n    renderSwitch = (platform) => {\n        const { responseData } = this.state\n\n        switch (platform) {\n            case 'p-html':\n                return <HtmlEmbed data={responseData} />;\n            case 'p-wordpress':\n                return <WordPressEmbed data={responseData} />;\n            case 'p-wix':\n                return <WixEmbed data={responseData} />;\n            case 'p-squarespace':\n                return <SquarespaceEmbed data={responseData} />;\n            case 'p-shopify':\n                return <ShopifyEmbed data={responseData} />;\n            case 'p-other':\n                return <OtherEmbed data={responseData} />;\n            default:\n                return <HtmlEmbed data={responseData} />;\n        }\n\n    }\n\n\n    onSelectTemplate = (template) => this.setState({ selectedTemplate: template })\n    onSelectedPlatform = (selectedPlatform) => event => {\n        this.setState({ selectedPlatform: selectedPlatform })\n    }\n\n    onUgcRigths = (value) => event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths[value]) {\n            delete ugcRigths[value]\n            this.setState({ ugcRigths: ugcRigths })\n        }\n        else {\n            ugcRigths[value] = true;\n            this.setState({ ugcRigths })\n        }\n    }\n    onSelectAllUgcRigths = event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths && Object.keys(ugcRigths).length >= 3) {\n            this.setState({ ugcRigths: {} })\n        }\n        else {\n            this.setState({\n                ugcRigths: {\n                    \"1\": true, \"2\": true, \"3\": true\n                }\n            })\n        }\n    }\n\n    onconnectionApply = (value) => event => {\n        const { selectedConnection } = this.state;\n        if (selectedConnection[value]) {\n            delete selectedConnection[value]\n            this.setState({ selectedConnection: selectedConnection })\n        }\n        else {\n            selectedConnection[value] = true;\n            this.setState({ selectedConnection })\n        }\n    }\n    onConnectionSelectAll = event => {\n        const { selectedConnection, feedData } = this.state;\n        if (selectedConnection && Object.keys(selectedConnection).length >= feedData.length) {\n            this.setState({ selectedConnection: {} })\n        }\n        else {\n            var dataNetwork = {}\n            feedData.map((item) => {\n                dataNetwork[item.feedId] = true\n            })\n            this.setState({\n                selectedConnection: dataNetwork\n            })\n        }\n    }\n    onConnectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textConnectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadConnectionFilterData())\n        }, 1000);\n    }\n    onLoadConnectionFilterData = () => {\n        const { feedData } = this.props\n        const { textConnectionSearch } = this.state;\n        const searchData = feedData.filter((item) => String(item.name).toLowerCase().includes(textConnectionSearch))\n        this.setState({ feedData: searchData })\n    }\n    onAssetsApply = (value) => event => {\n        const { assetsApply } = this.state;\n        if (assetsApply[value]) {\n            delete assetsApply[value]\n            this.setState({ assetsApply: assetsApply })\n        }\n        else {\n            assetsApply[value] = true;\n            this.setState({ assetsApply })\n        }\n    }\n\n    onSelectAllAssetsApply = event => {\n        const { assetsApply } = this.state;\n        if (assetsApply && Object.keys(assetsApply).length >= 3) {\n            this.setState({ assetsApply: {} })\n        }\n        else {\n            this.setState({\n                assetsApply: {\n                    \"1\": true, \"2,4\": true, \"3,5\": true\n                }\n            })\n        }\n    }\n\n    onNetworkApply = (value) => event => {\n        const { selectedNetwork } = this.state;\n        if (selectedNetwork[value]) {\n            delete selectedNetwork[value]\n            this.setState({ selectedNetwork: selectedNetwork })\n        }\n        else {\n            selectedNetwork[value] = true;\n            this.setState({ selectedNetwork })\n        }\n    }\n    onClickSelectAll = event => {\n        const { selectedNetwork, networkData } = this.state;\n        if (selectedNetwork && Object.keys(selectedNetwork).length >= networkData.length) {\n            this.setState({ selectedNetwork: {} })\n        }\n        else {\n            var dataNetwork = {}\n            networkData.map((item) => {\n                dataNetwork[item.id] = true\n            })\n            this.setState({\n                selectedNetwork: dataNetwork\n            })\n        }\n    }\n    onSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadFilterData())\n        }, 1000);\n    }\n    onLoadFilterData = () => {\n        const { networks } = this.props\n        const { textSearch } = this.state;\n        const searchData = networks.filter((item) => String(item.name).toLowerCase().includes(textSearch))\n        this.setState({ networkData: searchData })\n    }\n\n    onLoadCollectionList = () => {\n        var self = this;\n        const { collectionData } = this.props;\n        if (collectionData && Object.keys(collectionData).length > 0 && collectionData.collectionList.length > 0) {\n            self.setState({ collectionList: collectionData.collectionList, collectionCompleteList: collectionData.collectionList, assetsCount: collectionData.assetsCount, isCollection: false })\n        }\n        else {\n            getCollectionList().then((response) => {\n                const { responseData } = response.data;\n                if (responseData && Object.keys(responseData).length > 0) {\n                    self.setState({ collectionList: responseData.collection, collectionCompleteList: responseData.collection, isCollection: false })\n                }\n            }).catch((ex) => {\n\n            })\n        }\n\n    }\n\n    onCollectionApply = (value) => event => {\n        const { selectedCollection } = this.state;\n        if (selectedCollection[value]) {\n            delete selectedCollection[value]\n            this.setState({ selectedCollection: selectedCollection })\n        }\n        else {\n            selectedCollection[value] = true;\n            this.setState({ selectedCollection })\n        }\n    }\n    onCollectionSelectAll = event => {\n        const { selectedCollection, collectionList } = this.state;\n        if (selectedCollection && Object.keys(selectedCollection).length >= collectionList.length) {\n            this.setState({ selectedCollection: {} })\n        }\n        else {\n            var dataCollection = {}\n            collectionList.map((item) => {\n                dataCollection[item.id] = true\n            })\n            this.setState({\n                selectedCollection: dataCollection\n            })\n        }\n    }\n    onCollectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ collectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadCollectionFilterData())\n        }, 1000);\n    }\n    onLoadCollectionFilterData = () => {\n        const { collectionSearch, collectionCompleteList } = this.state;\n        const searchData = collectionCompleteList.filter((item) => String(item.name).toLowerCase().includes(collectionSearch))\n        this.setState({ collectionList: searchData })\n    }\n    onChangeName = event => {\n        this.setState({ publishCodeName: event.target.value })\n    }\n    onRequestPublish = event => {\n        const { id, selectedTemplate, selectedCollection, selectedConnection, selectedNetwork, condition, showGenratedCode, ugcRigths, assetsApply, publishCodeName, tagApply, selectedPlatform } = this.state\n        var self = this;\n\n        var collection = []\n        var template = \"\"\n        var source = []\n        var type = []\n        var tags = []\n        var network = []\n        var ugcRigthsU = []\n\n        if (ugcRigths && Object.keys(ugcRigths).length > 0) {\n            Object.keys(ugcRigths).map((item) => {\n                ugcRigthsU.push(item)\n            })\n        }\n        if (selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) {\n            template = selectedTemplate.id\n        }\n\n        if (selectedNetwork && Object.keys(selectedNetwork).length > 0) {\n            Object.keys(selectedNetwork).map((item) => {\n                network.push(item)\n            })\n        }\n        if (selectedCollection && Object.keys(selectedCollection).length > 0) {\n            Object.keys(selectedCollection).map((item) => {\n                collection.push(item)\n            })\n        }\n        if (selectedConnection && Object.keys(selectedConnection).length > 0) {\n            Object.keys(selectedConnection).map((item) => {\n                source.push(item)\n            })\n        }\n        if (assetsApply && Object.keys(assetsApply).length > 0) {\n            Object.keys(assetsApply).map((item) => {\n                type.push(item)\n            })\n        }\n        if (tagApply && tagApply.length > 0) {\n            tags = tagApply\n        }\n        if ((selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.Theme.id) && (collection.length > 0 || source.length > 0 || tags.length > 0 || type.length > 0 || ugcRigthsU.length > 0 || network.length > 0)) {\n            const data = {\n                id: id,\n                name: publishCodeName,\n                \"template\": template,\n                \"collection\": collection.join(\",\"),\n                \"source\": source.join(\",\"),\n                \"assets_type\": type.join(\",\"),\n                \"tags\": tags.join(\",\"),\n                \"ugc_status\": ugcRigthsU.join(\",\"),\n                \"publish_type\": 4,\n                \"campaign_type\": \"\",\n                \"screen_type\": selectedPlatform ? selectedPlatform == 's-projector' ? \"1\" : selectedPlatform == 's-signage' ? \"2\" : selectedPlatform == 's-event' ? \"3\" : \"\": \"\",\n                \"platform\": showGenratedCode ? showGenratedCode : \"\",\n                network: network.join(\",\"),\n                filterType: String(condition).toUpperCase()\n\n            }\n            this.setState({ isUpdating: true })\n            updatePublishRequest(data).then((response) => {\n                const { status, response_code, response_message } = response.data\n                if (status == \"success\") {\n                    toast.success(\"Publish digital screen successfully updated.\")\n                    self.setState({ isUpdating: false }, () => self.props.onLoadPublish())\n                    //self.setState({ responseData: response.data }, () => self.props.onLoadPublish())\n                }\n                else toast.error(response_message)\n\n            }).catch((ex) => {\n\n            })\n        }\n        else {\n            if (!(selectedTemplate)) { toast.error(\"Please select template.\", { autoClose: 3000 }) }\n            else { toast.error(\"Please select filter.\", { autoClose: 3000 }) }\n        }\n    }\n    onResetFilter = event => {\n        this.setState({\n            showGenratedCode: 'p-cast',\n            chooseFilter: {},\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: {},\n            tagApply: [],\n            ugcRigths: {},\n            selectedTemplate: null,\n            selectedPlatform: null,\n            condition: \"and\",\n            selectedNetwork: {},\n            selectedConnection: {},\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            selectedCollection: {},\n            collectionSearch: \"\",\n            genrateCode: false,\n            responseData: null,\n            activeFilter: null,\n            publishCodeName: \"\",\n            isUpdating: false\n\n        })\n    }\n    onUpdateReponseData = (data) => {\n        this.setState({ responseData: data })\n    }\n\n    render() {\n        const { showGenratedCode, chooseFilter, genrateCode, responseData, activeFilter } = this.state\n\n        const { networks, history } = this.props\n        return <>\n            {networks && networks.length > 0 ? <DisplayScreenAside genratedCodeCallback={this.genratedCodeCallback} genratedCodeModal={showGenratedCode} filterApply={this.filterApply} state={this.state} onSelectTemplate={this.onSelectTemplate} onSelectedPlatform={this.onSelectedPlatform} onSelectAllUgcRigths={this.onSelectAllUgcRigths} onUgcRigths={this.onUgcRigths} onTagRemove={this.onTagRemove} onTagApply={this.onTagApply} onAssetsApply={this.onAssetsApply} onconnectionApply={this.onconnectionApply} onSelectAllAssetsApply={this.onSelectAllAssetsApply} onNetworkApply={this.onNetworkApply} onClickSelectAll={this.onClickSelectAll} onSearchFilter={this.onSearchFilter} onCollectionSearchFilter={this.onCollectionSearchFilter}\n                onCollectionSelectAll={this.onCollectionSelectAll}\n                onCollectionApply={this.onCollectionApply} conditionApply={this.conditionApply} onConnectionSearchFilter={this.onConnectionSearchFilter} onConnectionSelectAll={this.onConnectionSelectAll} onClickToDelete={this.onClickToDelete} onResetFilter={this.onResetFilter} activeFilter={activeFilter} history={history} onChangeName={this.onChangeName} onUpdateReponseData={this.onUpdateReponseData} onLoadPublish={this.onLoadPublish} onSelectActive={this.onSelectActive} onRequestPublish={this.onRequestPublish} isPublishEdit={true} key={\"edit_filter\"} /> : null}\n        </>\n\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        networks: state.networks.networkData,\n        feedData: state.feedData.filterList,\n        collectionData: state.collection,\n        templeteList: state.templates.templeteList\n\n    }\n}\n\nexport default connect(mapStateToProps)(WebEmbed);","import React, { Component, Suspense } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditWebEmbed from '../../EditWebEmbed'\nimport { getAssetsCount } from '../../../../../Services/Actions/assetsActions'\n\nclass EmbedList extends Component {\n    state = {\n        active: null\n    }\n    onClickToEdit = (item) => event => {\n        var self = this\n        getAssetsCount(item.id).then((response) => {\n            const { publishCode, assestCount } = response.data\n            self.props.onUpdateReponseData({ assestCount: assestCount, publishCode: publishCode })\n        }).catch((ex) => {\n            self.props.onUpdateReponseData({ assestCount: 0, publishCode: item })\n        })\n\n\n    }\n\n    render() {\n        const { state, history, onLoadPublish } = this.props\n        const { active } = this.state\n        return <Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\n                return <Accordion.Item eventKey={pIndex}>\n                    <div className=\"menu-item\" key={`di_sc${pIndex}`}>\n                        <Accordion.Header className=\"w-100 disable_arrow\">\n                            <div className=\"d-flex justify-content-between align-items-center w-100\" onClick={this.onClickToEdit(item)}>\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\n                                <div className=\"d-flex align-items-center justify-content-end\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2\">\n                                            <i className=\"ri-edit-box-line me-0 icon-7\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px\"\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id })}>\n                                            <i className=\"ri-delete-bin-6-line me-0 icon-7\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Accordion.Header>\n                    </div>\n                    <Accordion.Body className=\"p-0 pt-3\">\n                        <EditWebEmbed history={history} item={item} key={`edit_digital_screen${pIndex}`} onLoadPublish={onLoadPublish} />\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            })\n            }\n        </Accordion>\n    }\n\n}\nexport default EmbedList\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from \"react-redux\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n//import Select from 'react-select';\nimport SVG from 'react-inlinesvg'\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport { EmbedURL } from '../../../../Services/Api'\nimport Filters from './Filters';\nimport Templates from './Template';\nimport Platforms from './Platforms';\nimport EmbedList from './EmbedList'\n\nclass DisplayScreenAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: []\n    };\n    componentDidMount() {\n        const clickResetFilter = document.querySelector(\"#billing_tab_panel-tab-aside-assets_filter\")\n        if (clickResetFilter) {\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\n        }\n    }\n\n    handleSelect(date) {\n\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList } = this.props\n        return <div className=\"card-body\">\n            <PerfectScrollbar>\n                <div className=\"innerAsideWrapper\">\n                    <div className=\"d-flex align-items-start justify-content-between\">\n                        <h6 className=\"fs-7 fw-bolder mb-0\">{`${isPublishEdit ? `Edit` : `Add`} Filter`}</h6>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm py-1\" onClick={event => history(\"/web-embed/\")}>New</button> */}\n                    </div>\n                    <Tab.Container id={`${isPublishEdit ? `edit_billing_tab_panel` : `billing_tab_panel`}`} defaultActiveKey=\"aside-assets_filter\">\n                        <Nav variant=\"underline\" className=\"border-bottom mb-3\">\n                            <Nav.Item className=\"\">\n                                <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\" onClick={isPublishEdit ? event => this.props.onUpdateReponseData(null) : null}>Assets Filter</Nav.Link>\n                            </Nav.Item>\n                            {!isPublishEdit ? <Nav.Item className=\"\">\n                                <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\n                            </Nav.Item> : null}\n                        </Nav>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"aside-assets_filter\">\n                                <label className=\"text-gray-800 mb-2\">Display Name <strong className=\"text-danger\">*</strong></label>\n                                <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n                                <div className=\"publish_aside_inner\">\n                                    {\n                                        state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                                    }\n                                    <Accordion defaultActiveKey={\"0\"}>\n                                        <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n                                            <Accordion.Header className=\"add_fillter_btn text-gray-800\">\n                                                <i className=\"ri-add-line plus_symbol me-1\"></i>\n                                                <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n                                                <span className=\"fs-9 fw-medium\">Choose Filter</span>\n                                            </Accordion.Header>\n                                            <Accordion.Body className=\"border rounded-1 mt-1\">\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the preferred collection</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none  disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                                <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\n                                                        <span className=\"fs-9 text-gray-500\">Choose the required network</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                                <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the connection type</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <i className=\"ri-image-line icon-6 text-gray-800\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\n                                                        <span className=\"fs-9 text-gray-500\">Choose the type of asset</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the preferred tag</span>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                                        <div className=\"symbol-label\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                                <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={18} width={18} />\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"\">\n                                                        <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\n                                                        <span className=\"fs-9 text-gray-500\">Select the preferred ugc rights status</span>\n                                                    </div>\n                                                </div>\n                                            </Accordion.Body>\n                                        </Accordion.Item>\n                                        <Templates {...this.props} key={templeteList.length > 0} />\n                                        <Platforms {...this.props} embedCodeCallback={this.embedCodeCallback} />\n                                    </Accordion>\n                                </div>\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                    <button type=\"button\" className={`btn btn-primary btn-sm ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save Changes</button>\n                                </div>\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\n                                </div>\n\n                            </Tab.Pane>\n                            {!isPublishEdit ? <Tab.Pane eventKey=\"filter-assets_published\">\n                                <EmbedList {...this.props} />\n                            </Tab.Pane> : null}\n                        </Tab.Content>\n                    </Tab.Container>\n                </div>\n            </PerfectScrollbar>\n        </div>\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n\n    }\n}\nexport default connect(mapStateToProps)(DisplayScreenAside);"],"names":["AndOrCondition","this","props","condition","conditionApply","Dropdown","align","className","variant","size","capitalizeFirstLetter","onClick","Component","AssetsTypes","onAssetsApply","onSelectAllAssetsApply","state","filterApply","filterKey","onSelectActive","indexFilter","isLast","Accordion","activeKey","onSelect","eventKey","type","AndOr","htmlFor","name","value","id","checked","Object","keys","assetsApply","length","includes","Collections","onCollectionSearchFilter","onCollectionSelectAll","onCollectionApply","selectedCollection","collectionCompleteList","placeholder","onChange","collectionList","map","item","CollectionThumb","symbolClasses","iconClass","thumb","thumbnails","thumbName","GET_MEDIA_NAME","isCollection","Network","networkList","feedNetworkList","feedData","networkData","networkConnectionId","networkId","Set","splice","indexOf","networksList","filter","network","setState","prevProps","onNetworkApply","onClickSelectAll","onSearchFilter","src","baseUrl","height","width","selectedNetwork","GET_NETWORK_ICON","alt","UgcRights","onSelectAllUgcRigths","onUgcRigths","ugcRigths","Tags","tagString","newTag","listTags","selectedOption","onClickToRemoveTag","index","event","onClickNewAddTag","modalAssetData","String","push","addNewTag","target","setNewTags","onTagApply","tagList","label","tags","split","onTagRemove","classNamePrefix","isClearable","options","tagApply","tagItem","tagKey","connect","Connection","onconnectionApply","onConnectionSelectAll","onConnectionSearchFilter","selectedConnection","feedId","ReactHtmlParser","Filters","removeDuplicate","data","updateFilter","updateKey","ex","Templates","templeteList","isUpdate","selectTemp","onLoad","self","selectedTemplate","onFiltertemplateName","updated","setTimeout","onSelectTemplate","ToggleButtonGroup","defaultValue","temp","ToggleButton","Theme","to","templates","dispatch","getTemplateListDispatch","platformName","platform","Platforms","onSelectedPlatform","themeSkin","selectedPlatform","showGenratedCode","e","embedCodeCallback","HtmlEmbed","React","WordPressEmbed","WixEmbed","SquarespaceEmbed","ShopifyEmbed","OtherEmbed","DisplayScreenAside","dataWithComma","updateData","dataCollection","tagDataWithComma","assetsData","chooseActiveFilter","assetsType","collection","connection","source","ugcrights","WebEmbed","timeout","onClickToDelete","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","publishDeleteRequest","response","onLoadPublish","toast","chooseFilter","shareEmbedModal","genratedCodeCallback","renderSwitch","responseData","template","dataNetwork","searchText","clearTimeout","textConnectionSearch","toLowerCase","onLoadConnectionFilterData","searchData","textSearch","onLoadFilterData","networks","onLoadCollectionList","collectionData","assetsCount","getCollectionList","catch","collectionSearch","onLoadCollectionFilterData","onChangeName","publishCodeName","onRequestPublish","ugcRigthsU","join","filterType","toUpperCase","isUpdating","updatePublishRequest","status","response_message","response_code","autoClose","onResetFilter","collectionApply","sourceApply","genrateCode","activeFilter","onUpdateReponseData","templateData","DataTemp","assets_type","ugc_status","screen_type","publishList","selectedWebEmbed","feeds","nextProps","history","genratedCodeModal","isPublishEdit","filterList","EmbedList","active","onClickToEdit","getAssetsCount","publishCode","assestCount","defaultActiveKey","pIndex","OverlayTrigger","placement","overlay","Tooltip","EditWebEmbed","showModal","clickResetFilter","document","querySelector","addEventListener","date","Tab","Nav","Template","key"],"sourceRoot":""}