{"version":3,"file":"static/js/8341.1ce72399.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/DisplayUrlCopy.js","Layouts/Main/DisplayScreen/Components/DisplayPlatforms/VirtualHybridEvents.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","Layouts/Main/PublishCommonComponents/EmbedCode.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\n\nclass DisplayUrlCopy extends Component {\n    constructor() {\n        super();\n        this.state = { codeCopied: false };\n    }\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    render() {\n        const { codeCopied } = this.state\n        const { url } = this.props\n        return <div className=\"d-flex align-items-start mb-3 flex-wrap\" style={{ maxWidth: 500 }}>\n                    <div className=\"d-flex flex-column flex-grow-1 pe-3 mb-2\">\n                        <div className=\"position-relative\">\n                            <input type=\"text\" name=\"displayUrl\" id=\"displayUrlCopy_\" onClick={() => { this.codeCopy('displayUrlCopy_') }} className=\"form-control form-control-lg fw-semibold text-ellipsis pe-5\" value={url} readOnly />\n                        </div>\n                        <label className=\"fw-semibold fs-8 text-muted\">Copy URL</label>\n                    </div>\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => { this.codeCopy('displayUrlCopy_') }} style={{minWidth:130}}>\n                        {!codeCopied ?\n                            <i className=\"ri-file-copy-fill\"></i>\n                            :\n                            <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                        }\n                        {!codeCopied ? 'Copy URL' : 'URL Copied'}\n                    </button>\n                </div>\n\n    }\n}\n\nexport default DisplayUrlCopy;","import React, { Component, Suspense } from 'react';\nimport DisplayUrlCopy from '../../../PublishCommonComponents/DisplayUrlCopy';\nimport EmbedCode from '../../../PublishCommonComponents/EmbedCode';\nimport { DisplayURL } from '../../../../../Services/Api'\nclass VirtualHybridEvents extends Component {\n\n    render() {\n        const {data} = this.props\n        return  <div className=\"card text-decoration-none\">\n                    <div className=\"card-body p-lg-7\">\n                        <div className=\"m-auto\">\n                            <div className=\"embed_code\">\n                                <h5 className=\"mb-5 fw-bolder\">Steps To Display Social Wall In Virtual / Hybrid Events</h5>\n                                <p>Follow these steps to showcase the Tagbox Display social wall in virtual / hybrid events:</p>\n                                <h6>Step 1: (Choose As Per Platform Requirement)</h6>\n                                <div className=\"ps-3\">\n                                    <h6>A. Generate the embed code for Social Wall</h6>\n                                    <EmbedCode copyText={'Copy the generated embed code'} data={data} />\n                                    <h6>OR</h6>\n                                    <h6>B. Copy The Display Wall URL</h6>\n                                    <DisplayUrlCopy url={`${DisplayURL}${data && Object.keys(data).length > 0 ? data.wallId : null}`}/> \n                                </div>\n                                <h6 className=\"mb-5\">Step 2: To Embed Tagbox Social Wall into Hubilo follow these steps:</h6>\n                                <ul className=\"list-unstyled list-points fs-7\">\n                                    <li className=\"mb-3\">Login to your Hubilo Virtual Event Platform</li>\n                                    <li className=\"mb-3\">Go to under Session Settings & in Advanced settings enable the toggle for <span className=\"fw-bold\">Custom iframe integration.</span></li>\n                                    <li className=\"mb-3\">Add button label as per your preference and paste the copied iframe code in the <span className=\"fw-bold\">Code Snippet</span> box, then click <span className=\"fw-bold\">Save</span></li>\n                                    <li className=\"mb-3\">Congratulations, you have successfully added the Tagbox Display Social Wall to the Hubilo virtual event platform!</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    }\n}\n\nexport default VirtualHybridEvents;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nimport { EmbedURL, EMBED_MIN } from '../../../Services/Api'\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\n\nclass EmbedCode extends Component {\n    constructor() {\n        super();\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\n    }\n    shareEmbedModal = (id) => event => this.setState({\n        showModal: true,\n        id: id\n    })\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent\n        })\n    }\n\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    onClickToShare = (mailId) => event => {\n        var self = this;\n        const { id } = this.state\n        this.setState({ isLoading: true })\n        if (mailId && String(mailId).length > 0) {\n            mailSendRequest({ htmlCode: document.querySelector(id ? id : \"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\n                toast.success(\"Tagbox widget code successfully sent.\")\n                self.setState({ showModal: false, isLoading: false })\n            })\n\n        }\n        else {\n            toast.error(\"Please enter email id.\")\n        }\n    }\n    onChangeWidth = event => {\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ width: event.target.value > 100 ? 100 : event.target.value })\n    }\n    onChangeHeight = event => {\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ height: event.target.value > 100 ? 100 : event.target.value })\n    }\n    onClickToWidthSign = (value) => event => {\n        this.setState({ widthSign: value })\n    }\n    onClickToHeightSign = (value) => event => {\n        this.setState({ heightSign: value })\n    }\n    render() {\n        const { codeCopied, showModal, width, height, widthSign, heightSign } = this.state\n        const { copyText, data } = this.props\n\n        return <div className=\"embed_code\">\n            <div className=\"mb-5\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Width</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={width} value={width} onChange={this.onChangeWidth} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={widthSign}>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"%\")}>Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"px\")}>Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"vw\")} >Viewport Width (VW)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Height</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={height} value={height} onChange={this.onChangeHeight} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={heightSign}>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"%\")}>Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"px\")}>Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"vw\")}>Viewport Height (VH)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                </div>\n            </div>\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\n                    <Nav variant=\"underline\" className=\"mb-3 border-bottom\">\n                        <Nav.Item className=\"me-4\">\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Lite Code\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Iframe\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\n                                    &lt;div class=\"taggbox\" data-widget-id=\"{data && Object.keys(data).length > 0 ? data.wallId : null}\" ugcSuite=\"1\" style=\"width:{width}{widthSign};height:{height}{heightSign};\"&gt;&lt;/div&gt;\n                                    &lt;script src=\"{EMBED_MIN}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\n                                            {!codeCopied ?\n                                                <i className=\"ri-file-copy-fill\"></i>\n                                                :\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCode_')}>\n                                            <i className=\"ri-mail-fill\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                    &lt;iframe src=\"{EmbedURL}{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                            {!codeCopied ?\n                                                <i className=\"ri-file-copy-fill\"></i>\n                                                :\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCodeIframe_')}>\n                                            <i className=\"ri-mail-fill\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n            <Suspense fallback={<></>}>\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\n            </Suspense>\n        </div>\n\n    }\n}\n\nexport default EmbedCode;"],"names":["_Component","_inherits","DisplayUrlCopy","_super","_createSuper","_this","_classCallCheck","call","codeCopy","id","setState","codeCopied","setTimeout","COPY_TO_CLIPBOARD","state","_createClass","key","value","_this2","this","url","props","_jsxs","className","style","maxWidth","children","_jsx","type","name","onClick","readOnly","minWidth","color","Component","VirtualHybridEvents","apply","arguments","data","EmbedCode","copyText","concat","DisplayURL","Object","keys","length","wallId","alignDirection","PropTypes","alignPropType","sm","md","lg","xl","xxl","propTypes","href","title","disabled","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","bsPrefix","variant","size","DropdownButton","React","_ref","ref","_objectWithoutProperties","_excluded","Dropdown","_objectSpread","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","ShareEmbedModal","shareEmbedModal","event","showModal","shareEmbedCallback","shareEmbedEvent","onClickToShare","mailId","self","_assertThisInitialized","isLoading","String","mailSendRequest","htmlCode","document","querySelector","innerText","email","then","response","toast","onChangeWidth","target","parseInt","width","onChangeHeight","height","onClickToWidthSign","widthSign","onClickToHeightSign","heightSign","_this$state","_this$props","InputGroup","Form","defaultValue","onChange","Tab","defaultActiveKey","Nav","eventKey","wordBreak","EMBED_MIN","OverlayTrigger","placement","overlay","Tooltip","EmbedURL","Suspense","fallback","_Fragment","text","heading"],"sourceRoot":""}