{"version":3,"file":"static/js/2898.45a4553b.chunk.js","mappings":"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","sources":["Layouts/Main/CommonComponents/AssetsFilterAside/AssetsFilterAside.js","Layouts/Main/WebEmbed/Components/Template/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport SVG from 'react-inlinesvg'\r\nimport { Button, Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\r\nimport Filters from '../../WebEmbed/Components/Filters';\r\nimport Templates from '../../WebEmbed/Components/Template';\r\nimport PrintMediaList from '../../PrintMedia/Components/PrintMediaList'\r\n\r\n\r\nconst selectedPlatform = (platform) => {\r\n    switch (platform) {\r\n        case 'p-html':\r\n            return 'HTML'\r\n        case 'p-wordpress':\r\n            return 'Wordpress'\r\n        case 'p-wix':\r\n            return 'Wix'\r\n        case 'p-squarespace':\r\n            return 'Squarespace'\r\n        case 'p-shopify':\r\n            return 'Shopify'\r\n        case 'p-other':\r\n            return 'Other'\r\n        default:\r\n            return `HTML`\r\n    }\r\n}\r\n\r\nclass AssetsFilterAside extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        showModal: false,\r\n        //setValue : '',\r\n        publishList: []\r\n    };\r\n    componentDidMount() {\r\n        this.onLoadPublish()\r\n    }\r\n    onLoadPublish = () => {\r\n        var self = this\r\n        getPublishList().then((loadReponse) => {\r\n            self.setState({ publishList: loadReponse.data })\r\n        })\r\n    }\r\n    handleSelect(date) {\r\n\r\n    }\r\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\r\n\r\n\r\n    render() {\r\n        //const { setValue } = this.state\r\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, onSelectActive } = this.props\r\n        return <>\r\n\r\n            <label className=\"text-gray-800 mb-1 fw-medium\" htmlFor='filterLabel'>Print Media Name <strong className=\"text-danger\">*</strong></label>\r\n            <input type=\"text\" className=\"form-control form-control-sm mb-3\" id=\"filterLabel\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n\r\n            <div className='filter_wrapper print_media'>\r\n                <Accordion defaultActiveKey={1} activeKey={state.activeKey} onSelect={onSelectActive(1) ? onSelectActive(1) : null}>\r\n\r\n                    <Accordion.Item eventKey={1} className=\"pb-3\">\r\n                        <Accordion.Header className=\"add_fillter_btn\">\r\n                            <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-folder-4-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Collection</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Network</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Connections</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-image-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Assets Type</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <i className=\"ri-price-tag-3-line icon-7 text-gray-800\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Tag</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                                <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                    <div className=\"symbol-label\">\r\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>UGC Rights</p>\r\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n                {\r\n                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nexport default AssetsFilterAside;\r\n\r\n{\r\n    /*\r\n    \r\n     <div className=\"card-body\">\r\n            <div className=\"innerAsideWrapper\">\r\n                <div className=\"d-flex align-items-start justify-content-between\">\r\n                    <h6 className=\"fs-7 fw-bolder mb-0\">Add Filter</h6>\r\n                   \r\n                    </div>\r\n                    <Tab.Container id=\"billing_tab_panel\" defaultActiveKey=\"aside-assets_filter\">\r\n                        <Nav variant=\"underline\" className=\"border-bottom mb-3\">\r\n                            <Nav.Item className=\"\">\r\n                                <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\">Assets Filter</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"\">\r\n                                <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aside-assets_filter\">\r\n                                <label className=\"text-gray-800 mb-2\">Print Media Name <strong className=\"text-danger\">*</strong></label>\r\n                                <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter print media name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n    \r\n                                <div className=\"print_aside_inner\">\r\n                                {\r\n                                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                                }\r\n    \r\n                                <Accordion defaultActiveKey={\"0\"}>\r\n                                    <Accordion.Item eventKey=\"0\" className=\"pb-3\">\r\n                                        <Accordion.Header className=\"add_fillter_btn\">\r\n                                            <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                                        </Accordion.Header>\r\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-image-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\r\n                                                    <div className=\"symbol-label\">\r\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\r\n                                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\r\n                                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                </div>\r\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\r\n                                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\r\n                                </div>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"filter-assets_published\">\r\n                                <PrintMediaList {...this.props} />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Tab.Container>\r\n                </div>\r\n            </div>\r\n    \r\n    */\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport SVG from 'react-inlinesvg';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\r\n\r\nconst removeDuplicate = (data) => {\r\n    try {\r\n        var updateFilter = []\r\n        var updateKey = {}\r\n        data.map((item) => {\r\n            if (!updateKey[item.id]) {\r\n                updateFilter.push(item)\r\n                updateKey[item.id] = true\r\n            }\r\n\r\n        })\r\n        return updateFilter\r\n    }\r\n    catch (ex) {\r\n        return data\r\n    }\r\n}\r\n\r\nclass Templates extends Component {\r\n    state = {\r\n        templeteList: [],\r\n        isUpdate: false,\r\n        selectTemp:null\r\n    }\r\n    componentWillMount() {setTimeout(() => {this.onLoad()}, 100)}\r\n    componentDidMount() {setTimeout(() => {this.onLoad()}, 100)}\r\n    onLoad = () => {\r\n        var self = this\r\n        const { templeteList, state } = this.props\r\n        //if (templeteList && templeteList.length > 0) {\r\n        self.setState({ templeteList: removeDuplicate(templeteList), selectTemp: state.selectedTemplate })\r\n        // }\r\n        // else {\r\n        //     getTemplateList({ type: 1 }).then((Response) => {\r\n        //         const { responseData } = Response.data\r\n        //         self.setState({ templeteList: removeDuplicate(responseData.templates) })\r\n        //         self.props.getTemplateListDispatch(removeDuplicate(responseData.templates))\r\n        //     })\r\n        // }\r\n    }\r\n    onFiltertemplateName = (id) => {\r\n        const { templeteList } = this.state;\r\n\r\n        if (templeteList && templeteList.length > 0) {\r\n            const updated = templeteList.filter((item) => item.id == id)\r\n            if (updated && updated.length > 0) {\r\n                return updated[0].name\r\n            }\r\n            else return \"\"\r\n        }\r\n        else return \"\"\r\n\r\n    }\r\n\r\n    render() {\r\n        const { templeteList, selectTemp } = this.state;\r\n        const { onSelectTemplate, state } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-2\">Select Template <strong className=\"text-danger\">*</strong></label>\r\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">{selectTemp ? selectTemp.name ? selectTemp.name : this.onFiltertemplateName(selectTemp.id) : `Please select template.`}</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                    {templeteList && templeteList.length > 0 ?\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\">\r\n                            {templeteList.map((temp, index) => {\r\n                                return <><ToggleButton key={`template_id_${index}`} className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={()=>{this.setState({selectTemp:temp},()=>{onSelectTemplate(temp)})}}>\r\n                                    <div className=\"card-body p-2\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\r\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height=\"40\" width=\"40\" alt={temp.name} />\r\n                                            </div>\r\n                                            <div className=\"overflow-hidden text-start\">\r\n                                                <p className={`fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start`}>{temp.name}</p>\r\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </ToggleButton></>\r\n                            })}\r\n                        </ToggleButtonGroup>\r\n                        : null}\r\n                    <div className=\"text-center\">\r\n                        <Link to={'/template/add'} className=\"btn btn-link text-decoration-none btn-sm p-0 btn-min-w\">\r\n                            <i className=\"ri-add-line\"></i>\r\n                            Create New Template\r\n                        </Link>\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);"],"names":["AssetsFilterAside","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","showModal","publishList","onLoadPublish","self","_assertThisInitialized","getPublishList","then","loadReponse","setState","data","embedCodeCallback","event","genratedCodeCallback","_createClass","key","value","this","date","_this2","_this$props","filterApply","onChangeName","genratedCodeModal","onClickToDelete","onResetFilter","activeFilter","history","onSelectActive","_jsxs","_Fragment","children","className","htmlFor","_jsx","type","id","placeholder","publishCodeName","onChange","Accordion","defaultActiveKey","activeKey","onSelect","eventKey","concat","Object","keys","chooseFilter","includes","onClick","SVG","src","baseUrl","height","width","map","filterKey","indexFilter","Filters","_objectSpread","isLast","length","Component","removeDuplicate","updateFilter","updateKey","item","push","ex","Templates","_len","arguments","args","Array","_key","apply","templeteList","isUpdate","selectTemp","onLoad","selectedTemplate","onFiltertemplateName","updated","filter","name","setTimeout","_this3","_this4","_this$state","_this$props2","onSelectTemplate","ToggleButtonGroup","temp","index","ToggleButton","variant","Theme","alt","Link","to","connect","templates","dispatch","getTemplateListDispatch"],"sourceRoot":""}