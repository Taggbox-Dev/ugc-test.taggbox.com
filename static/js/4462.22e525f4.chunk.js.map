{"version":3,"file":"static/js/4462.22e525f4.chunk.js","mappings":"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","sources":["Layouts/Header/Components/HeaderManu.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../../../Assets/AssetsHelper';\r\nimport SVG from 'react-inlinesvg';\r\nimport { MEDIA_REPLACE_URL } from '../../../Services/Utils/utils'\r\nimport { logOutUser } from '../../../Services/Actions/loginActions'\r\nimport { uploadModalClick } from '../../../Services/Actions/homeActions'\r\nimport ProfileImage from '../../Main/CommonComponents/ProfileImage/ProfileImage';\r\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\n\r\nconst AddAssetsModal = React.lazy(() => import('../../Main/MyAssets/AddAssetsModal/AddAssetsModal'));\r\nconst Notifications = React.lazy(() => import('./Elements/Notifications'));\r\n\r\nclass HeaderManu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isActiveAside: false, appThemeSkin: props.cookies ? props.cookies : 'light', editMediaShowModal: false, logOutSpinner: false };\r\n        if (props.cookies) {\r\n            const htmlTag = document.getElementsByTagName(\"html\")[0];\r\n            htmlTag.setAttribute(\"data-theme\", props.cookies);\r\n        }\r\n    }\r\n    setMode = (ele) => {\r\n        const htmlTag = document.getElementsByTagName(\"html\")[0];\r\n        htmlTag.setAttribute(\"data-theme\", ele);\r\n        this.props.uploadModalClick(this.state.editMediaShowModal)\r\n        this.setState({ appThemeSkin: ele }, () => this.props.setAppThemeSkin(ele));\r\n\r\n    };\r\n\r\n    editMediaHandleModalShow = () => {\r\n        this.setState({\r\n            editMediaShowModal: true\r\n        })\r\n    }\r\n\r\n    editMediaHandleCallback = (editMediaEvent) => {\r\n\r\n        this.setState({\r\n            editMediaShowModal: editMediaEvent\r\n        })\r\n        this.props.uploadModalClick(false)\r\n    }\r\n    onClickSignOut = event => {\r\n        this.setState({\r\n            logOutSpinner: true\r\n        })\r\n        this.props.logOutUser()\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.uploadStatus != this.state.editMediaShowModal) {\r\n            const { uploadStatus } = nextProps\r\n            if (uploadStatus) {\r\n                this.setState({ editMediaShowModal: true })\r\n            }\r\n            else this.setState({ editMediaShowModal: false })\r\n        }\r\n    }\r\n    onEmailCopy = (id) => event => COPY_TO_CLIPBOARD(id)\r\n    render() {\r\n        const { appThemeSkin, editMediaShowModal, logOutSpinner } = this.state;\r\n        const { userData, notificationList, history } = this.props\r\n        return (\r\n            <div className=\"header-menu d-flex align-items-center justify-content-end w-xs-100 h-100\">\r\n                <div className=\"d-flex align-items-center h-100 flex-shrink-0\">\r\n                    <Dropdown id=\"head_skin_\" align=\"end\" className=\"block-center position-relative head_skin_\">\r\n                        <Dropdown.Toggle variant=\"link\" className=\"btn btn-icon btn-active-light btn-active-color-primary p-0 text-decoration-none transition-none arrow_disabled\">\r\n                            {appThemeSkin === 'light' ?\r\n                                <i className=\"ri-sun-fill icon-6\"></i>\r\n                                : null}\r\n                            {appThemeSkin === 'dark' ?\r\n                                <i className=\"ri-moon-clear-fill icon-6\"></i>\r\n                                : null}\r\n                            {appThemeSkin === 'system' ?\r\n                                <span className=\"svg-icon me-0 text-dark\">\r\n                                    <SVG src={baseUrl('media/icons/svg-icons/computer-setting.svg')} height={16} width={16} />\r\n                                </span>\r\n                                : null}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <div className=\"menu-item\">\r\n                                <Dropdown.Item className={`${appThemeSkin === 'light' ? 'active ' : ''}px-3 py-2`} onClick={() => this.setMode(\"light\")}>\r\n                                    <i className=\"ri-sun-fill icon-6 me-2 text-dark\"></i>\r\n                                    <span className=\"menu-title\">Light</span>\r\n                                </Dropdown.Item>\r\n                            </div>\r\n                            <div className=\"menu-item\">\r\n                                <Dropdown.Item className={`${appThemeSkin === 'dark' ? 'active ' : ''}px-3 py-2`} onClick={() => this.setMode(\"dark\")}>\r\n                                    <i className=\"ri-moon-clear-fill icon-6 me-2 text-dark\"></i>\r\n                                    <span className=\"menu-title\">Dark</span>\r\n                                </Dropdown.Item>\r\n                            </div>\r\n                            <div className=\"menu-item\">\r\n                                <Dropdown.Item className={`${appThemeSkin === 'system' ? 'active ' : ''}px-3 py-2`} onClick={() => this.setMode(\"system\")}>\r\n                                    <span className=\"svg-icon svg-icon-5\">\r\n                                        <SVG src={baseUrl('media/icons/svg-icons/computer-setting.svg')} height={16} width={16} />\r\n                                    </span>\r\n                                    <span className=\"menu-title\">System</span>\r\n                                </Dropdown.Item>\r\n                            </div>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <div className=\"head_upload_ block-center border-end\">\r\n                        <button type=\"button\" className={`btn btn-primary d-flex align-items-center ${localStorage.getItem(\"expired\") ? `disabled` : ``}`} onClick={this.editMediaHandleModalShow}>\r\n                            <span className=\"svg-icon svg-icon-5 me-lg-2 me-0\">\r\n                                <SVG src={baseUrl('media/icons/svg-icons/cloud-upload.svg')} />\r\n                            </span>\r\n                            <span className=\"d-lg-flex d-none fw-medium fs-8\">Upload</span>\r\n                        </button>\r\n                    </div>\r\n                    <Dropdown className=\"block-center head_notifications_\" align=\"end\">\r\n                        <Dropdown.Toggle variant=\"link\" id=\"head_notifications_\" className=\"btn btn-icon btn-active-light btn-active-color-primary text-decoration-none p-0 position-relative arrow_disabled\">\r\n                            <span className=\"d-flex align-items-center justify-content-center\">\r\n                                <span className=\"notifications_count bg-primary text-light-alt position-absolute rounded-circle\" id=\"notificationCount\" style={{ display: 'none' }} > 0</span>\r\n                                <i className=\"ri-notification-4-line icon-4\"></i>\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"p-0\">\r\n                            <Suspense fallback={<></>}>\r\n                                <Notifications notificationList={notificationList} />\r\n                            </Suspense>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n\r\n                    <Dropdown className=\"block-center user_profile_\" align=\"end\" autoClose={true}>\r\n                        <Dropdown.Toggle variant=\"link\" id=\"user_profile_\" className=\"btn author_profile p-0 border-0 text-decoration-none d-block rounded-circle overflow-hidden arrow_disabled\">\r\n                            {userData && Object.keys(userData).length > 0 ? <ProfileImage className={'symbol symbol-38 rounded-circle bg-light'}\r\n                                imageSize={38}\r\n                                symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\r\n                                name={userData.user.name} profileUrl={MEDIA_REPLACE_URL(userData.user.picture)} networkId={0} /> : null}\r\n                        </Dropdown.Toggle>\r\n\r\n                        {userData && Object.keys(userData).length > 0 ? <Dropdown.Menu className=\"p-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-between w-100 p-3 border-bottom\">\r\n                                <div className=\"d-flex align-items-center me-2\">\r\n                                    <Link to={\"/profile\"} className=\"text-decoration-none\">\r\n                                        <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden bg-light'}\r\n                                            imageSize={40}\r\n                                            symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\r\n                                            name={userData.user.name} profileUrl={MEDIA_REPLACE_URL(userData.user.picture)} networkId={0} />\r\n                                    </Link>\r\n                                    <div className=\"\">\r\n                                        <p className=\"text-dark mb-0\">\r\n                                            <Link to={\"/profile\"} className=\"text-decoration-none\"><strong className=\"fs-6 fw-bold text-break text-gray-800\">{userData.user.name}</strong></Link>\r\n                                        </p>\r\n                                        <span className=\"mb-0 text-gray-600 text-break fs-8 cursor-pointer\" id=\"headerProfileEmail\" onClick={this.onEmailCopy(\"headerProfileEmail\")}>{userData.user.emailId}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"px-5 mb-3\">\r\n                                <Dropdown.Item className=\"navi-item px-0 py-2 py-xxl-3 border-bottom dropdown-item rounded-0\" onClick={event => history(\"/profile\")}>\r\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\r\n                                        <div className=\"symbol-label text-dark\">\r\n                                            <i className=\"ri-user-3-line icon-6 me-0\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"navi-text\">\r\n                                        <div className=\"fs-7 fw-semibold mb-1\">My Profile</div>\r\n                                        <div className=\"text-gray-600 fs-8\">View/Edit your personal information </div>\r\n                                    </div>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item className=\"navi-item px-0 py-2 py-xxl-3 border-bottom dropdown-item rounded-0\" onClick={event => history(\"/billing\")}>\r\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\r\n                                        <div className=\"symbol-label text-dark\">\r\n                                            <i className=\"ri-contacts-line icon-6 me-0\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"navi-text\">\r\n                                        <div className=\"fs-7 fw-semibold mb-1\">My Account</div>\r\n                                        <div className=\"text-gray-600 fs-8\">Account information and plan details</div>\r\n                                    </div>\r\n                                </Dropdown.Item>\r\n                                <button type=\"button\" onClick={this.onClickSignOut} className={`navi-item px-0 py-2 py-xxl-3 dropdown-item rounded-0 ${logOutSpinner ? 'disabled' : ''}`}>\r\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\r\n                                        <div className={`symbol-label ${logOutSpinner ? 'text-gray-500' : 'text-dark'}`}>\r\n                                            <i className=\"ri-logout-circle-r-line icon-6 me-0\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"navi-text\">\r\n                                        <div className={`fs-7 fw-semibold mb-1 ${logOutSpinner ? 'spinner spinner-gray text-gray-500' : ''}`}>Sign Out</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        </Dropdown.Menu> : null}\r\n                    </Dropdown>\r\n                </div>\r\n                <Suspense fallback={<></>}>\r\n                    {editMediaShowModal ? <AddAssetsModal editMediaHandleCallback={this.editMediaHandleCallback} editMediaToggle={editMediaShowModal} {...this.props} /> : null}\r\n                </Suspense>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        userData: state.authenticated.userData,\r\n        uploadStatus: state.modalstatus.uploadStatus,\r\n        notificationList: state.notifications.notificationList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logOutUser: () => dispatch(logOutUser()),\r\n        uploadModalClick: (status) => dispatch(uploadModalClick(status))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderManu);"],"names":["AddAssetsModal","React","Notifications","HeaderManu","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","setMode","ele","document","getElementsByTagName","setAttribute","uploadModalClick","state","editMediaShowModal","setState","appThemeSkin","setAppThemeSkin","editMediaHandleModalShow","editMediaHandleCallback","editMediaEvent","onClickSignOut","event","logOutSpinner","logOutUser","onEmailCopy","id","COPY_TO_CLIPBOARD","isActiveAside","cookies","_createClass","key","value","nextProps","uploadStatus","this","_this2","_this$state","_this$props","userData","notificationList","history","_jsxs","className","children","Dropdown","align","variant","_jsx","SVG","src","baseUrl","height","width","concat","onClick","type","localStorage","getItem","style","display","Suspense","fallback","_Fragment","autoClose","Object","keys","length","ProfileImage","imageSize","symbolClass","name","user","profileUrl","MEDIA_REPLACE_URL","picture","networkId","Link","to","emailId","_objectSpread","editMediaToggle","Component","connect","authenticated","modalstatus","notifications","dispatch","status"],"sourceRoot":""}