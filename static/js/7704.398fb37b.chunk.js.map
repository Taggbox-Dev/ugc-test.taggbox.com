{"version":3,"file":"static/js/7704.398fb37b.chunk.js","mappings":"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","sources":["Layouts/Main/Templates/TemplateAside/TemplateAside.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Accordion, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport ModernWaterfallTemplate from './Components/ModernWaterfallTemplate';\nimport ModernSlideshowTemplate from './Components/ModernSlideshowTemplate';\nimport AtmosphereTemplate from './Components/AtmosphereTemplate';\n\nimport SquarePhoto from '../ThemeTemplates/SquarePhoto';\nimport ModernCard from '../ThemeTemplates/ModernCard';\nimport HorizontalColumns from '../ThemeTemplates/HorizontalColumns';\nimport ModernSlideShow from '../ThemeTemplates/ModernSlideShow';\nimport Atmosphere from '../ThemeTemplates/Atmosphere';\nimport GalleryPhoto from '../ThemeTemplates/GalleryPhoto';\nimport ModernWaterfall from '../ThemeTemplates/ModernWaterfall';\nimport FontHead from './FontHead';\n\nimport { createTemplate } from '../../../../Services/Actions/templateAction'\n\nconst ModernCardTemplate = React.lazy(() => import('./Components/ModernCardTemplate'));\nconst SquarePhotoTemplate = React.lazy(() => import('./Components/SquarePhotoTemplate'));\nconst HorizontalColumnTemplate = React.lazy(() => import('./Components/HorizontalColumnTemplate'));\nconst GalleryPhotoTemplate = React.lazy(() => import('./Components/GalleryPhotoTemplate'));\n\nconst ThemesPreview = ({ themeName, templateFormData }) => {\n    switch (themeName) {\n        case 20:\n            return <ModernCard {...templateFormData} />;\n        case 4:\n            return <SquarePhoto {...templateFormData} />;\n        case 47:\n            return <HorizontalColumns  {...templateFormData} />;\n        case 21:\n            return <ModernSlideShow {...templateFormData} />;\n        case 44:\n            return <Atmosphere {...templateFormData} />;\n        case 50:\n            return <GalleryPhoto {...templateFormData} />;\n        case 58:\n            return <ModernWaterfall {...templateFormData} />;\n        default:\n            return <ModernCard {...templateFormData} />;\n    }\n\n}\n\nclass TemplateAside extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            templateName: \"\",\n            selectedTheme: props.defaultTheme ? { name: props.defaultTheme.name, themeId: props.defaultTheme.themeId } : {},\n            selectedThemeData: props.defaultTheme ? props.defaultTheme : null,\n            templateFormData: null,\n            isRequesting: false,\n            tempError: false\n        }\n    }\n\n    onChooseTheme = (theme, selectedThemeData) => event => {\n        this.setState({ selectedTheme: theme, selectedThemeData: selectedThemeData })\n    }\n    onTextTemplateName = event => {\n        this.setState({ templateName: event.target.value, tempError: false })\n    }\n    tempFormData = (data) => {\n        this.setState({ templateFormData: data })\n    }\n    onClickSaveChanges = event => {\n        const { templateFormData, templateName, selectedThemeData } = this.state\n        const { onSiteSetting } = this.props\n        if (templateFormData && Object.keys(templateFormData).length > 0 && String(templateName).length > 0) {\n            var self = this\n\n            const onsite_settings = {\n                network: onSiteSetting.network,\n                filter: onSiteSetting.filter,\n                moderation: onSiteSetting.moderation,\n                onsite_qr_code_btn_text: templateFormData.onSiteUpload.buttonText,\n                onsite_btn_color: templateFormData.onSiteUpload.bgColor,\n                onsite_btn_txt_color: templateFormData.onSiteUpload.textColor,\n                onsite_link_font_btn: onSiteSetting.onsite_link_font_btn,\n                onsite_css_font_btn: onSiteSetting.onsite_css_font_btn,\n                onsite_font_varient_btn: onSiteSetting.onsite_font_varient_btn,\n                btn_fontSize: templateFormData.onSiteUpload.fontSize,\n                onsite_qr_code_status: templateFormData.onSiteUpload.qrCodeStatus,\n                onsite_popup_title: onSiteSetting.onsite_popup_title,\n                onsite_popup_btn_txt: onSiteSetting.onsite_popup_btn_txt,\n                onsite_popup_sub_heading: onSiteSetting.onsite_popup_sub_heading,\n                onsite_term_url: onSiteSetting.onsite_term_url,\n                onsiteImgBack: onSiteSetting.onsiteImgBack,\n                onsite_logo: onSiteSetting.onsite_logo,\n                Onsite_logoImageValue: onSiteSetting.Onsite_logoImageValue,\n                onsite_bg_color_wg: onSiteSetting.onsite_bg_color_wg,\n                onsiteBackImage: onSiteSetting.onsiteBackImage,\n                onsite_bg_image_wg: onSiteSetting.onsite_bg_image_wg,\n                Onsite_backImageValue: onSiteSetting.Onsite_backImageValue,\n                onsite_succ_msg: onSiteSetting.onsite_succ_msg,\n                onsite_thank_txt_color: onSiteSetting.onsite_thank_txt_color,\n                onsite_link_font_msg: onSiteSetting.onsite_link_font_msg,\n                onsite_css_font_msg: onSiteSetting.onsite_css_font_msg,\n                onsite_font_varient_msg: onSiteSetting.onsite_font_varient_msg,\n                onsite_thank_fontSize: onSiteSetting.onsite_thank_fontSize,\n                onsite_status: templateFormData.onSiteUpload.buttonStatus,\n                btn_radius: templateFormData.onSiteUpload.borderRadius\n            };\n            console.log(\"onsite_settings\", onsite_settings)\n            const data = {\n                \"action\": 1,\n                \"name\": templateName,\n                \"theme\": selectedThemeData.themeId,\n                \"cssStatus\": templateFormData.customCss.cssStatus ? 1 : 0,\n                \"css\": templateFormData.customCss.css,\n                \"backgroundColor\": templateFormData.background.status ? templateFormData.background.color : \"\",\n                \"transparent\": templateFormData.background.transparent ? 1 : 0,\n                \"backgroundImage\": templateFormData.background.image ? templateFormData.background.image : \"\",\n                \"backgroundImageId\": 0,\n                \"link_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"css_font\": templateFormData.cardStyle.fontFamily ? templateFormData.cardStyle.fontFamily.family : \"\",\n                \"font_varient\": templateFormData.cardStyle.fontVarient && Object.keys(templateFormData.cardStyle.fontVarient).length > 0 ? templateFormData.cardStyle.fontVarient.value : \"\",\n                \"fontColor\": templateFormData.cardStyle.textColor,\n                \"cardColor\": templateFormData.cardStyle.cardColor,\n                \"postText\": 0,\n                \"postAuthor\": templateFormData.advanced.author ? 1 : 0,\n                \"postTime\": templateFormData.advanced.time ? 1 : 0,\n                \"postFeatured\": templateFormData.themeSettings.postPopUp ? 1 : 0,\n                \"minimumPostWidth\": templateFormData.themeSettings.minPostWitdh,\n                \"padding\": templateFormData.themeSettings.postPadding,\n                \"scrollDelay\": templateFormData.themeSettings.scrollSpeed,\n                \"slideDelay\": templateFormData.themeSettings.timePerSlide,\n                \"numberOfPosts\": templateFormData.themeSettings.numberOfPosts,\n                \"trimcontent\": templateFormData.themeSettings.trimContent ? 1 : 0,\n                \"playFullVideo\": 1,\n                \"randomizePost\": templateFormData.themeSettings.suffleAssets ? 1 : 0,\n                \"hideUrls\": templateFormData.themeSettings.hideUrls ? 1 : 0,\n                \"fitRow\": templateFormData.themeSettings.bestFit ? 1 : 0,\n                \"roundEdge\": 5,\n                \"cardType\": 1,\n                \"socialAction\": templateFormData.cardStyle.socialActions ? 1 : 0,\n                \"timeForPopup\": templateFormData.themeSettings.popUpduration,\n                \"authorColor\": templateFormData.cardStyle.authorColor,\n                \"iconType\": templateFormData.cardStyle.iconType ? 1 : 505,\n                \"iconColor\": templateFormData.cardStyle.socialIconColor,\n                \"fontSize\": parseInt(templateFormData.cardStyle.fontSize),\n                \"shareOption\": templateFormData.cardStyle.shareOptions ? 1 : 0,\n                \"hideContent\": templateFormData.advanced.hideContent ? 1 : 0,\n                \"numberOfCoumn\": templateFormData.themeSettings.columns && Object.keys(templateFormData.themeSettings.columns).length > 0 ? templateFormData.themeSettings.columns.value : 0,\n                \"slideDuration\": 0,\n                \"slidePost\": 0,\n                \"autoPlay\": 0,\n                \"popupSlideShow\": 0,\n                \"customUrl\": templateFormData.themeSettings.popUpUrl && String(templateFormData.themeSettings.popUpUrl).length > 0 ? templateFormData.themeSettings.popUpUrl : \"\",\n                \"showHideOldPost\": templateFormData.themeSettings.hideOldAssets.range == 8 ? templateFormData.themeSettings.hideOldAssets.showHideOldPost : 0,\n                \"showHideOlderPost\": templateFormData.themeSettings.hideOldAssets.range ? templateFormData.themeSettings.hideOldAssets.range : 0,\n                \"loadMoreStatus\": templateFormData.themeSettings.showmore ? 1 : 0,\n                \"autoScrollStatus\": templateFormData.themeSettings.autoLoad ? 1 : 0,\n                \"hidePosts\": templateFormData.themeSettings.hideOldAssets.status ? 1 : 0,\n                \"onsite_settings\": JSON.stringify(onsite_settings)\n            }\n            this.setState({ isRequesting: true, tempError: false })\n            createTemplate(data).then((response) => {\n                self.setState({ isRequesting: false, tempError: false })\n                toast.success(\"New template has been successfully created.\")\n                self.props.history(\"/template\")\n            })\n        }\n        else {\n            if (String(templateName).length == 0) this.setState({ tempError: true })\n            toast.error(\"Please check all required fields.\")\n        }\n    }\n\n\n\n\n    render() {\n\n        const { themeList, fonts, onSiteSetting } = this.props\n        const { selectedTheme, selectedThemeData, templateName, templateFormData, isRequesting, tempError } = this.state\n        return <>\n            <FontHead fonts={fonts} />\n            <div className=\"innerAside flex-shrink-0\">\n                <div className=\"card gutter-b\">\n                    <div className=\"card-body p-0\">\n                        <div className=\"innerAsideWrapper innerAsideWithAction p-3\">\n                            <div className=\"pb-3\">\n                                <label className=\"text-gray-800 mb-2\">Template Name <strong className=\"text-danger\">*</strong></label>\n                                <div className=\"\">\n                                    <input type=\"text\" name=\"templateName\" className={`form-control form-control-sm ${tempError ? `is-invalid` : ``}`} placeholder=\"Enter Template name...\" onChange={this.onTextTemplateName} value={templateName} />\n                                    {tempError ? <div className=\"invalid-feedback\">Please provide template name</div> : null}\n                                </div>\n                            </div>\n                            <Accordion defaultActiveKey=\"1\">\n                                <Accordion.Item eventKey=\"1\" className=\"pb-3\">\n                                    <Accordion.Header className=\"w-100\">\n                                        <span className=\"fs-9 fw-medium\">{selectedTheme && selectedTheme.name ? selectedTheme.name : `Choose Theme`}</span>\n                                    </Accordion.Header>\n                                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"themeName\">\n                                            {themeList.map((item) => {\n                                                return <ToggleButton key={`theme_${item.themeId}`} id={`theme-${item.themeId}`} className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${item.themeId == selectedTheme.themeId ? `border-primary` : ``}`}\n                                                    onClick={this.onChooseTheme({ name: item.name, themeId: item.themeId }, item)} value={item.themeId}>\n                                                    <div className=\"card-body p-2\">\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\n                                                                <SVG src={baseUrl(`media/images/themes/${item.themeId}.svg`)} />\n                                                            </div>\n                                                            <div className=\"overflow-hidden\">\n                                                                <p className=\"fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start\">{item.name}</p>\n                                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis text-start\">{item.product_type == 1 ? `Widget` : item.product_type == 2 ? `Display` : ``}</p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </ToggleButton>\n                                            })\n                                            }\n                                        </ToggleButtonGroup>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                            </Accordion>\n                            {\n                                selectedTheme && Object.keys(selectedTheme).length > 0 ? <>{selectedTheme.themeId == 4 ? <Suspense fallback={<></>}>\n                                    <SquarePhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                </Suspense> : selectedTheme.themeId == 21 ? <Suspense fallback={<></>}>\n                                    <ModernSlideshowTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                </Suspense> : selectedTheme.themeId == 20 ? <Suspense fallback={<></>}>\n                                    <ModernCardTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                </Suspense> : selectedTheme.themeId == 44 ? <Suspense fallback={<></>}>\n                                    <AtmosphereTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                </Suspense> : selectedTheme.themeId == 50 ? <Suspense fallback={<></>}>\n                                    <GalleryPhotoTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                </Suspense> : selectedTheme.themeId == 47 ? <Suspense fallback={<></>}>\n                                    <HorizontalColumnTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                </Suspense> : selectedTheme.themeId == 58 ? <Suspense fallback={<></>}>\n                                    <ModernWaterfallTemplate selectedThemeData={selectedThemeData} tempFormData={this.tempFormData} fonts={fonts} selectedTheme={selectedTheme} onSiteSetting={onSiteSetting} />\n                                </Suspense> : null}</> : null\n                            }\n                        </div>\n                        <div className=\"bg-white pt-2 w-100 p-3 rounded-2\">\n                            <button type=\"button\" className={`btn btn-primary w-100 ${isRequesting ? `spinner` : ``}`} onClick={selectedTheme ? this.onClickSaveChanges : null}>Save Changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex flex-column overflow-hidden w-100\">\n                <div className=\"card\">\n                    <div className=\"card-body content_wrapper\">\n                        <div className=\"tb_app_container\">\n                            {templateFormData && Object.keys(templateFormData).length > 0 ? <div className=\"tb_app_wrapper\" key={selectedTheme.themeId}>\n                                <ThemesPreview themeName={selectedTheme.themeId} templateFormData={this.state.templateFormData} />\n                            </div> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default TemplateAside;"],"names":["ModernCardTemplate","React","SquarePhotoTemplate","HorizontalColumnTemplate","GalleryPhotoTemplate","ThemesPreview","themeName","templateFormData","TemplateAside","props","onChooseTheme","theme","selectedThemeData","event","setState","selectedTheme","onTextTemplateName","templateName","target","value","tempError","tempFormData","data","onClickSaveChanges","state","onSiteSetting","Object","keys","length","String","self","onsite_settings","network","filter","moderation","onsite_qr_code_btn_text","onSiteUpload","buttonText","onsite_btn_color","bgColor","onsite_btn_txt_color","textColor","onsite_link_font_btn","onsite_css_font_btn","onsite_font_varient_btn","btn_fontSize","fontSize","onsite_qr_code_status","qrCodeStatus","onsite_popup_title","onsite_popup_btn_txt","onsite_popup_sub_heading","onsite_term_url","onsiteImgBack","onsite_logo","Onsite_logoImageValue","onsite_bg_color_wg","onsiteBackImage","onsite_bg_image_wg","Onsite_backImageValue","onsite_succ_msg","onsite_thank_txt_color","onsite_link_font_msg","onsite_css_font_msg","onsite_font_varient_msg","onsite_thank_fontSize","onsite_status","buttonStatus","btn_radius","borderRadius","console","log","themeId","customCss","cssStatus","css","background","status","color","transparent","image","cardStyle","fontFamily","family","fontVarient","cardColor","advanced","author","time","themeSettings","postPopUp","minPostWitdh","postPadding","scrollSpeed","timePerSlide","numberOfPosts","trimContent","suffleAssets","hideUrls","bestFit","socialActions","popUpduration","authorColor","iconType","socialIconColor","parseInt","shareOptions","hideContent","columns","popUpUrl","hideOldAssets","range","showHideOldPost","showmore","autoLoad","JSON","stringify","isRequesting","createTemplate","then","response","toast","history","defaultTheme","name","this","themeList","fonts","className","type","placeholder","onChange","defaultActiveKey","eventKey","map","item","id","onClick","src","baseUrl","product_type","Suspense","fallback","Component"],"sourceRoot":""}