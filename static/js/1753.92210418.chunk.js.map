{"version":3,"file":"static/js/1753.92210418.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AssetsModal/AssetsModal.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Modal, Dropdown } from 'react-bootstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { ContextMenu, MenuItem, ContextMenuTrigger, SubMenu } from \"react-contextmenu\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { GET_MEDIA_NAME } from '../../../../Services/Utils/utils'\nconst ModalMedia = React.lazy(() => import('./Elements/ModalMedia'));\nconst AssetsModalAside = React.lazy(() => import('./Elements/AssetsModalAside'));\nconst MoveTo = React.lazy(() => import('../Components/Actions/MoveTo'));\n\nclass AssetsModal extends Component {\n\n    state = {\n    };\n\n    handleClose = () => {\n        this.props.modalCallback(false)\n    };\n    handleDragDrop = () => {\n\n    };\n    render() {\n        const { modalToggle, modalAssetData, exportDonwloadMedia, rightsHandleModalShow, addTagModalShow, postPostCopy, deleteAsset, collections, networkData, isTrash, onClickPutBack, onClickDeletePermanently, editMediaModalShow, postPostMove, postPostUpdate, currentIndex } = this.props\n\n        return <Modal size={'full'} show={modalToggle} className=\"assets_modal border-0 p-0\" backdrop={false}>\n            <Modal.Header className=\"border-0 p-0\">\n                <div className=\"ass_modal_actions d-flex flex-grow-1 justify-content-lg-end justify-content-between\">\n                    <div className=\"d-flex align-items-center flex-wrap\">\n                        <div className=\"d-none d-lg-flex\">\n                            {\n                                isTrash ? <>\n                                    <button type=\"button\" className=\"btn p-0 d-inline-flex align-items-center me-3\" onClick={onClickPutBack(modalAssetData)}>\n                                        <i className=\"ri-restart-line icon-6 me-1\"></i>\n                                        <span className=\"text-gray-800 fs-7\">Restore</span>\n                                    </button>\n\n                                    <button type=\"button\" className=\"btn p-0 d-inline-flex align-items-center me-3\" onClick={onClickDeletePermanently(modalAssetData)}>\n                                        <i className=\"ri-delete-bin-6-line icon-6 me-1\"></i>\n                                        <span className=\"text-gray-800 fs-7\">Delete Permanently</span>\n                                    </button>\n                                </> : <>\n\n                                    <button type=\"button\" className=\"btn p-0 d-inline-flex align-items-center me-3\" onClick={editMediaModalShow ? editMediaModalShow(modalAssetData) : null}>\n                                        <span className=\"svg-icon text-dark\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/magic-stick.svg')} height={15} width={15} />\n                                        </span>\n                                        <span className=\"menu-title\">Edit</span>\n                                    </button>\n                                    <button type=\"button\" className=\"btn p-0 d-inline-flex align-items-center me-3\" onClick={addTagModalShow ? addTagModalShow(modalAssetData) : null}>\n                                        <i className=\"ri-price-tag-3-line icon-6 me-1 text-dark\"></i>\n                                        <span className=\"text-gray-800 fs-7\">Add Tag</span>\n                                    </button>\n                                    <Dropdown align=\"start\" className=\"block-center position-relative\">\n                                        <Dropdown.Toggle variant=\"\" className=\"btn p-0 d-inline-flex align-items-center me-2 arrow_disabled\" >\n                                            <i className=\"ri-file-copy-fill icon-6 me-1 text-dark\"></i>\n                                            <span className=\"menu-title\">Copy</span>\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu style={{ width: 230 }}>\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                                <div style={{ minHeight: 180, maxHeight: 380 }}>\n                                                    {collections && collections.length > 0 ?\n                                                        collections.map((cItem, index) =>\n                                                            <div key={index} className=\"menu-item text-decoration-none\">\n                                                                <MenuItem className=\"dropdown-item\" onClick={postPostCopy ? postPostCopy({ collection: String(modalAssetData.collection), destination: String(cItem.id), id: modalAssetData.id }) : null}>\n                                                                    <div className=\"symbol symbol-24 flex-shrink-0 me-2 bg-light\" style={{ borderRadius: 2 }}>\n                                                                        {cItem.thumbnails ? <img className=\"img-fluid object-center-cover\" src={cItem.thumbnails} height={54} width={54} alt={GET_MEDIA_NAME(cItem.thumbnails)} /> :  <i className=\"ri-folder-open-line\"></i>}\n                                                                    </div>\n                                                                    <span className=\"menu-title\">{cItem.name}</span>\n                                                                </MenuItem>\n                                                            </div>\n                                                        ) : null}\n                                                </div>\n                                            </PerfectScrollbar>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n\n                                    <Dropdown align=\"start\" className=\"block-center position-relative\">\n                                        <Dropdown.Toggle variant=\"\" className=\"btn p-0 d-inline-flex align-items-center me-2 arrow_disabled\">\n                                            <i className=\"ri-arrow-right-circle-line icon-6 me-1 text-dark\"></i>\n                                            <span className=\"text-gray-800 fs-7\">Move to</span>\n                                        </Dropdown.Toggle>\n\n                                        {collections && collections.length > 0 ?\n                                            <Dropdown.Menu style={{ width: 230 }}>\n                                                <PerfectScrollbar>\n                                                    <div style={{ minHeight: 180, maxHeight: 380 }}>\n                                                        {\n                                                            collections.map((cItem, index) => <div key={index} className=\"menu-item\" onClick={postPostMove ? postPostMove(modalAssetData.id, modalAssetData.collection, cItem.id) : null}>\n                                                                <Dropdown.Item>\n                                                                    <div className=\"symbol symbol-24 flex-shrink-0 me-2 bg-light\" style={{ borderRadius: 2 }}>\n                                                                        {cItem.thumbnails ? <img className=\"img-fluid object-center-cover\" src={cItem.thumbnails} height={54} width={54} alt={GET_MEDIA_NAME(cItem.thumbnails)} /> :\n                                                                           <i className=\"ri-folder-open-line\"></i>\n                                                                        }\n                                                                    </div>\n                                                                    <span className=\"menu-title text-break\">{cItem.name}</span>\n                                                                </Dropdown.Item>\n                                                            </div>\n                                                            )\n                                                        }\n                                                    </div>\n                                                </PerfectScrollbar>\n                                            </Dropdown.Menu>\n                                            : null}\n                                    </Dropdown>\n\n                                    {(modalAssetData && modalAssetData.Feed && Object.keys(modalAssetData.Feed).length > 0 && (modalAssetData.networkId == 1 || (modalAssetData.networkId == 3 && modalAssetData.Feed.filterId == 62) || modalAssetData.networkId == 7 || modalAssetData.networkId == 8 || modalAssetData.networkId == 6 || modalAssetData.networkId == 11 || modalAssetData.networkId == 21 || (modalAssetData.networkId == 18 && (modalAssetData.Feed.filterId == 24 || modalAssetData.Feed.filterId == 25 || modalAssetData.Feed.filterId == 26)) || modalAssetData.networkId == 28)) ? <button type=\"button\" className=\"btn p-0 d-inline-flex align-items-center me-3\" onClick={rightsHandleModalShow ? rightsHandleModalShow(modalAssetData) : null}>\n                                        <span className=\"svg-icon text-dark\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={15} width={15} />\n                                        </span>\n                                        <span className=\"text-gray-800 fs-7\">Get Rights</span>\n                                    </button> : null}\n                                    <Dropdown align=\"start\" className=\"block-center position-relative\">\n                                        <Dropdown.Toggle variant=\"\" className=\"btn p-0 d-inline-flex align-items-center me-2 arrow_disabled\" >\n                                            <span className=\"svg-icon text-dark\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/publish-line.svg')} height={15} width={15} />\n                                            </span>\n                                            <span className=\"text-gray-800 fs-7\">Publish to</span>\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu style={{ width: 230 }}>\n                                            <PerfectScrollbar>\n                                                <div className=\"submenu_contxt_wrap\">\n                                                    <div className=\"menu-item text-decoration-none\">\n                                                        <MenuItem className=\"dropdown-item\" onClick={event => this.props.history(`/social-publish?assetId=${modalAssetData.id}`)}>\n                                                            <i className=\"ri-navigation-line icon-6 me-1\" style={{transform:'scaleX(-1)'}}></i>\n                                                            <span className=\"menu-title\">Social Publish</span>\n                                                        </MenuItem>\n                                                    </div>\n                                                    <div className=\"menu-item text-decoration-none\">\n                                                        <MenuItem className=\"dropdown-item\" onClick={event => this.props.history(`/print-media?assetId=${modalAssetData.id}`)}>\n                                                            <span className=\"svg-icon svg-icon-5\">\n                                                                <SVG src={baseUrl('media/icons/svg-icons/print-media-2.svg')} height={15} width={15} />\n                                                            </span>\n                                                            <span className=\"menu-title\">Print Media</span>\n                                                        </MenuItem>\n                                                    </div>\n                                                    <div className=\"menu-item text-decoration-none\">\n                                                        <MenuItem className=\"dropdown-item disabled\" onClick={event => this.props.history('/social-ads')}>\n                                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Coming soon</Tooltip>}><>\n                                                                <span className=\"svg-icon svg-icon-5\">\n                                                                    <SVG src={baseUrl('media/icons/svg-icons/speaker-line.svg')} height={15} width={15} />\n                                                                </span>\n                                                                <span className=\"menu-title\">Social Ads</span>\n                                                            </>\n                                                            </OverlayTrigger>\n                                                        </MenuItem>\n                                                    </div>\n                                                </div>\n                                            </PerfectScrollbar>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </>\n                            }\n\n                        </div>\n                        {!isTrash ? <Dropdown align=\"end\" className=\"block-center position-relative\">\n                            <Dropdown.Toggle variant=\"\" className=\"btn p-1 arrow_disabled d-flex align-items-center\">\n                                <i className=\"ri-more-2-fill icon-6 me-0\"></i>\n                                <span className=\"text-gray-800 fs-7 d-flex d-lg-none\">Actions</span>\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <div className=\"d-block d-lg-none\">\n                                    <div className=\"menu-item\">\n                                        <Dropdown.Item onClick={editMediaModalShow ? editMediaModalShow(modalAssetData) : null}>\n                                            <span className=\"svg-icon\">\n                                                <SVG src={baseUrl('media/icons/svg-icons/magic-stick.svg')} height={15} width={15} />\n                                            </span>\n                                            <span className=\"menu-title\">Edit</span>\n                                        </Dropdown.Item>\n                                    </div>\n                                    <div className=\"menu-item\">\n                                        <Dropdown.Item onClick={addTagModalShow ? addTagModalShow(modalAssetData) : null}>\n                                            <i className=\"ri-price-tag-3-line icon-6 me-1 text-dark\"></i>\n                                            <span className=\"menu-title\">Add Tag</span>\n                                        </Dropdown.Item>\n                                    </div>\n                                    {(modalAssetData && modalAssetData.Feed && Object.keys(modalAssetData.Feed).length > 0 && (modalAssetData.networkId == 1 || (modalAssetData.networkId == 3 && modalAssetData.Feed.filterId == 62) || modalAssetData.networkId == 7 || modalAssetData.networkId == 8 || modalAssetData.networkId == 6 || modalAssetData.networkId == 11 || modalAssetData.networkId == 21 || (modalAssetData.networkId == 18 && (modalAssetData.Feed.filterId == 24 || modalAssetData.Feed.filterId == 25 || modalAssetData.Feed.filterId == 26)) || modalAssetData.networkId == 28)) ?\n                                        <div className=\"menu-item\" onClick={deleteAsset ? deleteAsset(modalAssetData) : null}>\n                                            <Dropdown.Item onClick={rightsHandleModalShow ? rightsHandleModalShow(modalAssetData) : null}>\n                                                <span className=\"svg-icon\">\n                                                    <SVG src={baseUrl('media/icons/svg-icons/rights-line.svg')} height={15} width={15} />\n                                                </span>\n                                                <span className=\"menu-title\">Get Rights</span>\n                                            </Dropdown.Item>\n                                        </div> : null}\n                                </div>\n                                <div className=\"menu-item\" onClick={exportDonwloadMedia ? exportDonwloadMedia(modalAssetData.postFile) : null}>\n                                    <Dropdown.Item>\n                                        <i className=\"ri-download-2-line icon-6 me-1\"></i>\n                                        <span className=\"menu-title\">Export/Download</span>\n                                    </Dropdown.Item>\n                                </div>\n                                <div className=\"menu-item\" onClick={deleteAsset ? deleteAsset(modalAssetData) : null}>\n                                    <Dropdown.Item>\n                                        <i className=\"ri-delete-bin-6-line icon-6 me-1 text-dark\"></i>\n                                        <span className=\"menu-title\">Move to Trash</span>\n                                    </Dropdown.Item>\n                                </div>\n                            </Dropdown.Menu>\n                        </Dropdown> : null}\n                    </div>\n                </div>\n                <div className=\"assets_m_header_sidebar d-flex justify-content-between align-items-center px-lg-3 px-2 h-100 bg-white\">\n                    <span className=\"text-gray-800 fs-7 me-2 d-none d-lg-flex\">Details</span>\n                    <button type=\"button\" className=\"btn-close ms-0 text-light\" onClick={this.handleClose}></button>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"p-0 d-flex align-items-center border-0 flex-wrap\">\n                <div className=\"assets_modal_inner flex-column flex-grow-1 block-center p-lg-4 p-xxl-5 position-relative mb-2 mb-lg-0 overflow-hidden\">\n                    <button type=\"button\" className=\"assets_modal_arrow_left btn btn-secondary rounded-circle position-absolute box-shadow p-0\" onClick={this.props.slideAssets(currentIndex - 1)}>\n                        <i className=\"ri-arrow-left-s-line icon-2 me-0\"></i>\n                    </button>\n                    <Suspense fallback={<></>}>\n                        <ModalMedia modalAssetData={modalAssetData} networkData={networkData} key={modalAssetData.id} />\n                    </Suspense>\n                    <button type=\"button\" className=\"assets_modal_arrow_right btn btn-secondary rounded-circle position-absolute box-shadow p-0\" onClick={this.props.slideAssets(currentIndex + 1)}>\n                        <i className=\"ri-arrow-right-s-line icon-2 me-0\"></i>\n                    </button>\n                </div>\n                <Suspense fallback={<></>}>\n                    {modalAssetData ? <AssetsModalAside modalAssetData={modalAssetData} collections={collections} isTrash={isTrash} postPostUpdate={postPostUpdate} key={modalAssetData.id} /> : null}\n                </Suspense>\n            </Modal.Body>\n        </Modal>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state.networks.networkData,\n    }\n}\n\nexport default connect(mapStateToProps)(AssetsModal);"],"names":["ModalMedia","React","AssetsModalAside","AssetsModal","state","handleClose","props","modalCallback","handleDragDrop","this","modalToggle","modalAssetData","exportDonwloadMedia","rightsHandleModalShow","addTagModalShow","postPostCopy","deleteAsset","collections","networkData","isTrash","onClickPutBack","onClickDeletePermanently","editMediaModalShow","postPostMove","postPostUpdate","currentIndex","size","show","className","backdrop","type","onClick","src","baseUrl","height","width","align","variant","style","options","wheelPropagation","minHeight","maxHeight","length","map","cItem","index","collection","String","destination","id","borderRadius","thumbnails","alt","GET_MEDIA_NAME","name","Feed","Object","keys","networkId","filterId","event","history","transform","placement","overlay","postFile","slideAssets","Suspense","fallback","Component","connect","networks"],"sourceRoot":""}