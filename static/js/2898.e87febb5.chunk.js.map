{"version":3,"file":"static/js/2898.e87febb5.chunk.js","mappings":"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","sources":["Layouts/Main/CommonComponents/AssetsFilterAside/AssetsFilterAside.js","Layouts/Main/WebEmbed/Components/Template/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport SVG from 'react-inlinesvg'\nimport { Button, Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport Filters from '../../WebEmbed/Components/Filters';\nimport Templates from '../../WebEmbed/Components/Template';\nimport PrintMediaList from '../../PrintMedia/Components/PrintMediaList'\nimport { toast } from 'react-toastify';\n\n\nconst selectedPlatform = (platform) => {\n    switch (platform) {\n        case 'p-html':\n            return 'HTML'\n        case 'p-wordpress':\n            return 'Wordpress'\n        case 'p-wix':\n            return 'Wix'\n        case 'p-squarespace':\n            return 'Squarespace'\n        case 'p-shopify':\n            return 'Shopify'\n        case 'p-other':\n            return 'Other'\n        default:\n            return `HTML`\n    }\n}\n\nclass AssetsFilterAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: []\n    };\n    componentDidMount() {\n        this.onLoadPublish()\n    }\n    onLoadPublish = () => {\n        var self = this\n        getPublishList().then((loadReponse) => {\n            self.setState({ publishList: loadReponse.data })\n        }).catch(ex=>{toast.error(\"UGC Api failed.\")})\n    }\n    handleSelect(date) {\n\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, onSelectActive } = this.props\n        return <>\n\n            <label className=\"text-gray-800 mb-1 fw-medium\" htmlFor='filterLabel'>Print Media Name <strong className=\"text-danger\">*</strong></label>\n            <input type=\"text\" className=\"form-control form-control-sm mb-3\" id=\"filterLabel\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n\n            <div className='filter_wrapper print_media'>\n                <Accordion defaultActiveKey={1} activeKey={state.activeKey} onSelect={onSelectActive(1) ? onSelectActive(1) : null}>\n\n                    <Accordion.Item eventKey={1} className=\"pb-3\">\n                        <Accordion.Header className=\"add_fillter_btn\">\n                            <i className=\"ri-add-line plus_symbol me-1\"></i>\n                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\n                        </Accordion.Header>\n                        <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-folder-4-line icon-7 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Collection</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Network</p>\n                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Connections</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-image-line icon-7 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Assets Type</p>\n                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-price-tag-3-line icon-7 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Tag</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>UGC Rights</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\n                                </div>\n                            </div>\n\n\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                {\n                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                }\n\n\n            </div>\n\n\n        </>\n\n    }\n}\n\nexport default AssetsFilterAside;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport SVG from 'react-inlinesvg';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\n\nconst removeDuplicate = (data) => {\n    try {\n        var updateFilter = []\n        var updateKey = {}\n        data.map((item) => {\n            if (!updateKey[item.id]) {\n                updateFilter.push(item)\n                updateKey[item.id] = true\n            }\n\n        })\n        return updateFilter\n    }\n    catch (ex) {\n        return data\n    }\n}\n\nclass Templates extends Component {\n    state = {\n        templeteList: [],\n        isUpdate: false,\n        selectTemp:null\n    }\n    componentWillMount() {setTimeout(() => {this.onLoad()}, 100)}\n    componentDidMount() {setTimeout(() => {this.onLoad()}, 100)}\n    onLoad = () => {\n        var self = this\n        const { templeteList, state } = this.props\n        //if (templeteList && templeteList.length > 0) {\n        self.setState({ templeteList: removeDuplicate(templeteList), selectTemp: state.selectedTemplate })\n        // }\n        // else {\n        //     getTemplateList({ type: 1 }).then((Response) => {\n        //         const { responseData } = Response.data\n        //         self.setState({ templeteList: removeDuplicate(responseData.templates) })\n        //         self.props.getTemplateListDispatch(removeDuplicate(responseData.templates))\n        //     })\n        // }\n    }\n    onFiltertemplateName = (id) => {\n        const { templeteList } = this.state;\n\n        if (templeteList && templeteList.length > 0) {\n            const updated = templeteList.filter((item) => item.id == id)\n            if (updated && updated.length > 0) {\n                return updated[0].name\n            }\n            else return \"\"\n        }\n        else return \"\"\n\n    }\n\n    render() {\n        const { templeteList, selectTemp } = this.state;\n        const { onSelectTemplate, state } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Template <strong className=\"text-danger\">*</strong></label>\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-9 fw-medium\">{selectTemp ? selectTemp.name ? selectTemp.name : this.onFiltertemplateName(selectTemp.id) : `Please select template.`}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {templeteList && templeteList.length > 0 ?\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\">\n                            {templeteList.map((temp, index) => {\n                                return <><ToggleButton key={`template_id_${index}`} className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${(state.selectedTemplate && Object.keys(state.selectedTemplate).length > 0 && (temp.id == state.selectedTemplate.id)) ? `active` : ``}`} variant=\"outline-secondary\" id=\"tbg-radio-1\" value={index} onClick={()=>{this.setState({selectTemp:temp},()=>{onSelectTemplate(temp)})}}>\n                                    <div className=\"card-body p-2\">\n                                        <div className=\"d-flex align-items-center\">\n                                            <div className=\"symbol symbol-40 flex-shrink-0 me-2 text-gray-400\">\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/${temp.Theme.id}.png`)} height=\"40\" width=\"40\" alt={temp.name} />\n                                            </div>\n                                            <div className=\"overflow-hidden text-start\">\n                                                <p className={`fs-8 fw-semibold mb-1 text-gray-dark text-ellipsis text-start`}>{temp.name}</p>\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ToggleButton></>\n                            })}\n                        </ToggleButtonGroup>\n                        : null}\n                    <div className=\"text-center\">\n                        <Link to={'/template/add'} className=\"btn btn-link text-decoration-none btn-sm p-0 btn-min-w\">\n                            <i className=\"ri-add-line\"></i>\n                            Create New Template\n                        </Link>\n                    </div>\n                </Accordion.Body>\n            </Accordion.Item>\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);"],"names":["AssetsFilterAside","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","showModal","publishList","onLoadPublish","self","_assertThisInitialized","getPublishList","then","loadReponse","setState","data","catch","ex","toast","embedCodeCallback","event","genratedCodeCallback","_createClass","key","value","this","date","_this2","_this$props","filterApply","onChangeName","genratedCodeModal","onClickToDelete","onResetFilter","activeFilter","history","onSelectActive","_jsxs","_Fragment","children","className","htmlFor","_jsx","type","id","placeholder","publishCodeName","onChange","Accordion","defaultActiveKey","activeKey","onSelect","eventKey","concat","Object","keys","chooseFilter","includes","onClick","SVG","src","baseUrl","height","width","map","filterKey","indexFilter","Filters","_objectSpread","isLast","length","Component","removeDuplicate","updateFilter","updateKey","item","push","Templates","_len","arguments","args","Array","_key","apply","templeteList","isUpdate","selectTemp","onLoad","selectedTemplate","onFiltertemplateName","updated","filter","name","setTimeout","_this3","_this4","_this$state","_this$props2","onSelectTemplate","ToggleButtonGroup","temp","index","ToggleButton","variant","Theme","alt","Link","to","connect","templates","dispatch","getTemplateListDispatch"],"sourceRoot":""}