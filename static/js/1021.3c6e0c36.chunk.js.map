{"version":3,"file":"static/js/1021.3c6e0c36.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/GetRightsModal.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\r\nimport SVG from 'react-inlinesvg';\r\nimport $ from 'jquery'\r\nimport { Modal } from 'react-bootstrap';\r\nimport ProfileImage from '../../CommonComponents/ProfileImage/ProfileImage';\r\nimport Media from '../../CommonComponents/Media/Media';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../Services/Utils/utils';\r\nconst GetRightsModalAside = React.lazy(() => import('./Elements/GetRightsModalAside'));\r\nwindow.$ = $;\r\nglobal.jQuery = $\r\nclass GetRightsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    state = {\r\n        index: 0,\r\n        direction: null,\r\n    }\r\n    mainRef = React.createRef();\r\n    thumbsRef = React.createRef();\r\n    componentDidMount() {\r\n        if (this.mainRef.current && this.thumbsRef.current && this.thumbsRef.current.splide) {\r\n            this.mainRef.current.sync(this.thumbsRef.current.splide);\r\n        }\r\n    }\r\n\r\n    handleSelect = (selectedIndex, e) => {\r\n        if (e) this.setState({\r\n            index: selectedIndex,\r\n            direction: e.direction\r\n        });\r\n    }\r\n    handleClose = (event) => {\r\n        this.props.rightsModalCallback(false)\r\n    };\r\n    carousalImages = (bulkRightsData, thumb) => {\r\n        return bulkRightsData.map((grItem, grindx) => <SplideSlide key={grindx}>\r\n            <Media mediaType={thumb ? grItem.type : 2} postFile={grItem.postFile} mediaHeight={grItem.mediaHeight} mediaWidth={grItem.mediaWidth} socialNetwork={''} textContent={grItem.content} rating={grItem.rating} alt={grItem.name} />\r\n            {thumb ? <div className=\"rights_carousel_caption position-relative\">\r\n                <div className=\"d-flex align-items-center justify-content-between p-2\">\r\n                    <a href={grItem.link} target={'_blank'} className=\"text-decoration-none d-flex align-items-center flex-grow-1 mr-2 w-75 me-3\">\r\n                        <ProfileImage className={'symbol symbol-50 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                            imageSize={50}\r\n                            symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-4'}\r\n                            name={''} profileUrl={grItem.picture} networkId={grItem.networkId} />\r\n                        <div className=\"d-flex flex-column w-100 overflow-hidden\">\r\n                            <p className=\"fs-7 text-dark mb-0 fw-semibold text-ellipsis\">{grItem.name}</p>\r\n                            <span className=\"mb-0 text-muted text-ellipsis\">@{grItem.username}</span>\r\n                        </div>\r\n                    </a>\r\n                    <div className=\"d-flex flex-shrink-0\">\r\n                        <span className=\"h-30px w-30px\">\r\n                            <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(grItem.networkId)}.svg`)} alt={GET_NETWORK_NAME(grItem.networkId)} height={30} width={30} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </SplideSlide>)\r\n    };\r\n    render() {\r\n        //const {show} = this.state\r\n        const { rightsModalToggle, modalAssetData, networkData, bulkRightsData } = this.props\r\n        const isBulkStatus = bulkRightsData && bulkRightsData.length > 0 ? true : false\r\n\r\n\r\n        const mainOptions = {\r\n            type: 'fade',\r\n            heightRatio: 'auto',\r\n            pagination: false,\r\n            arrows: true,\r\n            cover: true,\r\n        };\r\n\r\n        const thumbsOptions = {\r\n            rewind: true,\r\n            arrows: false,\r\n            fixedWidth: 80,\r\n            fixedHeight: 80,\r\n            isNavigation: true,\r\n            gap: 5,\r\n            focus: 'center',\r\n            pagination: false,\r\n            cover: true,\r\n            dragMinThreshold: {\r\n                mouse: 4,\r\n                touch: 10,\r\n            },\r\n            breakpoints: {\r\n                640: {\r\n                    fixedWidth: 60,\r\n                    fixedHeight: 60,\r\n                },\r\n            },\r\n        };\r\n\r\n        return <Modal size={'full'} show={rightsModalToggle} className=\"rights_modal border-0 p-0 bg-white\" backdrop={false}>\r\n            <Modal.Header className=\"border-0 p-0 w-100\">\r\n                <div className=\"d-flex justify-content-between align-items-center px-lg-3 px-2 h-46px border-bottom bg-white w-100\">\r\n                    <div className=\"d-flex align-items-center flex-wrap\">\r\n                        <h1 className=\"text-dark font-weight-bold mr-4 fs-6 mb-0\">\r\n                                \r\n                            {modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 2 ?\r\n                                <span className=\"svg-icon svg-icon-2 text-success\">\r\n                                    <SVG src={baseUrl('media/icons/svg-icons/rights-approved-fill.svg')} height={20} width={20} />\r\n                                </span>:\r\n                                modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 1 ?\r\n                                <span className=\"svg-icon svg-icon-2 text-warning\">\r\n                                    <SVG src={baseUrl('media/icons/svg-icons/rights-pending-fill.svg')} height={20} width={20} />\r\n                                </span> : modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 3 ?\r\n                                <span className=\"svg-icon svg-icon-2 text-danger\">\r\n                                    <SVG src={baseUrl('media/icons/svg-icons/rights-rejected-fill.svg')} height={20} width={20} />\r\n                                </span> :\r\n                                <span className=\"svg-icon svg-icon-2 text-success\">\r\n                                    <SVG src={baseUrl('media/icons/svg-icons/rights-approved-fill.svg')} height={20} width={20} />\r\n                                </span>\r\n                            }\r\n                            Get Rights\r\n                        </h1>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn-close me-2 ms-0 text-light\" onClick={this.handleClose}></button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex align-items-stretch border-0 flex-wrap\">\r\n                <div className=\"rights_modal_inner d-flex flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-2 mb-lg-0\">\r\n                    <div className=\"rights_modal_img_wrapper pt-3 w-100\">\r\n\r\n                        {isBulkStatus ?\r\n                            <div className=\"rounded-1 overflow-hidden\">\r\n                                <Splide className=\"mb-3 rights_thumb\" options={thumbsOptions} ref={this.thumbsRef}>\r\n                                    {this.carousalImages(bulkRightsData, false)}\r\n                                </Splide>\r\n                                <Splide options={mainOptions} ref={this.mainRef}>\r\n                                    {this.carousalImages(bulkRightsData, true)}\r\n                                </Splide>\r\n                            </div>\r\n                            :\r\n                            <div className=\"right_slide_img rounded-1 overflow-hidden\">\r\n                                <Media mediaType={modalAssetData.type} postFile={modalAssetData.postFile} mediaHeight={modalAssetData.mediaHeight} mediaWidth={modalAssetData.mediaWidth} socialNetwork={''} textContent={modalAssetData.content} rating={modalAssetData.rating} alt={modalAssetData.name} />\r\n                                <div className=\"rights_carousel_caption position-relative\">\r\n                                    <div className=\"d-flex align-items-center justify-content-between p-2\">\r\n                                        <a href={modalAssetData.link} target={'_blank'} className=\"text-decoration-none d-flex align-items-center flex-grow-1 mr-2 w-75 me-3\">\r\n                                            <ProfileImage className={'symbol symbol-50 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\r\n                                                imageSize={50}\r\n                                                symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-4'}\r\n                                                name={''} profileUrl={modalAssetData.picture} networkId={modalAssetData.networkId} />\r\n                                            <div className=\"d-flex flex-column w-100 overflow-hidden\">\r\n                                                <p className=\"fs-7 text-dark mb-0 fw-semibold text-ellipsis\">{modalAssetData.name}</p>\r\n                                                <span className=\"mb-0 text-muted text-ellipsis\">@{modalAssetData.username}</span>\r\n                                            </div>\r\n                                        </a>\r\n                                        <div className=\"d-flex flex-shrink-0\">\r\n                                            <span className=\"h-30px w-30px\">\r\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} alt={GET_NETWORK_NAME(modalAssetData.networkId)} height={30} width={30} />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Suspense fallback={<></>}>\r\n                    <GetRightsModalAside modalClose={this.handleClose} modalAssetData={modalAssetData} isBulkStatus={isBulkStatus} bulkRightsData={bulkRightsData} onUpdateRejectedRightDetail={this.props.onUpdateRejectedRightDetail} />\r\n                </Suspense>\r\n            </Modal.Body>\r\n        </Modal >\r\n    }\r\n}\r\n\r\nexport default GetRightsModal;"],"names":["GetRightsModalAside","React","window","$","global","jQuery","GetRightsModal","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","index","direction","mainRef","thumbsRef","handleSelect","selectedIndex","e","setState","handleClose","event","rightsModalCallback","carousalImages","bulkRightsData","thumb","map","grItem","grindx","_jsxs","SplideSlide","children","_jsx","Media","mediaType","type","postFile","mediaHeight","mediaWidth","socialNetwork","textContent","content","rating","alt","name","className","href","link","target","ProfileImage","imageSize","symbolClass","profileUrl","picture","networkId","username","src","baseUrl","concat","GET_NETWORK_ICON","GET_NETWORK_NAME","height","width","_createClass","key","value","this","current","splide","sync","_this$props","rightsModalToggle","modalAssetData","networkData","isBulkStatus","length","Modal","size","show","backdrop","ugcRights","Object","keys","status","SVG","onClick","Splide","options","rewind","arrows","fixedWidth","fixedHeight","isNavigation","gap","focus","pagination","cover","dragMinThreshold","mouse","touch","breakpoints","ref","heightRatio","Suspense","fallback","_Fragment","modalClose","onUpdateRejectedRightDetail","Component"],"sourceRoot":""}