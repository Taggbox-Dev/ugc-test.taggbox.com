{"version":3,"file":"static/js/9977.393ceb9b.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/AddAssetsModal.js","Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport GetRightsCopyUrl from '../GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl';\r\nimport { getAllConnectedAccounts, getAllNetworks } from '../../../../Services/Actions/addFeedAction';\r\nimport { GET_ALL_NETWORKS } from '../../../../Services/Constants/constants';\r\nimport HttpClient from '../../../../Services/http-client';\r\nimport { GET_CONNECTED_ACCOUNTS } from '../../../../Services/Api';\r\n//import PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nconst UploadedAssets = React.lazy(() => import('./Compontnets/UploadedAssets'));\r\n\r\nconst UploadAssets = React.lazy(() => import('./Compontnets/UploadAssets'));\r\n\r\nclass AddAssetsModal extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    state = {\r\n        collection: null,\r\n        showModalType: 'uploadAssets', isUploaded: false, uploadedData: [], selected: 0, checkAll: false,\r\n        captionStatus: false,\r\n        captionText: \"\",\r\n        tagsStatus: false,\r\n        tagstext: \"\",\r\n        copyrightStatus: false,\r\n        copyrightValue: false,\r\n        collectionError: false,\r\n        updateRequest: false,\r\n        isUpdate: false\r\n    };\r\n\r\n    updateStatusC = event => {\r\n        const { uploadedData, captionText } = this.state;\r\n        uploadedData.map((item) => {\r\n            //if (item.checked) {\r\n            if (event.target.checked) item.caption = captionText\r\n            else item.caption = item.caption\r\n            // }\r\n            // else {\r\n            //     item.caption = item.caption\r\n            // }\r\n        })\r\n\r\n        this.setState({\r\n            captionStatus: event.target.checked, uploadedData\r\n        })\r\n    }\r\n    updateStatusTag = event => {\r\n        const { uploadedData, tagstext } = this.state;\r\n        uploadedData.map((item) => {\r\n            //if (item.checked) {\r\n            if (event.target.checked) item.addTags = tagstext\r\n            else item.addTags = item.addTags\r\n            // }\r\n            //     else {\r\n            //         item.addTags = item.addTags\r\n            //     }\r\n        })\r\n        console.log(\"updateStatusTag\", uploadedData)\r\n        this.setState({\r\n            tagsStatus: event.target.checked, uploadedData\r\n        })\r\n    }\r\n    updateStatusCopy = event => {\r\n        const { uploadedData, copyrightValue } = this.state;\r\n        uploadedData.map((item) => {\r\n            ///if (item.checked) {\r\n            if (event.target.checked) item.copyright = copyrightValue\r\n            else item.copyright = item.copyright\r\n            // }\r\n            // else {\r\n            //     item.copyright = item.copyright\r\n            // }\r\n        })\r\n\r\n        this.setState({\r\n            copyrightStatus: event.target.checked, uploadedData\r\n        })\r\n    }\r\n\r\n    onChangeCaption = event => {\r\n        const { uploadedData, captionStatus } = this.state;\r\n        uploadedData.map((item) => {\r\n            //if (item.checked) {\r\n            if (captionStatus) item.caption = event.target.value\r\n            else item.caption = item.caption\r\n            // }\r\n            // else {\r\n            //     item.caption = item.caption\r\n            // }\r\n        })\r\n        this.setState({ captionText: event.target.value, uploadedData })\r\n    }\r\n\r\n    onLoadAddCaption = () => {\r\n        var { uploadedData, captionText, captionStatus } = this.state;\r\n\r\n        if (captionStatus) {\r\n            uploadedData.map((item, index) => {\r\n                if (item.checked) {\r\n                    uploadedData[index].caption = captionText\r\n                    //item.caption = captionText\r\n                }\r\n                else {\r\n                    uploadedData[index].caption = \"\"\r\n                }\r\n            })\r\n            this.setState({ uploadedData })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onChangeTags = (value) => {\r\n\r\n\r\n        const { uploadedData, tagsStatus } = this.state;\r\n        uploadedData.map((item) => {\r\n            //if (item.checked) {\r\n            if (tagsStatus) item.addTags = value\r\n            else item.addTags = item.addTags\r\n            // }\r\n            // else {\r\n            //     item.caption = item.caption\r\n            // }\r\n        })\r\n        this.setState({ tagstext: value, uploadedData })\r\n    }\r\n    onLoadTags = () => {\r\n        var { uploadedData, tagstext, tagsStatus } = this.state;\r\n        if (tagsStatus) {\r\n            uploadedData.map((item, index) => {\r\n                if (item.checked) {\r\n\r\n                    uploadedData[index].addTags = tagstext\r\n                    //item.addTags = tagstext\r\n                }\r\n                else {\r\n                    uploadedData[index].addTags = \"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({ uploadedData })\r\n    }\r\n    onChangeCopyRight = (value) => event => {\r\n        const { uploadedData, copyrightStatus } = this.state;\r\n        uploadedData.map((item) => {\r\n            if (item.checked) {\r\n                if (copyrightStatus) item.copyright = value\r\n                else item.copyright = false\r\n            }\r\n            else {\r\n                item.copyright = false\r\n            }\r\n        })\r\n        this.setState({ copyrightValue: value, uploadedData })\r\n    }\r\n    onLoadCopyRight = () => {\r\n\r\n        var { uploadedData, copyrightValue, copyrightStatus } = this.state;\r\n        if (copyrightStatus) {\r\n            uploadedData.map((item, index) => {\r\n                if (item.checked) {\r\n                    //item.copyright = copyrightValue\r\n                    uploadedData[index].copyright = copyrightValue\r\n                }\r\n                else {\r\n                    uploadedData[index].copyright = false\r\n                }\r\n            })\r\n            this.setState({ uploadedData })\r\n        }\r\n\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { uploadedData } = this.state\r\n        if (uploadedData && uploadedData.length > 0) {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You want to  discard changes!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes, discard changes!'\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    this.props.editMediaHandleCallback(false)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.editMediaHandleCallback(false)\r\n        }\r\n\r\n    };\r\n\r\n    showModalTypeCallback = (showModalType) => {\r\n        this.setState({\r\n            showModalType: showModalType\r\n        })\r\n    }\r\n    isUploaded = () => {\r\n        const { collection } = this.state\r\n        this.setState({\r\n            isUploaded: !this.state.isUploaded\r\n        })\r\n    }\r\n    onUploadedData = (newObject) => {\r\n        const { uploadedData, isUpdate } = this.state;\r\n        uploadedData.push(newObject)\r\n        this.setState({ uploadedData, isUpdate: !isUpdate }, () => this.onloadCheckedPostCount())\r\n    }\r\n    onClearUPloadObject = (data) => {\r\n        this.setState({ uploadedData: data }, () => this.onloadCheckedPostCount())\r\n    }\r\n    onSelectedCollection = (newObject) => {\r\n        this.setState({ collection: newObject, collectionError: false })\r\n    }\r\n\r\n    onClickTORemovePost = (postIndex) => event => {\r\n        let { uploadedData } = this.state;\r\n\r\n        if (postIndex > -1) {\r\n            uploadedData.splice(postIndex, 1);\r\n        }\r\n        console.log(\"postIndex\", postIndex, uploadedData)\r\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\r\n    }\r\n    onClickTOCheckPost = (postIndex) => event => {\r\n        let { uploadedData, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\r\n\r\n\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n            if (uploadedData[postIndex].checked) {\r\n                uploadedData[postIndex].checked = false\r\n                uploadedData[postIndex].caption = \"\"\r\n                uploadedData[postIndex].addTags = \"\"\r\n                uploadedData[postIndex].copyright = false\r\n            }\r\n            else {\r\n                uploadedData[postIndex].checked = true\r\n                if (captionStatus) uploadedData[postIndex].caption = captionText\r\n                if (tagsStatus) uploadedData[postIndex].addTags = tagstext\r\n                if (copyrightStatus) uploadedData[postIndex].copyright = copyrightValue\r\n            }\r\n        }\r\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\r\n    }\r\n\r\n    onloadCheckedPostCount = () => {\r\n        const { uploadedData } = this.state;\r\n        var count = uploadedData.filter((item) => item.checked == true).length;\r\n        this.setState({ selected: count })\r\n    }\r\n    onClickToAllCheck = event => {\r\n        const { uploadedData, checkAll, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\r\n        uploadedData.map((item) => {\r\n            item.checked = !checkAll\r\n            if (!checkAll == true) {\r\n                if (captionStatus) item.caption = captionText\r\n                if (tagsStatus) item.addTags = tagstext\r\n                if (copyrightStatus) item.copyright = copyrightValue\r\n            }\r\n            else {\r\n                item.caption = \"\"\r\n                item.addTags = \"\"\r\n                item.copyright = \"\"\r\n            }\r\n\r\n        })\r\n\r\n\r\n        this.setState({\r\n            uploadedData, selected: uploadedData.length, checkAll: !checkAll\r\n        })\r\n    }\r\n\r\n    onCaptionSingle = (postIndex, value) => {\r\n        let { uploadedData, updateRequest } = this.state;\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n\r\n            uploadedData[postIndex].captionSubmit = value\r\n            this.setState({ uploadedData, updateRequest: !updateRequest })\r\n        }\r\n\r\n    }\r\n    onSubmitCaption = (postIndex, value) => {\r\n        let { uploadedData, updateRequest } = this.state;\r\n\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n            uploadedData[postIndex].caption = value\r\n            console.log(\"onCaptionSingle\", postIndex, uploadedData[postIndex].captionSubmit, value)\r\n            this.setState({ uploadedData, updateRequest: !updateRequest })\r\n        }\r\n\r\n    }\r\n\r\n    onResetCaption = (postIndex, value) => {\r\n        let { uploadedData, updateRequest } = this.state;\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n            console.log(\"onResetCaption\", postIndex, value)\r\n            uploadedData[postIndex].caption = \"\"\r\n            this.setState({ uploadedData, updateRequest: !updateRequest })\r\n        }\r\n\r\n    }\r\n    onAddTagSingle = (postIndex, value) => {\r\n        console.log(\"onAddTagSingle\")\r\n        let { uploadedData, updateRequest } = this.state;\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n            uploadedData[postIndex].addTagsSubmit = value\r\n            this.setState({ uploadedData, updateRequest: !updateRequest })\r\n        }\r\n    }\r\n    onAddTagReset = (postIndex, value) => {\r\n        let { uploadedData, updateRequest } = this.state;\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n            uploadedData[postIndex].addTags = \"\"\r\n            this.setState({ uploadedData, updateRequest: !updateRequest })\r\n        }\r\n\r\n    }\r\n    onAddTagSubmit = (postIndex, value) => {\r\n        let { uploadedData, updateRequest } = this.state;\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n\r\n            uploadedData[postIndex].addTags = value\r\n\r\n            this.setState({ uploadedData, updateRequest: !updateRequest })\r\n        }\r\n\r\n    }\r\n    onCopyRightSingle = (postIndex, value) => event => {\r\n        let { uploadedData, updateRequest } = this.state;\r\n        if (postIndex > -1 && uploadedData[postIndex]) {\r\n            uploadedData[postIndex].copyright = value\r\n        }\r\n        this.setState({ uploadedData, updateRequest: !updateRequest })\r\n    }\r\n\r\n    componentDidMount(){\r\n        getAllNetworks().then(response=>{\r\n            const {response_code,networks,authRequire} = response.data;\r\n            if(response_code===200){\r\n                this.props.getNetworkList({networks,authRequire});\r\n            }\r\n        });\r\n        this.props.getAllConnectedAccounts();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { editMediaToggle, history } = this.props\r\n        const { isUploaded, uploadedData, collection } = this.state\r\n\r\n\r\n        return <Modal size={'full'} show={editMediaToggle} className=\"addAssetsModal border-0 p-0\" backdrop={false}>\r\n            <Modal.Header className=\"border-0 p-0 w-100\">\r\n                <div className=\"d-flex justify-content-between align-items-center px-lg-3 px-2 bg-white w-100\">\r\n                    {!isUploaded ?\r\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\r\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Choose Source</h1>\r\n                        </div>\r\n                        :\r\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\r\n                            <button type=\"button\" className=\"btn btn-icon btn-sm me-2\" onClick={() => this.isUploaded()}>\r\n                                <span className=\"svg-icon text-dark\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                        <path d=\"M7.828 11H20v2H7.828l5.364 5.364-1.414 1.414L4 12l7.778-7.778 1.414 1.414z\" fill=\"currentColor\" />\r\n                                    </svg>\r\n                                </span>\r\n                            </button>\r\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Fill required assets information</h1>\r\n                        </div>\r\n                    }\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <button type=\"button\" className=\"btn-close text-light\" onClick={this.handleClose}></button>\r\n                    </div>\r\n                </div>\r\n\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0 d-flex align-items-start border-0 flex-wrap w-100\">\r\n                <div className=\"assetsModalScroll w-100\">\r\n                    {!isUploaded ?\r\n                        <Suspense fallback={<></>}><UploadAssets getAssetsCallback={this.isUploaded} onUploadedData={this.onUploadedData} onClearUPloadObject={this.onClearUPloadObject} history={history} uploadedData={this.state.uploadedData} onSelectedCollection={this.onSelectedCollection} collection={collection} collectionError={this.state.collectionError} editMediaHandleCallback={this.props.editMediaHandleCallback} isUpdate={this.state.isUpdate} /></Suspense>\r\n                        :\r\n                        <Suspense fallback={<></>}><UploadedAssets uploadedData={uploadedData} length={uploadedData.length} selected={this.state.selected} onClickTORemovePost={this.onClickTORemovePost} onClickTOCheckPost={this.onClickTOCheckPost} updateStatusC={this.updateStatusC} updateStatusTag={this.updateStatusTag} updateStatusCopy={this.updateStatusCopy} captionStatus={this.state.captionStatus} tagsStatus={this.state.tagsStatus} copyrightStatus={this.state.copyrightStatus} onChangeCaption={this.onChangeCaption} updateRequest={this.state.updateRequest}\r\n                            onChangeTags={this.onChangeTags}\r\n                            onChangeCopyRight={this.onChangeCopyRight} captionText={this.state.captionText} tagstext={this.state.tagstext} copyrightValue={this.state.copyrightValue} onClickToAllCheck={this.onClickToAllCheck} checkAll={this.state.checkAll} collection={collection} history={history} editMediaHandleCallback={this.props.editMediaHandleCallback} onCaptionSingle={this.onCaptionSingle} onAddTagSingle={this.onAddTagSingle} onCopyRightSingle={this.onCopyRightSingle} onAddTagSubmit={this.onAddTagSubmit} onSubmitCaption={this.onSubmitCaption} onAddTagReset={this.onAddTagReset} onResetCaption={this.onResetCaption} /></Suspense>\r\n                    }\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getNetworkList: (networkData) => dispatch({ type: GET_ALL_NETWORKS, payload: networkData }),\r\n        getAllConnectedAccounts: () => dispatch(getAllConnectedAccounts())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(AddAssetsModal);","import React, { Component } from \"react\";\r\nimport { COPY_TO_CLIPBOARD } from \"../../../../../../Services/Utils/utils\";\r\n\r\nclass GetRightsCopyUrl extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { codeCopied: false };\r\n    }\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    render() {\r\n        const { codeCopied } = this.state\r\n        const { requestedRespone, comment, modalAssetData } = this.props\r\n\r\n        return requestedRespone && Object.keys(requestedRespone).length > 0 ? <div className=\"p-lg-6 p-3\">\r\n            <h5 className=\"mb-2 pt-1 text-center\">Your UGC Request Sharing URL</h5>\r\n            <p className=\"text-muted text-center\">Copy and paste link in the comments or original post</p>\r\n            <div className=\"mb-6\">\r\n                <textarea type=\"text\" className=\"form-control form-control-lg textarea-min-row-3 bg-light\" rows={4} placeholder=\"Add Comment\" defaultValue={comment} readOnly />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n                <div className=\"input-group mb-4\">\r\n                    <div className=\"input-group-text\">\r\n                        <span className=\"svg-icon svg-icon-2\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                <path d=\"M13.06 8.11l1.415 1.415a7 7 0 0 1 0 9.9l-.354.353a7 7 0 0 1-9.9-9.9l1.415 1.415a5 5 0 1 0 7.071 7.071l.354-.354a5 5 0 0 0 0-7.07l-1.415-1.415 1.415-1.414zm6.718 6.011l-1.414-1.414a5 5 0 1 0-7.071-7.071l-.354.354a5 5 0 0 0 0 7.07l1.415 1.415-1.415 1.414-1.414-1.414a7 7 0 0 1 0-9.9l.354-.353a7 7 0 0 1 9.9 9.9z\" fill=\"currentColor\" />\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"text\" id=\"ugc_rights_url_\" className=\"form-control form-control-lg\" defaultValue={requestedRespone.bitlylink} readOnly />\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-primary btn-lg w-100\" onClick={() => { this.codeCopy('ugc_rights_url_') }}>\r\n                    {codeCopied ? 'Copied' : 'Copy URL'}\r\n                </button>\r\n            </div>\r\n            <div className=\"mb-6\">\r\n                <h6>Steps to proceed</h6>\r\n                <ul className=\"list-unstyled list-points fs-7\">\r\n                    <li className=\"mb-3\">You have successfully generated a \"UGC Request\" for this post.</li>\r\n                    <li className=\"mb-3\">Quickly review your Request before sending it to the owner.</li>\r\n                    <li className=\"mb-3\">Click on the \"Generate Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\r\n                    <li className=\"mb-3\">Paste the link of \"UGC Request\" in the comments section of the original post.</li>\r\n                    <li className=\"mb-3\">You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\r\n                </ul>\r\n            </div>\r\n        </div> : null\r\n    }\r\n}\r\n\r\nexport default GetRightsCopyUrl;"],"names":["UploadedAssets","React","UploadAssets","AddAssetsModal","state","collection","showModalType","isUploaded","uploadedData","selected","checkAll","captionStatus","captionText","tagsStatus","tagstext","copyrightStatus","copyrightValue","collectionError","updateRequest","isUpdate","updateStatusC","event","map","item","target","checked","caption","setState","updateStatusTag","addTags","console","log","updateStatusCopy","copyright","onChangeCaption","value","onLoadAddCaption","index","onChangeTags","onLoadTags","onChangeCopyRight","onLoadCopyRight","handleClose","length","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","props","editMediaHandleCallback","showModalTypeCallback","onUploadedData","newObject","push","onloadCheckedPostCount","onClearUPloadObject","data","onSelectedCollection","onClickTORemovePost","postIndex","splice","onClickTOCheckPost","count","filter","onClickToAllCheck","onCaptionSingle","captionSubmit","onSubmitCaption","onResetCaption","onAddTagSingle","addTagsSubmit","onAddTagReset","onAddTagSubmit","onCopyRightSingle","getAllNetworks","response","response_code","networks","authRequire","getNetworkList","this","getAllConnectedAccounts","editMediaToggle","history","size","show","className","backdrop","type","onClick","xmlns","viewBox","width","height","fill","d","Suspense","fallback","getAssetsCallback","Component","connect","dispatch","networkData","GET_ALL_NETWORKS","payload","GetRightsCopyUrl","codeCopy","id","codeCopied","setTimeout","COPY_TO_CLIPBOARD","requestedRespone","comment","modalAssetData","Object","keys","rows","placeholder","defaultValue","readOnly","bitlylink"],"sourceRoot":""}