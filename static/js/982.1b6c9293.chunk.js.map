{"version":3,"file":"static/js/982.1b6c9293.chunk.js","mappings":"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","sources":["Layouts/Header/Components/Elements/Notifications.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Tab, Nav } from 'react-bootstrap';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getNotificationList, notificationUpdateStatus } from '../../../../Services/Actions/homeActions'\n\nclass Notifications extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { notifications: props.notificationList }\n    }\n    updateStatus = (postId, status) => event => {\n        var self = this;\n        notificationUpdateStatus(postId, status).then((response) => {\n            self.onLoad()\n        })\n    }\n\n    render() {\n        const { notifications } = this.state;\n        return <div className=\"w-100\">\n            <Tab.Container id=\"notifications_tab_panel\" defaultActiveKey=\"all-notifications\">\n                <div className=\"d-flex align-items-center justify-content-between px-3 pt-2 border-bottom\">\n                    <Nav variant=\"default\" className=\"nav\">\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"me-3 px-0\" eventKey=\"all-notifications\">All</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"px-0\" eventKey=\"unread-notifications\">Unread</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <div>\n                        <button type=\"button\" className=\"btn btn-link btn-sm px-0 h-auto fw-bold text-decoration-none btn-active-color-primary\">Mark all as read</button>\n                    </div>\n                </div>\n                <PerfectScrollbar options={{ wheelPropagation: false }}>\n                    {notifications && Object.keys(notifications).length > 0 ? <Tab.Content>\n                        <Tab.Pane eventKey=\"all-notifications\" className=\"pb-3 min-h-100\">\n                            {\n                                notifications && Object.keys(notifications).map((iNot, index) => {\n                                    return <Fragment key={index}><div className=\"d-flex align-items-center justify-content-between px-3 py-1\" >\n                                        <span className=\"text-gray-800 fw-bold\">{iNot}</span>\n                                        <span className=\"bg-primary badge rounded-5 min-w-30 text-light-alt d-none\">{(notifications[iNot] && notifications[iNot].length > 0) ? notifications[iNot].length : 0}</span>\n                                    </div>\n                                        {notifications[iNot] && notifications[iNot].length > 0 ? <div className=\"\">\n\n                                            {\n                                                notifications[iNot].map((imNot) => {\n                                                    return <div key={imNot.id} className={`px-3 d-flex align-items-start border-bottom notification-item  ${imNot.status == 0 ? `bg-light` : ``}`}>\n                                                        <div className=\"symbol symbol-38 rounded-1 overflow-hidden me-2 bg-light p-2\">\n                                                            <img alt=\"Pic\" src={baseUrl(`media/notification-icons/${imNot.message.photo}`)} height=\"40\" width=\"40\" />\n                                                        </div>\n                                                        <div className=\"d-flex align-items-start flex-column flex-grow-1\">\n                                                            <div className=\"d-flex algin-items-center justify-content-between w-100\">\n                                                                <Link to={'/home'} className=\"text-hover-primary text-gray-800 fw-bold text-decoration-none me-2\">{imNot.message.subject}</Link>\n                                                                <span className=\"text-gray-500 fs-9\">{moment(new Date(imNot.message.time * 1000)).format(\"hh:mma\")}</span>\n                                                            </div>\n                                                            <div className=\"d-flex algin-items-start\">\n                                                                <span className=\"text-gray-600 fs-9\">\n                                                                    {imNot.message.text}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                })\n                                            }\n\n                                        </div> : index == 0 ?\n                                            <div className=\"block-center\" style={{ height: 350 }}>\n                                                <p className=\"mb-0 text-muted\">No Notifications</p>\n                                            </div>\n                                            : null}\n                                    </Fragment>\n\n                                })\n                            }\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"unread-notifications\" className=\"pb-3 min-h-100\">\n                            {\n                                notifications && Object.keys(notifications).map((iNot, index) => {\n                                    return notifications[iNot] && notifications[iNot].length > 0 && notifications[iNot].filter((a) => a.status == 0).length > 0 ? <Fragment key={index}><div className=\"d-flex align-items-center justify-content-between px-3 py-1\">\n                                        <span className=\"text-gray-800 fw-bold\">{iNot}</span>\n                                        <span className=\"bg-primary badge rounded-5 min-w-30 text-light-alt d-none\">{notifications[iNot] && notifications[iNot].length > 0 && notifications[iNot].filter((a) => a.status == 0).length > 0 ? notifications[iNot].filter((a) => a.status == 0).length : 0}</span>\n                                    </div>\n                                        {notifications[iNot] && notifications[iNot].length > 0 ?\n                                            <div className=\"\">\n                                                {notifications[iNot].map((imNot) => {\n                                                    return imNot.status == 0 ? <div key={imNot.id} className=\"px-3 d-flex align-items-start border-bottom notification-item bg-light\" onClick={this.updateStatus(imNot.id, 1)}>\n                                                        <div className=\"symbol symbol-38 rounded-1 overflow-hidden me-2 bg-light p-2\">\n                                                            <img alt=\"Pic\" src={baseUrl(`media/notification-icons/${imNot.message.photo}`)} height=\"40\" width=\"40\" />\n                                                        </div>\n                                                        <div className=\"d-flex align-items-start flex-column flex-grow-1\">\n                                                            <div className=\"d-flex algin-items-center justify-content-between w-100\">\n                                                                <Link to={'/home'} className=\"text-hover-primary text-gray-800 fw-bold text-decoration-none me-2\">{imNot.message.subject}</Link>\n                                                                <span className=\"text-gray-500 fs-9\">{moment(new Date(imNot.message.time * 1000)).format(\"hh:mma\")}</span>\n                                                            </div>\n                                                            <div className=\"d-flex algin-items-start\">\n                                                                <span className=\"text-gray-600 fs-9\">\n                                                                    {imNot.message.text}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div> : null\n\n                                                })}\n                                            </div>\n                                            : null}\n                                    </Fragment> : index == 0 ?\n                                        <div className=\"block-center\" style={{ height: 350 }}>\n                                            <p className=\"mb-0 text-muted\">No Unread Notifications</p>\n                                        </div>\n                                        : null\n\n\n                                })\n                            }\n                        </Tab.Pane>\n                    </Tab.Content> : <div className=\"block-center\" style={{ height: 150 }}>\n                        <p className=\"mb-0 text-muted\">No Notifications</p>\n                    </div>}\n                </PerfectScrollbar>\n            </Tab.Container>\n        </div>\n    }\n}\n\nexport default Notifications"],"names":["Notifications","props","updateStatus","postId","status","event","self","notificationUpdateStatus","then","response","onLoad","state","notifications","notificationList","this","className","id","defaultActiveKey","variant","eventKey","type","options","wheelPropagation","Object","keys","length","map","iNot","index","Fragment","imNot","alt","src","baseUrl","message","photo","height","width","to","subject","moment","Date","time","format","text","style","filter","a","onClick","Component"],"sourceRoot":""}