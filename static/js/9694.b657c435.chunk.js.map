{"version":3,"file":"static/js/9694.b657c435.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsModalAside.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport $ from 'jquery';\r\nimport { connect } from \"react-redux\";\r\nimport FileSaver from \"file-saver\";\r\nimport moment from 'moment'\r\nimport { Nav, Tab } from 'react-bootstrap';\r\nimport { baseUrl } from \"../../../../../Assets/AssetsHelper\";\r\nimport { Uppy } from \"@uppy/core\";\r\nimport { ugcActionRquest } from '../../../../../Services/Actions/ugcRightsActions'\r\nimport { loadAssetsDataWithDispatch } from '../../../../../Services/Actions/assetsActions'\r\nimport { getURLFromVideo } from '../../../../../Services/Utils/utils'\r\n\r\n//import FileInput from \"@uppy/react/lib/FileInput\";\r\nimport Transloadit from \"@uppy/transloadit\";\r\nimport GoogleDrive from '@uppy/google-drive';\r\nimport Url from '@uppy/url';\r\nconst GetRightsGenralRequest = React.lazy(() => import('./GetRightsSteps/GetRightsGenralRequest'));\r\nconst GetRightsSocialAccount = React.lazy(() => import('./GetRightsSteps/GetRightsSocialAccount'));\r\nconst GetRightsCopyUrl = React.lazy(() => import('./GetRightsSteps/GetRightsCopyUrl'));\r\nconst GetRightsPendingAndExpire = React.lazy(() => import('./GetRightsStatus/GetRightsPendingAndExpire'));\r\nconst GetRightsDownload = React.lazy(() => import('./GetRightsStatus/GetRightsDownload'));\r\nconst GetRightsRejected = React.lazy(() => import('./GetRightsStatus/GetRightsRejected'));\r\n\r\nconst uppyConfig = {\r\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\r\n    uppyBucket: 'cloud.taggbox.com',\r\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\r\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\r\n    companionUrl: 'https://test.taggbox.com'\r\n}\r\n\r\n\r\n\r\nclass AssetsModalAside extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\r\n            .use(Transloadit, {\r\n                target: '#a',\r\n                params: {\r\n                    auth: {\r\n                        key: uppyConfig.uppyKey\r\n                    },\r\n                    steps: {\r\n                        store: {\r\n                            robot: \"/wasabi/store\",\r\n                            bucket_region: \"us-west-1\",\r\n                            bucket: uppyConfig.uppyBucket,\r\n                            key: uppyConfig.uppyAwsKey,\r\n                            secret: uppyConfig.uppyAwsSecret,\r\n                            path: 'postimage/${file.id}'\r\n                        }\r\n                    }\r\n                },\r\n                waitForEncoding: true\r\n            })\r\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n\r\n        this.uppyPostEdit = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'] } })\r\n            .use(Transloadit, {\r\n                target: '#a',\r\n                params: {\r\n                    auth: {\r\n                        key: uppyConfig.uppyKey\r\n                    },\r\n                    steps: {\r\n                        store: {\r\n                            robot: \"/wasabi/store\",\r\n                            bucket_region: \"us-west-1\",\r\n                            bucket: uppyConfig.uppyBucket,\r\n                            key: uppyConfig.uppyAwsKey,\r\n                            secret: uppyConfig.uppyAwsSecret,\r\n                            path: 'test/${file.id}'\r\n                        }\r\n                    }\r\n                },\r\n                waitForEncoding: true\r\n            })\r\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n    }\r\n    state = {\r\n        step: 1,\r\n        client_logo: null,\r\n        client_logo_name: null,\r\n        comment: 'What a fantastic shot! We loved your post. Would you mind us utilizing it for our brand?',\r\n        tncName: \"termAndConditions.docx\",\r\n        tncUrl: \"termAndConditions.docx\",\r\n        tnc: false,\r\n        logoModal: false,\r\n        fileModal: false,\r\n        activeKey: 'ugc-genralRequest',\r\n        connectedAccount: null,\r\n        commentError: null,\r\n        tncUrlError: null,\r\n        tncError: null,\r\n        requestedRespone: null\r\n\r\n    }\r\n\r\n    onClickToChange = (step) => event => {\r\n        if (this.state.step == 1) {\r\n            // ugc-copyUrl\r\n            if (this.state.comment && this.state.tncUrl && this.state.tnc) {\r\n                this.setState({ step, activeKey: \"ugc-socialAccount\" })\r\n            }\r\n            else {\r\n\r\n                if (!this.state.comment || String(this.state.comment).length == 0) this.setState({ commentError: true })\r\n                if (!this.state.tncUrl) this.setState({ tncUrlError: true })\r\n                if (!this.state.tnc) this.setState({ tncError: true })\r\n            }\r\n        }\r\n        else if (this.state.step == 2) {\r\n            if (this.state.connectedAccount) {\r\n                this.setState({ step, activeKey: \"ugc-copyUrl\" }, () => this.onClicktoSendRequest())\r\n            }\r\n        }\r\n        else if (this.state.step == 3) {\r\n\r\n        }\r\n\r\n    }\r\n    onClickToRemoveLogo = event => this.setState({\r\n        client_logo: null, client_logo_name: null,\r\n    })\r\n\r\n\r\n    componentDidMount() {\r\n        this.uppyPostEdit.on('transloadit:result', (stepName, result) => {\r\n            console.log(\"client_logo\", stepName, result)\r\n            var imgpath = result.url.split('/');\r\n            var imglength = imgpath.length;\r\n            var filename = imgpath[imglength - 1];\r\n            let { tncName, tncUrl } = this.state;\r\n            tncUrl = result.id\r\n            tncName = result.name\r\n            console.log(\"client_logo\", tncUrl, tncName)\r\n            this.setState({ tncName, tncUrl, selectedFile: result.id, filename: `https://cloud.taggbox.com/test/${result.id}`, selected: `https://cloud.taggbox.com/test/${result.id}` }, () => {\r\n                setTimeout(() => {\r\n                    this.uppyPostEdit.cancelAll()\r\n                    this.setState({ fileModal: false })\r\n                }, 300)\r\n            })\r\n\r\n        })\r\n\r\n        this.uppy.on('transloadit:result', (stepName, result) => {\r\n            let { client_logo, client_logo_name } = this.state\r\n\r\n            client_logo = `https://cloud.taggbox.com/postimage/${result.id}`\r\n            client_logo_name = result.name\r\n            console.log(\"client_logo\", client_logo, client_logo_name)\r\n            this.setState({ client_logo, client_logo_name, selectedlogoFile: result.id, logofilename: `https://cloud.taggbox.com/postimage/${result.id}`, logoselected: `https://cloud.taggbox.com/postimage/${result.id}` }, () => {\r\n                setTimeout(() => {\r\n                    this.uppy.cancelAll()\r\n                    this.setState({ logoModal: false })\r\n                }, 300)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n\r\n    onClickClearFile = event => {\r\n        this.setState({ tncName: \"\", tncUrl: \"\" })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.uppy.close();\r\n    }\r\n    termsFileDownload = () => {\r\n        //var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\r\n        FileSaver.saveAs(baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx'), \"Terms&ConditionsforuseofUGC.docx\");\r\n    }\r\n    modalClose = (step) => event => {\r\n        console.log(\"step-close\", step)\r\n        if (step == 2) this.setState({ step: 1, activeKey: \"ugc-genralRequest\" })\r\n        else this.props.modalClose(false)\r\n    }\r\n    onChangeComment = event => this.setState({ comment: event.target.value })\r\n    onClicktnc = event => {\r\n        const { tnc } = this.state\r\n        this.setState({ tnc: !tnc, tncError: null })\r\n    }\r\n\r\n    onLogoClose = event => {\r\n        this.uppy.cancelAll()\r\n        this.setState({ logoModal: false })\r\n    }\r\n    onLogoOpen = event => this.setState({ logoModal: true }, () => {\r\n        $(\".uppy-Dashboard-close\").click(() => {\r\n            this.uppy.cancelAll()\r\n            this.setState({ logoModal: false })\r\n        })\r\n    })\r\n\r\n    onFileOpen = event => {\r\n        this.setState({ fileModal: true }, () => {\r\n            $(\".uppy-Dashboard-close\").click(() => {\r\n                this.uppyPostEdit.cancelAll()\r\n                this.setState({ fileModal: false })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    onFileClose = () => {\r\n        this.uppyPostEdit.cancelAll()\r\n        this.setState({ fileModal: false })\r\n    }\r\n    onSelected = (key) => {\r\n        this.setState({ activeKey: key })\r\n    }\r\n    onClicktoSendRequest = () => {\r\n\r\n        const { modalAssetData, isBulkStatus, bulkRightsData } = this.props;\r\n        const { comment, tncUrl, tncName, client_logo, connectedAccount } = this.state;\r\n        var self = this;\r\n        var assetsData = []\r\n        if (isBulkStatus) {\r\n            bulkRightsData.map((grItem) => {\r\n                assetsData.push({ \"referenceId\": grItem.referenceId, \"username\": connectedAccount.data[0].email ? connectedAccount.data[0].email : connectedAccount.data[0].id, \"media\": grItem.postFile, \"video\": getURLFromVideo(grItem.mediaFile) })\r\n            })\r\n\r\n        }\r\n        else {\r\n            assetsData.push({ \"referenceId\": modalAssetData.referenceId, \"username\": connectedAccount.data[0].email ? connectedAccount.data[0].email : connectedAccount.data[0].id, \"media\": modalAssetData.postFile, \"video\": getURLFromVideo(modalAssetData.mediaFile) })\r\n        }\r\n        const requestedData = {\r\n            \"feedId\": modalAssetData.feedId,\r\n            \"custom_message\": comment,\r\n            \"networkId\": modalAssetData.networkId,\r\n            \"brandlink\": client_logo ? client_logo : \"\",\r\n            \"termslink\": tncUrl,\r\n            \"custom_term_type\": tncName,\r\n            \"assets\": assetsData\r\n        }\r\n        ugcActionRquest(requestedData).then((response) => {\r\n            console.log(\"response\", response)\r\n            self.props.loadAssetsDataWithDispatch()\r\n            //self.props.modalClose(false)\r\n            self.setState({ requestedRespone: response.data })\r\n            window.open(modalAssetData.link, '_blank')\r\n        })\r\n        console.log(\"connectedAccountdsd sdfsd\", connectedAccount, requestedData)\r\n    }\r\n    onUpdateData = (provider, data) => {\r\n\r\n        this.setState({ connectedAccount: { provider, data } })\r\n    }\r\n    render() {\r\n        const { modalAssetData } = this.props\r\n        const { step, activeKey, connectedAccount, requestedRespone, comment } = this.state\r\n        console.log(\"connectedAccount\", connectedAccount)\r\n        return modalAssetData && Object.keys(modalAssetData).length > 0 ? <div className=\"rights_modal_sidebar position-relative\">\r\n            <div className=\"rights_modal_aside_wrap\">\r\n                {modalAssetData.ugcRights == null ? <Tab.Container activeKey={activeKey} onSelect={this.onSelected}>\r\n                    <div className=\"ugc-wizard-nav\">\r\n                        <Nav variant=\"nav\" className=\"bg-light justify-content-between row gx-0\">\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 1 || step == 2 || step == 3 ? `active` : ``}`} eventKey=\"ugc-genralRequest\">\r\n                                    <span className=\"svg-icon text-success\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap\">General Request</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 2 || step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-socialAccount\">\r\n                                    <span className=\"svg-icon\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                            <path className=\"checkIco\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-.997-4L6.76 11.757l1.414-1.414 2.829 2.829 5.656-5.657 1.415 1.414L11.003 16z\" fill=\"currentColor\" />\r\n                                            <path className=\"checkIcoFilled\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap\">Social Account</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item className=\"col-4\">\r\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-copyUrl\">\r\n                                    <span className=\"svg-icon\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                            <path className=\"checkIco\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-.997-4L6.76 11.757l1.414-1.414 2.829 2.829 5.656-5.657 1.415 1.414L11.003 16z\" fill=\"currentColor\" />\r\n                                            <path className=\"checkIcoFilled\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <span className=\"fw-bold text-nowrap\">Copy URL</span>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </div>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"ugc-genralRequest\">\r\n                            <Suspense fallback={<></>}>\r\n                                <GetRightsGenralRequest state={this.state} onChangeComment={this.onChangeComment} onClicktnc={this.onClicktnc} onClickClearFile={this.onClickClearFile} uppyPostEdit={this.uppyPostEdit} uppy={this.uppy} onLogoClose={this.onLogoClose} onLogoOpen={this.onLogoOpen} onClickToRemoveLogo={this.onClickToRemoveLogo} onFileOpen={this.onFileOpen} onFileClose={this.onFileClose} />\r\n                            </Suspense>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"ugc-socialAccount\">\r\n                            <Suspense fallback={<></>}>\r\n                                <GetRightsSocialAccount modalAssetData={modalAssetData} onUpdateData={this.onUpdateData} connectedAccount={connectedAccount} />\r\n                            </Suspense>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"ugc-copyUrl\">\r\n                            <Suspense fallback={<></>}>\r\n                                <GetRightsCopyUrl modalAssetData={modalAssetData} requestedRespone={requestedRespone} comment={comment} />\r\n                            </Suspense>\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Tab.Container>\r\n                    :\r\n                    modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 1 ?\r\n                        <Suspense fallback={<></>}>\r\n                            <GetRightsPendingAndExpire days={parseInt(30) - parseInt((parseInt((moment().diff(moment(modalAssetData.ugcRights.created), 'days')))))} expireStatus={true} modalAssetData={modalAssetData} />\r\n                        </Suspense>\r\n                        : modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 2 ?\r\n                            <Suspense fallback={<></>}>\r\n                                <GetRightsDownload modalAssetData={modalAssetData} />\r\n                            </Suspense> : null}\r\n\r\n                {/*      <Suspense fallback={<></>}>\r\n                    <GetRightsRejected modalAssetData={modalAssetData} />\r\n                </Suspense> */}\r\n            </div>\r\n            {modalAssetData.ugcRights == null ? <div className=\"rights_modal_actions text-center modal-footer w-100\">\r\n                {step == 1 || step == 2 ? <><button type=\"button\" className=\"btn btn-secondary me-2\" onClick={this.modalClose(step)}>{step == 1 ? `Cancel` : step == 2 ? `Back` : ``}</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClickToChange(step == 1 ? 2 : step == 2 ? 3 : 4)}>Next Step</button>\r\n                </> : null}\r\n\r\n                {step == 3 ? <button type=\"button\" className=\"btn btn-secondary me-2\" onClick={this.modalClose(step)}>Done</button> : null}\r\n            </div> : null}\r\n        </div> : null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        loadAssetsDataWithDispatch: () => dispatch(loadAssetsDataWithDispatch()),\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetsModalAside);"],"names":["GetRightsGenralRequest","React","GetRightsSocialAccount","GetRightsCopyUrl","GetRightsPendingAndExpire","GetRightsDownload","uppyConfig","AssetsModalAside","props","state","step","client_logo","client_logo_name","comment","tncName","tncUrl","tnc","logoModal","fileModal","activeKey","connectedAccount","commentError","tncUrlError","tncError","requestedRespone","onClickToChange","event","setState","String","length","onClicktoSendRequest","onClickToRemoveLogo","onClickClearFile","termsFileDownload","FileSaver","baseUrl","modalClose","console","log","onChangeComment","target","value","onClicktnc","onLogoClose","uppy","cancelAll","onLogoOpen","$","click","onFileOpen","uppyPostEdit","onFileClose","onSelected","key","modalAssetData","isBulkStatus","bulkRightsData","self","assetsData","map","grItem","push","referenceId","data","email","id","postFile","getURLFromVideo","mediaFile","requestedData","feedId","networkId","ugcActionRquest","then","response","loadAssetsDataWithDispatch","window","open","link","onUpdateData","provider","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","params","auth","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","GoogleDrive","companionUrl","Url","this","on","stepName","result","imgpath","url","split","name","selectedFile","filename","selected","setTimeout","selectedlogoFile","logofilename","logoselected","close","Object","keys","className","ugcRights","onSelect","variant","eventKey","xmlns","viewBox","width","height","fill","d","Suspense","fallback","status","days","parseInt","moment","diff","created","expireStatus","type","onClick","Component","connect","dispatch"],"sourceRoot":""}