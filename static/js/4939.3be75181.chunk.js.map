<<<<<<< HEAD
{"version":3,"file":"static/js/4939.3be75181.chunk.js","mappings":"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","sources":["Layouts/Main/HashtagCampaign/HashtagCampaign.js","../node_modules/base-64/base64.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../Assets/AssetsHelper';\nimport { decode as base64_decode, encode as base64_encode } from 'base-64';\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD, windowOpen } from '../../../Services/Utils/utils';\nimport { HOST_URL, EmbedURL } from '../../../Services/Api';\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\nconst ShareEmbedModal = React.lazy(() => import('../../../Layouts/Main/PublishCommonComponents/ShareEmbedModal'));\n\nclass HashtagCampaign extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { showModal: false, genrateCode: false, codeCopied: false, shareLink: \"\", isLoading: false };\n    }\n    shareEmbedModal = event => this.setState({\n        showModal: true\n    })\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent\n        })\n    }\n    EditCampaignUrlModal = event => this.setState({\n        showModal: true\n    })\n    campaignUrlCallback = (campaignUrlEvent) => {\n        this.setState({\n            showModal: campaignUrlEvent\n        })\n    }\n    codeCopy = (id) => event => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    onClickToShare = (mailId) => event => {\n        const { responseData } = this.props\n        var self = this;\n        this.setState({ isLoading: true })\n        if (mailId && String(mailId).length > 0) {\n            mailSendRequest({ htmlCode: (responseData.publishCode && Object.keys(responseData.publishCode).length > 0) ? `${EmbedURL}${responseData.publishCode.wallId}?ugcSuite=1&hashtag_campaign=true` : null, email: mailId, type: 2 }).then((response) => {\n                toast.success(\"Tagbox widget code successfully sent.\")\n                self.setState({ showModal: false, isLoading: false })\n            })\n        }\n        else {\n            toast.error(\"Please enter email id.\")\n        }\n    }\n    render() {\n        const { genrateCode, showModal, codeCopied } = this.state\n        const { responseData } = this.props\n\n        var shareLink = \"\"\n\n        if ((responseData.publishCode && Object.keys(responseData.publishCode).length > 0)) {\n            const WallId = responseData.publishCode.wallId;\n            const timeStemp = new Date() / 1000 | 0;\n            shareLink = (base64_encode(`${responseData.publishCode.name}---${WallId}&${timeStemp}`))\n        }\n\n        return <>\n            <div className=\"d-flex flex-column flex-shrink-0 emailcapaignPreview bg-light p-5\">\n                <div className=\"\">\n                    <h4 className=\"mb-2 fs-6\">Publish Hashtag Content Anywhere Your Audience Lies!</h4>\n                    <h5 className=\"mb-1 fs-7\">1. Social Share</h5>\n                    <p>Use this URL on your social networks to attract followers and encourage them to share their experiences. </p>\n\n                    <div className=\"hashtag_social_share d-flex align-items-center justify-content-start bg-white border rounded-1 px-3 py-2 mb-3\">\n                        <div className=\"hashtag_social_share_inner d-flex align-items-center\">\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1\" data-type=\"facebook\" onClick={(e) => windowOpen(`https://www.facebook.com/sharer.php?u=${HOST_URL}share/hashtagcampaign/${shareLink}`, 'sharer', 'toolbar=0,status=0,width=600,height=400')}>\n                                <i className=\"ri-facebook-circle-fill icon-4 text-light-alt\"></i>\n                            </Button>\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1 text-light-alt\" data-type=\"twitter\" onClick={(e) => windowOpen(`http://twitter.com/share?url=${HOST_URL}share/hashtagcampaign/${shareLink}`, 'sharer', 'toolbar=0,status=0,width=600,height=400')}>\n                                {/* <i className=\"ri-twitter-fill icon-4 text-light-alt\"></i> */}\n                                <SVG src={baseUrl('media/icons/svg-icons/twitter.svg')} height={20} width={20} />\n                            </Button>\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1\" data-type=\"linkedin\" onClick={(e) => windowOpen(`https://www.linkedin.com/shareArticle?mini=true&url=${HOST_URL}share/hashtagcampaign/${shareLink}`, 'sharer', 'toolbar=0,status=0,width=600,height=400')}>\n                                <i className=\"ri-linkedin-fill icon-4 text-light-alt\"></i>\n                            </Button>\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1 share-hashtag-campaign-url\" data-type=\"envelope\" onClick={this.shareEmbedModal}>\n                                <i className=\"ri-mail-fill icon-4 text-light-alt\"></i>\n                            </Button>\n                        </div>\n                    </div>\n                    <h5 className=\"mb-1 fs-7\">2. Emails</h5>\n                    <p>Add hashtag content to your emailers and make them more personalized. Prompt your subscribers to share more content as well with your campaign.  </p>\n                    <h5 className=\"mb-1 fs-7\">3. SMS/WhatsApp</h5>\n                    <p>Incorporate hashtag campaign URL in SMS or WhatsApp marketing to grab user attention and invite them to participate. </p>\n                    <div className=\"position-relative\">\n                        <textarea className=\"form-control textarea-min-row-9 p-lg-4\" id=\"hashtagUrlMsgCode_\" onClick={this.codeCopy('hashtagUrlMsgCode_')}>\n\n                            {`Thank you for trusting us. We love our customers, and your confidence in us means a lot to us. We hope we served you well, and we’d love your feedback. Click on the link below and tell us what you think! Share pictures, videos, or text, and we’d love to feature you on our socials.  ${(responseData.publishCode && Object.keys(responseData.publishCode).length > 0) ? `${EmbedURL}${responseData.publishCode.wallId}?ugcSuite=1&hashtag_campaign=true` : null}`}\n\n\n                        </textarea>\n                        <div className=\"emebed_action position-absolute pe-2 pb-2\" style={{ right: 5, bottom: 5 }}>\n                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                <Button variant={'link'} className=\"text-decoration-none text-gray-500 p-0 me-2\" onClick={this.codeCopy('hashtagUrlMsgCode_')}>\n                                    {!codeCopied ?\n                                        <i className=\"ri-file-copy-fill icon-6\"></i>\n                                        :\n                                        <i className=\"ri-check-line icon-6 text-success\"></i>\n                                    }\n                                </Button>\n                            </OverlayTrigger>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Suspense fallback={<></>}>\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\n            </Suspense>\n        </>\n    }\n}\n\nexport default HashtagCampaign;","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n"],"names":["ShareEmbedModal","React","HashtagCampaign","props","shareEmbedModal","event","setState","showModal","shareEmbedCallback","shareEmbedEvent","EditCampaignUrlModal","campaignUrlCallback","campaignUrlEvent","codeCopy","id","codeCopied","setTimeout","COPY_TO_CLIPBOARD","onClickToShare","mailId","responseData","self","isLoading","String","length","mailSendRequest","htmlCode","publishCode","Object","keys","EmbedURL","wallId","email","type","then","response","toast","state","genrateCode","shareLink","this","WallId","timeStemp","Date","base64_encode","name","className","variant","onClick","e","windowOpen","HOST_URL","src","baseUrl","height","width","style","right","bottom","placement","overlay","Suspense","fallback","text","heading","Component","root","freeExports","exports","freeGlobal","module","global","window","InvalidCharacterError","message","prototype","Error","error","TABLE","REGEX_SPACE_CHARACTERS","base64","input","test","a","b","c","buffer","padding","output","position","charCodeAt","charAt","replace","bitStorage","bitCounter","indexOf","fromCharCode","define"],"sourceRoot":""}
=======
{"version":3,"file":"static/js/4939.3be75181.chunk.js","mappings":"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","sources":["Layouts/Main/HashtagCampaign/HashtagCampaign.js","../node_modules/base-64/base64.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport SVG from 'react-inlinesvg';\r\nimport { baseUrl } from '../../../Assets/AssetsHelper';\r\nimport { decode as base64_decode, encode as base64_encode } from 'base-64';\r\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport { COPY_TO_CLIPBOARD, windowOpen } from '../../../Services/Utils/utils';\r\nimport { HOST_URL, EmbedURL } from '../../../Services/Api';\r\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\r\nconst ShareEmbedModal = React.lazy(() => import('../../../Layouts/Main/PublishCommonComponents/ShareEmbedModal'));\r\n\r\nclass HashtagCampaign extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { showModal: false, genrateCode: false, codeCopied: false, shareLink: \"\", isLoading: false };\r\n    }\r\n    shareEmbedModal = event => this.setState({\r\n        showModal: true\r\n    })\r\n    shareEmbedCallback = (shareEmbedEvent) => {\r\n        this.setState({\r\n            showModal: shareEmbedEvent\r\n        })\r\n    }\r\n    EditCampaignUrlModal = event => this.setState({\r\n        showModal: true\r\n    })\r\n    campaignUrlCallback = (campaignUrlEvent) => {\r\n        this.setState({\r\n            showModal: campaignUrlEvent\r\n        })\r\n    }\r\n    codeCopy = (id) => event => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    onClickToShare = (mailId) => event => {\r\n        const { responseData } = this.props\r\n        var self = this;\r\n        this.setState({ isLoading: true })\r\n        if (mailId && String(mailId).length > 0) {\r\n            mailSendRequest({ htmlCode: (responseData.publishCode && Object.keys(responseData.publishCode).length > 0) ? `${EmbedURL}${responseData.publishCode.wallId}?ugcSuite=1&hashtag_campaign=true` : null, email: mailId, type: 2 }).then((response) => {\r\n                toast.success(\"Tagbox widget code successfully sent.\")\r\n                self.setState({ showModal: false, isLoading: false })\r\n            })\r\n        }\r\n        else {\r\n            toast.error(\"Please enter email id.\")\r\n        }\r\n    }\r\n    render() {\r\n        const { genrateCode, showModal, codeCopied } = this.state\r\n        const { responseData } = this.props\r\n\r\n        var shareLink = \"\"\r\n\r\n        if ((responseData.publishCode && Object.keys(responseData.publishCode).length > 0)) {\r\n            const WallId = responseData.publishCode.wallId;\r\n            const timeStemp = new Date() / 1000 | 0;\r\n            shareLink = (base64_encode(`${responseData.publishCode.name}---${WallId}&${timeStemp}`))\r\n        }\r\n\r\n        return <>\r\n            <div className=\"d-flex flex-column flex-shrink-0 emailcapaignPreview bg-light p-5\">\r\n                <div className=\"\">\r\n                    <h4 className=\"mb-2 fs-6\">Publish Hashtag Content Anywhere Your Audience Lies!</h4>\r\n                    <h5 className=\"mb-1 fs-7\">1. Social Share</h5>\r\n                    <p>Use this URL on your social networks to attract followers and encourage them to share their experiences. </p>\r\n\r\n                    <div className=\"hashtag_social_share d-flex align-items-center justify-content-start bg-white border rounded-1 px-3 py-2 mb-3\">\r\n                        <div className=\"hashtag_social_share_inner d-flex align-items-center\">\r\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1\" data-type=\"facebook\" onClick={(e) => windowOpen(`https://www.facebook.com/sharer.php?u=${HOST_URL}share/hashtagcampaign/${shareLink}`, 'sharer', 'toolbar=0,status=0,width=600,height=400')}>\r\n                                <i className=\"ri-facebook-circle-fill icon-4 text-light-alt\"></i>\r\n                            </Button>\r\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1 text-light-alt\" data-type=\"twitter\" onClick={(e) => windowOpen(`http://twitter.com/share?url=${HOST_URL}share/hashtagcampaign/${shareLink}`, 'sharer', 'toolbar=0,status=0,width=600,height=400')}>\r\n                                {/* <i className=\"ri-twitter-fill icon-4 text-light-alt\"></i> */}\r\n                                <SVG src={baseUrl('media/icons/svg-icons/twitter.svg')} height={20} width={20} />\r\n                            </Button>\r\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1\" data-type=\"linkedin\" onClick={(e) => windowOpen(`https://www.linkedin.com/shareArticle?mini=true&url=${HOST_URL}share/hashtagcampaign/${shareLink}`, 'sharer', 'toolbar=0,status=0,width=600,height=400')}>\r\n                                <i className=\"ri-linkedin-fill icon-4 text-light-alt\"></i>\r\n                            </Button>\r\n                            <Button variant={'link'} className=\"btn-icon text-decoration-none rounded-circle h-30px w-30px p-1 mx-1 share-hashtag-campaign-url\" data-type=\"envelope\" onClick={this.shareEmbedModal}>\r\n                                <i className=\"ri-mail-fill icon-4 text-light-alt\"></i>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <h5 className=\"mb-1 fs-7\">2. Emails</h5>\r\n                    <p>Add hashtag content to your emailers and make them more personalized. Prompt your subscribers to share more content as well with your campaign.  </p>\r\n                    <h5 className=\"mb-1 fs-7\">3. SMS/WhatsApp</h5>\r\n                    <p>Incorporate hashtag campaign URL in SMS or WhatsApp marketing to grab user attention and invite them to participate. </p>\r\n                    <div className=\"position-relative\">\r\n                        <textarea className=\"form-control textarea-min-row-9 p-lg-4\" id=\"hashtagUrlMsgCode_\" onClick={this.codeCopy('hashtagUrlMsgCode_')}>\r\n\r\n                            {`Thank you for trusting us. We love our customers, and your confidence in us means a lot to us. We hope we served you well, and we’d love your feedback. Click on the link below and tell us what you think! Share pictures, videos, or text, and we’d love to feature you on our socials.  ${(responseData.publishCode && Object.keys(responseData.publishCode).length > 0) ? `${EmbedURL}${responseData.publishCode.wallId}?ugcSuite=1&hashtag_campaign=true` : null}`}\r\n\r\n\r\n                        </textarea>\r\n                        <div className=\"emebed_action position-absolute pe-2 pb-2\" style={{ right: 5, bottom: 5 }}>\r\n                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                <Button variant={'link'} className=\"text-decoration-none text-gray-500 p-0 me-2\" onClick={this.codeCopy('hashtagUrlMsgCode_')}>\r\n                                    {!codeCopied ?\r\n                                        <i className=\"ri-file-copy-fill icon-6\"></i>\r\n                                        :\r\n                                        <i className=\"ri-check-line icon-6 text-success\"></i>\r\n                                    }\r\n                                </Button>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Suspense fallback={<></>}>\r\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\r\n            </Suspense>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default HashtagCampaign;","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n"],"names":["ShareEmbedModal","React","HashtagCampaign","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","shareEmbedModal","event","setState","showModal","shareEmbedCallback","shareEmbedEvent","EditCampaignUrlModal","campaignUrlCallback","campaignUrlEvent","codeCopy","id","codeCopied","setTimeout","COPY_TO_CLIPBOARD","onClickToShare","mailId","responseData","self","_assertThisInitialized","isLoading","String","length","mailSendRequest","htmlCode","publishCode","Object","keys","concat","EmbedURL","wallId","email","type","then","response","toast","state","genrateCode","shareLink","_createClass","key","value","_this$state","this","WallId","timeStemp","Date","base64_encode","name","_jsxs","_Fragment","children","_jsx","className","Button","variant","onClick","e","windowOpen","HOST_URL","SVG","src","baseUrl","height","width","style","right","bottom","OverlayTrigger","placement","overlay","Tooltip","Suspense","fallback","text","heading","Component","root","freeExports","exports","freeGlobal","module","global","window","InvalidCharacterError","message","prototype","Error","error","TABLE","REGEX_SPACE_CHARACTERS","base64","input","test","a","b","c","buffer","padding","output","position","charCodeAt","charAt","replace","bitStorage","bitCounter","indexOf","fromCharCode","define"],"sourceRoot":""}
>>>>>>> d24f1a5dd01fa7a2616b8fcce50ed3c852778241
