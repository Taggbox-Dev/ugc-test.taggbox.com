{"version":3,"file":"static/js/8341.317b178e.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/DisplayUrlCopy.js","Layouts/Main/DisplayScreen/Components/DisplayPlatforms/VirtualHybridEvents.js","Layouts/Main/PublishCommonComponents/EmbedCode.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\n\nclass DisplayUrlCopy extends Component {\n    constructor() {\n        super();\n        this.state = { codeCopied: false };\n    }\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    render() {\n        const { codeCopied } = this.state\n        const { url } = this.props\n        return <div className=\"d-flex align-items-start mb-3 flex-wrap\" style={{ maxWidth: 500 }}>\n                    <div className=\"d-flex flex-column flex-grow-1 pe-3 mb-2\">\n                        <div className=\"position-relative\">\n                            <input type=\"text\" name=\"displayUrl\" id=\"displayUrlCopy_\" onClick={() => { this.codeCopy('displayUrlCopy_') }} className=\"form-control form-control-lg fw-semibold text-ellipsis pe-5\" value={url} readOnly />\n                        </div>\n                        <label className=\"fw-semibold fs-8 text-muted\">Copy URL</label>\n                    </div>\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => { this.codeCopy('displayUrlCopy_') }} style={{minWidth:130}}>\n                        {!codeCopied ?\n                            <i className=\"ri-file-copy-fill\"></i>\n                            :\n                            <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                        }\n                        {!codeCopied ? 'Copy URL' : 'URL Copied'}\n                    </button>\n                </div>\n\n    }\n}\n\nexport default DisplayUrlCopy;","import React, { Component, Suspense } from 'react';\nimport DisplayUrlCopy from '../../../PublishCommonComponents/DisplayUrlCopy';\nimport EmbedCode from '../../../PublishCommonComponents/EmbedCode';\nimport { DisplayURL } from '../../../../../Services/Api'\nclass VirtualHybridEvents extends Component {\n\n    render() {\n        const {data} = this.props\n        return  <div className=\"card text-decoration-none\">\n                    <div className=\"card-body p-lg-7\">\n                        <div className=\"m-auto\">\n                            <div className=\"embed_code\">\n                                <h5 className=\"mb-5 fw-bolder\">Steps To Display Social Wall In Virtual / Hybrid Events</h5>\n                                <p>Follow these steps to showcase the Tagbox Display social wall in virtual / hybrid events:</p>\n                                <h6>Step 1: (Choose As Per Platform Requirement)</h6>\n                                <div className=\"ps-3\">\n                                    <h6>A. Generate the embed code for Social Wall</h6>\n                                    <EmbedCode copyText={'Copy the generated embed code'} data={data} />\n                                    <h6>OR</h6>\n                                    <h6>B. Copy The Display Wall URL</h6>\n                                    <DisplayUrlCopy url={`${DisplayURL}${data && Object.keys(data).length > 0 ? data.wallId : null}`}/> \n                                </div>\n                                <h6 className=\"mb-5\">Step 2: To Embed Tagbox Social Wall into Hubilo follow these steps:</h6>\n                                <ul className=\"list-unstyled list-points fs-7\">\n                                    <li className=\"mb-3\">Login to your Hubilo Virtual Event Platform</li>\n                                    <li className=\"mb-3\">Go to under Session Settings & in Advanced settings enable the toggle for <span className=\"fw-bold\">Custom iframe integration.</span></li>\n                                    <li className=\"mb-3\">Add button label as per your preference and paste the copied iframe code in the <span className=\"fw-bold\">Code Snippet</span> box, then click <span className=\"fw-bold\">Save</span></li>\n                                    <li className=\"mb-3\">Congratulations, you have successfully added the Tagbox Display Social Wall to the Hubilo virtual event platform!</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    }\n}\n\nexport default VirtualHybridEvents;","import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nimport { EmbedURL, EMBED_MIN } from '../../../Services/Api'\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\n\nclass EmbedCode extends Component {\n    constructor() {\n        super();\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\n    }\n    shareEmbedModal = (id) => event => this.setState({\n        showModal: true,\n        id: id\n    })\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent\n        })\n    }\n\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    onClickToShare = (mailId) => event => {\n        var self = this;\n        const { id } = this.state\n        this.setState({ isLoading: true })\n        if (mailId && String(mailId).length > 0) {\n            mailSendRequest({ htmlCode: document.querySelector(id ? id : \"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\n                toast.success(\"Tagbox widget code successfully sent.\")\n                self.setState({ showModal: false, isLoading: false })\n            })\n\n        }\n        else {\n            toast.error(\"Please enter email id.\")\n        }\n    }\n    onChangeWidth = event => {\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ width: event.target.value })\n    }\n    onChangeHeight = event => {\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ height: event.target.value })\n    }\n    onClickToWidthSign = (value) => event => {\n        this.setState({ widthSign: value })\n    }\n    onClickToHeightSign = (value) => event => {\n        this.setState({ heightSign: value })\n    }\n    render() {\n        const { codeCopied, showModal, width, height, widthSign, heightSign } = this.state\n        const { copyText, data } = this.props\n\n        return <div className=\"embed_code\">\n            <div className=\"mb-5\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Width</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={width} value={width} onChange={this.onChangeWidth} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"%\")}>Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"px\")}>Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"vw\")} >Viewport Width (VW)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Height</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={height} value={height} onChange={this.onChangeHeight} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"%\")}>Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"px\")}>Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"vw\")}>Viewport Height (VH)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                </div>\n            </div>\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\n                    <Nav variant=\"underline\" className=\"mb-3 border-bottom\">\n                        <Nav.Item className=\"me-4\">\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Lite Code\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Iframe\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\n                                    &lt;div className=\"taggbox\" data-widget-id=\"{data && Object.keys(data).length > 0 ? data.wallId : null}\" ugcSuite=\"1\" style=\"width:{width}{widthSign};height:{height}{heightSign};\"&gt;&lt;/div&gt;\n                                    &lt;script src={EMBED_MIN} type=\"text/javascript\"&gt;&lt;/script&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\n                                            {!codeCopied ?\n                                                <i className=\"ri-file-copy-fill\"></i>\n                                                :\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCode_')}>\n                                            <i className=\"ri-mail-fill\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                    &lt;iframe src=\"{EmbedURL}{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                            {!codeCopied ?\n                                                <i className=\"ri-file-copy-fill\"></i>\n                                                :\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCodeIframe_')}>\n                                            <i className=\"ri-mail-fill\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n            <Suspense fallback={<></>}>\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\n            </Suspense>\n        </div>\n\n    }\n}\n\nexport default EmbedCode;"],"names":["DisplayUrlCopy","codeCopy","id","setState","codeCopied","setTimeout","COPY_TO_CLIPBOARD","state","this","url","props","className","style","maxWidth","type","name","onClick","value","readOnly","minWidth","color","Component","VirtualHybridEvents","data","EmbedCode","copyText","DisplayURL","Object","keys","length","wallId","ShareEmbedModal","React","shareEmbedModal","event","showModal","shareEmbedCallback","shareEmbedEvent","onClickToShare","mailId","self","isLoading","String","mailSendRequest","htmlCode","document","querySelector","innerText","email","then","response","toast","onChangeWidth","target","parseInt","width","onChangeHeight","height","onClickToWidthSign","widthSign","onClickToHeightSign","heightSign","defaultValue","onChange","align","variant","title","href","defaultActiveKey","eventKey","wordBreak","EMBED_MIN","placement","overlay","EmbedURL","Suspense","fallback","text","heading"],"sourceRoot":""}