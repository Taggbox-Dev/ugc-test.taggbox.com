{"version":3,"file":"static/js/8063.c1d4e811.chunk.js","mappings":"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","sources":["Layouts/Main/WebEmbed/Components/EmbedList/index.js","Layouts/Main/WebEmbed/Components/WebEmbedAside.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport SVG from 'react-inlinesvg';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\n\r\nimport EditWebEmbed from '../../EditWebEmbed'\r\nimport { getAssetsCount } from '../../../../../Services/Actions/assetsActions'\r\n\r\nclass EmbedList extends Component {\r\n    state = {\r\n        active: null,\r\n        activeAction: null\r\n    }\r\n    changeFilter = (key) => event => this.setState({\r\n        activeAction: key\r\n    })\r\n    onClickToEdit = (item, key) => event => {\r\n        var self = this\r\n        this.setState({ activeAction: key })\r\n        getAssetsCount(item.id).then((response) => {\r\n            const { publishCode, assestCount } = response.data\r\n            self.props.onUpdateReponseData({ assestCount: assestCount, publishCode: publishCode })\r\n        }).catch((ex) => {\r\n            self.props.onUpdateReponseData({ assestCount: 0, publishCode: item })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { state } = this.props\r\n        const { activeAction } = this.state\r\n\r\n        const counts = Array.from({length: 8}, (_, i) => i + 1);\r\n        return <div className='filter_list_wrapper' onChange={e => this.embedCodeCallback(e)}>\r\n            <div className='filter_list'>\r\n                {state.collectionList.length > 0 && state.publishList.length > 0 ?\r\n                state.publishList.map((item, pIndex) => {\r\n                    return <div className={`d-flex rounded-1 mb-3 overflow-hidden border ${activeAction == pIndex ? 'border-dark' : 'bg-light border-light'}`} key={pIndex} onClick={this.onClickToEdit(item, pIndex)}>\r\n                        <div className=\"d-flex p-3 pe-0 cursor-pointer overflow-hidden flex-grow-1\">\r\n                            <span className=\"svg-icon svg-icon-2 flex-shrink-0 me-2 block-center d-flex text-gray-700\">\r\n                                <SVG src={baseUrl('media/icons/svg-icons/widget.svg')} height={32} width={32} />\r\n                            </span>\r\n                            <div className='d-flex flex-column flex-grow-1 overflow-hidden'>\r\n                                <p className='fs-9 mb-0 fw-medium text-ellipsis'>{item.name}</p>\r\n                                <span className='text-muted fs-9'>Wall :{item.wallId}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-center flex-shrink-0 p-3 ps-0\">\r\n                            <Link className=\"btn btn-icon btn-active-light p-0 w-26px h-26px transition-none border-0\" to={`/web-embed/edit/${item.id}`}>\r\n                                {/* onClick={this.onClickToEdit(item, pIndex)} */}\r\n                                <i className=\"ri-edit-box-line icon-7\"></i>\r\n                            </Link>\r\n                            <Button variant='icon' className=\"btn-active-light p-0 w-26px h-26px transition-none border-0\" onClick={this.props.onClickToDelete({ \"id\": item.id })}>\r\n                                <i className=\"ri-delete-bin-line icon-7\"></i>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                })\r\n                :\r\n                counts.map((count, index) => (\r\n                <div key={index} className=\"sk_rect h-54px mb-3\">\r\n                </div>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\nexport default EmbedList\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\r\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\r\n                return <Accordion.Item eventKey={pIndex}>\r\n                    <div className=\"menu-item\" key={pIndex}>\r\n                        <Accordion.Header className=\"w-100 disable_arrow\">\r\n                            <div className=\"d-flex justify-content-between align-items-center w-100\" onClick={this.onClickToEdit(item)}>\r\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2\">\r\n                                            <i className=\"ri-edit-box-line me-0 icon-7\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px\"\r\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id })}>\r\n                                            <i className=\"ri-delete-bin-6-line me-0 icon-7\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Header>\r\n                    </div>\r\n                    <Accordion.Body className=\"p-0 pt-3\">\r\n                        <EditWebEmbed history={history} item={item} {...this.props} />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n\r\n            })\r\n            }\r\n        </Accordion>\r\n*/","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport SVG from 'react-inlinesvg'\r\n//import Select from 'react-select';\r\nimport { Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, Button } from 'react-bootstrap';\r\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\r\nimport Filters from './Filters';\r\nimport Templates from './Template';\r\nimport EmbedList from './EmbedList'\r\n\r\n\r\nconst selectedPlatform = (platform) => {\r\n    switch (platform) {\r\n        case 'p-html':\r\n            return 'HTML'\r\n        case 'p-wordpress':\r\n            return 'Wordpress'\r\n        case 'p-wix':\r\n            return 'Wix'\r\n        case 'p-squarespace':\r\n            return 'Squarespace'\r\n        case 'p-shopify':\r\n            return 'Shopify'\r\n        case 'p-other':\r\n            return 'Other'\r\n        default:\r\n            return `HTML`\r\n    }\r\n}\r\n\r\nclass WebEmbedAside extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        showModal: false,\r\n        //setValue : '',\r\n        publishList: [],\r\n    };\r\n    componentDidMount() {\r\n        // this.onLoadPublish()\r\n    }\r\n    // onLoadPublish = () => {\r\n    //     var self = this\r\n    //     getPublishList().then((loadReponse) => {\r\n    //         self.setState({ publishList: loadReponse.data })\r\n    //     })\r\n    // }\r\n    componentDidMount() {\r\n        const clickResetFilter = document.querySelector(\"#web_tab_panel-tab-aside-assets_filter\")\r\n        if (clickResetFilter) {\r\n            clickResetFilter.addEventListener('click', (event) => this.props.onUpdateReponseData(null));\r\n        }\r\n    }\r\n    handleSelect(date) {\r\n\r\n    }\r\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\r\n\r\n\r\n    render() {\r\n        //const { setValue } = this.state\r\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit, templeteList, themeSkin } = this.props\r\n        return <>\r\n            <label className=\"text-gray-800 mb-1 fw-medium\" htmlFor='filterLabel'>Widget Name <strong className=\"text-danger\">*</strong></label>\r\n            <input type=\"text\" className=\"form-control form-control-sm mb-3\" id=\"filterLabel\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\r\n            <Accordion defaultActiveKey={1} className='filter_wrapper'>\r\n                {\r\n                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\r\n                }\r\n                <Accordion.Item eventKey={1} className=\"pb-3\">\r\n                    <Accordion.Header className=\"add_fillter_btn\">\r\n                        <i className=\"ri-add-line plus_symbol me-1\"></i>\r\n                        <i className=\"ri-subtract-line minus_symbol me-1\"></i>\r\n                        <span className=\"fs-9 fw-medium\">Choose Filter</span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <i className=\"ri-folder-4-line icon-7 text-gray-800\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Collection</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                        <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Network</p>\r\n                                <span className=\"fs-10 text-gray-500\">Choose the required network</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                        <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Connections</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the connection type</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer  ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <i className=\"ri-image-line icon-7 text-gray-800\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Assets Type</p>\r\n                                <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <i className=\"ri-price-tag-3-line icon-7 text-gray-800\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>Tag</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`d-flex align-items-center py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\r\n                            <div className=\"symbol symbol-28 bg-light me-2\">\r\n                                <div className=\"symbol-label\">\r\n                                    <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\r\n                                        <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <p className={`fs-9 fw-medium mb-0 text-gray-800`}>UGC Rights</p>\r\n                                <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Templates {...this.props} key={templeteList.length} />\r\n                <label className=\"text-gray-800 mb-2\">Select Platform</label>\r\n                <Accordion.Item eventKey=\"9\" className=\"pb-3\">\r\n                    <Accordion.Header className=\"w-100\">\r\n                        <span className=\"fs-9 fw-medium\">{selectedPlatform(genratedCodeModal)}</span>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\r\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"platform\" defaultValue={'p-html'}>\r\n                            <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-html\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-html\" value={'p-html'} onClick={e => this.props.genratedCodeCallback(\"p-html\")}>\r\n                                < div className=\"card-body p-2\" >\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl(`media/images/platform/html${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"html\" height={23} width={90} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-wordpress\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-wordpress\" value={'p-wordpress'} onClick={e => this.props.genratedCodeCallback(\"p-wordpress\")}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl(`media/images/platform/wordpress${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wordpress\" height={39} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-wix\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-wix\" value={'p-wix'} onClick={e => this.props.genratedCodeCallback(\"p-wix\")}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl(`media/images/platform/wix${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wix\" height={23} width={60} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${state.genratedCodeModal == \"p-squarespace\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-squarespace\" value={'p-squarespace'} onClick={e => this.props.genratedCodeCallback(\"p-squarespace\")}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl(`media/images/platform/squarespace${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wix\" height={45} width={80} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-shopify\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-shopify\" value={'p-shopify'} onClick={e => this.props.genratedCodeCallback(\"p-shopify\")}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl(`media/images/platform/shopify${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"wix\" height={25} width={90} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                            <ToggleButton className={`p-0 card rounded-1 text-decoration-none cursor-pointer mb-2 ${genratedCodeModal == \"p-other\" ? `active` : ``}`} variant=\"outline-primary\" id=\"p-other\" value={'p-other'} onClick={e => this.props.genratedCodeCallback(\"p-other\")}>\r\n                                <div className=\"card-body p-2\">\r\n                                    <div className=\"block-center text-center h-46px w-100\">\r\n                                        <img className=\"img-fluid\" src={baseUrl(`media/images/platform/other${themeSkin == 'dark' ? '-dark' : ''}.svg`)} alt=\"other\" height={31} width={70} />\r\n                                    </div>\r\n                                </div>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n            <div className='filter_actions_'>\r\n                <Button variant='primary' className={`w-100  ${state.isUpdating ? `spinner` : ``}`} onClick={this.props.onRequestPublish}>Save & Generated Code</Button>\r\n                <Button variant='link' className='w-100 text-decoration-none fw-medium' onClick={onResetFilter}>Back</Button>\r\n            </div>\r\n        </>\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        templeteList: state.templates.templeteList,\r\n        themeSkin: state.themeSkin.themeSkin\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(WebEmbedAside);"],"names":["EmbedList","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","active","activeAction","changeFilter","key","event","setState","onClickToEdit","item","self","_assertThisInitialized","getAssetsCount","id","then","response","_response$data","data","publishCode","assestCount","props","onUpdateReponseData","catch","ex","_createClass","value","_this2","this","counts","from","_","i","_jsx","className","onChange","e","embedCodeCallback","children","collectionList","publishList","map","pIndex","_jsxs","onClick","SVG","src","baseUrl","height","width","name","wallId","Link","to","Button","variant","onClickToDelete","count","index","Component","selectedPlatform","platform","WebEmbedAside","showModal","genratedCodeCallback","clickResetFilter","document","querySelector","addEventListener","date","_this3","_this$props","filterApply","genratedCodeModal","onResetFilter","onChangeName","activeFilter","history","templeteList","isPublishEdit","themeSkin","_Fragment","htmlFor","type","placeholder","publishCodeName","Accordion","defaultActiveKey","chooseFilter","Object","keys","filterKey","indexFilter","Filters","_objectSpread","isLast","eventKey","includes","_createElement","Templates","ToggleButtonGroup","defaultValue","ToggleButton","alt","isUpdating","onRequestPublish","connect","templates"],"sourceRoot":""}