{"version":3,"file":"static/js/508.d8ba2920.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsStatus/GetRightsDownload.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport { saveAs } from 'file-saver';\nimport ReactHtmlParser from 'react-html-parser';\nimport { getCertificate } from '../../../../../../Services/Actions/ugcRightsActions'\nimport { getURLFromVideo } from '../../../../../../Services/Utils/utils'\nimport { toast } from \"react-toastify\";\n\nconst timeZoneImageReplace = (imageReplace) => {\n    try {\n        var repalceData = imageReplace\n        if (imageReplace && String(imageReplace).length > 0 && String(imageReplace).includes(`\"img/flags/`)) {\n            repalceData = String(imageReplace).replace(`\"img/flags/`, baseUrl('media/images/flags/'))\n            if (repalceData && String(repalceData).includes(\".png\")) {\n                repalceData = String(repalceData).replace(`.png`, `.svg`)\n            }\n            repalceData = String(repalceData).replace(`<img`, `<img style=\"width: 20px;height:20px;\" `)\n            return repalceData\n        }\n        return imageReplace\n    }\n    catch {\n        return imageReplace\n    }\n}\n\nconst userAgentImageReplace = (imageReplace) => {\n    try {\n        var repalceData = imageReplace\n        if (imageReplace && String(imageReplace).length > 0 && String(imageReplace).includes(`\"img/browser-svg/`)) {\n            repalceData = String(imageReplace).replace(`\"img/browser-svg/`, baseUrl('media/icons/browser-svg/'))\n            repalceData = String(repalceData).replace(`<img`, `<img style=\"width: 20px;height:20px;\" `)\n            return repalceData\n        }\n        return imageReplace\n    }\n    catch {\n        return imageReplace\n    }\n}\n\nclass GetRightsDownload extends Component {\n\n    state = { certificateLoading: false, imageLoading: false, tncLoading: false }\n\n    onClickToDownload = (id) => event => {\n        this.setState({ certificateLoading: true })\n        var self = this;\n        getCertificate(id).then((response) => {\n            const file = new Blob([response.data], { type: 'application/pdf' });\n            saveAs(file, 'Ugc_Approval_Certificate.pdf');\n            setTimeout(() => self.setState({ certificateLoading: false }), 1000)\n        }).catch((ex) => {\n            self.setState({ certificateLoading: false },()=>toast.error(\"Oops! Something went wrong. Please try again later.\"))\n        })\n    }\n    onClickToDownloadImage = (URL, type, mediaFile) => event => {\n        var self = this;\n        this.setState({ imageLoading: true })\n        this.onRequestDownload(URL, type, mediaFile).then((response) => {\n            setTimeout(() => self.setState({ imageLoading: false }), 1000)\n        }).catch((ex) => {\n            toast.error(\"Oops! Something went wrong. Please try again later.\")\n            setTimeout(() => self.setState({ imageLoading: false }), 1000)\n        })\n\n    }\n\n    onRequestDownload = (URL, type, mediaFile) => {\n        return new Promise(resolve => {\n            try {\n                saveAs(URL, 'Ugc_Image.jpg');\n                if ((type == 3 || type == 5) && mediaFile) {\n                    const mediaUrl = getURLFromVideo(mediaFile)\n                    saveAs(mediaUrl, 'Ugc_Image.mp4');\n                    return Promise.resolved('')\n                }\n                else {\n                    return Promise.resolved('')\n                }\n            }\n            catch (ex) {\n\n                return Promise.resolved('')\n            }\n\n        })\n    }\n\n    onClickToDownloadFile = (URL, fileName) => event => {\n        this.setState({ tncLoading: true })\n        var self = this;\n        this.onRequestTnc(URL, fileName).then((response) => {\n            setTimeout(() => self.setState({ tncLoading: false }), 1000)\n        }).catch((ex) => {\n            toast.error(\"Oops! Something went wrong. Please try again later.\")\n            setTimeout(() => self.setState({ tncLoading: false }), 1000)\n        })\n    }\n    onRequestTnc = (URL, fileName) => {\n        return new Promise(resolve => {\n            try {\n                saveAs(URL == \"TermsAndConditions.docx\" ? baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx') : `https://cloud.taggbox.com/test/${URL}`, fileName);\n                return Promise.resolved('')\n            }\n            catch (ex) {\n                return Promise.resolved('')\n            }\n\n        })\n    }\n    render() {\n        const { modalAssetData } = this.props\n        const { certificateLoading, imageLoading, tncLoading } = this.state\n        return <div className=\"p-lg-6 p-3\">\n            <div className=\"mb-6\">\n                <h6>Information</h6>\n                <ul className=\"list-group rounded-1\">\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User handle</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">@{modalAssetData.username}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User name</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.username}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Post Approval Date</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{moment.utc(new Date(modalAssetData.ugcRights.created)).format(\"llll\")}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User IP</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.ugcRights.userIP == \"\" ? \"--\" : modalAssetData.ugcRights.userIP}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Timezone</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.ugcRights.timezone == \"\" ? \"--\" : ReactHtmlParser(timeZoneImageReplace(modalAssetData.ugcRights.timezone))}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">User Agent</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800 fs-7\">{modalAssetData.ugcRights.userAgent == \"\" ? \"--\" : ReactHtmlParser(userAgentImageReplace(modalAssetData.ugcRights.userAgent))}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Terms & Condition</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800\">\n                            <button type=\"button\" className={`btn btn-outline-primary btn-sm ${tncLoading ? `spinner disabled` : ``}`} onClick={modalAssetData.ugcRights.custom_term_type == \"CustomUrlType\" ? event => window.open(modalAssetData.ugcRights.custom_terms, \"_blank\") : this.onClickToDownloadFile(modalAssetData.ugcRights.custom_terms, modalAssetData.ugcRights.custom_term_type)}>\n                                Download\n                                <i className=\"ri-file-download-line ms-1\"></i>\n                            </button>\n                        </span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between p-3 bg-light\">\n                        <span className=\"text-ellipsis text-gray-600 fs-7 pe-3\">Approval Certificate</span>\n                        <span className=\"text-ellipsis fw-bolder text-gray-800\">\n                            <button type=\"button\" className={`btn btn-outline-primary btn-sm ${certificateLoading ? `spinner disabled` : ``}`} onClick={this.onClickToDownload(modalAssetData.ugcRights.id)}>\n                                Download Certificate\n                                <i className=\"ri-file-shield-2-line ms-1\"></i>\n                            </button>\n                        </span>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"mb-6\">\n                <h6>Download Media</h6>\n                <div className=\"card rounded-1\">\n                    <div className=\"card-body d-flex align-items-center justify-content-between p-2\">\n                        <div className=\"d-flex align-items-center cursor-pointer flex-shrink-0\" style={{ width: '30%' }}>\n                            <div className=\"position-relative rounded-1 bg-light w-100\" style={{ paddingBottom: '100%', width: '100%' }}>\n                                <img className=\"img-fluid position-absolute h-100 w-100 object-center-cover box-shadow rounded-1\" src={modalAssetData.postFile} height=\"3221\" width=\"4825\" alt={modalAssetData.name} />\n                            </div>\n                        </div>\n                        <div className=\"block-center align-items-start flex-column flex-grow-1 p-4\">\n                            <p className=\"fs-9 fw-medium\">{modalAssetData.content}</p>\n                            <button type=\"button\" className={`btn btn-primary ${imageLoading ? `spinner disabled` : ``}`} onClick={this.onClickToDownloadImage(modalAssetData.postFile, modalAssetData.type, modalAssetData.mediaFile)}>\n                                Download Media\n                                <i className=\"ri-download-2-line ms-1\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default GetRightsDownload;"],"names":["timeZoneImageReplace","imageReplace","repalceData","String","length","includes","replace","baseUrl","_unused","userAgentImageReplace","_unused2","GetRightsDownload","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","state","certificateLoading","imageLoading","tncLoading","onClickToDownload","id","event","setState","self","_assertThisInitialized","getCertificate","then","response","file","Blob","data","type","saveAs","setTimeout","catch","ex","toast","onClickToDownloadImage","URL","mediaFile","onRequestDownload","Promise","resolve","resolved","mediaUrl","getURLFromVideo","onClickToDownloadFile","fileName","onRequestTnc","_createClass","key","value","modalAssetData","this","props","_this$state","_jsxs","className","children","_jsx","username","moment","Date","ugcRights","created","format","userIP","timezone","ReactHtmlParser","userAgent","onClick","custom_term_type","window","open","custom_terms","style","width","paddingBottom","src","postFile","height","alt","name","content","Component"],"sourceRoot":""}