{"version":3,"file":"static/js/8427.eb4ffaed.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/EmbedCode.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\r\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\r\nimport { EmbedURL, EMBED_MIN } from '../../../Services/Api'\r\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\r\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\r\n\r\nclass EmbedCode extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\r\n    }\r\n    shareEmbedModal = (id) => event => this.setState({\r\n        showModal: true,\r\n        id: id\r\n    })\r\n    shareEmbedCallback = (shareEmbedEvent) => {\r\n        this.setState({\r\n            showModal: shareEmbedEvent\r\n        })\r\n    }\r\n\r\n    codeCopy = (id) => {\r\n        this.setState({\r\n            codeCopied: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                codeCopied: false\r\n            })\r\n        }, 1500);\r\n        COPY_TO_CLIPBOARD(id);\r\n    }\r\n    onClickToShare = (mailId) => event => {\r\n        var self = this;\r\n        const { id } = this.state\r\n        this.setState({ isLoading: true })\r\n        if (mailId && String(mailId).length > 0) {\r\n            mailSendRequest({ htmlCode: document.querySelector(id ? id : \"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\r\n                toast.success(\"Tagbox widget code successfully sent.\")\r\n                self.setState({ showModal: false, isLoading: false })\r\n            })\r\n\r\n        }\r\n        else {\r\n            toast.error(\"Please enter email id.\")\r\n        }\r\n    }\r\n    onChangeWidth = event => {\r\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ width: event.target.value })\r\n    }\r\n    onChangeHeight = event => {\r\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ height: event.target.value })\r\n    }\r\n    onClickToWidthSign = (value) => event => {\r\n        this.setState({ widthSign: value })\r\n    }\r\n    onClickToHeightSign = (value) => event => {\r\n        this.setState({ heightSign: value })\r\n    }\r\n    render() {\r\n        const { codeCopied, showModal, width, height, widthSign, heightSign } = this.state\r\n        const { copyText, data } = this.props\r\n\r\n        return <div className=\"embed_code\">\r\n            <div className=\"mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Width</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={width} value={width} onChange={this.onChangeWidth} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={widthSign}>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"%\")}>Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"px\")}>Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"vw\")} >Viewport Width (VW)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Height</InputGroup.Text>\r\n                            <Form.Control type=\"number\" defaultValue={height} value={height} onChange={this.onChangeHeight} />\r\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={heightSign}>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"%\")}>Percent (%)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"px\")}>Pixel (PX)</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"vw\")}>Viewport Height (VH)</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\r\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\r\n                    <Nav variant=\"underline\" className=\"mb-3 border-bottom\">\r\n                        <Nav.Item className=\"me-4\">\r\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Lite Code\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"\">\r\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\r\n                                Iframe\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\r\n                                    &lt;div class=\"taggbox\" data-widget-id=\"{data && Object.keys(data).length > 0 ? data.wallId : null}\" ugcSuite=\"1\" style=\"width:{width}{widthSign};height:{height}{heightSign};\"&gt;&lt;/div&gt;\r\n                                    &lt;script src=\"{EMBED_MIN}\" type=\"text/javascript\"&gt;&lt;/script&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\r\n                                            {!codeCopied ?\r\n                                                <i className=\"ri-file-copy-fill\"></i>\r\n                                                :\r\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCode_')}>\r\n                                            <i className=\"ri-mail-fill\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\r\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\r\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                    &lt;iframe src=\"{EmbedURL}{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\r\n                                </code>\r\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\r\n                                            {!codeCopied ?\r\n                                                <i className=\"ri-file-copy-fill\"></i>\r\n                                                :\r\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\r\n                                            }\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\r\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCodeIframe_')}>\r\n                                            <i className=\"ri-mail-fill\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                </Tab.Container>\r\n            </div>\r\n            <Suspense fallback={<></>}>\r\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\r\n            </Suspense>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default EmbedCode;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"names":["ShareEmbedModal","React","EmbedCode","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","shareEmbedModal","id","event","setState","showModal","shareEmbedCallback","shareEmbedEvent","codeCopy","codeCopied","setTimeout","COPY_TO_CLIPBOARD","onClickToShare","mailId","self","_assertThisInitialized","state","isLoading","String","length","mailSendRequest","htmlCode","document","querySelector","innerText","email","type","then","response","toast","onChangeWidth","target","value","parseInt","width","onChangeHeight","height","onClickToWidthSign","widthSign","onClickToHeightSign","heightSign","_createClass","key","_this2","_this$state","this","_this$props","props","copyText","data","_jsxs","className","children","_jsx","InputGroup","Form","defaultValue","onChange","DropdownButton","align","variant","title","Dropdown","href","onClick","Tab","defaultActiveKey","Nav","eventKey","style","wordBreak","Object","keys","wallId","EMBED_MIN","OverlayTrigger","placement","overlay","Tooltip","color","EmbedURL","Suspense","fallback","_Fragment","text","heading","Component","alignDirection","PropTypes","alignPropType","sm","md","lg","xl","xxl","propTypes","disabled","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","bsPrefix","size","_ref","ref","_objectWithoutProperties","_excluded","_objectSpread","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName"],"sourceRoot":""}