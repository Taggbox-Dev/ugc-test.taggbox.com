{"version":3,"file":"static/js/9699.aa0f9e24.chunk.js","mappings":"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","sources":["Layouts/Main/Feeds/Elements/SubmitFeedRequest.js","Layouts/Main/Feeds/Elements/InputField.js","Layouts/Main/Feeds/Elements/CheckboxField.js","Layouts/Main/Feeds/Airbnb/Airbnb.js","Layouts/Main/Feeds/Flickr/Flickr.js","Layouts/Main/Feeds/Tumblr/Tumblr.js","Layouts/Main/Feeds/Pinterest/Pinterest.js","Layouts/Main/Feeds/Giphy/Giphy.js","Layouts/Main/Feeds/Rss/Rss.js","Layouts/Main/Feeds/Elements/SearchPlace.js","Layouts/Main/Feeds/Yelp/Yelp.js","Layouts/Main/Feeds/Elements/InfoSection.js","Layouts/Main/Feeds/Linkedin/components/BulkDropzone.js","Layouts/Main/Feeds/Linkedin/Linkedin.js","Layouts/Main/Feeds/Youtube/components/YoutubeTabs.js","Layouts/Main/Feeds/Youtube/Youtube.js","Layouts/Main/Feeds/Elements/AccountPicker.js","Layouts/Main/Feeds/Yammer/Yammer.js","Layouts/Main/Feeds/Tiktok/components/AccountSelect.js","Layouts/Main/Feeds/Tiktok/Tiktok.js","Layouts/Main/Feeds/Vimeo/Vimeo.js","Layouts/Main/Feeds/Twitter/components/TwitterTab.js","Layouts/Main/Feeds/Twitter/Twitter.js","Layouts/Main/Feeds/Google/components/PlaceDropDown.js","Layouts/Main/Feeds/Google/components/GoogleTab.js","Layouts/Main/Feeds/Google/Google.js","Layouts/Main/Feeds/Slack/components/SlackTab.js","Layouts/Main/Feeds/Slack/Slack.js","Layouts/Main/Feeds/Facebook/components/FacebookTab.js","Layouts/Main/Feeds/Elements/ConnectAccount.js","Layouts/Main/Feeds/Facebook/Facebook.js","Layouts/Main/Feeds/Instagram/components/InstagramTab.js","Layouts/Main/Feeds/Instagram/Instagram.js","Layouts/Main/MyAssets/AddAssetsModal/Compontnets/Elements/AddFeedByNetwork.js","../node_modules/react-places-autocomplete/dist/PlacesAutocomplete.js","../node_modules/react-places-autocomplete/dist/helpers.js","../node_modules/react-places-autocomplete/dist/index.js","../node_modules/react-places-autocomplete/dist/utils.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport NeedSupport from '../../CommonComponents/NeedSupport';\n\n\nclass SubmitFeedRequest extends Component {\n\n    render() {\n        const { supportUrl, videoUrl, cancelFeed, sumbitFeed, loading, hideBtn } = this.props;\n        return <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\n            <Suspense fallback={<></>}>\n                <NeedSupport content={'Need Help'} supportUrl={supportUrl} videoUrl={videoUrl} />\n            </Suspense>\n            <div className=\"my-1 d-flex align-items-center justify-content-end flex-wrap\">\n                <button type=\"button\" className=\"btn btn-secondary me-3\" onClick={() => cancelFeed()}>Cancel</button>\n                {!hideBtn && <button type=\"button\" className={`btn btn-primary ${loading ? 'spinner spinner-right disabled' : ''}`} onClick={() => sumbitFeed()}>Create Connection</button>}\n            </div>\n        </div>\n    }\n}\n\nexport default SubmitFeedRequest;","import React, { Component } from 'react';\n\nclass InputField extends Component{\n    render(){\n        const {value,onChangeHandler,placeholder,name,autoComplete,className} = this.props;\n        return <input type=\"text\" name={name} className={className} placeholder={placeholder} value={value} onChange={onChangeHandler} autoComplete={autoComplete?\"off\":\"\"}/>\n    }\n}\n\nexport default InputField;","import React, { Component } from 'react';\n\nclass CheckBoxField extends Component {\n    render() {\n        const { isChecked, onChangeHandler, name } = this.props;\n        return <>\n            <input className=\"form-check-input\" type=\"checkbox\" name={name} checked={isChecked} onChange={onChangeHandler} />\n            {this.props.children}\n        </>\n    }\n}\n\nexport default CheckBoxField;","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { capitalizeFirstLetter } from \"../../../../Services/Utils/utils\";\nimport InputField from \"../Elements/InputField\";\nimport CheckBoxField from \"../Elements/CheckboxField\";\nimport { createFeedAction } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\n\nclass Airbnb extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageUrl: '',\n            error: false,\n            moderation: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onSubmit = () => {\n        const { pageUrl, moderation } = this.state;\n        const { collection, networkId, history } = this.props;\n\n        if (!pageUrl || pageUrl == \"\") this.setState({ error: true })\n        else {\n\n            this.setState({ error: false, loading: true })\n\n            var obj = {\n                collection: collection != null ? collection.value : '',\n                networkId: networkId,\n                filter: 56,\n                airbnb_page_review: pageUrl,\n                moderation: moderation ? 1 : 0,\n            }\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                history('/assets');\n            });\n        }\n    }\n\n\n\n    render() {\n        const { pageUrl, error, moderation, loading, selectedFilterTab } = this.state;\n        const { filterTabs } = this.props;\n        return <>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                <div className=\"addSourceTabs\">\n                    {filterTabs && Object.keys(filterTabs).length > 1 ?\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\">\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                                    <path d=\"M17.6572 14.8282L16.2429 13.414L17.6572 11.9998C19.2193 10.4377 19.2193 7.90506 17.6572 6.34296C16.0951 4.78086 13.5624 4.78086 12.0003 6.34296L10.5861 7.75717L9.17188 6.34296L10.5861 4.92875C12.9292 2.5856 16.7282 2.5856 19.0714 4.92875C21.4145 7.27189 21.4145 11.0709 19.0714 13.414L17.6572 14.8282ZM14.8287 17.6567L13.4145 19.0709C11.0714 21.414 7.27238 21.414 4.92923 19.0709C2.58609 16.7277 2.58609 12.9287 4.92923 10.5856L6.34345 9.17139L7.75766 10.5856L6.34345 11.9998C4.78135 13.5619 4.78135 16.0946 6.34345 17.6567C7.90555 19.2188 10.4382 19.2188 12.0003 17.6567L13.4145 16.2425L14.8287 17.6567ZM14.8287 7.75717L16.2429 9.17139L9.17188 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path>\n                                                                </svg>\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        : null}\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <Tab.Content>\n                                    <Tab.Pane eventKey={\"Listing Url\"}>\n                                        <div className=\"mb-2 mb-xl-3\">\n                                            <div className=\"position-relative w-100\">\n                                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                                                </span>\n                                                <InputField name={\"pageUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Airbnb Page Url\" value={pageUrl} onChangeHandler={this.onChangeHandler} />\n                                                {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                            </div>\n                                        </div>\n                                        {/* <div className=\"pb-2\">\n                                            <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                    <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                </CheckBoxField>\n                                            </label>\n                                        </div> */}\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Tab.Container>\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Airbnb)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\n\nclass Flickr extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n\n    onSubmit = () => {\n        const { hashtag, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId, history } = this.props;\n\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n\n            this.setState({ error: false, handleError: false, loading: true })\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n\n                })\n\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                field1: handle,\n                field2: hashtag,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n\n            if (selectedFilterId == 1) {\n                obj['field2'] = ''\n            } else if (selectedFilterId == 2) {\n                obj['field1'] = ''\n            }\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                history('/assets');\n            });\n        }\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 1: // @\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 2: // Link\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.78428 14L8.2047 10H4V8H8.41491L8.94043 3H10.9514L10.4259 8H14.4149L14.9404 3H16.9514L16.4259 8H20V10H16.2157L15.7953 14H20V16H15.5851L15.0596 21H13.0486L13.5741 16H9.58509L9.05957 21H7.04855L7.57407 16H4V14H7.78428ZM9.7953 14H13.7843L14.2047 10H10.2157L9.7953 14Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(2)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} name={\"hashtag\"} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(1)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} name={\"handle\"} placeholder=\"Enter handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                        {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Flickr)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\n\nclass Tumblr extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onSubmit = () => {\n        const { hashtag, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n            if (selectedFilterId == 1) {\n                obj['feedText'] = handle\n            } else if (selectedFilterId == 2) {\n                obj['feedText'] = hashtag\n            }\n\n            this.setState({ error: false, handleError: false, loading: true })\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.props.closeAddFeed();\n                this.setState({ loading: false });\n                this.props.history('/assets');\n            });\n\n        }\n    }\n\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 2: // Hashtag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.78428 14L8.2047 10H4V8H8.41491L8.94043 3H10.9514L10.4259 8H14.4149L14.9404 3H16.9514L16.4259 8H20V10H16.2157L15.7953 14H20V16H15.5851L15.0596 21H13.0486L13.5741 16H9.58509L9.05957 21H7.04855L7.57407 16H4V14H7.78428ZM9.7953 14H13.7843L14.2047 10H10.2157L9.7953 14Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\n                                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(2)}\n                                                    </span>\n                                                    <InputField name={\"hashtag\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(1)}\n                                                    </span>\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tumblr)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\n\nclass Pinterest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userBoard: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            errorMsg: \"This field is required\",\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    onSubmit = () => {\n        const { userBoard, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        } else if (selectedFilterTab == 'User Board' && userBoard == '') {\n            this.setState({ error: true, errorMsg: \"This field is required\" });\n        } else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                field12boardurl: '',\n                field1: ''\n            }\n\n            if (selectedFilterId == 1) {\n                obj['field1'] = handle\n            } else if (selectedFilterId == 12) {\n                obj['field12boardurl'] = userBoard\n\n                if (userBoard.includes('pinterest.com')) {\n                    let url = userBoard.split(\"https://in.pinterest.com/\")[1].replace(\"/\", \"\");\n                    if (url) {\n                        obj['field1'] = url;\n                    } else {\n                        this.setState({ errorMsg: 'This field must contain a url.', error: true })\n                        return false\n                    }\n                } else {\n                    this.setState({ errorMsg: 'This field must contain a url.', error: true })\n                    return false\n                }\n            }\n\n            this.setState({ error: false, handleError: false, loading: true });\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false, isAuthRequired: true });\n                this.props.closeAddFeed()\n                this.props.history('/assets');\n            });\n\n        }\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 1: // @\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 12: // Link\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { userBoard, handle, moderation, handleError, error, loading, selectedFilterTab, errorMsg } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(1)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} name={\"handle\"} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                        {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"User Board\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(12)}\n                                                        </span>\n                                                        <InputField className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} name={\"userBoard\"} placeholder=\"https://in.pinterest.com/taggbox/taggbox-social-blog/\" value={userBoard} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">{errorMsg}</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pinterest)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\nclass Giphy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: \"\",\n            sticker: \"\",\n            handle: \"\",\n            moderation: false,\n            error: false,\n            stickerError: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, stickerError: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n\n    onSubmit = () => {\n        const { search, sticker, handle, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId, history } = this.props;\n\n        if (selectedFilterTab == 'search' && search == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'search sticker' && sticker == '') {\n            this.setState({ stickerError: true });\n        } else if (selectedFilterTab == 'handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n\n                })\n\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n            if (selectedFilterId == 64) {\n                obj['field'] = search\n            } else if (selectedFilterId == 63) {\n                obj['field'] = sticker\n            } else if (selectedFilterId == 1) {\n                obj['field'] = handle\n            }\n\n            this.setState({ error: false, handleError: false, stickerError: false, loading: true });\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                history('/assets');\n            });\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 64: // Search\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.031 16.6168L22.3137 20.8995L20.8995 22.3137L16.6168 18.031C15.0769 19.263 13.124 20 11 20C6.032 20 2 15.968 2 11C2 6.032 6.032 2 11 2C15.968 2 20 6.032 20 11C20 13.124 19.263 15.0769 18.031 16.6168ZM16.0247 15.8748C17.2475 14.6146 18 12.8956 18 11C18 7.1325 14.8675 4 11 4C7.1325 4 4 7.1325 4 11C4 14.8675 7.1325 18 11 18C12.8956 18 14.6146 17.2475 15.8748 16.0247L16.0247 15.8748Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 63: // Sticker\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M10.5199 19.8634C10.5955 18.6615 10.8833 17.5172 11.3463 16.4676C9.81124 16.3252 8.41864 15.6867 7.33309 14.7151L8.66691 13.2248C9.55217 14.0172 10.7188 14.4978 12 14.4978C12.1763 14.4978 12.3501 14.4887 12.5211 14.471C14.227 12.2169 16.8661 10.7083 19.8634 10.5199C19.1692 6.80877 15.9126 4 12 4C7.58172 4 4 7.58172 4 12C4 15.9126 6.80877 19.1692 10.5199 19.8634ZM19.0233 12.636C15.7891 13.2396 13.2396 15.7891 12.636 19.0233L19.0233 12.636ZM22 12C22 12.1677 21.9959 12.3344 21.9877 12.5L12.5 21.9877C12.3344 21.9959 12.1677 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM10 10C10 10.8284 9.32843 11.5 8.5 11.5C7.67157 11.5 7 10.8284 7 10C7 9.17157 7.67157 8.5 8.5 8.5C9.32843 8.5 10 9.17157 10 10ZM17 10C17 10.8284 16.3284 11.5 15.5 11.5C14.6716 11.5 14 10.8284 14 10C14 9.17157 14.6716 8.5 15.5 8.5C16.3284 8.5 17 9.17157 17 10Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { search, handle, sticker, moderation, handleError, error, loading, selectedFilterTab, stickerError } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\n                                            const { feedName, feedtype, filter } = filterTab;\n                                            return <Nav.Item className=\"p-1\" key={index}>\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                        {this.feedIcon(filter)}\n                                                    </span>\n                                                    {capitalizeFirstLetter(feedtype)}\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        })}\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Tab.Content>\n                                        <Tab.Pane eventKey={\"search\"}>\n                                            <div className=\"mb-2 mb-xl-3\">\n                                                <div className=\"position-relative w-100\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(64)}\n                                                    </span>\n                                                    <InputField name={\"search\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Search giphy keyword to fetch feed\" value={search} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                        <Tab.Pane eventKey={\"search sticker\"}>\n                                            <div className=\"mb-2 mb-xl-3\">\n                                                <div className=\"position-relative w-100\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(63)}\n                                                    </span>\n                                                    <InputField name={\"sticker\"} className={`form-control form-control-lg fw-bolder px-9 ${stickerError ? 'is-invalid' : ''}`} placeholder=\"Search giphy keyword to fetch feed\" value={sticker} onChangeHandler={this.onChangeHandler} />\n                                                    {stickerError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                        <Tab.Pane eventKey={\"handle\"}>\n                                            <div className=\"mb-2 mb-xl-3\">\n                                                <div className=\"position-relative w-100\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(1)}\n                                                    </span>\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                    </Tab.Content>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Giphy)","import React, { Component } from 'react';\nimport { saveAs } from 'file-saver';\nimport { connect } from 'react-redux';\nimport { Nav, Tab, Collapse } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\n\n\n\n\nclass Rss extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            feedUrl: \"\",\n            moderation: false,\n            error: false,\n            urlError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n            sampleXml: false,\n            isRequest: false\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n\n    onSubmit = () => {\n        const { name, feedUrl, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (name == '') {\n            this.setState({ error: true });\n        } else if (feedUrl == '') {\n            this.setState({ urlError: true });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                fieldtitle: name,\n            }\n\n            if (!feedUrl.includes(\"://\")) {\n                this.setState({ urlError: true });\n                return;\n            } else {\n                obj['field'] = feedUrl;\n            }\n\n            this.setState({ error: false, urlError: false, loading: true });\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                this.props.history('/assets');\n            });\n\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 18: // Link\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 16: // Links\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13 6V21H11V6H5V4H19V6H13Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    onClickToDwonloadSample = event => {\n        this.setState({ isRequest: true }, () => {\n            saveAs(baseUrl(\"media/downloads/sample-xml.txt\"), `sample-xml.txt`);\n            setTimeout(() => this.setState({ isRequest: false }), 2000)\n        })\n\n\n    }\n\n    render() {\n        const { filterTabs } = this.props;\n        const { name, feedUrl, moderation, urlError, error, loading, selectedFilterTab, sampleXml, isRequest } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        {filterTabs && Object.keys(filterTabs).length > 1 ?\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <div className=\"\">\n\n                                            <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                                {\n                                                    filterTabs && filterTabs.map((filterTab, index) => {\n                                                        const { feedName, feedtype, filter } = filterTab;\n                                                        return <Nav.Item className=\"p-1\" key={index}>\n                                                            <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                                <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                    {this.feedIcon(filter)}\n                                                                </span>\n                                                                {capitalizeFirstLetter(feedtype)}\n                                                            </Nav.Link>\n                                                        </Nav.Item>\n                                                    })\n                                                }\n                                            </Nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            : null}\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab} Details</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Tab.Content>\n                                        <Tab.Pane eventKey={\"RSS\"}>\n                                            <div className='row'>\n                                                <div className=\"col-sm-6\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(16)}\n                                                        </span>\n                                                        <InputField name={\"name\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Display Name\" value={name} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-sm-6\">\n                                                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(18)}\n                                                        </span>\n                                                        <InputField name={\"feedUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${urlError ? 'is-invalid' : ''}`} placeholder=\"Feed URL\" value={feedUrl} onChangeHandler={this.onChangeHandler} />\n                                                        {urlError ? <span className=\"invalid-feedback\">This field must contain a url</span> : null}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Tab.Pane>\n                                    </Tab.Content>\n                                    <div className=\"d-flex w-100 justify-content-end mt-2\">\n                                        <button type=\"button\" className=\"btn p-0 text-decoration-underline\" onClick={() => this.setState({ sampleXml: !sampleXml })}>\n                                            <span className=\"text-right fw-semibold\">Download Sample Format</span>\n                                        </button>\n                                    </div>\n                                    <Collapse in={sampleXml}>\n                                        <div>\n                                            <div className=\"block-center flex-column m-auto py-3\" style={{ maxWidth: 530 }}>\n                                                <img className=\"h-auto w-100\" src={baseUrl(\"media/images/demo/sample-design--xml-rss-feed.png\")} height=\"600\" width=\"300\" alt=\"sample Rss\" />\n                                                <div className={`btn btn-sm btn-secondary ${isRequest ? `spinner disabled` : ``}`} download onClick={this.onClickToDwonloadSample}>\n                                                    <span className=\"svg-icon\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <path d=\"M0,0H24V24H0Z\" fill=\"none\" />\n                                                            <path d=\"M-945.524-511.2A2.48,2.48,0,0,1-948-513.68v-3.3a.826.826,0,0,1,.825-.826.826.826,0,0,1,.826.826v3.3a.827.827,0,0,0,.826.825h11.56a.827.827,0,0,0,.826-.825v-3.3a.826.826,0,0,1,.825-.826.826.826,0,0,1,.823.826v3.3a2.48,2.48,0,0,1-2.476,2.476Zm5.467-6.3a.809.809,0,0,1-.269-.179l-4.127-4.134a.825.825,0,0,1-.242-.583.826.826,0,0,1,.242-.584.825.825,0,0,1,.583-.242.826.826,0,0,1,.584.242l2.719,2.719v-7.909a.826.826,0,0,1,.826-.826.825.825,0,0,1,.825.826v7.916l2.72-2.719a.824.824,0,0,1,.583-.242.825.825,0,0,1,.583.242.822.822,0,0,1,.242.584.821.821,0,0,1-.242.583l-4.127,4.127a.809.809,0,0,1-.269.179.824.824,0,0,1-.315.065A.826.826,0,0,1-940.057-517.5Z\" transform=\"translate(951.744 532.102)\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                    Download Sample\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rss)","import React, { useState } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress,getLatLng} from \"react-places-autocomplete\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\n\n\nexport default function SearchPlace(props) {\n  const [address, setAddress] = useState(\"\");\n  const [list, setList] = useState(false);\n  const [spinnerActive, spinnerActiveFun] = useState(false);\n\n\n  const handleChange = (e) => { setAddress(e); setList(true); props.onFieldTextChange(\"\", \"\") };\n\n  const handleSelect = address => {\n    spinnerActiveFun(true)\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        props.onLatlanChange(`${latLng.lat},${latLng.lng}`)\n        spinnerActiveFun(false)\n      })\n      .catch(error => console.error('Error', error));\n  };\n\n  const handleSelect1 = (v1, v2) => {\n    props.onFieldTextChange(v1, v2)\n    setAddress(v1);\n    setList(false);\n  };\n\n\n  return (<PlacesAutocomplete\n            value={address}\n            onChange={handleChange}\n            onSelect={handleSelect}\n          >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div className=\"position-relative w-100\">\n              <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 23.7279L5.63604 17.364C2.12132 13.8492 2.12132 8.15076 5.63604 4.63604C9.15076 1.12132 14.8492 1.12132 18.364 4.63604C21.8787 8.15076 21.8787 13.8492 18.364 17.364L12 23.7279ZM16.9497 15.9497C19.6834 13.2161 19.6834 8.78392 16.9497 6.05025C14.2161 3.31658 9.78392 3.31658 7.05025 6.05025C4.31658 8.78392 4.31658 13.2161 7.05025 15.9497L12 20.8995L16.9497 15.9497ZM12 13C10.8954 13 10 12.1046 10 11C10 9.89543 10.8954 9 12 9C13.1046 9 14 9.89543 14 11C14 12.1046 13.1046 13 12 13Z\" fill=\"currentColor\"></path>\n                  </svg>\n              </span>\n              <input {...getInputProps({ placeholder: \"Type address\" })} className={`form-control form-control-lg fw-bolder px-9 ${props.error?'is-invalid':''}`}  autoComplete=\"off\"/>\n              {spinnerActive ? <div className=\"spinner spinner-gray\" style={{top:-22}}></div> : null}\n              {list && address.length > 0 ?\n                <Dropdown className={`w-100`} show>\n                  <Dropdown.Menu className=\"w-100\">\n                      <PerfectScrollbar options={ { wheelPropagation: false } }>\n                        {suggestions.map(suggestion => {\n                          return (<Dropdown.Item className=\"text-break\" {...getSuggestionItemProps(suggestion)} onClick={() => { handleSelect1(suggestion.description, suggestion.placeId); handleSelect(suggestion.description) }} style={{whiteSpace:'normal'}}> {suggestion.description}</Dropdown.Item>);\n                        })}\n                      </PerfectScrollbar>\n                  </Dropdown.Menu>\n                </Dropdown>\n                : ''}\n            </div>\n        )}\n      </PlacesAutocomplete>\n  );\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab, Dropdown } from \"react-bootstrap\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { capitalizeFirstLetter, debounce } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport HttpClient from '../../../../Services/http-client';\nimport SearchPlace from '../Elements/SearchPlace';\nimport { AUTOCOMPLETE } from '../../../../Services/Api';\n\n\n\nclass Yelp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            businessUrlError: false,\n            businessUrl: '',\n            location: '',\n            locationError: false,\n            keyword: '',\n            keywordError: false,\n            keywordList: [],\n            slug: null,\n            latlng: \"\",\n            moderation: false,\n            isSelectedFromList: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    autoComplete = debounce((e) => {\n        new HttpClient()\n            .post(`${AUTOCOMPLETE}`, {\n                networkId: this.props.networkId,\n                handle: e.target.value,\n                Latlng: this.state.latlng\n            })\n            .then((response) => {\n                const result = response.data;\n                if (result.response_code === 200) {\n                    this.setState({ keywordList: result.responseData });\n                }\n            }).catch((ex) => {\n\n            })\n    });\n\n    handleOnChange = (e) => {\n        if (e.target.name === \"location\") {\n            this.locationApiCall(e);\n        } else if (e.target.name === \"keyword\") {\n            this.autoComplete(e);\n        }\n        this.setState((perv) => ({ ...perv, [e.target.name]: e.target.value, businessUrlError: false, isSelectedFromList: false, keywordError: false }));\n    }\n\n    keywordSelected = (item) => {\n        this.setState((prev) => ({ ...prev, keyword: item.data_handle_playlistName, isSelectedFromList: true, keywordList: [], slug: item.data_slug_alias }));\n    }\n\n    onTextFieldChange = (value) => this.setState((prev) => ({ ...prev, location: value, locationError: false }));\n    onLatlanChange = (value) => this.setState((prev) => ({ ...prev, latlng: value }));\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    onSubmit = () => {\n        const { businessUrl, location, keyword, selectedFilterId, selectedFilterTab, moderation, isSelectedFromList, slug } = this.state;\n        const { collection, networkId } = this.props;\n\n        if ((businessUrl == '' && selectedFilterTab === \"Business Page\")) {\n            this.setState({ businessUrlError: true });\n        } else if (location == '' && selectedFilterTab === \"Business Name\") {\n            this.setState({ locationError: true });\n        } else if (keyword == '' && selectedFilterTab === \"Business Name\") {\n            this.setState({ keywordError: true });\n        } else {\n            if (!isSelectedFromList && selectedFilterTab === \"Business Name\") {\n                this.setState({ keywordError: true });\n                return;\n            }\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                businessPageUrl27: businessUrl,\n                businessName28: location,\n                businessKeywordfield28: keyword,\n                businessKeyword28: slug,\n                moderation: 0\n            }\n\n            if (selectedFilterId === 27) {\n                obj['businessName28'] = '';\n                obj['businessKeywordfield28'] = '';\n                obj['businessKeyword28'] = '';\n            } else if (selectedFilterId === 28) {\n                obj['businessPageUrl27'] = '';\n            }\n\n            this.setState({ businessUrlError: false, locationError: false, keywordError: false, loading: true })\n\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                this.props.history('/assets');\n            });\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 27: // flag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M21.1384 3C21.4146 3 21.6385 3.22386 21.6385 3.5C21.6385 3.58701 21.6157 3.67252 21.5725 3.74807L18 10L21.5725 16.2519C21.7095 16.4917 21.6262 16.7971 21.3865 16.9341C21.3109 16.9773 21.2254 17 21.1384 17H4V22H2V3H21.1384ZM18.5536 5H4V15H18.5536L15.6965 10L18.5536 5Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 30: // Text\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13 6V21H11V6H5V4H19V6H13Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 28: // Store\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M21 13.2422V20H22V22H2V20H3V13.2422C1.79401 12.435 1 11.0602 1 9.5C1 8.67286 1.22443 7.87621 1.63322 7.19746L4.3453 2.5C4.52393 2.1906 4.85406 2 5.21132 2H18.7887C19.1459 2 19.4761 2.1906 19.6547 2.5L22.3575 7.18172C22.7756 7.87621 23 8.67286 23 9.5C23 11.0602 22.206 12.435 21 13.2422ZM19 13.9725C18.8358 13.9907 18.669 14 18.5 14C17.2409 14 16.0789 13.478 15.25 12.6132C14.4211 13.478 13.2591 14 12 14C10.7409 14 9.5789 13.478 8.75 12.6132C7.9211 13.478 6.75911 14 5.5 14C5.331 14 5.16417 13.9907 5 13.9725V20H19V13.9725ZM5.78865 4L3.35598 8.21321C3.12409 8.59843 3 9.0389 3 9.5C3 10.8807 4.11929 12 5.5 12C6.53096 12 7.44467 11.3703 7.82179 10.4295C8.1574 9.59223 9.3426 9.59223 9.67821 10.4295C10.0553 11.3703 10.969 12 12 12C13.031 12 13.9447 11.3703 14.3218 10.4295C14.6574 9.59223 15.8426 9.59223 16.1782 10.4295C16.5553 11.3703 17.469 12 18.5 12C19.8807 12 21 10.8807 21 9.5C21 9.0389 20.8759 8.59843 20.6347 8.19746L18.2113 4H5.78865Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { businessUrl, businessUrlError, keyword, moderation, keywordList, keywordError, locationError, loading, selectedFilterTab } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\n                                            const { feedName, feedtype, filter } = filterTab;\n                                            return <Nav.Item className=\"p-1\" key={index}>\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                        {this.feedIcon(filter)}\n                                                    </span>\n                                                    {capitalizeFirstLetter(feedtype)}\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        })}\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Business Page\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100 mb-3\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(27)}\n                                                        </span>\n                                                        <InputField name={\"businessUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${businessUrlError ? 'is-invalid' : ''}`} placeholder=\"Enter Business Page Url\" value={businessUrl} onChangeHandler={this.handleOnChange} />\n                                                        {businessUrlError && <span className=\"invalid-feedback\">Please enter Business Page Url</span>}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Business Name\"}>\n                                                <div className=\"row gx-3\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"mb-2 mb-xl-3\">\n                                                            <span className={`mb-2 mb-xl-3 ${locationError ? 'is-invalid' : ''}`}>\n                                                                <SearchPlace onLatlanChange={this.onLatlanChange} onFieldTextChange={this.onTextFieldChange} error={locationError} />\n                                                            </span>\n                                                            {locationError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"mb-2 mb-xl-3\">\n                                                            <Dropdown className={`w-100 ${keywordError ? 'is-invalid' : ''}`} autoClose=\"outside\">\n                                                                <Dropdown.Toggle variant='' className=\"p-0 w-100 arrow_disabled position-relative\">\n                                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                                        {this.feedIcon(30)}\n                                                                    </span>\n                                                                    <InputField name={\"keyword\"} className={`form-control form-control-lg fw-bolder px-9`} placeholder=\"Enter Keyword\" value={keyword} onChangeHandler={this.handleOnChange} autoComplete={true} />\n                                                                </Dropdown.Toggle>\n                                                                {(keywordList && keywordList.length > 0) &&\n                                                                    <Dropdown.Menu className=\"w-100\">\n                                                                        <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                                                            <div className=\"feedDropdown\">\n                                                                                {keywordList.map((item) => <Dropdown.Item className=\"w-100\" onClick={() => this.keywordSelected(item)}>\n                                                                                    <div className=\"d-flex algin-items-center\">\n                                                                                        <img className=\"h-30px w-30px object-center-cover rounded-1 me-1\" src={item.image_url} height={30} width={30} alt={item.data_handle_playlistName} />\n                                                                                        <div className=\"d-flex flex-column justify-content-start\">\n                                                                                            <p className=\"fw-bold fs-8 mb-0\">{item.data_handle_playlistName}</p>\n                                                                                            <span className=\"fs-10 mb-0\">{item.url}</span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </Dropdown.Item>\n                                                                                )}\n                                                                            </div>\n                                                                        </PerfectScrollbar>\n                                                                    </Dropdown.Menu>}\n                                                            </Dropdown>\n                                                            {keywordError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                                            <div className=\"wrap_yelp_sugg\"> </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Yelp)","import { Component } from \"react\";\n\nclass InfoSection extends Component {\n    render() {\n        const { text } = this.props;\n        return <div className=\"d-flex alert alert-info\">\n                    <span className=\"svg-icon svg-icon-1 svg-icon-info me-2\">\n                        <svg className=\"w-30px h-30px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <rect opacity=\"0.3\" x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"10\" fill=\"currentColor\"></rect>\n                            <rect x=\"11\" y=\"14\" width=\"7\" height=\"2\" rx=\"1\" transform=\"rotate(-90 11 14)\" fill=\"currentColor\"></rect>\n                            <rect x=\"11\" y=\"17\" width=\"2\" height=\"2\" rx=\"1\" transform=\"rotate(-90 11 17)\" fill=\"currentColor\"></rect>\n                        </svg>\n                    </span>\n                    <div className=\"d-flex justify-content-center align-items-start flex-column flex-grow-1\">\n                        <p className=\"mb-0\">{text}</p>\n                    </div>\n                </div>\n    }\n}\n\nexport default InfoSection;","import React, { Component } from 'react'\nimport Uppy from '@uppy/core';\nimport { DragDrop } from '@uppy/react'\nimport Transloadit from '@uppy/transloadit';\nimport { toast } from 'react-toastify';\nimport { MEDIA_PATH } from '../../../../../Services/Api';\n\n\n\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\nconst uppyBucket = 'cloud.taggbox.com';\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\n\n\nclass BulkDropzone extends Component {\n    constructor(props) {\n        super(props);\n\n        this.uppyOne = new Uppy({\n            debug: true, autoProceed: true, restrictions: {\n                maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['.csv'],\n            }\n        }).use(Transloadit, {\n            target: '#a',\n            params: {\n                auth: {\n                    key: uppyKey\n                },\n                steps: {\n                    store: {\n                        robot: \"/wasabi/store\",\n                        bucket_region: \"us-west-1\",\n                        bucket: uppyBucket,\n                        key: uppyAwsKey,\n                        secret: uppyAwsSecret,\n                        path: 'postimage/${file.id}'\n                    },\n                }\n            },\n            waitForEncoding: true\n        });\n    }\n\n\n    componentDidMount() {\n        this.uppyOne.on('transloadit:result', (stepName, result) => {\n            this.props.onUploadSuccess(result.original_name, result.url);\n            this.uppyOne.cancelAll()\n        });\n        this.uppyOne.on(\"restriction-failed\", (file, error) => {\n\n            let fileType = file.type.split('/');\n\n            if (fileType[0] != 'csv') {\n                toast.error(\"You can only upload csv File\",{autoClose:3000});\n                return false\n            }\n\n\n            if (file.size > 5000000) {\n                toast.error(\"Maximum allowed size of 4.8 MB\",{autoClose:3000});\n                return false\n            }\n\n        });\n    }\n\n    componentWillUnmount() {\n        this.uppyOne.cancelAll()\n        this.uppyOne.close({ reason: 'unmount' })\n    }\n\n    render() {\n        const { fileName } = this.props;\n\n        return <div className=\"bulkURL-box mb-2\">\n            <DragDrop\n                proudlyDisplayPoweredByUppy={false}\n                hideUploadButton={false}\n                showProgressDetails={false}\n                disableThumbnailGenerator={false}\n                height={150}\n                width={'100%'}\n                showSelectedFiles={true}\n                showRemoveButtonAfterComplete={false}\n                disableInformer={true}\n                uppy={this.uppyOne}\n            />\n            <div className=\"selected-file\">\n                {fileName}\n            </div>\n        </div>\n\n    }\n}\n\n\nexport default BulkDropzone","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport InputField from '../Elements/InputField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { toast } from 'react-toastify';\nimport InfoSection from '../Elements/InfoSection';\nimport BulkDropzone from './components/BulkDropzone';\n\n\nclass LinkedIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            postUrl: \"\",\n            handle: \"\",\n            moderation: false,\n            imageUrl: null,\n            fileName: 'Your selected file name',\n            error: false,\n            handleError: false,\n            loading: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onUploadSuccess = (fileName, url) => {\n        this.setState({ imageUrl: url, fileName: fileName });\n    };\n\n    onSubmit = () => {\n        const { postUrl, imageUrl, moderation, selectedFilterTab, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n\n        if (selectedFilterTab == 'Post Url' && postUrl == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Bulk URLs' && imageUrl == null) {\n            toast.error(\"Please upload a Csv File\", { autoClose: 3000 });\n        }\n        else {\n            var collectionId = []\n            if (collection && collection.length > 0) {\n                collection.map((iCollection) => {\n                    collectionId.push(iCollection.value)\n                })\n            }\n            const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n            var obj = {\n                ...isCollection,\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0\n            }\n            if (selectedFilterId == 16) {\n                obj['field'] = postUrl\n            } else if (selectedFilterId == 18) {\n                obj['field'] = imageUrl\n            }\n\n            this.setState({ error: false, loading: true })\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                this.props.history('/assets');\n            });\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 16: // Link\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 18: // Links\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13.0605 8.11073L14.4747 9.52494C17.2084 12.2586 17.2084 16.6908 14.4747 19.4244L14.1211 19.778C11.3875 22.5117 6.95531 22.5117 4.22164 19.778C1.48797 17.0443 1.48797 12.6122 4.22164 9.87849L5.63585 11.2927C3.68323 13.2453 3.68323 16.4112 5.63585 18.3638C7.58847 20.3164 10.7543 20.3164 12.7069 18.3638L13.0605 18.0102C15.0131 16.0576 15.0131 12.8918 13.0605 10.9392L11.6463 9.52494L13.0605 8.11073ZM19.778 14.1211L18.3638 12.7069C20.3164 10.7543 20.3164 7.58847 18.3638 5.63585C16.4112 3.68323 13.2453 3.68323 11.2927 5.63585L10.9392 5.98941C8.98653 7.94203 8.98653 11.1079 10.9392 13.0605L12.3534 14.4747L10.9392 15.8889L9.52494 14.4747C6.79127 11.741 6.79127 7.30886 9.52494 4.57519L9.87849 4.22164C12.6122 1.48797 17.0443 1.48797 19.778 4.22164C22.5117 6.95531 22.5117 11.3875 19.778 14.1211Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs } = this.props;\n        const { postUrl, fileName, moderation, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Post Url\"}>\n                                                <div className=\"position-relative w-100 mb-3\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(16)}\n                                                    </span>\n                                                    <InputField name={\"postUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter LinkedIn Post Url\" value={postUrl} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                <InfoSection text={\"LinkedIn auto update is not available due to changes made by LinkedIn in MDP API Recently. However, we are providing a solution for this condition you can simply add a post URL from your company page one by one manually and display your LinkedIn post on your website.\"} />\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Bulk URLs\"}>\n                                                <BulkDropzone onUploadSuccess={this.onUploadSuccess} fileName={fileName} />\n                                                <div className=\"d-flex w-100 justify-content-end mb-3\">\n                                                    <span className=\"text-right fw-medium\">\n                                                        Download the\n                                                        <a href={baseUrl('media/downloads/csv-sample.csv')} target='_blank' className=\"text-decoration-underline mx-1 fw-semibold\" download>Sample CSV template</a>\n                                                        to see an example of the format required\n                                                    </span>\n                                                </div>\n                                                <InfoSection text={\"You can upload 50 urls at one time.\"} />\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkedIn)","import React, { Component } from 'react'\nimport SearchPlace from '../../Elements/SearchPlace';\nimport CheckBoxField from '../../Elements/CheckboxField'\nimport InputField from '../../Elements/InputField';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\nimport { youtubeAutoComplete } from '../../../../../Services/Actions/addFeedAction';\nimport { debounce } from '../../../../../Services/Utils/utils';\n\n\nexport default class YoutubeTabs extends Component {\n\n    state = {\n        list: [],\n        spinnerActive: false\n    }\n\n    autoComplete = debounce((query, type) => youtubeAutoComplete(query, type).then(res => {\n        const { data } = res\n        if (data && Object.keys(data).length > 0) {\n            this.setState({ list: data.items })\n        }\n    }))\n\n\n    onYoutubeChange = query => {\n        const { onValueChange, tab } = this.props\n        this.setState({ spinnerActive: true })\n        if ([\"Play List\", \"Channel Url\", \"Shorts\"].includes(tab)) {\n            try {\n                const type = tab == \"Play List\" ? \"playlist\" : \"channel\"\n                onValueChange(query);\n                this.autoComplete(query, type);\n                this.setState({ spinnerActive: false })\n            } catch (error) {\n\n                this.setState({ spinnerActive: false })\n            }\n        }\n        else {\n            onValueChange(query);\n            this.setState({ spinnerActive: false })\n        }\n    }\n\n    onListClick = (item) => {\n        try {\n            const { onValueChange, tab, onChannelIdChange, } = this.props\n            onValueChange(tab == \"Play List\" ? item.snippet.title : item.snippet.channelTitle)\n            onChannelIdChange(`${tab == \"Play List\" ? item.id.playlistId : tab == \"Shorts\" ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`)\n            document.getElementById(`feedsfield-${tab}`).value = `https://www.youtube.com/${tab == \"Play List\" ? \"playlist?list=\" : \"channel/\"}${tab == \"Play List\" ? item.id.playlistId : tab == \"Shorts\" ? item.id.channelId.replace(\"UC\", \"UUSH\") : item.id.channelId}`\n            this.setState({ list: [] })\n        } catch (error) {\n\n        }\n    }\n\n    render() {\n        const { tab, onValueChange, checkBox, onCheckBoxChange, onKeywordChange, keyword, error, onLatlanChange, shortError, playListError, keywordError, locationError, locationKeywordError, filter, feedIcon } = this.props\n        const { list, spinnerActive } = this.state\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div class={`col-md-${tab == \"Location\" ? '6' : '12'}`}>\n                        <div className=\"mb-3\">\n                            {tab == \"Location\" ?\n                                <SearchPlace onFieldTextChange={onValueChange} onLatlanChange={onLatlanChange} error={(tab == \"Location\" && locationError)} />\n                                :\n                                <Dropdown className={`w-100 ${(tab == \"Channel Url\" && error) || (tab == \"Shorts\" && shortError) || (tab == \"Play List\" && playListError) || (tab == \"Keywords\" && keywordError) || (tab == \"Location\" && locationError) ? 'is-invalid' : ''}`} autoClose=\"outside\">\n                                    <Dropdown.Toggle variant='' className=\"p-0 w-100 arrow_disabled position-relative\">\n                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                            {feedIcon(filter)}\n                                        </span>\n                                        <input placeholder={`${tab == \"Location\" ? \"\" : \"Enter\"} ${tab == \"Shorts\" || tab == \"Channel Url\" ? \"channel url\" : tab == \"Play List\" ? \"Play List ID\" : tab == \"Keywords\" ? \"keyword\" : \"\"}`} className={`form-control form-control-lg fw-bolder px-9`} id={`feedsfield-${tab}`} type=\"text\" onChange={e => this.onYoutubeChange(e.target.value)} />\n                                        {spinnerActive ? <div className=\"spinner\" style={{ top: -22 }}></div> : null}\n                                    </Dropdown.Toggle>\n                                    {list && list.length ?\n                                        <Dropdown.Menu className=\"w-100\">\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                                <div className=\"feedDropdown\">\n                                                    {list.map(item => (\n                                                        <Dropdown.Item onClick={() => this.onListClick(item)}>\n                                                            <div className=\"d-flex algin-items-center\">\n                                                                <img className=\"h-30px w-30px object-center-cover rounded-1 me-1\" src={item.snippet.thumbnails.default.url} />\n                                                                <div className=\"d-flex flex-column justify-content-start\">\n                                                                    <p className=\"fw-bold fs-8 mb-0\">{item.snippet.channelTitle}</p>\n                                                                    <span className=\"fs-10 mb-0\">{`https://www.youtube.com/${tab == \"Play List\" ? \"playlist?list=\" : \"channel/\"}${tab == \"Play List\" ? item.id.playlistId : item.id.channelId}`}</span>\n                                                                </div>\n                                                            </div>\n                                                        </Dropdown.Item>\n                                                    ))}\n                                                </div>\n                                            </PerfectScrollbar>\n                                        </Dropdown.Menu>\n                                        : null}\n                                </Dropdown>\n                            }\n                            {(tab == \"Channel Url\" && error) || (tab == \"Shorts\" && shortError) || (tab == \"Play List\" && playListError) || (tab == \"Keywords\" && keywordError) || (tab == \"Location\" && locationError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                        </div>\n                    </div>\n                    {tab == \"Location\" ?\n                        <div className=\"col-md-6\">\n                            <div className=\"position-relative mb-3\">\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                    {feedIcon(4)}\n                                </span>\n                                <InputField name={\"keyword\"} className={`form-control form-control-lg fw-bolder px-9 ${(tab == \"Location\" && locationKeywordError) ? 'is-invalid' : ''}`} placeholder=\"Enter keywords\" value={keyword} onChangeHandler={(e) => onKeywordChange(e.target.value)} />\n                            </div>\n                            {(tab == \"Location\" && locationKeywordError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                        </div>\n                        : null\n                    }\n\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter } from '../../../../Services/Utils/utils';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { createFeed, createFeedAction, createPost } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { toast } from 'react-toastify';\nimport YoutubeTabs from './components/YoutubeTabs';\n\n\n\nclass YoutubeFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textField: \"\",\n            moderation: false,\n            keyword: \"\",\n            error: false,\n            shortError: false,\n            playListError: false,\n            keywordError: false,\n            locationError: false,\n            locationKeywordError: false,\n            channelId: \"\",\n            latlng: \"\",\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    onTextFieldChange = (value) => this.setState({ textField: value, error: false, shortError: false, keywordError: false, playListError: false, keywordError: false })\n    onManuallyApproveChange = (value) => this.setState({ moderation: value })\n    onKeywordChange = (value) => this.setState({ keyword: value, locationKeywordError: false })\n    onChannelIdChange = (value) => this.setState({ channelId: value })\n    onLatlanChange = (value) => this.setState({ latlng: value, locationError: false })\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    clearValues = (filter, feedtype) => {\n        this.onTextFieldChange('')\n        this.onChannelIdChange(\"\");\n        this.changeTab(filter, feedtype);\n    }\n\n    onSubmit = () => {\n        const { textField, channelId, moderation, keyword, latlng, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n        if (selectedFilterId == 1 && textField == \"\") {\n            this.setState({ error: true })\n        } else if (selectedFilterId == 75 && textField == '') {\n            this.setState({ shortError: true })\n        } else if (selectedFilterId == 11 && textField == '') {\n            this.setState({ playListError: true })\n        } else if (selectedFilterId == 4 && textField == '') {\n            this.setState({ keywordError: true })\n        } else if (selectedFilterId == 32 && textField == '') {\n            this.setState({ locationError: true })\n        } else if (selectedFilterId == 32 && keyword == '') {\n            this.setState({ locationKeywordError: true })\n        } else {\n            var obj = {\n                collection: collection ? collection.value : '',\n                networkId: networkId,\n                filter: selectedFilterId,\n                moderation: moderation ? 1 : 0,\n                feedText: textField,\n                channelId: channelId ? channelId : \"\",\n            }\n\n            if (selectedFilterId == 4) {\n                obj['channelId'] = \"\";\n            } else if (selectedFilterId == 32) {\n                obj['channelId'] = \"\";\n                obj = { ...obj, keywords: keyword, latlng };\n            }\n\n            this.setState({ error: false, shortError: false, keywordError: false, playListError: false, keywordError: false, loading: true })\n            createFeedAction(obj, networkId, () => {\n                this.props.getAllfeeds()\n                this.setState({ loading: false });\n                this.props.closeAddFeed();\n                this.props.history('/assets');\n            });\n\n        }\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 1: // Link\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 75: // Shorts\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.259\" height=\"19.948\" viewBox=\"0 0 15.259 19.948\">\n                    <path id=\"Path_3\" data-name=\"Path 3\" d=\"M.549,17.631a4.369,4.369,0,0,1,1.49-5.75,3.972,3.972,0,0,1-1.932-2.7A4.248,4.248,0,0,1,2.164,4.365c1.65-.986,3.338-1.95,4.972-2.883q.815-.467,1.633-.935A4.192,4.192,0,0,1,10.838,0a4.48,4.48,0,0,1,2.849,1.037A4.274,4.274,0,0,1,15.21,3.763a4.374,4.374,0,0,1-2.037,4.355,4.369,4.369,0,0,1,.471,7.115l-.007.006a7.809,7.809,0,0,1-1.117.718c-.1.058-.205.115-.306.175-1.575.917-3.647,2.12-5.711,3.288l-.014.007a4.384,4.384,0,0,1-5.941-1.8ZM9.513,1.85q-.815.468-1.634.935C6.252,3.713,4.57,4.674,2.935,5.651A2.742,2.742,0,0,0,1.586,8.93a2.552,2.552,0,0,0,1.373,1.754c.282.158.571.325.964.558L5,11.883l-1.079.647c-.375.226-.717.428-1.088.621a2.884,2.884,0,0,0,1.588,5.3,2.817,2.817,0,0,0,1.345-.339c2.054-1.162,4.118-2.36,5.686-3.274.107-.063.217-.124.326-.185a6.555,6.555,0,0,0,.9-.573,2.872,2.872,0,0,0,1.06-2.485,2.928,2.928,0,0,0-1.528-2.3c-.163-.093-.316-.184-.478-.282-.133-.081-.272-.165-.419-.248l-1.09-.629,1.072-.66c.3-.184.606-.365.939-.553l.012-.007a2.87,2.87,0,0,0,1.471-2.938l0-.013a2.773,2.773,0,0,0-.995-1.774A2.977,2.977,0,0,0,10.838,1.5,2.641,2.641,0,0,0,9.513,1.85ZM5.586,6.735,11.248,10,5.586,13.28ZM6.8,11.171,8.819,10,6.8,8.839Z\" fill=\"currentColor\" />\n                </svg>\n                break;\n            case 11: // Play List\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 18V20H2V18H22ZM2 3.5L10 8.5L2 13.5V3.5ZM22 11V13H12V11H22ZM4 7.1085V9.8915L6.22641 8.5L4 7.1085ZM22 4V6H12V4H22Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 4: // Keyword\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13 6V21H11V6H5V4H19V6H13Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 32: // Location\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 23.7279L5.63604 17.364C2.12132 13.8492 2.12132 8.15076 5.63604 4.63604C9.15076 1.12132 14.8492 1.12132 18.364 4.63604C21.8787 8.15076 21.8787 13.8492 18.364 17.364L12 23.7279ZM16.9497 15.9497C19.6834 13.2161 19.6834 8.78392 16.9497 6.05025C14.2161 3.31658 9.78392 3.31658 7.05025 6.05025C4.31658 8.78392 4.31658 13.2161 7.05025 15.9497L12 20.8995L16.9497 15.9497ZM12 13C10.8954 13 10 12.1046 10 11C10 9.89543 10.8954 9 12 9C13.1046 9 14 9.89543 14 11C14 12.1046 13.1046 13 12 13Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { filterTabs } = this.props;\n        const { textField, shortError, playListError, keywordError, locationError, locationKeywordError, channelId, moderation, keyword, error, loading, selectedFilterTab } = this.state\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.clearValues(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => <Tab.Pane eventKey={filter.feedtype} key={filter.feedtype}>\n                                                <YoutubeTabs tab={filter.feedtype} error={error} onLatlanChange={this.onLatlanChange} value={textField} feedIcon={this.feedIcon} onValueChange={this.onTextFieldChange} checkBox={moderation} onCheckBoxChange={this.onCheckHandler} onKeywordChange={this.onKeywordChange} onChannelIdChange={this.onChannelIdChange} channelId={channelId} keyword={keyword} shortError={shortError} playListError={playListError} keywordError={keywordError} locationError={locationError} locationKeywordError={locationKeywordError} filter={filter.filter} />\n                                            </Tab.Pane>\n                                            ) : null}\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YoutubeFeed)","import React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { disconnectUser, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\nimport ProfileImage from \"../../CommonComponents/ProfileImage/ProfileImage\";\n\nclass AccountPicker extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedAccount: props.connectedAcc[0],\n            accounts: []\n        }\n    }\n\n    componentDidMount() {\n        const { selectAccount, personalAccount, personal, connectedAcc } = this.props\n        setTimeout(() => {\n            if (connectedAcc && connectedAcc.length) {\n                this.props.onConnectedAccountChange(this.props.connectedAcc[0].ConnectedAccounts.id);\n                selectAccount(this.props.connectedAcc[0].ConnectedAccounts.id)\n                this.setState({ accounts: personal ? personalAccount : connectedAcc, selectedAccount: personal ? personalAccount[0] : connectedAcc[0] })\n            }\n        }, 500);\n    }\n\n\n    disconnectAccount = (account) => {\n        const {accounts} = this.state;\n         \n       this.props.disconnectAccount(account.ConnectedAccounts.id,()=>{\n        if( accounts.length-1 >= 1){\n            const updateAccountsList = accounts.filter(acc=>acc.ConnectedAccounts.id !== account.ConnectedAccounts.id);\n            this.props.onConnectedAccountChange(updateAccountsList[0].ConnectedAccounts.id);\n            this.props.selectAccount(updateAccountsList[0].ConnectedAccounts.id);\n            this.setState({ accounts: updateAccountsList,selectedAccount:updateAccountsList[0] })\n        }else{\n            this.props.selectAccount(null);\n            this.props.onConnectedAccountChange(null);\n        }\n       });\n        \n    }\n\n    deleteAccount = (account) => {\n        Swal.fire({\n            title: '<strong>Confirm</strong>',\n            icon: 'warning',\n            text:\n                'Do you want to disconnect account?',\n            showCloseButton: true,\n            showCancelButton: true,\n            focusConfirm: true,\n            confirmButtonText:\n                'Yes',\n            confirmButtonAriaLabel: 'Yes',\n            cancelButtonAriaLabel: 'Thumbs down'\n        }).then((result) => {\n            if (result.value) {\n                this.disconnectAccount(account)\n            }\n            else if (result.dismiss === \"cancel\") { }\n        })\n    }\n\n    onAccountChange = (id) => {\n        this.props.selectAccount(id ? id : null)\n        this.props.onConnectedAccountChange(id);\n        if(!id){\n            this.setState({ selectedAccount: null });\n        }\n    }\n\n    render() {\n\n        const { selectedAccount, accounts } = this.state\n        return (\n            <>\n                {(accounts && accounts.length>0 ) ? <Dropdown className=\"w-100 mb-3\">\n                    <Dropdown.Toggle variant=\"none\" className=\"d-flex align-items-center btn btn-sm btn-outline-secondary w-100 justify-content-between\">\n                        {\n                        selectedAccount ?\n                        <div className=\"d-flex align-items-center flex-grow-1\" style={{width:'calc(100% - 70px)'}}>\n                            <ProfileImage className={'symbol symbol-28 symbol-circle bg-light flex-shrink-0 me-2'} \n                                imageSize={28} \n                                symbolClass={'symbol-label text-light-alt fw-bold text-uppercase fs-8'} \n                                name={selectedAccount.ConnectedAccounts.accountName} profileUrl={selectedAccount.ConnectedAccounts.profilePicture} networkId={selectedAccount.Network.id} />\n                            <div className=\"overflow-hidden w-100\">\n                                <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">{selectedAccount.ConnectedAccounts.accountName}</p>\n                            </div>\n                        </div>\n                        \n                        :\n                        <div className=\"d-flex align-items-center flex-grow-1\">\n                            <span className=\"svg-icon text-gray-500 me-2\">\n                                <svg className=\"h-30px w-30px\" xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70.06\" viewBox=\"0 0 70 70.06\">\n                                    <path id=\"Path_6644\" data-name=\"Path 6644\" d=\"M63.917,59.371a35.025,35.025,0,1,0-53.788-.006l-.045.049c.175.21.375.39.555.6.225.258.468.5.7.751.7.761,1.421,1.491,2.177,2.177.23.21.468.405.7.605.8.69,1.624,1.346,2.477,1.956.11.075.21.173.32.25v-.03a34.777,34.777,0,0,0,40.029,0v.03c.11-.078.208-.175.32-.25q1.276-.919,2.477-1.956c.233-.2.47-.4.7-.605.756-.688,1.476-1.416,2.177-2.177.233-.25.473-.493.7-.751.178-.208.38-.388.555-.6ZM37.025,17.016A11.258,11.258,0,1,1,25.767,28.274,11.258,11.258,0,0,1,37.025,17.016Zm-20,42.355A12.5,12.5,0,0,1,29.52,47.037H44.53A12.5,12.5,0,0,1,57.022,59.371,29.871,29.871,0,0,1,17.028,59.371Z\" transform=\"translate(-2 -1.997)\" fill=\"currentColor\"></path>\n                                </svg>\n                            </span>\n                            <div className=\"overflow-hidden w-100\">\n                                <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">Add Another Account</p>\n                            </div>\n                        </div>\n                        }\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu className=\"w-100 navi flex-column navi-hover py-2 connectedAllAccounts\">\n                        <div className=\"fs-7 px-3 py-2 fw-semibold text-gray-500\">Select Account:</div>\n                        {accounts && accounts.length ? accounts.map(acc => (\n                        <Dropdown.Item className=\"justify-content-between\" key={acc.ConnectedAccounts.accountId} onClick={() => { this.setState({ selectedAccount: acc }, () => this.onAccountChange(acc.ConnectedAccounts.id)) }}>\n                            <div className=\"d-flex align-items-center flex-grow-1\" style={{width:'calc(100% - 70px)'}}>\n                                    <ProfileImage className={'symbol symbol-28 symbol-circle bg-light flex-shrink-0 me-2'} \n                                    imageSize={28} \n                                    symbolClass={'symbol-label text-light-alt fw-bold text-uppercase fs-8'} \n                                    name={acc.ConnectedAccounts.accountName} profileUrl={acc.ConnectedAccounts.profilePicture} networkId={acc.Network.id} />\n                                <div className=\"overflow-hidden w-100\">\n                                    <p className=\"fw-medium mb-0 text-ellipsis fs-8 text-start\">{acc.ConnectedAccounts.accountName}</p>\n                                </div>\n                            </div>\n                            <button type=\"button\" className=\"btn btn-sm btn-danger fs-10 py-1\" onClick={() => this.deleteAccount(acc)}>Disconnect</button>\n                        </Dropdown.Item>\n                        ))\n                            : null\n                        }\n                        <Dropdown.Item className=\"align-items-center justify-content-between\" onClick={() => this.onAccountChange()}>\n                            <div className=\"d-flex align-items-center justify-content-start\">\n                                <span className=\"svg-icon svg-icon-1 text-gray-500 me-2\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70.06\" viewBox=\"0 0 70 70.06\">\n                                        <path id=\"Path_6644\" data-name=\"Path 6644\" d=\"M63.917,59.371a35.025,35.025,0,1,0-53.788-.006l-.045.049c.175.21.375.39.555.6.225.258.468.5.7.751.7.761,1.421,1.491,2.177,2.177.23.21.468.405.7.605.8.69,1.624,1.346,2.477,1.956.11.075.21.173.32.25v-.03a34.777,34.777,0,0,0,40.029,0v.03c.11-.078.208-.175.32-.25q1.276-.919,2.477-1.956c.233-.2.47-.4.7-.605.756-.688,1.476-1.416,2.177-2.177.233-.25.473-.493.7-.751.178-.208.38-.388.555-.6ZM37.025,17.016A11.258,11.258,0,1,1,25.767,28.274,11.258,11.258,0,0,1,37.025,17.016Zm-20,42.355A12.5,12.5,0,0,1,29.52,47.037H44.53A12.5,12.5,0,0,1,57.022,59.371,29.871,29.871,0,0,1,17.028,59.371Z\" transform=\"translate(-2 -1.997)\" fill=\"currentColor\"></path>\n                                    </svg>\n                                </span>\n                                <div className=\"fw-medium fs-8 text-dark\">Add Another Account</div>\n                            </div>\n                            <span className=\"svg-icon svg-icon-3 text-gray-500\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\" viewBox=\"0 0 70 70\">\n                                    <path id=\"Path_6645\" data-name=\"Path 6645\" d=\"M59,24A35,35,0,1,0,94,59,35,35,0,0,0,59,24Zm0,64.615A29.615,29.615,0,1,1,88.615,59,29.615,29.615,0,0,1,59,88.615ZM75.154,59a2.692,2.692,0,0,1-2.692,2.692H61.692V72.462a2.692,2.692,0,0,1-5.385,0V61.692H45.538a2.692,2.692,0,1,1,0-5.385H56.308V45.538a2.692,2.692,0,0,1,5.385,0V56.308H72.462A2.692,2.692,0,0,1,75.154,59Z\" transform=\"translate(-24 -24)\" fill=\"currentColor\"></path>\n                                </svg>\n                            </span>\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                    :\n                    null\n                }\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n        disconnectAccount:(accountId,callback)=>dispatch(disconnectUser(accountId,callback))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPicker)","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport AccountPicker from '../Elements/AccountPicker';\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass YammerFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            groupId: \"\",\n            topicId: \"\",\n            moderation: false,\n            error: false,\n            topicError: false,\n            loading: false,\n            account: null,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, topicError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onConnectedAccountChange = (value) => this.setState({ account: value })\n\n    addYammerAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = (connectAccountId) => {\n        const { groupId, topicId, moderation, selectedFilterId } = this.state;\n        const { collection, networkId, accountId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            connetedAccount: 0,\n            account: connectAccountId ? connectAccountId : accountId\n        }\n        if (selectedFilterId == 53) {\n            obj['field'] = groupId\n        } else if (selectedFilterId == 54) {\n            obj['field'] = topicId\n        }\n\n        this.setState({ error: false, topicError: false, loading: true })\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            this.props.history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { groupId, topicId, selectedFilterTab } = this.state;\n        const { accountId } = this.props;\n\n\n        if (selectedFilterTab == 'group ID' && groupId == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'topic ID' && topicId == '') {\n            this.setState({ topicError: true });\n        }\n        else {\n\n            if (accountId == null) {\n                this.addYammerAccount();\n                return;\n            }\n\n            this.createFeed();\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId), 0);\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 53: // Group\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M2 22C2 17.5817 5.58172 14 10 14C14.4183 14 18 17.5817 18 22H16C16 18.6863 13.3137 16 10 16C6.68629 16 4 18.6863 4 22H2ZM10 13C6.685 13 4 10.315 4 7C4 3.685 6.685 1 10 1C13.315 1 16 3.685 16 7C16 10.315 13.315 13 10 13ZM10 11C12.21 11 14 9.21 14 7C14 4.79 12.21 3 10 3C7.79 3 6 4.79 6 7C6 9.21 7.79 11 10 11ZM18.2837 14.7028C21.0644 15.9561 23 18.752 23 22H21C21 19.564 19.5483 17.4671 17.4628 16.5271L18.2837 14.7028ZM17.5962 3.41321C19.5944 4.23703 21 6.20361 21 8.5C21 11.3702 18.8042 13.7252 16 13.9776V11.9646C17.6967 11.7222 19 10.264 19 8.5C19 7.11935 18.2016 5.92603 17.041 5.35635L17.5962 3.41321Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 54: // Chat\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.29117 20.8242L2 22L3.17581 16.7088C2.42544 15.3056 2 13.7025 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C10.2975 22 8.6944 21.5746 7.29117 20.8242ZM7.58075 18.711L8.23428 19.0605C9.38248 19.6745 10.6655 20 12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 13.3345 4.32549 14.6175 4.93949 15.7657L5.28896 16.4192L4.63416 19.3658L7.58075 18.711Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList, networkId } = this.props;\n        const { groupId, topicId, account, moderation, topicError, error, loading, selectedFilterTab } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {filterTabs && filterTabs.map((filterTab, index) => {\n                                            const { feedName, feedtype, filter } = filterTab;\n                                            return <Nav.Item className=\"p-1\" key={index}>\n                                                <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                    <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                        {this.feedIcon(filter)}\n                                                    </span>\n                                                    {capitalizeFirstLetter(feedtype)}\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        })}\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"group ID\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(53)}\n                                                        </span>\n                                                        <InputField name={\"groupId\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Yammer Group ID to fetch feed\" value={groupId} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"topic ID\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(54)}\n                                                        </span>\n                                                        <InputField name={\"topicId\"} className={`form-control form-control-lg fw-bolder px-9 ${topicError ? 'is-invalid' : ''}`} placeholder=\"Enter Yammer Topic ID to fetch feed\" value={topicId} onChangeHandler={this.onChangeHandler} />\n                                                        {topicError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(YammerFeed)","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass AccountSelect extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountList: [],\n            selectedAccount: null\n        }\n    }\n\n    componentDidMount() {\n        const { connectedAcc, onConnectedAccountChange } = this.props;\n        if (connectedAcc && connectedAcc.length > 0) {\n            let formatedOptions = connectedAcc.map(item => ({ label: item.ConnectedAccounts.accountName, value: item.ConnectedAccounts.id }));\n            if (formatedOptions && formatedOptions.length > 0) {\n                formatedOptions = [...formatedOptions, { label: 'other', value: null }];\n                onConnectedAccountChange(connectedAcc[0].ConnectedAccounts.id);\n                this.setState({ accountList: formatedOptions, selectedAccount: formatedOptions[0] });\n            }\n        }\n    }\n\n    onChangeHandler = (e) => {\n        this.props.onConnectedAccountChange(e.value);\n        this.setState({ selectedAccount: e });\n    }\n\n\n\n    render() {\n        const { selectedAccount, accountList } = this.state;\n        return <div className=\"col-md-12\">\n            <div className=\"form-group position-relative\">\n                <Select className=\"selectpicker\" options={accountList} classNamePrefix=\"selectpicker\" value={selectedAccount} onChange={(e) => this.onChangeHandler(e)} />\n            </div>\n        </div>\n    }\n}\n\n\nexport default AccountSelect\n","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport AccountPicker from '../Elements/AccountPicker';\nimport AccountSelect from './components/AccountSelect';\nimport InfoSection from '../Elements/InfoSection';\n\nconst channel = new BroadcastChannel('connect');\n\nclass TiktokFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: '',\n            hashtagPost: false,\n            postUrl: \"\",\n            moderation: false,\n            connetedAccount: null,\n            error: false,\n            loading: false,\n            selectedChildAccount: {},\n            personalAcc: {},\n            account: 0,\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n            handleError: false,\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, topicError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onConnectedAccountChange = (value) => this.setState({ account: value })\n\n    addTiktokAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n    onSelectedChildAccountChange = (value) => this.setState({ selectedChildAccount: value })\n\n    onPersonalAccChange = (value) => this.setState({ personalAcc: value })\n    createFeed = (connectAccountId) => {\n        const { postUrl, moderation, selectedFilterId, account, selectedChildAccount, personalAcc, hashtag, handle, hashtagPost } = this.state;\n        const { collection, networkId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            hashtagCaption: hashtagPost ? 1 : 0,\n            feedText: selectedFilterId == 72 ? hashtag : handle,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n\n        }\n        if (selectedFilterId == 71) {\n            obj['accountId'] = connectAccountId ? connectAccountId : account ? account : \"\"\n        }\n        else obj['accountId'] = \"\"\n\n        this.setState({ error: false, topicError: false, loading: true })\n\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            this.props.history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        // const { postUrl, selectedFilterTab, account } = this.state;\n\n        // if (selectedFilterTab == 'Personal Account' && (!account || account == 0)) {\n        //     this.addTiktokAccount();\n        // } else if (selectedFilterTab == 'Post Url' && postUrl == '') {\n        //     this.setState({ error: true });\n        // } else {\n        //     this.createFeed();\n        // }\n\n\n\n        const { hashtag, handle, selectedFilterId, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n        if ((!hashtag || hashtag == \"\") && selectedFilterId == 72) {\n            this.setState({ error: true, loading: false })\n        } else if ((!handle || handle == \"\") && selectedFilterId == 71) {\n            this.setState({ handleError: true, isLoading: false })\n        } else {\n            if ([72, 71].includes(selectedFilterId)) {\n                this.createFeed(accountId != null ? accountId : 0);\n            } else this.createFeed(null)\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\n\n    }\n\n    componentDidMount() {\n        this.getAccounts();\n        this.getPersonalAccounts();\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n    getPersonalAccounts = () => {\n        const { personalAccount, onPersonalAccChange } = this.props;\n        if (personalAccount && personalAccount.length > 0) {\n            const formatedOption = this.formatOption(personalAccount, true);\n            onPersonalAccChange(formatedOption[0]);\n            this.setState({ personalAccountList: formatedOption, allPersonalAcc: personalAccount, selectPersonal: formatedOption[0] });\n        }\n    }\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 72:\n            case 26: // Hashtag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.78428 14L8.2047 10H4V8H8.41491L8.94043 3H10.9514L10.4259 8H14.4149L14.9404 3H16.9514L16.4259 8H20V10H16.2157L15.7953 14H20V16H15.5851L15.0596 21H13.0486L13.5741 16H9.58509L9.05957 21H7.04855L7.57407 16H4V14H7.78428ZM9.7953 14H13.7843L14.2047 10H10.2157L9.7953 14Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 71:\n            case 23:\n            case 24: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1: // Account\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2ZM12.1597 16C10.1243 16 8.29182 16.8687 7.01276 18.2556C8.38039 19.3474 10.114 20 12 20C13.9695 20 15.7727 19.2883 17.1666 18.1081C15.8956 16.8074 14.1219 16 12.1597 16ZM12 4C7.58172 4 4 7.58172 4 12C4 13.8106 4.6015 15.4807 5.61557 16.8214C7.25639 15.0841 9.58144 14 12.1597 14C14.6441 14 16.8933 15.0066 18.5218 16.6342C19.4526 15.3267 20 13.7273 20 12C20 7.58172 16.4183 4 12 4ZM12 5C14.2091 5 16 6.79086 16 9C16 11.2091 14.2091 13 12 13C9.79086 13 8 11.2091 8 9C8 6.79086 9.79086 5 12 5ZM12 7C10.8954 7 10 7.89543 10 9C10 10.1046 10.8954 11 12 11C13.1046 11 14 10.1046 14 9C14 7.89543 13.1046 7 12 7Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 70: // Link\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n\n    getInfo = (tab) => {\n        switch (tab) {\n            case 'hashtag':\n                return 'TikTok only allows posts from the last 24 hours. If there are no recent posts in the 24-hour duration, then the top 50 posts will be aggregated. Also, all your upcoming posts will be aggregated. Posts collected via hashtags will not include any information of the user.';\n            case 'handle':\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\n            default:\n                break;\n        }\n    }\n\n    getAccounts = () => {\n        const { connectedAcc } = this.props\n        var allAccounts = [];\n        if (connectedAcc && connectedAcc.length > 0) {\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child];\n                }\n                else {\n                    this.setState({ allAccounts: [] })\n                }\n            })\n\n            if (allAccounts && allAccounts.length > 0) {\n                const formatedOption = this.formatOption(allAccounts, false);\n                this.onSelectedChildAccountChange(formatedOption[0]);\n                this.setState({ allAccounts, formatedList: formatedOption, allConnectAcc: connectedAcc, selectValue: formatedOption[0] });\n            }\n        } else {\n            this.onSelectedChildAccountChange(null)\n            this.setState({ allAccounts: [] })\n        }\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\n    }\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n    render() {\n        const { filterTabs, connectedAccountList, networkId, personalAccount } = this.props;\n        const { postUrl, error, loading, selectedFilterTab, handleError, hashtag, handle, hashtagPost, connetedAccount } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                                {\n                                                    selectedFilterTab == 'hashtag' || selectedFilterTab == \"handle\" ?\n                                                        <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                                            <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                                {this.feedIcon(selectedFilterTab == \"hashtag\" ? 72 : 71)}\n                                                            </span>\n                                                            <InputField name={selectedFilterTab} className={`form-control form-control-lg fw-bolder px-9 ${(selectedFilterTab == \"hashtag\" && error) || (selectedFilterTab == \"handle\" && handleError) ? 'is-invalid' : ''}`} placeholder={`Enter user ${selectedFilterTab}`} value={selectedFilterTab == \"hashtag\" ? hashtag : handle} onChangeHandler={this.onChangeHandler} />\n                                                            {(selectedFilterTab == \"hashtag\" && error) || (selectedFilterTab == \"handle\" && handleError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                        </div> : null\n                                                }\n                                                {\n                                                    selectedFilterTab == 'hashtag' ? <div className=\"hideforBSearch\">\n                                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                            <CheckBoxField isChecked={hashtagPost} onChangeHandler={this.onCheckHandler} name={\"hashtagPost\"}>\n                                                                <span className=\"form-check-label\">Get posts containing hashtag only in caption.</span>\n                                                            </CheckBoxField>\n                                                        </label>\n                                                    </div> : null\n                                                }\n                                                {(connectedAccountList && connectedAccountList.length > 0) ? <div style={{ display: [\"hashtag\", \"handle\"].includes(selectedFilterTab) ? 'block' : \"none\" }}> <AccountPicker connectedAcc={connectedAccountList} personalAccount={personalAccount} personal={selectedFilterTab == 'personal'} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} /> </div> : null}\n                                                <InfoSection text={this.getInfo(selectedFilterTab)} />\n                                            </Tab.Pane>\n                                            ) : null}\n                                            <Tab.Pane className=\"nav-link className= p-0\">\n                                                {connectedAccountList && connectedAccountList.length ? <AccountSelect connectedAcc={connectedAccountList} onConnectedAccountChange={this.onConnectedAccountChange} /> :\n                                                    <div className=\"py-2\">\n                                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={this.addTiktokAccount}>\n                                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                                                <img src={baseUrl(\"media/icons/social-icons/tiktok.svg\")} height={43} width={43} alt=\"facebook\" />\n                                                            </span>\n                                                            <div className=\"overflow-hidden signIn_txt px-4\">\n                                                                <span className=\"text-gray-800 mb-0 fs-8 fw-bold text-ellipsis me-2\">Connect TikTok</span>\n                                                            </div>\n                                                        </button>\n                                                    </div>}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Post Url\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className=\"position-relative w-100\">\n                                                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                            {this.feedIcon(70)}\n                                                        </span>\n                                                        <InputField name={\"postUrl\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter Tiktok Post Url\" value={postUrl} onChangeHandler={this.onChangeHandler} />\n                                                        {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                    </div>\n                                                </div>\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc,\n        personalAccount: state.addFeed.personalAccount,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TiktokFeed)\n","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport InputField from '../Elements/InputField';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport AccountPicker from '../Elements/AccountPicker';\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass VimeoFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handle: \"\",\n            hashtag: \"\",\n            moderation: false,\n            error: false,\n            handleError: false,\n            loading: false,\n            account: null,\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onConnectedAccountChange = (value) => this.setState({ account: value })\n\n    addVimeoAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = (connectAccountId) => {\n        const { hashtag, handle, moderation, selectedFilterId } = this.state;\n        const { collection, networkId, accountId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            accountId: connectAccountId\n        }\n        if (selectedFilterId == 2) {\n            obj['feedText'] = hashtag\n        } else if (selectedFilterId == 1) {\n            obj['feedText'] = handle\n        }\n\n        this.setState({ error: false, handleError: false, loading: true })\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            this.props.history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { hashtag, handle, selectedFilterTab, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n\n        if (selectedFilterTab == 'Hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'Handle' && handle == '') {\n            this.setState({ handleError: true });\n        }\n        else {\n\n            if (isAuthRequired) {\n                if (accountId == null) {\n                    this.addVimeoAccount();\n                } else {\n                    this.createFeed(accountId);\n                }\n            } else {\n                this.createFeed(0);\n            }\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 2: // Hashtag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.78428 14L8.2047 10H4V8H8.41491L8.94043 3H10.9514L10.4259 8H14.4149L14.9404 3H16.9514L16.4259 8H20V10H16.2157L15.7953 14H20V16H15.5851L15.0596 21H13.0486L13.5741 16H9.58509L9.05957 21H7.04855L7.57407 16H4V14H7.78428ZM9.7953 14H13.7843L14.2047 10H10.2157L9.7953 14Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList, networkId } = this.props;\n        const { hashtag, handle, moderation, handleError, error, loading, selectedFilterTab } = this.state;\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Hashtag\"}>\n                                                <div className=\"position-relative w-100 mb-3\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(2)}\n                                                    </span>\n                                                    <InputField name={\"hashtag\"} className={`form-control form-control-lg fw-bolder px-9 ${error ? 'is-invalid' : ''}`} placeholder=\"Enter hashtag\" value={hashtag} onChangeHandler={this.onChangeHandler} />\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"Handle\"}>\n                                                <div className=\"position-relative w-100 mb-3\">\n                                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                                        {this.feedIcon(1)}\n                                                    </span>\n                                                    <InputField name={\"handle\"} className={`form-control form-control-lg fw-bolder px-9 ${handleError ? 'is-invalid' : ''}`} placeholder=\"Enter user handle\" value={handle} onChangeHandler={this.onChangeHandler} />\n                                                    {handleError ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                {/* <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> */}\n                                                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={this.onConnectedAccountChange} />}\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VimeoFeed)","import React, { Component } from 'react';\n// import { AUTOCOMPLETE } from \"../../../../actions/manageFeedsAction\";\nimport AccountPicker from '../../Elements/AccountPicker';\nimport { debounce } from '../../../../../Services/Utils/utils';\nimport InputField from '../../Elements/InputField';\nimport CheckBoxField from '../../Elements/CheckboxField';\nimport InfoSection from '../../Elements/InfoSection';\nimport { autoComplete } from '../../../../../Services/Actions/addFeedAction';\n\nclass TwitterTabs extends Component {\n    state = {\n        showList: false,\n        lists: [],\n    }\n\n    autoComplete = debounce((e) => {\n        autoComplete({\n            networkId: 1,\n            handle: e.target.value,\n        }).then(res => {\n            const { data } = res\n            if (data.response_code == 200) {\n                this.setState({ lists: data.responseData.data, showList: true })\n            }\n            else this.setState({ lists: [], showList: false })\n        })\n    })\n\n    handleAutoComplete = (e) => {\n        this.props.onChangeHandler(e);\n        this.autoComplete(e);\n    }\n\n    onSelectList = (item) => {\n\n        const { onListNameChange, onListIdChange } = this.props\n        onListNameChange(item.name);\n        onListIdChange(item.id, item.owner_id);\n        this.setState({ showList: false })\n    }\n   \n    render() {\n        const { lists, showList } = this.state\n        const { hashtag, handle, networkId, onConnectedAccountChange, userName, showListError, listNameError, listName, feedIcon, advanced, tab, error, handleError, mentionError, advanceError, multiPhoto, listname, excludeRetweets, onChangeHandler, excludeReplies, onCheckHandler, mentions, favorites, favoriteError, connectedAccountList, filter } = this.props;\n\n        return (\n            <>\n                <div className=\"mb-2 mb-xl-3\">\n                    <div className=\"\">\n                        {tab != 'list' ? \n                        <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                            <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                {feedIcon(filter)}\n                            </span>\n                            <InputField name={tab} className={`form-control form-control-lg fw-bolder px-9 ${(tab == \"hashtag\" && error)||(handleError && tab == \"handle\")||(mentionError && tab == \"mentions\")||(favoriteError && tab == \"favorites\")||(advanceError && tab == \"advanced\")?'is-invalid':''}`} placeholder={tab !== \"advanced\" ? `Enter ${tab !== 'favorites' ? tab : 'the twitter handle of the user to import Liked Posts from.'}` : 'Query'} value={tab == \"hashtag\" ? hashtag : tab == \"handle\" ? handle : tab == \"mentions\" ? mentions : tab == \"advanced\" ? advanced : favorites} onChangeHandler={onChangeHandler} /> \n                            {(tab == \"hashtag\" && error)||(handleError && tab == \"handle\")||(mentionError && tab == \"mentions\")||(favoriteError && tab == \"favorites\")||(advanceError && tab == \"advanced\")? <span className=\"invalid-feedback\">This field is required.</span> : null}\n                        </div>\n                        : \n                        \n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                        {feedIcon(9)}\n                                    </span>\n                                    <InputField name={\"userName\"} placeholder=\"Enter Keyword\" className={`form-control form-control-lg fw-bolder px-9 ${showListError?'is-invalid':''}`} value={userName} onChangeHandler={(e) => this.handleAutoComplete(e)} autoComplete={true} />\n                                    {showList ? lists && lists.length > 0 ? lists.map((item, index) => (\n                                        <li key={item.id} onClick={() => this.onSelectList(item)}>\n                                            <div className=\"content-section\">\n                                                {item.name}\n                                                <p>https://twitter.com/{item.name}</p>\n                                            </div>\n                                        </li>\n                                    )) : null : null}\n                                    {showListError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                </div>\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                        {feedIcon(7)}\n                                    </span>\n                                    <InputField name={\"listName\"} placeholder=\"Enter Username\" className={`form-control form-control-lg fw-bolder px-9 ${ listNameError ?'is-invalid':''}`} value={listName} onChangeHandler={onChangeHandler} autoComplete={true} />\n                                    {listNameError && <span className=\"invalid-feedback\">This field is required.</span>}\n                                </div>\n                            </div>\n                        </div>}\n                        {(tab == \"hashtag\" && error)||(handleError && tab == \"handle\")||(mentionError && tab == \"mentions\")||(favoriteError && tab == \"favorites\")||(advanceError && tab == \"advanced\") ? <span className=\"invalid-feedback\">This field is required</span> : null}\n\n                        {tab == \"advanced\" ? <p className=\"fs-8 fw-medium text-gray-700 mb-1\">Use the table below to construct your query.</p> : null}\n                        {\n                            tab == \"advanced\" ? <div className=\"card mb-5\">\n                                <div className='card-body'>\n                                    <div className=\"table-responsive\" style={{height:200}}>\n                                        <table className=\"table table-light mb-0\">\n                                            <thead>\n                                                <tr>\n                                                    <th style={{ width: \"20%\" }}><strong>Filter By:</strong></th>\n                                                    <th><strong>Example</strong></th>\n                                                    <th><strong>Targets Tweets:</strong></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800\">\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                                                    <path d=\"M13 6V21H11V6H5V4H19V6H13Z\" fill=\"currentColor\"></path>\n                                                                </svg>\n                                                            </span>\n                                                            Keywords\n                                                        </div>\n                                                    </td>\n                                                    <td>grapes banana</td>\n                                                    <td>containing both \"grapes\" and \"banana\".</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>\"good time\"</td>\n                                                    <td>containing the exact phrase \"good time\"</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>die OR alive</td>\n                                                    <td>containing either \"die\" or \"alive\" (or both)</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>food -drink</td>\n                                                    <td>containing \"food\" but not \"drink\"</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>#soul</td>\n                                                    <td>containing the hashtag \"#soul\"</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800\">\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M4 22C4 17.5817 7.58172 14 12 14C16.4183 14 20 17.5817 20 22H18C18 18.6863 15.3137 16 12 16C8.68629 16 6 18.6863 6 22H4ZM12 13C8.685 13 6 10.315 6 7C6 3.685 8.685 1 12 1C15.315 1 18 3.685 18 7C18 10.315 15.315 13 12 13ZM12 11C14.21 11 16 9.21 16 7C16 4.79 14.21 3 12 3C9.79 3 8 4.79 8 7C8 9.21 9.79 11 12 11Z\" fill=\"currentColor\"></path></svg>\n                                                            </span>\n                                                            User\n                                                        </div>\n                                                    </td>\n                                                    <td>from:taggbox</td>\n                                                    <td>sent from the user @taggbox</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>to:taggbox</td>\n                                                    <td>sent to the user @taggbox</td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong></strong></td>\n                                                    <td>@taggbox</td>\n                                                    <td>mentioning @taggbox</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800\">\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M17.6572 14.8282L16.2429 13.414L17.6572 11.9998C19.2193 10.4377 19.2193 7.90506 17.6572 6.34296C16.0951 4.78086 13.5624 4.78086 12.0003 6.34296L10.5861 7.75717L9.17188 6.34296L10.5861 4.92875C12.9292 2.5856 16.7282 2.5856 19.0714 4.92875C21.4145 7.27189 21.4145 11.0709 19.0714 13.414L17.6572 14.8282ZM14.8287 17.6567L13.4145 19.0709C11.0714 21.414 7.27238 21.414 4.92923 19.0709C2.58609 16.7277 2.58609 12.9287 4.92923 10.5856L6.34345 9.17139L7.75766 10.5856L6.34345 11.9998C4.78135 13.5619 4.78135 16.0946 6.34345 17.6567C7.90555 19.2188 10.4382 19.2188 12.0003 17.6567L13.4145 16.2425L14.8287 17.6567ZM14.8287 7.75717L16.2429 9.17139L9.17188 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                                                            </span>\n                                                            Content\n                                                        </div>\n                                                    </td>\n                                                    <td>funny filter:links</td>\n                                                    <td>containing \" funny\" and with a URL.</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>\n                                                        <div className=\"d-flex fw-medium\">\n                                                            <span className=\"svg-icon svg-icon-5 text-gray-800\">\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M9 1V3H15V1H17V3H21C21.5523 3 22 3.44772 22 4V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3H7V1H9ZM20 11H4V19H20V11ZM11 13V17H6V13H11ZM7 5H4V9H20V5H17V7H15V5H9V7H7V5Z\" fill=\"currentColor\"></path></svg>\n                                                            </span>\n                                                            Dates\n                                                        </div>\n                                                    </td>\n                                                    <td>champion&amp;start_time=2023-05-11T05:00:01.340Z</td>\n                                                    <td>containing \"champion\" and sent since date \"2023-05-11T05:00:01.340Z\" (year-month-day).</td>\n                                                </tr>\n                                                <tr>\n                                                    <td></td>\n                                                    <td>champion&amp;end_time=2023-05-17T05:00:01.340Z</td>\n                                                    <td>containing \"champion\" and sent before the date \"2023-05-17T05:00:01.340Z\".</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div> : null\n                        }\n                    </div>\n                </div>\n                <div className=\"pb-2\">\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={multiPhoto} onChangeHandler={onCheckHandler} name={\"multiPhoto\"}>\n                            <span className=\"form-check-label\">Add Multiple Photos</span>\n                        </CheckBoxField>\n                    </label>\n                    {tab != 'list' && tab != \"advanced\" ? <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={excludeRetweets} onChangeHandler={onCheckHandler} name={\"excludeRetweets\"}>\n                            <span className=\"form-check-label\">Exclude Retweets</span>\n                        </CheckBoxField>\n                    </label> : null}\n                    {tab != 'favorites' && tab != 'list' ? <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={excludeReplies} onChangeHandler={onCheckHandler} name={\"excludeReplies\"}>\n                            <span className=\"form-check-label\">Exclude Replies</span>\n                        </CheckBoxField>\n                    </label> : null}\n                </div>\n                {(connectedAccountList && connectedAccountList.length > 0) && <AccountPicker connectedAcc={connectedAccountList} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} />}\n                {tab != 'list' && tab != \"advanced\" && tab != \"favorites\" ?\n                    <InfoSection text={tab == 'hashtag' ? `Only 10 tweets will be aggregated from the last 7 days' data, after which all the upcoming tweets will be aggregated.` : tab == 'handle' ? `Initially, 10 tweets will be aggregated from the Twitter handle, after which all the upcoming tweets will be aggregated.` : tab == 'mentions' ? `Only 10 mentions from the last 7 days will be aggregated, after which all the upcoming tweets will be aggregated.` : ``} />\n                    : null\n                }\n            </>\n        )\n    }\n}\n\nexport default TwitterTabs\n\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\nimport { addUserAccount, createFeedAction } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport TwitterTab from \"./components/TwitterTab\";\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\n\n\nconst channel = new BroadcastChannel('connect');\nclass Twitter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: '',\n            handle: '',\n            mentions: '',\n            advanced: '',\n            userName: '',\n            listName: '',\n            favorites: '',\n            userId: null,\n            listId: null,\n            loading: false,\n            multiPhoto: true,\n            excludeRetweets: true,\n            excludeReplies: true,\n            connectedAccount: null,\n            moderation: false,\n            error: false,\n            handleError: false,\n            mentionError: false,\n            advanceError: false,\n            favoriteError: false,\n            showListError: false,\n            listNameError: false,\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\n    onListNameChange = (value) => this.setState({ userName: value, showListError: false })\n    onListIdChange = (listId, userId) => this.setState({ listId: listId, userId: userId })\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n\n    addTwitterAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = (connectAccountId) => {\n        const { hashtag, handle, excludeRetweets, excludeReplies, multiPhoto, userId, listId, listName, userName, advanced, mentions, favorites, moderation, selectedFilterId, isAuthRequired } = this.state;\n        const { collection, networkId, history } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n\n            })\n\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            excludeRetweet: excludeRetweets ? 1 : 0,\n            excludeReplies: excludeReplies ? 1 : 0,\n            multiplePhoto: multiPhoto ? 1 : 0,\n            authRequire: isAuthRequired ? 1 : 0,\n            accountId: connectAccountId\n        }\n\n        if (selectedFilterId == 2) {\n            obj['feedText'] = hashtag\n        } else if (selectedFilterId == 1) {\n            obj['feedText'] = handle\n        } else if (selectedFilterId == 7) {\n            obj['feedText'] = mentions\n        } else if (selectedFilterId == 4) {\n            obj['feedText'] = favorites\n        } else if (selectedFilterId == 5) {\n            obj['feedText'] = advanced\n        } else if (selectedFilterId == 3) {\n            obj['feedText'] = userName;\n            obj['listname'] = listName;\n            obj['userId'] = userId;\n            obj['listId'] = listId;\n        }\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { hashtag, advanced, handle, userName, listName, favorites, mentions, selectedFilterTab, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n\n\n        if (selectedFilterTab == 'hashtag' && hashtag == '') {\n            this.setState({ error: true });\n        } else if (selectedFilterTab == 'handle' && handle == '') {\n            this.setState({ handleError: true });\n        } else if (selectedFilterTab == 'mentions' && mentions == '') {\n            this.setState({ mentionError: true });\n        } else if (selectedFilterTab == 'favorites' && favorites == '') {\n            this.setState({ favoriteError: true });\n        } else if (selectedFilterTab == 'advanced' && advanced == '') {\n            this.setState({ advanceError: true });\n        } else if (selectedFilterTab == 'list' && userName == '') {\n            this.setState({ showListError: true });\n        } else if (selectedFilterTab == 'list' && listName == '') {\n            this.setState({ listNameError: true });\n        } else {\n\n            if (isAuthRequired) {\n                if (accountId == null) {\n                    this.addTwitterAccount();\n                } else {\n                    this.createFeed(accountId);\n                }\n            } else {\n                this.createFeed(0);\n            }\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, (connectAccountId) => this.createFeed(connectAccountId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 2: // Hashtag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.78428 14L8.2047 10H4V8H8.41491L8.94043 3H10.9514L10.4259 8H14.4149L14.9404 3H16.9514L16.4259 8H20V10H16.2157L15.7953 14H20V16H15.5851L15.0596 21H13.0486L13.5741 16H9.58509L9.05957 21H7.04855L7.57407 16H4V14H7.78428ZM9.7953 14H13.7843L14.2047 10H10.2157L9.7953 14Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1:\n            case 7: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 3: // List\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M8 4H21V6H8V4ZM3 3.5H6V6.5H3V3.5ZM3 10.5H6V13.5H3V10.5ZM3 17.5H6V20.5H3V17.5ZM8 11H21V13H8V11ZM8 18H21V20H8V18Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 5: // Advance\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.031 16.6168L22.3137 20.8995L20.8995 22.3137L16.6168 18.031C15.0769 19.263 13.124 20 11 20C6.032 20 2 15.968 2 11C2 6.032 6.032 2 11 2C15.968 2 20 6.032 20 11C20 13.124 19.263 15.0769 18.031 16.6168ZM16.0247 15.8748C17.2475 14.6146 18 12.8956 18 11C18 7.1325 14.8675 4 11 4C7.1325 4 4 7.1325 4 11C4 14.8675 7.1325 18 11 18C12.8956 18 14.6146 17.2475 15.8748 16.0247L16.0247 15.8748Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 9: // Text\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13 6V21H11V6H5V4H19V6H13Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { selectedFilterTab, loading } = this.state;\n        const { filterTabs, networkId, connectedAccountList } = this.props;\n\n        return <>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                <div className=\"addSourceTabs\">\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <div className=\"\">\n\n                                    <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                        {\n                                            filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                        }\n                                    </Nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <div className=\"\">\n                                    <Tab.Content>\n                                        {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\n                                            <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                                <TwitterTab\n                                                    networkId={networkId}\n                                                    tab={filter.feedtype}\n                                                    filter={filter.filter}\n                                                    {...this.state}\n                                                    connectedAccountList={connectedAccountList}\n                                                    onListIdChange={this.onListIdChange}\n                                                    onConnectedAccountChange={this.onConnectedAccountChange}\n                                                    onListNameChange={this.onListNameChange}\n                                                    onExcRetweetChange={this.onCheckHandler}\n                                                    onChangeHandler={this.onChangeHandler}\n                                                    onCheckHandler={this.onCheckHandler}\n                                                    feedIcon={this.feedIcon}\n                                                />\n                                            </Tab.Pane>\n                                        )) : null}\n                                    </Tab.Content>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Tab.Container>\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Twitter)","import React, { useState } from \"react\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\n\n\nexport default function PlaceDropDown(props) {\n    const [address, setAddress] = useState(\"\");\n    const [list, setList] = useState(false);\n\n    const handleChange = (e) => { setAddress(e); setList(true); props.onFieldTextChange(\"\", \"\") };\n    const handleSelect = (e) => { };\n\n    const handleSelect1 = (v1, v2, v3) => {\n        props.onFieldTextChange(v1, v2, v3)\n        setAddress(v1);\n        setList(false)\n    };\n\n\n\n    return (\n        <PlacesAutocomplete\n            value={address}\n            onChange={handleChange}\n            onSelect={handleSelect}\n        >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n\n                <div className=\"position-relative w-100\">\n                    <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M12 23.7279L5.63604 17.364C2.12132 13.8492 2.12132 8.15076 5.63604 4.63604C9.15076 1.12132 14.8492 1.12132 18.364 4.63604C21.8787 8.15076 21.8787 13.8492 18.364 17.364L12 23.7279ZM16.9497 15.9497C19.6834 13.2161 19.6834 8.78392 16.9497 6.05025C14.2161 3.31658 9.78392 3.31658 7.05025 6.05025C4.31658 8.78392 4.31658 13.2161 7.05025 15.9497L12 20.8995L16.9497 15.9497ZM12 13C10.8954 13 10 12.1046 10 11C10 9.89543 10.8954 9 12 9C13.1046 9 14 9.89543 14 11C14 12.1046 13.1046 13 12 13Z\" fill=\"currentColor\"></path>\n                        </svg>\n                    </span>\n                    {loading ? <div className=\"spinner spinner-gray\" style={{ top: -22 }}></div> : null}\n                    <input {...getInputProps({ placeholder: \"Type address\" })} className={`form-control form-control-lg fw-bolder px-9 ${props.error ? 'is-invalid' : ''}`} />\n                    {list && address.length > 0 ?\n                        <Dropdown className={`w-100`} show>\n                            <Dropdown.Menu className=\"w-100\">\n                                <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                    {suggestions.map(suggestion => {\n                                        return (<Dropdown.Item className=\"text-break\" {...getSuggestionItemProps(suggestion)} onClick={() => handleSelect1(suggestion.description, suggestion.placeId, suggestion.formattedSuggestion.mainText)} style={{ whiteSpace: 'normal' }}> {suggestion.description}</Dropdown.Item>);\n                                    })}\n                                </PerfectScrollbar>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        : ''}\n                </div>\n            )}\n        </PlacesAutocomplete>\n    );\n}\n\n\n\n\n\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport { baseUrl } from \"../../../../../Assets/AssetsHelper\";\n\nexport default class GoogleTab extends Component {\n    state = { accountOption: [], parentOption: [] }\n\n    componentDidMount() {\n        this.getChildAccountData()\n    }\n    componentWillReceiveProps(nextProps) {\n\n        if (nextProps.connectedAcc !== this.state.parentOption) {\n            this.getChildAccountData()\n        }\n    }\n    getChildAccountData = () => {\n        const { connectedAcc } = this.props;\n        if (connectedAcc && connectedAcc.length) {\n            var data = connectedAcc.map((f, i) => {\n                return ({ 'label': f.ConnectedAccounts.accountName, 'value': f.ConnectedAccounts.id })\n            })\n            this.setState((prev) => ({ ...prev, parentOption: data }));\n        }\n\n    }\n\n    onAccountIdChange = (value) => {\n        const { childAcc } = this.props\n        if (value == 0) {\n            this.props.onAccountChildChange(value)\n        }\n        else {\n            var mainAccountId = childAcc.filter(f => f.ConnectedAccounts.id == value)\n            this.props.onAccountChildChange(value)\n            this.props.onConnectedAccountChange(mainAccountId[0].ConnectedAccounts.parent)\n        }\n    }\n\n    onParentSelected = (value) => {\n        const { connectedAcc } = this.props\n        this.props.onConnectedAccountChange(value);\n        let childAcccounts = [];\n        if (value !== 0) {\n            const selectedAcc = connectedAcc.filter(account => account.ConnectedAccounts.id === value);\n            childAcccounts = selectedAcc[0].ConnectedAccounts.child.map((f) => {\n                return ({ 'label': f.ConnectedAccounts.value2, 'value': f.ConnectedAccounts.id })\n            });\n            childAcccounts.push({ 'label': \"Other\", 'value': 0 });\n        }\n\n        this.setState((prev) => ({ ...prev, accountOption: childAcccounts }));\n    }\n\n\n    render() {\n\n        const { otherAccount, connetedAccount, accountChild, onotherAccount,onAddAccount } = this.props\n        const { accountOption, parentOption } = this.state;\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <label>Select Account</label>\n                        <Select className=\"selectpicker addFeedGoogle\" options={parentOption} classNamePrefix=\"selectpicker\" defaultValue={connetedAccount} onChange={(e) => this.onParentSelected(e.value)} />\n                        <br />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                        <label>Select Place</label>\n                        <Select className=\"selectpicker addFeedGoogle\" options={connetedAccount ? accountOption : []} classNamePrefix=\"selectpicker\" defaultValue={accountChild} onChange={(e) => { this.onAccountIdChange(e.value); onotherAccount(e.value == 0 ? true : false) }} />\n                        <br />\n                    </div>\n                </div>\n\n\n                {otherAccount ?\n                    <div className=\"otherSection py-2\">\n                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\">\n                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                <img src={baseUrl(\"media/icons/social-icons/google.svg\")} height={43} width={43} alt=\"facebook\" />\n                            </span>\n                            <div className=\"overflow-hidden signIn_txt px-5\">\n                                <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Google</span>\n                            </div>\n                        </button>\n                    </div> \n                    : null}\n\n            </>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport CheckBoxField from '../Elements/CheckboxField';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction, fetchConnectedAccounts } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport PlaceDropDown from './components/PlaceDropDown';\nimport InfoSection from '../Elements/InfoSection';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport GoogleTab from './components/GoogleTab';\nimport { toast } from 'react-toastify';\n\nconst channel = new BroadcastChannel('connect');\n\nclass GoogleFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            feedText: '',\n            placeName: null,\n            placeId: null,\n            moderation: false,\n            error: false,\n            loading: false,\n            connetedAccount: 0,\n            accountChild: 0,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n            otherAccount: false\n        }\n    }\n\n    onFieldTextChange = (text, id, placeName) => this.setState({ feedText: text, placeId: id, placeName: placeName, error: false })\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n    onotherAccount = (value) => this.setState({ otherAccount: value });\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n    onAccountChildChange = (value) => this.setState({ accountChild: value })\n\n    addGoogleAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = () => {\n        const { feedText, placeId, connetedAccount, accountChild, placeName, moderation, selectedFilterId } = this.state;\n        const { collection, networkId, history } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            connetedAccount: 0,\n            account: 0\n        }\n        if (selectedFilterId == 33) {\n            obj['field33'] = feedText;\n            obj['field33placeId'] = placeId\n            obj['field33placeName'] = placeName\n        } else if (selectedFilterId == 29) {\n            obj['field33'] = '';\n            obj['field33placeId'] = '';\n            obj['field33placeName'] = '';\n            obj['connetedAccount'] = connetedAccount;\n            obj['account'] = accountChild;\n        }\n\n        this.setState({ error: false, topicError: false, loading: true })\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { feedText, selectedFilterTab, accountChild, connetedAccount } = this.state;\n\n        if (selectedFilterTab == 'Places' && feedText == '') {\n            this.setState({ error: true });\n        } else {\n            if (selectedFilterTab == 'My Places' && (connetedAccount == 0 || accountChild == 0)) {\n                toast.error('Need to connect google account', { autoClose: 3000 });\n                return;\n            }\n\n            this.createFeed();\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, () => this.props.getConnectedAccount(networkId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 33: // Place\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 23.7279L5.63604 17.364C2.12132 13.8492 2.12132 8.15076 5.63604 4.63604C9.15076 1.12132 14.8492 1.12132 18.364 4.63604C21.8787 8.15076 21.8787 13.8492 18.364 17.364L12 23.7279ZM16.9497 15.9497C19.6834 13.2161 19.6834 8.78392 16.9497 6.05025C14.2161 3.31658 9.78392 3.31658 7.05025 6.05025C4.31658 8.78392 4.31658 13.2161 7.05025 15.9497L12 20.8995L16.9497 15.9497ZM12 13C10.8954 13 10 12.1046 10 11C10 9.89543 10.8954 9 12 9C13.1046 9 14 9.89543 14 11C14 12.1046 13.1046 13 12 13Z\" fill=\"currentColor\"></path>\n                </svg>\n                break;\n            case 29: // My Place\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M17.0839 15.812C19.6827 13.0691 19.6379 8.73845 16.9497 6.05025C14.2161 3.31658 9.78392 3.31658 7.05025 6.05025C4.36205 8.73845 4.31734 13.0691 6.91612 15.812C7.97763 14.1228 9.8577 13 12 13C14.1423 13 16.0224 14.1228 17.0839 15.812ZM12 23.7279L5.63604 17.364C2.12132 13.8492 2.12132 8.15076 5.63604 4.63604C9.15076 1.12132 14.8492 1.12132 18.364 4.63604C21.8787 8.15076 21.8787 13.8492 18.364 17.364L12 23.7279ZM12 12C10.3431 12 9 10.6569 9 9C9 7.34315 10.3431 6 12 6C13.6569 6 15 7.34315 15 9C15 10.6569 13.6569 12 12 12Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList } = this.props;\n        const { connetedAccount, otherAccount, accountChild, moderation, error, loading, selectedFilterTab } = this.state;\n        var childAcc = connectedAccountList && connectedAccountList[0] && connectedAccountList[0].ConnectedAccounts && connectedAccountList[0].ConnectedAccounts.child && connectedAccountList[0].ConnectedAccounts.child.length ? connectedAccountList[0].ConnectedAccounts.child : ''\n\n        return (\n            <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        {filterTabs && Object.keys(filterTabs).length > 1 ?\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {filterTabs && filterTabs.map((filterTab, index) => {\n                                                const { feedName, feedtype, filter } = filterTab;\n                                                return <Nav.Item className=\"p-1\" key={index}>\n                                                    <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                        <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                            {this.feedIcon(filter)}\n                                                        </span>\n                                                        {capitalizeFirstLetter(feedtype)}\n                                                    </Nav.Link>\n                                                </Nav.Item>\n                                            })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                            : null}\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            <Tab.Pane eventKey={\"Places\"}>\n                                                <div className=\"mb-2 mb-xl-3\">\n                                                    <div className={`${error ? 'is-invalid' : ''}`}>\n                                                        <PlaceDropDown onLatlanChange={this.onLatlanChange} onFieldTextChange={this.onFieldTextChange} error={error} />\n                                                    </div>\n                                                    {error ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                                                </div>\n                                                <InfoSection text={'Initially the latest 5 user reviews of Place will be aggregated after which all the upcoming reviews will be aggregated.'} />\n                                            </Tab.Pane>\n                                            <Tab.Pane eventKey={\"My Places\"}>\n                                                {connectedAccountList && connectedAccountList.length > 0 ?\n                                                    <GoogleTab\n                                                        onAddAccount={this.addGoogleAccount}\n                                                        connectedAcc={connectedAccountList}\n                                                        otherAccount={otherAccount}\n                                                        connetedAccount={connetedAccount}\n                                                        accountChild={accountChild}\n                                                        onotherAccount={this.onotherAccount}\n                                                        onAccountChildChange={this.onAccountChildChange}\n                                                        onConnectedAccountChange={this.onConnectedAccountChange}\n                                                        childAcc={childAcc}\n                                                    />\n\n                                                    :\n                                                    <div className=\"otherSection py-2 mb-2\">\n                                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\">\n                                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                                                <img src={baseUrl(\"media/icons/social-icons/google.svg\")} height={43} width={43} alt=\"facebook\" />\n                                                            </span>\n                                                            <div className=\"overflow-hidden signIn_txt px-5\">\n                                                                <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Google</span>\n                                                            </div>\n                                                        </button>\n                                                    </div>\n                                                }\n                                                {/* {!otherAccount ? <div className=\"pb-2\">\n                                                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                                        <CheckBoxField isChecked={moderation} onChangeHandler={this.onCheckHandler} name={\"moderation\"}>\n                                                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                                                        </CheckBoxField>\n                                                    </label>\n                                                </div> : null} */}\n\n                                                <InfoSection text={'Initially latest 50 user reviews will be aggregated after which all the upcoming reviews will be aggregated.'} />\n                                            </Tab.Pane>\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container >\n                <SubmitFeedRequest hideBtn={otherAccount} supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getConnectedAccount: (id) => dispatch(fetchConnectedAccounts(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleFeed)","import React, { Component } from 'react'\nimport Select from 'react-select'\nimport InputField from '../../Elements/InputField';\nimport CheckBoxField from '../../Elements/CheckboxField';\n\nexport default class SlackTab extends Component {\n    componentDidMount() {\n        const { accounts } = this.props;\n\n        if (accounts && accounts.length > 0) {\n            this.props.onSelect(accounts[0].ConnectedAccounts.id);\n        }\n    }\n    render() {\n        const { accounts, tab, moderation, onCheckHandler, onSelect, error, keyword, handleInput, selectAccount, channelError } = this.props;\n\n        const options = accounts ? accounts.map((account) => ({ label: account.ConnectedAccounts.value2, value: account.ConnectedAccounts.id })) : [];\n        return (\n            <>\n                <div className=\"row gx-3\">\n                    <div className=\"col-sm-6\">\n                        <div className=\"mb-2 mb-xl-3\">\n                            <span className={`${channelError? 'is-invalid':''}`}>\n                            <Select className=\"selectpicker selectpicker-lg\" menuPlacement=\"auto\" classNamePrefix=\"selectpicker\" onChange={(e) => onSelect(e.value)} options={options} value={options[options.findIndex(i => i.value == selectAccount)]} />\n                            </span>\n                            {channelError && <span className=\"invalid-feedback\">This field is required</span>}\n                        </div>\n                    </div>\n                    {tab == \"ChannelKeyword\" ?\n                    <div className=\"col-sm-6\">\n                        <div className=\"mb-2 mb-xl-3\">\n                            <div className=\"position-relative w-100 mb-3\">\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13 6V21H11V6H5V4H19V6H13Z\" fill=\"currentColor\"></path></svg>\n                                </span>\n                                <InputField name={\"keyword\"} className=\"form-control form-control-lg fw-bolder px-9\" placeholder=\"Enter keyword\" value={keyword} onChangeHandler={handleInput} />\n                                {error && <span className=\"invalid-feedback\">This field is required</span>}\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n                </div>\n                {/* <div className=\"pb-2\">\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={moderation} onChangeHandler={onCheckHandler} name={\"moderation\"}>\n                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                        </CheckBoxField>\n                    </label>\n                </div> */}\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Nav, Tab } from \"react-bootstrap\";\nimport { capitalizeFirstLetter, showAddAccountAlert } from '../../../../Services/Utils/utils';\nimport SubmitFeedRequest from '../Elements/SubmitFeedRequest';\nimport { addUserAccount, createFeedAction, fetchConnectedAccounts } from '../../../../Services/Actions/addFeedAction';\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport { connect } from 'react-redux';\nimport SlackTab from './components/SlackTab';\nimport { toast } from 'react-toastify';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass SlackFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            keyword: '',\n            error: false,\n            selectedAcc: null,\n            moderation: false,\n            channelError: false,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    handleSelect = (e) => {\n        this.setState({ selectedAcc: e, channelError: false });\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false });\n    }\n\n    onCheckHandler = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    }\n\n\n    addSlackAccount = () => {\n        const { networkData } = this.props;\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeed = () => {\n        const { selectedAcc, moderation, keyword, selectedFilterId } = this.state;\n        const { collection, networkId, connectedAccountList } = this.props;\n        const parentAcc = connectedAccountList && connectedAccountList.length > 0 ? connectedAccountList[0].ConnectedAccounts.id : '';\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId,\n            moderation: moderation ? 1 : 0,\n            connetedAccount: parentAcc,\n            account: selectedAcc,\n        }\n\n        if (selectedFilterId == 2) {\n            obj['slackkeyword'] = '';\n        } else if (selectedFilterId == 1) {\n            obj['slackkeyword'] = keyword\n        }\n\n        this.setState({ error: false, topicError: false, loading: true })\n        createFeedAction(obj, networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            this.props.history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { keyword, selectedFilterTab, selectedAcc } = this.state;\n\n        if (selectedFilterTab == 'Channel' && selectedAcc == null) {\n            this.setState({ channelError: true });\n        } else if (selectedFilterTab == 'Channel & Keyword' && selectedAcc == null) {\n            toast.error('Need to connect slack account', { autoClose: 3000 });\n        } else if (selectedFilterTab == 'Channel & Keyword' && keyword == '') {\n            this.setState({ error: true });\n        } else {\n            this.createFeed();\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n\n        addUserAccount(networkId, data, () => this.props.getConnectedAccount(networkId));\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 2: // Hashtag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.3643 15.5353L16.95 14.1211L18.3643 12.7069C20.3169 10.7543 20.3169 7.58847 18.3643 5.63585C16.4116 3.68323 13.2458 3.68323 11.2932 5.63585L9.87898 7.05007L8.46477 5.63585L9.87898 4.22164C12.6127 1.48797 17.0448 1.48797 19.7785 4.22164C22.5121 6.95531 22.5121 11.3875 19.7785 14.1211L18.3643 15.5353ZM15.5358 18.3638L14.1216 19.778C11.388 22.5117 6.9558 22.5117 4.22213 19.778C1.48846 17.0443 1.48846 12.6122 4.22213 9.87849L5.63634 8.46428L7.05055 9.87849L5.63634 11.2927C3.68372 13.2453 3.68372 16.4112 5.63634 18.3638C7.58896 20.3164 10.7548 20.3164 12.7074 18.3638L14.1216 16.9496L15.5358 18.3638ZM14.8287 7.75717L16.2429 9.17139L9.17187 16.2425L7.75766 14.8282L14.8287 7.75717Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { filterTabs, connectedAccountList } = this.props;\n        const { keyword, selectedAcc, moderation, channelError, error, loading, selectedFilterTab } = this.state;\n        const connectedAccounts = (connectedAccountList && connectedAccountList.length > 0) ? connectedAccountList[0].ConnectedAccounts : [];\n        return (\n            <>\n                {!(connectedAccountList && connectedAccountList.length > 0) ?\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Connect Your Slack Account</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"py-2\">\n                                        <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={() => this.addSlackAccount()}>\n                                            <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                                <img src={baseUrl(\"media/icons/social-icons/slack.svg\")} height={43} width={43} alt=\"facebook\" />\n                                            </span>\n                                            <div className=\"overflow-hidden signIn_txt px-5\">\n                                                <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Slack</span>\n                                            </div>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                        <div className=\"addSourceTabs\">\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"w-100\">\n                                <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                                <div className=\"card card-custom gutter-b\">\n                                    <div className=\"card-body px-xxl-5\">\n                                        <div className=\"\">\n                                            <Tab.Content>\n                                                <Tab.Pane eventKey={\"Channel\"}>\n                                                    <SlackTab accounts={connectedAccounts.child} tab={'Channel'} moderation={moderation} onCheckHandler={this.onCheckHandler} error={error} keyword={keyword} handleInput={this.onChangeHandler} onSelect={this.handleSelect} selectAccount={selectedAcc} channelError={channelError} />\n                                                </Tab.Pane>\n                                                <Tab.Pane eventKey={\"Channel & Keyword\"}>\n                                                    <SlackTab accounts={connectedAccounts.child} tab={'ChannelKeyword'} moderation={moderation} onCheckHandler={this.onCheckHandler} error={error} keyword={keyword} handleInput={this.onChangeHandler} onSelect={this.handleSelect} selectAccount={selectedAcc} channelError={channelError} />\n                                                </Tab.Pane>\n                                            </Tab.Content>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Tab.Container>\n                }\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getConnectedAccount: (id) => dispatch(fetchConnectedAccounts(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SlackFeed)","import React, { Component } from 'react';\nimport AccountPicker from '../../Elements/AccountPicker';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown } from 'react-bootstrap';\nimport CheckBoxField from '../../Elements/CheckboxField';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { autoComplete } from '../../../../../Services/Actions/addFeedAction';\nimport { debounce } from '../../../../../Services/Utils/utils';\nimport Select from 'react-select';\n\nclass FacebookTab extends Component {\n    state = {\n        handles: [],\n        allAccounts: [{ ConnectedAccounts: { id: 0, value2: 'loading...' } }],\n        openSelect: false,\n        selectValue: {},\n        formatedList: [],\n        allConnectAcc: []\n    }\n\n    componentDidMount() {\n        this.getAccounts();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.connectedAcc) {\n            if (this.state.allConnectAcc.length != nextProps.connectedAcc.length) {\n                this.getAccounts();\n            }\n        }\n    }\n\n    getAccounts = () => {\n        const { connectedAcc, onAccountChange } = this.props\n        var allAccounts = []\n        if (connectedAcc && connectedAcc.length > 0) {\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child]\n                }\n                else {\n                    this.setState({ allAccounts: [] })\n                }\n            })\n\n            if (allAccounts && allAccounts.length > 0) {\n                onAccountChange(allAccounts[0].ConnectedAccounts.id, allAccounts[0].ConnectedAccounts.parent);\n                const formatedOption = this.formatOption(allAccounts);\n                this.setState({ allAccounts, allConnectAcc: connectedAcc, formatedList: formatedOption, selectValue: formatedOption[0] });\n            }\n        } else {\n            onAccountChange(null)\n            this.setState({ allAccounts: [] })\n        }\n    }\n\n\n\n    autoComplete = debounce((value) => {\n        const obj = { networkId: 3, handle: value }\n        if (value && value.length > 2) {\n            autoComplete(obj).then(res => {\n                const { responseData, response_code } = res.data;\n                if (response_code == 200) {\n                    this.setState({ handles: responseData.data, showHandle: responseData.data.length > 0 })\n                }\n                else this.setState({ handles: [], lists: [], showHandle: false })\n            })\n        } else {\n            this.setState({ handles: [], lists: [], showHandle: false })\n        }\n    });\n\n    handleTextChange = value => {\n        this.props.onTextChange(value)\n        this.autoComplete(value);\n    }\n\n    onSelectHandle = (item) => {\n        const { onTextChange, tab } = this.props\n        onTextChange(item.link)\n        document.querySelector(`#${tab}-text`).value = item.link\n        this.setState({ showHandle: false })\n    }\n\n    onAccChange = (selectedOption) => {\n        const { onAccountChange } = this.props\n        const { allAccounts } = this.state;\n        const { value } = selectedOption;\n\n        var parent = null;\n        if (allAccounts && allAccounts.length) {\n            parent = allAccounts.find(acc => acc.ConnectedAccounts.id == value);\n\n            if (parent) {\n                parent = parent.ConnectedAccounts.parent\n            }\n        }\n        this.setState({ selectValue: selectedOption });\n        onAccountChange(value, parent)\n    }\n\n\n    formatOption = (lists) => {\n        const formatedList = lists.map((item) => ({ label: item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\n        if (formatedList && formatedList.length > 0) {\n            return [...formatedList, { label: 'other', value: 0 }];\n        }\n        return []\n    }\n\n    render() {\n        const { tab, connectedAcc, text, onTextChange, onAlbumFieldChange, albumUrl, albumUrlError, onAddAccount, album, feedIcon, onCheckHandler, networkId, onAlbumChange, connetedAccount, onConnectedAccountChange, authenticate, onAuthenticateChange, error } = this.props\n        const { handles, showHandle, formatedList, allAccounts, selectValue } = this.state;\n\n        return (\n            <>\n                {tab == 'Page' || tab == \"Albums\" ?\n                    <div className=\"row\">\n                        {tab == 'Albums' ?\n                            <div className=\"col-sm-4\">\n                                <div className=\"mb-3\">\n                                    <Select className=\"selectpicker selectpicker-lg\" options={[{ label: 'Single Album', value: '65' }, { label: 'All Facebook Page Albums', value: '67' }]} classNamePrefix=\"selectpicker\" defaultValue={album} onChange={(e) => onAlbumChange(e)} />\n                                </div>\n                            </div> : null}\n                        <div className={tab == \"Albums\" ? \"col-sm-8\" : \"col-sm-12\"}>\n                            <div className=\"position-relative w-100 mb-3\">\n                                <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                                    {feedIcon(8)}\n                                </span>\n                                <input autoComplete=\"off\" data-limit=\"100\" placeholder=\"Enter Album URL\" value={tab == \"Page\" ? text : albumUrl} className={`form-control form-control-lg fw-bolder ps-9${(tab == \"Page\" && error) || (tab == \"Albums\" && albumUrlError) ? ' is-invalid' : ''}`} id={`${tab}-text`} onChange={(e) => tab == \"Page\" ? this.handleTextChange(e.target.value) : onAlbumFieldChange(e.target.value)} type=\"text\" />\n                                <div className=\"handlelist\" id=\"\" style={showHandle ? { display: \"block\" } : { display: \"none\" }}>\n                                    {handles && handles.length > 0 ? <Dropdown className={`w-100`} show>\n                                        <Dropdown.Menu className=\"w-100\">\n                                            <PerfectScrollbar options={{ wheelPropagation: false }}>\n                                                <div className=\"feedDropdown\">\n                                                    {handles.map(item => {\n                                                        return (<Dropdown.Item className=\"text-break flex-column justify-content-start align-items-start\" key={item.id} onClick={() => this.onSelectHandle(item)} style={{ whiteSpace: 'normal' }}>\n                                                            <p className=\"mb-1 fs-9 fw-bold\">{item.name}</p>\n                                                            <span className=\"fs-10\">{item.link}</span>\n                                                        </Dropdown.Item>);\n                                                    })}\n                                                </div>\n                                            </PerfectScrollbar>\n                                        </Dropdown.Menu>\n                                    </Dropdown> : null}\n                                </div>\n                                {(tab == \"Page\" && error) || (tab == \"Albums\" && albumUrlError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    tab == \"My Profile Posts\"\n                        ?\n                        !(connectedAcc && connectedAcc.length > 0) ? <div className=\"otherSection py-2 mb-2\">\n                            <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                    <img src={baseUrl(\"media/icons/social-icons/facebook.svg\")} height={43} width={43} alt=\"facebook\" />\n                                </span>\n                                <div className=\"overflow-hidden signIn_txt px-5\">\n                                    <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Facebook</span>\n                                </div>\n                            </button>\n                        </div> : null\n                        :\n                        connectedAcc && connectedAcc.length > 0 && allAccounts && allAccounts.length > 0 ?\n                            <div className=\"mb-3\">\n                                <Select className=\"selectpicker selectpicker-lg\" options={formatedList} classNamePrefix=\"selectpicker\" value={selectValue} onChange={(e) => this.onAccChange(e)} />\n                            </div>\n                            :\n                            <div className=\"otherSection py-2 mb-2\">\n                                <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                    <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                        <img src={baseUrl(\"media/icons/social-icons/facebook.svg\")} height={43} width={43} alt=\"facebook\" />\n                                    </span>\n                                    <div className=\"overflow-hidden signIn_txt px-5\">\n                                        <span className=\"text-gray-800 mb-0 fs-8 fw-medium text-ellipsis me-2\">Connect Facebook</span>\n                                    </div>\n                                </button>\n                            </div>\n                }\n                {/* <div className=\"hideforBSearch\">\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={moderation} onChangeHandler={onCheckHandler} name={\"moderation\"}>\n                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                        </CheckBoxField>\n                    </label>\n                </div>  */}\n                {(connectedAcc && connectedAcc.length > 0) ? <div style={{ display: ![\"Page Reviews\", \"Page Mentions\"].includes(tab) ? 'block' : \"none\" }}><AccountPicker connectedAcc={connectedAcc} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} /></div> : null}\n            </>\n        )\n    }\n}\n\nexport default FacebookTab;\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON, capitalizeFirstLetter } from '../../../../Services/Utils/utils'\n\nclass ConnectAccount extends Component {\n    state = {\n        selectedAcc: null,\n        accounts: [],\n    }\n\n    componentDidMount() {\n        const { accountList } = this.props\n        this.setState({ accounts: accountList })\n    }\n\n    createFeed = () => {\n        const { selectedAcc } = this.state;\n        const { accountList, filterId, createFeedFromPage } = this.props;\n        createFeedFromPage(![1, 67, 65, 26].includes(filterId) ? selectedAcc.id : accountList[0].parent, accountList[0].parent, selectedAcc.value2);\n    }\n\n    render() {\n        const {loading, networkId, onBack } = this.props\n        const { accounts } = this.state;\n\n        return (\n            <div className=\"action\" id=\"feedsinstagram\">\n                <div className=\"d-flex flex-column-fluid main_content connect_your_account\">\n                    <div className=\"container py-18\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"middle_content\">\n                                    <div className=\"small_container\">\n                                        <div className=\"instaFacebookAuth card card-custom card-body\">\n                                            <div className=\"pt-5\">\n                                                <div className=\"d-flex flex-wrap align-items-center mb-6\">\n                                                    <div className=\"symbol symbol-60 flex-shrink-0 me-4\">\n                                                        <div className=\"symbol-label\" style={{ backgroundImage: `url(${baseUrl(`media/icons/square-icons/${GET_NETWORK_ICON(networkId)}.svg`)})` }}>\n                                                        </div>\n                                                    </div>\n                                                    <h3 className=\"d-flex flex-column flex-grow-1 my-lg-0 my-2 pe-3\">\n                                                        <span className=\"card-label font-weight-bolder text-dark\">Connect Profile</span>\n                                                        <span className=\"mt-1 font-weight-bold font-size-sm\">Select the {capitalizeFirstLetter(GET_NETWORK_ICON(networkId))} Profile You’d Like to Connect</span>\n                                                    </h3>\n                                                </div>\n                                            </div>\n                                            <div className=\"noLoader\" id=\"FeedInstagramForm\">\n                                                <div className=\"instaConnectthroughfacebook_radio_list md-radio-list\">\n                                                    <div className=\"row\">\n                                                        {accounts && accounts.length ? accounts.map((acc, index) => (\n                                                            <div className=\"col-md-6\" key={acc.id}>\n                                                                <label\n                                                                    // htmlFor={`user${acc.accountId}`}\n                                                                    id={`user-${acc.id}`} className=\"user_row__ w-100 border-bottom p-3 m-0\">\n                                                                    <div className=\"d-flex flex-wrap align-items-center w-100\">\n                                                                        <span className={`symbol symbol-lg-45 symbol-30 random_color-${index + 1} symbol-circle me-4`}>\n                                                                            <span className=\"symbol-label font-size-h4 font-weight-bold\">{acc.value2[0].toUpperCase()}</span>\n                                                                        </span>\n                                                                        <div className=\"d-flex flex-column flex-grow-1 pe-3\">\n                                                                            <h5 className=\"text-dark-75 font-weight-bolder font-size-lg m-0\">{acc.value2}</h5>\n                                                                        </div>\n                                                                        <div className=\"d-flex align-items-center py-lg-0 py-2\">\n                                                                            <span className=\"option-control\">\n                                                                                <span className=\"radio radio-outline radio-primary\">\n                                                                                    <input id={`user${acc.id}`} onChange={() => this.setState({ selectedAcc: acc })} className=\"md-radiobtn\" type=\"radio\" name=\"pageSelect\" />\n                                                                                    <span></span>\n                                                                                </span>\n                                                                            </span>\n                                                                        </div>\n                                                                    </div>\n                                                                </label>\n                                                            </div>\n                                                        )) : null}\n                                                    </div>\n                                                </div>\n                                                <span id=\"feedsFacebookPageerror\" className=\"invalid-feedback\"></span>\n                                                <div className=\"d-flex justify-content-end border-top pt-10\">\n                                                    <div onClick={onBack} className=\"btn btn-secondary me-4\">Cancel</div>\n                                                    <button className={`btn btn-primary ${loading ? 'spinner spinner-right disabled' : ''}`} type=\"submit\" name=\"submit\" style={{ minWidth: \"100px\" }} onClick={() =>this.createFeed()}>Connect to Taggbox</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ConnectAccount\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\nimport { addUserAccount, createFeedAction, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport FacebookTab from \"./components/FacebookTab\";\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\nimport { toast } from \"react-toastify\";\nimport ConnectAccount from \"../Elements/ConnectAccount\";\n\n\nconst channel = new BroadcastChannel('connect');\nclass FacebookFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textField: \"\",\n            account: null,\n            albumUrl: '',\n            error: false,\n            albumUrlError: false,\n            album: { label: 'Single Album', value: '65' },\n            connetedAccount: null,\n            accountList: [],\n            feedObj: {},\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype\n        }\n    }\n\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onTextFieldChange = value => this.setState({ textField: value, error: false })\n    onAlbumFieldChange = value => this.setState({ albumUrl: value, albumUrlError: false })\n    onAccountChange = (value, parent) => {\n        if ([\"Page Reviews\", \"Page Mentions\"].includes(this.state.selectedFilterTab)) {\n            if (value == 0) this.props.selectAccount(null)\n            else this.props.selectAccount(value)\n        }\n\n        this.setState({ connetedAccount: parent })\n        this.setState({ account: value });\n    }\n\n\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\n    onAlbumChange = value => this.setState({ album: value })\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n\n    addFacebookAccount = () => {\n        const { networkData } = this.props;\n        this.setState({ feedObj: this.createFeedPostData() });\n        showAddAccountAlert(networkData);\n    }\n\n\n    createFeedPostData = () => {\n        const { textField, album, connetedAccount, account, albumUrl, moderation, selectedFilterId } = this.state;\n        const { collection, networkId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n\n            })\n\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: networkId,\n            filter: selectedFilterId == 67 ? parseInt(album.value) : selectedFilterId,\n            connetedAccount: [62, 55].includes(selectedFilterId) ? connetedAccount : 0,\n            account: [62, 55].includes(selectedFilterId) ? account : connetedAccount,\n            field: textField,\n            onlyReels: 0,\n            hashtagIGTV: 0,\n            moderation: moderation ? 1 : 0,\n        }\n        if (selectedFilterId == 67) {\n            obj['field'] = albumUrl;\n        }\n        if (![8, 67].includes(selectedFilterId)) {\n            obj['field'] = '';\n        }\n\n        return obj;\n    }\n\n\n    createFeed = () => {\n\n        let obj = this.createFeedPostData();\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n        createFeedAction(obj, this.props.networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            this.props.history('/assets');\n        })\n    }\n\n    onSubmit = () => {\n        const { textField, selectedFilterId, connetedAccount, albumUrl } = this.state;\n        const { accountId } = this.props;\n\n        if ((!textField || textField == \"\") && selectedFilterId == 8) {\n            this.setState({ error: true, loading: false })\n        } else if ((!albumUrl || albumUrl == \"\") && selectedFilterId == 67) {\n            this.setState({ albumUrlError: true, loading: false })\n        } else {\n\n            if (connetedAccount && accountId) {\n                this.createFeed();\n            } else {\n                this.addFacebookAccount();\n            }\n        }\n    }\n\n\n    createFeedFromPage = (accId, parentId, name) => {\n        let { feedObj } = this.state;\n        const { networkId, history } = this.props;\n\n        if (networkId == 3) {\n            feedObj = { ...feedObj, account: accId, connetedAccount: parentId }\n        }\n\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n        createFeedAction(feedObj, networkId, () => {\n            this.setState({ loading: false });\n            this.props.closeAddFeed();\n            history('/assets');\n        }\n        );\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n        const { selectedFilterId } = this.state;\n        //55, 62 filter id \n        addUserAccount(networkId, data, [55, 62].includes(selectedFilterId) ? (responseData) => this.setState({ accountList: responseData }) : (connectAccountId) => this.createFeed(connectAccountId), selectedFilterId);\n\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 8: // Page\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M21.1384 3C21.4146 3 21.6385 3.22386 21.6385 3.5C21.6385 3.58701 21.6157 3.67252 21.5725 3.74807L18 10L21.5725 16.2519C21.7095 16.4917 21.6262 16.7971 21.3865 16.9341C21.3109 16.9773 21.2254 17 21.1384 17H4V22H2V3H21.1384ZM18.5536 5H4V15H18.5536L15.6965 10L18.5536 5Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 67: // Gallery\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 13C18.3221 13 16.7514 13.4592 15.4068 14.2587C16.5908 15.6438 17.5269 17.2471 18.1465 19H20V13ZM16.0037 19C14.0446 14.3021 9.4079 11 4 11V19H16.0037ZM4 9C7.82914 9 11.3232 10.4348 13.9738 12.7961C15.7047 11.6605 17.7752 11 20 11V3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934C2 3.44476 2.45531 3 2.9918 3H6V1H8V5H4V9ZM18 1V5H10V3H16V1H18ZM16.5 10C15.6716 10 15 9.32843 15 8.5C15 7.67157 15.6716 7 16.5 7C17.3284 7 18 7.67157 18 8.5C18 9.32843 17.3284 10 16.5 10Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 55: // Review\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.0006 18.26L4.94715 22.2082L6.52248 14.2799L0.587891 8.7918L8.61493 7.84006L12.0006 0.5L15.3862 7.84006L23.4132 8.7918L17.4787 14.2799L19.054 22.2082L12.0006 18.26ZM12.0006 15.968L16.2473 18.3451L15.2988 13.5717L18.8719 10.2674L14.039 9.69434L12.0006 5.27502L9.96214 9.69434L5.12921 10.2674L8.70231 13.5717L7.75383 18.3451L12.0006 15.968Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 62: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1: // Account\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2ZM12.1597 16C10.1243 16 8.29182 16.8687 7.01276 18.2556C8.38039 19.3474 10.114 20 12 20C13.9695 20 15.7727 19.2883 17.1666 18.1081C15.8956 16.8074 14.1219 16 12.1597 16ZM12 4C7.58172 4 4 7.58172 4 12C4 13.8106 4.6015 15.4807 5.61557 16.8214C7.25639 15.0841 9.58144 14 12.1597 14C14.6441 14 16.8933 15.0066 18.5218 16.6342C19.4526 15.3267 20 13.7273 20 12C20 7.58172 16.4183 4 12 4ZM12 5C14.2091 5 16 6.79086 16 9C16 11.2091 14.2091 13 12 13C9.79086 13 8 11.2091 8 9C8 6.79086 9.79086 5 12 5ZM12 7C10.8954 7 10 7.89543 10 9C10 10.1046 10.8954 11 12 11C13.1046 11 14 10.1046 14 9C14 7.89543 13.1046 7 12 7Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { error, selectedFilterTab, albumUrl, albumUrlError, moderation, loading, connetedAccount, album, textField, account, accountList, selectedFilterId } = this.state;\n        const { filterTabs, networkId, connectedAccountList } = this.props;\n\n        return <>{\n            !(accountList && accountList.length > 0) ? <>\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                    <div className=\"addSourceTabs\">\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n\n                                        <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                            {\n                                                filterTabs && filterTabs.map((filterTab, index) => {\n                                                    const { feedName, feedtype, filter } = filterTab;\n                                                    return <Nav.Item className=\"p-1\" key={index}>\n                                                        <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                            <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                                {this.feedIcon(filter)}\n                                                            </span>\n                                                            {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                })\n                                            }\n                                        </Nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-100\">\n                            <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                            <div className=\"card card-custom gutter-b\">\n                                <div className=\"card-body px-xxl-5\">\n                                    <div className=\"\">\n                                        <Tab.Content>\n                                            {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\n                                                <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                                    <FacebookTab\n                                                        onAddAccount={this.addFacebookAccount}\n                                                        connetedAccount={connetedAccount}\n                                                        onConnectedAccountChange={this.onConnectedAccountChange}\n                                                        tab={selectedFilterTab}\n                                                        text={textField}\n                                                        error={error}\n                                                        connectedAcc={connectedAccountList}\n                                                        onTextChange={this.onTextFieldChange}\n                                                        account={account}\n                                                        onAccountChange={this.onAccountChange}\n                                                        onCheckHandler={this.onCheckHandler}\n                                                        onAlbumChange={this.onAlbumChange}\n                                                        album={album}\n                                                        moderation={moderation}\n                                                        albumUrl={albumUrl}\n                                                        albumUrlError={albumUrlError}\n                                                        onAlbumFieldChange={this.onAlbumFieldChange}\n                                                        feedIcon={this.feedIcon}\n                                                    />\n                                                </Tab.Pane>\n                                            )) : null}\n                                        </Tab.Content>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Container>\n                <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n            </> :\n                <ConnectAccount accountList={accountList} loading={loading} networkId={networkId} connectedAcc={connectedAccountList} filterId={selectedFilterId} createFeedFromPage={this.createFeedFromPage} onBack={() => this.setState({ accountList: [] })} />\n        }\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FacebookFeed)","import React, { Component } from 'react';\nimport AccountPicker from '../../Elements/AccountPicker';\nimport { connect } from 'react-redux';\nimport CheckBoxField from '../../Elements/CheckboxField';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { selectAccount } from '../../../../../Services/Actions/addFeedAction';\nimport Select from 'react-select';\nimport InputField from '../../Elements/InputField';\nimport InfoSection from '../../Elements/InfoSection';\n\nclass InstagramTab extends Component {\n    state = {\n        allAccounts: [{ ConnectedAccounts: { id: 0, value2: 'loading...' } }],\n        selectValue: {},\n        formatedList: [],\n        personalAccountList: [],\n        selectPersonal: {},\n        allConnectAcc: [],\n        allPersonalAcc: []\n    }\n\n    componentDidMount() {\n        this.getAccounts();\n        this.getPersonalAccounts();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.connectedAcc && nextProps.personalAccount) {\n            if (this.state.allConnectAcc.length != nextProps.connectedAcc.length) {\n                this.getAccounts();\n            }\n            if (this.state.allPersonalAcc.length != nextProps.personalAccount.length) {\n                this.getPersonalAccounts();\n            }\n        }\n    }\n\n    getPersonalAccounts = () => {\n        const { personalAccount, onPersonalAccChange } = this.props;\n        if (personalAccount && personalAccount.length > 0) {\n            const formatedOption = this.formatOption(personalAccount, true);\n            onPersonalAccChange(formatedOption[0]);\n            this.setState({ personalAccountList: formatedOption, allPersonalAcc: personalAccount, selectPersonal: formatedOption[0] });\n        }\n    }\n    getAccounts = () => {\n        const { connectedAcc, onSelectedChildAccountChange } = this.props\n        var allAccounts = [];\n        if (connectedAcc && connectedAcc.length > 0) {\n            connectedAcc && connectedAcc.length && connectedAcc.map(acc => {\n                if (acc.ConnectedAccounts.child && acc.ConnectedAccounts.child.length > 0) {\n                    allAccounts = [...allAccounts, ...acc.ConnectedAccounts.child];\n                }\n                else {\n                    this.setState({ allAccounts: [] })\n                }\n            })\n\n            if (allAccounts && allAccounts.length > 0) {\n                const formatedOption = this.formatOption(allAccounts, false);\n                onSelectedChildAccountChange(formatedOption[0]);\n                this.setState({ allAccounts, formatedList: formatedOption, allConnectAcc: connectedAcc, selectValue: formatedOption[0] });\n            }\n        } else {\n            onSelectedChildAccountChange(null)\n            this.setState({ allAccounts: [] })\n        }\n    }\n\n\n\n    onAccountChange = (obj) => {\n        const { value } = obj;\n        const { onPersonalAccChange, onSelectedChildAccountChange, tab } = this.props;\n        if (value && value != \"\") {\n            if (tab == 'personal') {\n                this.props.selectAccount(value);\n                onPersonalAccChange(obj);\n            } else {\n                this.props.selectAccount(value)\n                onSelectedChildAccountChange(obj)\n            }\n        }\n        else {\n            this.props.selectAccount(null)\n        }\n    }\n\n    formatOption = (lists, isPersonal) => {\n        const formatedList = lists.map((item) => ({ label: isPersonal ? item.ConnectedAccounts.accountName : item.ConnectedAccounts.value2, value: item.ConnectedAccounts.id }));\n        if (formatedList && formatedList.length > 0) {\n            return [...formatedList, { label: 'other', value: 0 }];\n        }\n        return []\n    }\n\n    getInfo = (tab) => {\n        switch (tab) {\n            case 'hashtag':\n                return 'Instagram only allows posts from the last 24 hours. If there are no recent posts in the 24-hour duration, then the top 50 posts will be aggregated. Also, all your upcoming posts will be aggregated. Posts collected via hashtags will not include any information of the user.';\n\n            case 'handle':\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\n\n            case 'stories':\n                return 'Initially 32 posts will be aggregated through handle after which all the upcoming posts will be aggregated.';\n\n            case 'stories':\n                return 'Initially stories from the last 24 hours will be shown after which all the upcoming stories will be aggregated.';\n\n            case 'mentions':\n                return 'You will only get upcoming posts after creating mentions feed.';\n\n            case 'tagged':\n                return 'Initially the latest 32 tagged posts on Instagram will be aggregated after which all the upcoming tagged posts will be aggregated.';\n\n            case 'videos':\n                return 'Initially 25 videos will be aggregated through handle after which all the upcoming videos will be aggregated.';\n\n            case 'personal':\n                return 'Initially 32 posts uploaded on personal accounts will be aggregated after which all the upcoming posts will be aggregated.';\n\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { tab, connectedAcc, hashtag, handle, onTextChange, personalAccount, handleError, onAddAccount, album, moderation, onCheckHandler, hashtagPost, excludeVideo, onlyReels, networkId, onAlbumChange, connetedAccount, onConnectedAccountChange, error, feedIcon } = this.props\n        const { formatedList, allAccounts, selectValue, personalAccountList, selectPersonal } = this.state\n\n        return (\n            <>\n                {tab == 'hashtag' || tab == \"handle\" ?\n                    <div className=\"position-relative w-100 mb-3\" style={{ zIndex: 0 }} >\n                        <span className=\"h-44px w-44px block-center svg-icon svg-icon-4 text-gray-500 position-absolute top-0 start-0 translate-middle-x ms-4 ps-1 d-flex\">\n                            {feedIcon(tab == \"hashtag\" ? 26 : 24)}\n                        </span>\n                        <InputField name={tab} className={`form-control form-control-lg fw-bolder px-9 ${(tab == \"hashtag\" && error) || (tab == \"handle\" && handleError) ? 'is-invalid' : ''}`} placeholder={`Enter user ${tab}`} value={tab == \"hashtag\" ? hashtag : handle} onChangeHandler={onTextChange} />\n                        {(tab == \"hashtag\" && error) || (tab == \"handle\" && handleError) ? <span className=\"invalid-feedback\">This field is required</span> : null}\n                    </div>\n                    :\n                    tab == \"personal\" ?\n                        <div className=\"form-group text-center mb-6\">\n                            {personalAccount && personalAccount.length > 0 && personalAccountList && personalAccountList.length > 0 ?\n                                <div className=\"col-md-12\">\n                                    <div className=\"form-group position-relative\">\n                                        <Select className=\"selectpicker\" options={personalAccountList} classNamePrefix=\"selectpicker\" defaultValue={selectPersonal} onChange={(e) => this.onAccountChange(e)} />\n                                    </div>\n                                </div>\n                                :\n                                <div className=\"py-2\">\n                                    <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                        <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                            <img src={baseUrl(\"media/icons/social-icons/instagram.svg\")} height={43} width={43} alt=\"facebook\" />\n                                        </span>\n                                        <div className=\"overflow-hidden signIn_txt px-5\">\n                                            <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Instagram</span>\n                                        </div>\n                                    </button>\n                                </div>\n                            }\n                        </div>\n                        :\n                        connectedAcc && connectedAcc.length > 0 && allAccounts && allAccounts.length > 0 ?\n                            <div className=\"position-relative w-100 mb-3\">\n                                <Select className=\"selectpicker selectpicker-lg\" options={formatedList} classNamePrefix=\"selectpicker\" defaultValue={selectValue} onChange={(e) => this.onAccountChange(e)} />\n                            </div>\n                            :\n                            <div className=\"py-2\">\n                                <button type=\"button\" className=\"btn btn-outline btn-lg align-items-center d-flex signInWithBrand m-auto\" onClick={onAddAccount}>\n                                    <span className=\"h-40px w-40px d-flex align-items-center flex-shrink-0 signInWithBrandIcon me-1 bg-light\">\n                                        <img src={baseUrl(\"media/icons/social-icons/instagram.svg\")} height={43} width={43} alt=\"facebook\" />\n                                    </span>\n                                    <div className=\"overflow-hidden signIn_txt px-5\">\n                                        <span className=\"text-gray-800 mb-0 fs-9 fw-medium text-ellipsis me-2\">Connect Instagram</span>\n                                    </div>\n                                </button>\n                            </div>\n\n                }\n                {\n                    tab == 'hashtag' ? <div className=\"hideforBSearch\">\n                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                            <CheckBoxField isChecked={hashtagPost} onChangeHandler={onCheckHandler} name={\"hashtagPost\"}>\n                                <span className=\"form-check-label\">Get posts containing hashtag only in caption.</span>\n                            </CheckBoxField>\n                        </label>\n                    </div> : null\n                }\n                {\n                    tab == \"hashtag\" || tab == 'handle' ?\n                        <div className=\"hideforBSearch\">\n                            <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                <CheckBoxField isChecked={excludeVideo} onChangeHandler={onCheckHandler} name={\"excludeVideo\"}>\n                                    <span className=\"form-check-label\">Exclude Videos.</span>\n                                </CheckBoxField>\n                            </label>\n                        </div> : null\n                }\n                {\n                    tab != \"stories\" && tab != \"tagged\" ? <div className=\"hideforBSearch\">\n                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                            <CheckBoxField isChecked={onlyReels} onChangeHandler={onCheckHandler} name={\"onlyReels\"}>\n                                <span className=\"form-check-label\">Only Reels. <label className=\"badge badge-light-danger\">New</label></span>\n                            </CheckBoxField>\n                        </label>\n                    </div> : null\n                }\n                {/* <div className=\"hideforBSearch\">\n                    <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                        <CheckBoxField isChecked={moderation} onChangeHandler={onCheckHandler} name={\"moderation\"}>\n                            <span className=\"form-check-label\">Manually approve posts before making them public?</span>\n                        </CheckBoxField>\n                    </label>\n                </div> */}\n                {(connectedAcc && connectedAcc.length > 0) ? <div style={{ display: [\"hashtag\", \"handle\"].includes(tab) ? 'block' : \"none\" }}> <AccountPicker connectedAcc={connectedAcc} personalAccount={personalAccount} personal={tab == 'personal'} networkId={networkId} onConnectedAccountChange={onConnectedAccountChange} /> </div> : null}\n                <InfoSection text={this.getInfo(tab)} />\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(InstagramTab)\n\n\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { capitalizeFirstLetter, showAddAccountAlert } from \"../../../../Services/Utils/utils\";\nimport { addUserAccount, createFeedAction, selectAccount } from \"../../../../Services/Actions/addFeedAction\";\nimport { getFeedsData } from '../../../../Services/Actions/filterActions';\nimport InstagramFeedTab from \"./components/InstagramTab\";\nimport SubmitFeedRequest from \"../Elements/SubmitFeedRequest\";\nimport ConnectAccount from \"../Elements/ConnectAccount\";\n\n\nconst channel = new BroadcastChannel('connect');\n\nclass InstagramFeed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hashtag: \"\",\n            handle: '',\n            error: false,\n            hashtagPost: false,\n            excludeVideo: false,\n            onlyReels: false,\n            hanldeError: false,\n            account: null,\n            connetedAccount: null,\n            feedObj: {},\n            selectedChildAccount: {},\n            personalAcc: {},\n            accountList: [],\n            isAuthRequired: props.isAuthRequired,\n            selectedFilterId: props.filterTabs[0].filter,\n            selectedFilterTab: props.filterTabs[0].feedtype,\n        }\n    }\n\n\n    changeTab = (filterId, feedtype) => {\n        this.setState({ selectedFilterId: filterId, selectedFilterTab: feedtype });\n    }\n\n    onChangeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value, error: false, urlError: false });\n    }\n\n    onPersonalAccChange = (value) => this.setState({ personalAcc: value })\n    onSelectedChildAccountChange = (value) => this.setState({ selectedChildAccount: value })\n    onCheckHandler = event => { this.setState({ [event.target.name]: event.target.checked }) }\n    onConnectedAccountChange = (value) => this.setState({ connetedAccount: value })\n\n    addInstaAccount = () => {\n        const { networkData } = this.props;\n        this.setState({ feedObj: this.createFeedPostData() });\n\n        //need to be checked\n        if ((this.state.selectedFilterTab == \"personal\")) {\n            showAddAccountAlert({ ...networkData, id: 2, name: 'Facebook' });\n            return;\n        }\n\n        showAddAccountAlert(networkData);\n    }\n\n\n\n    createFeedPostData = () => {\n        const { onlyReels, excludeVideo, hashtagPost, hashtag, handle, personalAcc, selectedChildAccount, moderation, selectedFilterId } = this.state;\n        const { collection, accountId } = this.props;\n        var collectionId = []\n        if (collection && collection.length > 0) {\n            collection.map((iCollection) => {\n                collectionId.push(iCollection.value)\n            })\n        }\n        const isCollection = collectionId && collectionId.length > 0 ? { \"collection\": collectionId.join(\",\") } : { \"collection\": \"\" }\n        var obj = {\n            ...isCollection,\n            networkId: selectedFilterId == 1 ? 2 : 18,\n            feedText: [34, 24, 25, 66].includes(selectedFilterId) ? (selectedChildAccount && Object.keys(selectedChildAccount).length > 0) && selectedChildAccount.label : selectedFilterId == 1 ? (personalAcc && Object.keys(personalAcc).length > 0) ? personalAcc.label : \"\" : selectedFilterId == 26 ? hashtag : handle,\n            hashtagCaption: hashtagPost ? 1 : 0,\n            filter: selectedFilterId,\n            accountId: accountId,\n            hashtagIGTV: excludeVideo ? 1 : 0,\n            onlyReels: onlyReels ? 1 : 0,\n            moderation: moderation ? 1 : 0,\n        }\n\n        if ([34, 24, 25, 66].includes(selectedFilterId)) {\n            obj['accountId'] = (selectedChildAccount && Object.keys(selectedChildAccount).length > 0) ? selectedChildAccount.value : \"\"\n        } else if (selectedFilterId == 1) {\n            obj['accountId'] = (personalAcc && Object.keys(personalAcc).length > 0) ? personalAcc.value : \"\"\n        }\n        return obj;\n    }\n\n\n    createFeed = (connectedAccId) => {\n        let obj = this.createFeedPostData();\n        if (connectedAccId != null) {\n            obj = { ...obj, accountId: connectedAccId }\n        }\n\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n\n        createFeedAction(obj, obj.networkId, () => {\n            this.props.getAllfeeds()\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            this.props.history('/assets');\n        });\n    }\n\n    onSubmit = () => {\n        const { hashtag, handle, selectedFilterId, isAuthRequired } = this.state;\n        const { accountId } = this.props;\n        if ((!hashtag || hashtag == \"\") && selectedFilterId == 26) {\n            this.setState({ error: true, loading: false })\n        } else if ((!handle || handle == \"\") && selectedFilterId == 23) {\n            this.setState({ handleError: true, isLoading: false })\n        } else {\n            if (isAuthRequired) {\n                if (accountId) {\n                    this.createFeed(null);\n                } else {\n                    this.addInstaAccount();\n                }\n            } else {\n                if ([23, 26].includes(selectedFilterId)) {\n                    this.createFeed(accountId != null ? accountId : 0);\n                } else {\n                    if (accountId) {\n                        this.createFeed(null);\n                    } else {\n                        this.addInstaAccount();\n                    }\n                }\n            }\n\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId } = response;\n        const { selectedFilterId } = this.state;\n\n        //34, 24, 25, 66 filterId's\n        addUserAccount(networkId, data, [34, 24, 25, 66].includes(selectedFilterId) ? (responseData) => this.setState({ accountList: responseData }) : (connectAccountId) => this.createFeed(connectAccountId, true), selectedFilterId);\n\n    }\n\n    createFeedFromPage = (accId, parentId, name) => {\n        let { feedObj } = this.state;\n        const { networkId } = this.props;\n\n        if (networkId == 18) {\n\n            if ([34, 24, 25, 66].includes(parseInt(feedObj.filter))) {\n                feedObj.feedText = name;\n            }\n\n            feedObj.accountId = parentId;\n        }\n\n        this.setState({ loading: true, error: false, handleError: false, mentionError: false, advanceError: false, favoriteError: false, listNameError: false, showListError: false });\n        createFeedAction(feedObj, networkId, () => {\n            this.setState({ loading: false, isAuthRequired: true });\n            this.props.closeAddFeed();\n            this.props.history('/assets');\n        });\n    }\n\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    feedIcon = (iconId) => {\n        switch (iconId) {\n            case 26: // Hashtag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.78428 14L8.2047 10H4V8H8.41491L8.94043 3H10.9514L10.4259 8H14.4149L14.9404 3H16.9514L16.4259 8H20V10H16.2157L15.7953 14H20V16H15.5851L15.0596 21H13.0486L13.5741 16H9.58509L9.05957 21H7.04855L7.57407 16H4V14H7.78428ZM9.7953 14H13.7843L14.2047 10H10.2157L9.7953 14Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 23:\n            case 24: // Handle\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 34: // Stories\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M10.9999 2.04932L11 4.06182C7.05371 4.5539 4 7.9203 4 11.9999C4 16.4182 7.58172 19.9999 12 19.9999C13.8487 19.9999 15.5509 19.3729 16.9055 18.3199L18.3289 19.7427C16.605 21.1535 14.4014 21.9999 12 21.9999C6.47715 21.9999 2 17.5228 2 11.9999C2 6.81462 5.94662 2.55109 10.9999 2.04932ZM21.9506 13C21.7509 15.011 20.9555 16.8467 19.7433 18.3282L18.3199 16.9055C19.1801 15.7989 19.756 14.4606 19.9381 12.9999L21.9506 13ZM13.0011 2.04942C17.725 2.51895 21.4815 6.27583 21.9506 10.9998L19.9381 11C19.4869 7.38156 16.6192 4.51358 13.001 4.06194L13.0011 2.04942Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 25: // tag\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M10.9042 2.1001L20.8037 3.51431L22.2179 13.4138L13.0255 22.6062C12.635 22.9967 12.0019 22.9967 11.6113 22.6062L1.71184 12.7067C1.32131 12.3162 1.32131 11.683 1.71184 11.2925L10.9042 2.1001ZM11.6113 4.22142L3.83316 11.9996L12.3184 20.4849L20.0966 12.7067L19.036 5.28208L11.6113 4.22142ZM13.7327 10.5854C12.9516 9.80433 12.9516 8.538 13.7327 7.75695C14.5137 6.9759 15.78 6.9759 16.5611 7.75695C17.3421 8.538 17.3421 9.80433 16.5611 10.5854C15.78 11.3664 14.5137 11.3664 13.7327 10.5854Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 66: // Video\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M3 3.9934C3 3.44476 3.44495 3 3.9934 3H20.0066C20.5552 3 21 3.44495 21 3.9934V20.0066C21 20.5552 20.5551 21 20.0066 21H3.9934C3.44476 21 3 20.5551 3 20.0066V3.9934ZM5 5V19H19V5H5ZM10.6219 8.41459L15.5008 11.6672C15.6846 11.7897 15.7343 12.0381 15.6117 12.2219C15.5824 12.2658 15.5447 12.3035 15.5008 12.3328L10.6219 15.5854C10.4381 15.708 10.1897 15.6583 10.0672 15.4745C10.0234 15.4088 10 15.3316 10 15.2526V8.74741C10 8.52649 10.1791 8.34741 10.4 8.34741C10.479 8.34741 10.5562 8.37078 10.6219 8.41459Z\" fill=\"currentColor\"></path></svg>\n                break;\n            case 1: // Account\n                return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2ZM12.1597 16C10.1243 16 8.29182 16.8687 7.01276 18.2556C8.38039 19.3474 10.114 20 12 20C13.9695 20 15.7727 19.2883 17.1666 18.1081C15.8956 16.8074 14.1219 16 12.1597 16ZM12 4C7.58172 4 4 7.58172 4 12C4 13.8106 4.6015 15.4807 5.61557 16.8214C7.25639 15.0841 9.58144 14 12.1597 14C14.6441 14 16.8933 15.0066 18.5218 16.6342C19.4526 15.3267 20 13.7273 20 12C20 7.58172 16.4183 4 12 4ZM12 5C14.2091 5 16 6.79086 16 9C16 11.2091 14.2091 13 12 13C9.79086 13 8 11.2091 8 9C8 6.79086 9.79086 5 12 5ZM12 7C10.8954 7 10 7.89543 10 9C10 10.1046 10.8954 11 12 11C13.1046 11 14 10.1046 14 9C14 7.89543 13.1046 7 12 7Z\" fill=\"currentColor\"></path></svg>\n                break;\n            default:\n                break;\n        }\n    }\n    render() {\n        const { error, selectedFilterTab, selectedFilterId, hashtag, handle, handleError, moderation, hashtagPost, excludeVideo, onlyReels, loading, connetedAccount, account, accountList } = this.state;\n        const { filterTabs, networkId, connectedAccountList, personalAccount } = this.props;\n\n        return !(accountList && accountList.length > 0) ? <>\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={selectedFilterTab}>\n                <div className=\"addSourceTabs\">\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Select the type of posts</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <Nav variant=\"pills\" className=\"flex-wrap justify-content-center pills-lg\">\n                                    {filterTabs && filterTabs.map((filterTab, index) => {\n                                        const { feedName, feedtype, filter } = filterTab;\n                                        return <Nav.Item className=\"p-1\" key={index}>\n                                            <Nav.Link eventKey={feedtype} onClick={() => this.changeTab(filter, feedtype)} key={`networkTab${filter}`}>\n                                                <span className=\"svg-icon\" id={`svg-icon-${filter}`}>\n                                                    {this.feedIcon(filter)}\n                                                </span>\n                                                {capitalizeFirstLetter(feedtype === 'favorites' ? feedName : feedtype)}\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    })}\n                                </Nav>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"w-100\">\n                        <h6 className=\"fs-7 mb-3\">Enter {selectedFilterTab}</h6>\n                        <div className=\"card card-custom gutter-b\">\n                            <div className=\"card-body px-xxl-5\">\n                                <Tab.Content>\n                                    {(filterTabs && filterTabs.length > 0) ? filterTabs.map(filter => (\n                                        <Tab.Pane eventKey={filter.feedtype} key={filter.filter} className=\"nav-link className= p-0\">\n                                            <InstagramFeedTab\n                                                onAddAccount={this.addInstaAccount}\n                                                connetedAccount={connetedAccount}\n                                                onConnectedAccountChange={this.onConnectedAccountChange}\n                                                tab={selectedFilterTab}\n                                                hashtag={hashtag}\n                                                error={error}\n                                                connectedAcc={connectedAccountList}\n                                                onTextChange={this.onChangeHandler}\n                                                account={account}\n                                                onCheckHandler={this.onCheckHandler}\n                                                moderation={moderation}\n                                                handle={handle}\n                                                handleError={handleError}\n                                                personalAccount={personalAccount}\n                                                hashtagPost={hashtagPost}\n                                                onlyReels={onlyReels}\n                                                excludeVideo={excludeVideo}\n                                                onPersonalAccChange={this.onPersonalAccChange}\n                                                onSelectedChildAccountChange={this.onSelectedChildAccountChange}\n                                                feedIcon={this.feedIcon}\n                                            />\n                                        </Tab.Pane>\n                                    )) : null}\n                                </Tab.Content>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Tab.Container>\n            <SubmitFeedRequest supportUrl={'#'} videoUrl={'#'} cancelFeed={() => this.props.onBack()} sumbitFeed={() => this.onSubmit()} loading={loading} />\n        </> :\n            <ConnectAccount accountList={accountList} loading={loading} networkId={networkId} connectedAcc={connectedAccountList} filterId={selectedFilterId} createFeedFromPage={this.createFeedFromPage} onBack={() => this.setState({ accountList: [] })} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accountId: state.addFeed.selectedAccount,\n        connectedAccountList: state.addFeed.connectedAcc,\n        personalAccount: state.addFeed.personalAccount,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectAccount: (id) => dispatch(selectAccount(id)),\n        getAllfeeds: () => dispatch(getFeedsData()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstagramFeed)","\nimport React, { Component, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Airbnb from '../../../../Feeds/Airbnb/Airbnb';\nimport Flickr from '../../../../Feeds/Flickr/Flickr';\nimport { getConnectedAccount } from '../../../../../../Services/Actions/addFeedAction';\nimport Tumblr from '../../../../Feeds/Tumblr/Tumblr';\nimport Pinterest from '../../../../Feeds/Pinterest/Pinterest';\nimport Giphy from '../../../../Feeds/Giphy/Giphy';\nimport Rss from '../../../../Feeds/Rss/Rss';\nimport Yelp from '../../../../Feeds/Yelp/Yelp';\nimport LinkedIn from '../../../../Feeds/Linkedin/Linkedin';\nimport YoutubeFeed from '../../../../Feeds/Youtube/Youtube';\nimport YammerFeed from '../../../../Feeds/Yammer/Yammer';\nimport Tiktok from '../../../../Feeds/Tiktok/Tiktok';\nimport Vimeo from '../../../../Feeds/Vimeo/Vimeo';\nimport TwitterFeed from '../../../../Feeds/Twitter/Twitter';\nimport GoogleFeed from '../../../../Feeds/Google/Google';\nimport SlackFeed from '../../../../Feeds/Slack/Slack';\nimport FacebookFeed from '../../../../Feeds/Facebook/Facebook';\nimport Instagram from '../../../../Feeds/Instagram/Instagram';\n\n\n\n\nconst CreateFeed = (props) => {\n    const { filterTabs, selectedNetwork, collection, getConnectedAccount, authRequire, onBack, id, history, editMediaHandleCallback } = props;\n    let isAuthRequired = authRequire.includes(id);\n\n    useEffect(() => {\n        if (id == 18) {\n            getConnectedAccount(2);\n        }\n        getConnectedAccount(id);\n    }, [props.id])\n\n    switch (id) {\n        case 1:\n            return filterTabs ? <TwitterFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 18:\n            return filterTabs ? <Instagram filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 3:\n            return filterTabs ? <FacebookFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 5:\n            return filterTabs ? <Pinterest filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 23:\n            return filterTabs ? <Airbnb filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 7:\n            return filterTabs ? <YoutubeFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 11:\n            return filterTabs ? <Tumblr filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 12:\n            return filterTabs ? <Rss filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 6:\n            return filterTabs ? <Flickr filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 4:\n            return filterTabs ? <GoogleFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 8:\n            return filterTabs ? <Vimeo filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} isAuthRequired={isAuthRequired} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 28:\n            return filterTabs ? <Tiktok filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 10:\n            return filterTabs ? <LinkedIn filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 19:\n            return filterTabs ? <Yelp filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 21:\n            return filterTabs ? <YammerFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 20:\n            return filterTabs ? <SlackFeed filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} networkData={selectedNetwork} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        case 26:\n            return filterTabs ? <Giphy filterTabs={filterTabs} collection={collection} networkId={selectedNetwork ? selectedNetwork.id : 0} onBack={onBack} history={history} closeAddFeed={() => editMediaHandleCallback(false)} /> : null\n\n        default:\n            return <>network id - {id}</>\n    }\n}\nclass AddFeedByNetwork extends Component {\n\n    render() {\n        const { selectedNetwork } = this.props;\n        return <div className=\"\">\n            {selectedNetwork ? <CreateFeed id={selectedNetwork.id} {...this.props} /> : null}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authRequire: state.addFeed.authRequire\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getConnectedAccount: (id) => dispatch(getConnectedAccount(id)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFeedByNetwork);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.debounce');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Copyright (c) 2016-present, Ken Hibino.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Licensed under the MIT License (MIT).\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * See https://kenny-hibino.github.io/react-places-autocomplete\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\n// transform snake_case to camelCase\nvar formattedSuggestion = function formattedSuggestion(structured_formatting) {\n  return {\n    mainText: structured_formatting.main_text,\n    secondaryText: structured_formatting.secondary_text\n  };\n};\n\nvar PlacesAutocomplete = function (_React$Component) {\n  _inherits(PlacesAutocomplete, _React$Component);\n\n  function PlacesAutocomplete(props) {\n    _classCallCheck(this, PlacesAutocomplete);\n\n    var _this = _possibleConstructorReturn(this, (PlacesAutocomplete.__proto__ || Object.getPrototypeOf(PlacesAutocomplete)).call(this, props));\n\n    _this.init = function () {\n      if (!window.google) {\n        throw new Error('[react-places-autocomplete]: Google Maps JavaScript API library must be loaded. See: https://github.com/kenny-hibino/react-places-autocomplete#load-google-library');\n      }\n\n      if (!window.google.maps.places) {\n        throw new Error('[react-places-autocomplete]: Google Maps Places library must be loaded. Please add `libraries=places` to the src URL. See: https://github.com/kenny-hibino/react-places-autocomplete#load-google-library');\n      }\n\n      _this.autocompleteService = new window.google.maps.places.AutocompleteService();\n      _this.autocompleteOK = window.google.maps.places.PlacesServiceStatus.OK;\n      _this.setState(function (state) {\n        if (state.ready) {\n          return null;\n        } else {\n          return { ready: true };\n        }\n      });\n    };\n\n    _this.autocompleteCallback = function (predictions, status) {\n      _this.setState({ loading: false });\n      if (status !== _this.autocompleteOK) {\n        _this.props.onError(status, _this.clearSuggestions);\n        return;\n      }\n      var highlightFirstSuggestion = _this.props.highlightFirstSuggestion;\n\n      _this.setState({\n        suggestions: predictions.map(function (p, idx) {\n          return {\n            id: p.id,\n            description: p.description,\n            placeId: p.place_id,\n            active: highlightFirstSuggestion && idx === 0 ? true : false,\n            index: idx,\n            formattedSuggestion: formattedSuggestion(p.structured_formatting),\n            matchedSubstrings: p.matched_substrings,\n            terms: p.terms,\n            types: p.types\n          };\n        })\n      });\n    };\n\n    _this.fetchPredictions = function () {\n      var value = _this.props.value;\n\n      if (value.length) {\n        _this.setState({ loading: true });\n        _this.autocompleteService.getPlacePredictions(_extends({}, _this.props.searchOptions, {\n          input: value\n        }), _this.autocompleteCallback);\n      }\n    };\n\n    _this.clearSuggestions = function () {\n      _this.setState({ suggestions: [] });\n    };\n\n    _this.clearActive = function () {\n      _this.setState({\n        suggestions: _this.state.suggestions.map(function (suggestion) {\n          return _extends({}, suggestion, {\n            active: false\n          });\n        })\n      });\n    };\n\n    _this.handleSelect = function (address, placeId, suggestion) {\n      _this.clearSuggestions();\n      if (_this.props.onSelect) {\n        _this.props.onSelect(address, placeId, suggestion);\n      } else {\n        _this.props.onChange(address);\n      }\n    };\n\n    _this.getActiveSuggestion = function () {\n      return _this.state.suggestions.find(function (suggestion) {\n        return suggestion.active;\n      });\n    };\n\n    _this.selectActiveAtIndex = function (index) {\n      var activeName = _this.state.suggestions.find(function (suggestion) {\n        return suggestion.index === index;\n      }).description;\n      _this.setActiveAtIndex(index);\n      _this.props.onChange(activeName);\n    };\n\n    _this.selectUserInputValue = function () {\n      _this.clearActive();\n      _this.props.onChange(_this.state.userInputValue);\n    };\n\n    _this.handleEnterKey = function () {\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.handleSelect(_this.props.value, null, null);\n      } else {\n        _this.handleSelect(activeSuggestion.description, activeSuggestion.placeId, activeSuggestion);\n      }\n    };\n\n    _this.handleDownKey = function () {\n      if (_this.state.suggestions.length === 0) {\n        return;\n      }\n\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.selectActiveAtIndex(0);\n      } else if (activeSuggestion.index === _this.state.suggestions.length - 1) {\n        _this.selectUserInputValue();\n      } else {\n        _this.selectActiveAtIndex(activeSuggestion.index + 1);\n      }\n    };\n\n    _this.handleUpKey = function () {\n      if (_this.state.suggestions.length === 0) {\n        return;\n      }\n\n      var activeSuggestion = _this.getActiveSuggestion();\n      if (activeSuggestion === undefined) {\n        _this.selectActiveAtIndex(_this.state.suggestions.length - 1);\n      } else if (activeSuggestion.index === 0) {\n        _this.selectUserInputValue();\n      } else {\n        _this.selectActiveAtIndex(activeSuggestion.index - 1);\n      }\n    };\n\n    _this.handleInputKeyDown = function (event) {\n      /* eslint-disable indent */\n      switch (event.key) {\n        case 'Enter':\n          event.preventDefault();\n          _this.handleEnterKey();\n          break;\n        case 'ArrowDown':\n          event.preventDefault(); // prevent the cursor from moving\n          _this.handleDownKey();\n          break;\n        case 'ArrowUp':\n          event.preventDefault(); // prevent the cursor from moving\n          _this.handleUpKey();\n          break;\n        case 'Escape':\n          _this.clearSuggestions();\n          break;\n      }\n      /* eslint-enable indent */\n    };\n\n    _this.setActiveAtIndex = function (index) {\n      _this.setState({\n        suggestions: _this.state.suggestions.map(function (suggestion, idx) {\n          if (idx === index) {\n            return _extends({}, suggestion, { active: true });\n          } else {\n            return _extends({}, suggestion, { active: false });\n          }\n        })\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var value = event.target.value;\n\n      _this.props.onChange(value);\n      _this.setState({ userInputValue: value });\n      if (!value) {\n        _this.clearSuggestions();\n        return;\n      }\n      if (_this.props.shouldFetchSuggestions) {\n        _this.debouncedFetchPredictions();\n      }\n    };\n\n    _this.handleInputOnBlur = function () {\n      if (!_this.mousedownOnSuggestion) {\n        _this.clearSuggestions();\n      }\n    };\n\n    _this.getActiveSuggestionId = function () {\n      var activeSuggestion = _this.getActiveSuggestion();\n      return activeSuggestion ? 'PlacesAutocomplete__suggestion-' + activeSuggestion.placeId : undefined;\n    };\n\n    _this.getIsExpanded = function () {\n      return _this.state.suggestions.length > 0;\n    };\n\n    _this.getInputProps = function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (options.hasOwnProperty('value')) {\n        throw new Error('[react-places-autocomplete]: getInputProps does not accept `value`. Use `value` prop instead');\n      }\n\n      if (options.hasOwnProperty('onChange')) {\n        throw new Error('[react-places-autocomplete]: getInputProps does not accept `onChange`. Use `onChange` prop instead');\n      }\n\n      var defaultInputProps = {\n        type: 'text',\n        autoComplete: 'off',\n        role: 'combobox',\n        'aria-autocomplete': 'list',\n        'aria-expanded': _this.getIsExpanded(),\n        'aria-activedescendant': _this.getActiveSuggestionId(),\n        disabled: !_this.state.ready\n      };\n\n      return _extends({}, defaultInputProps, options, {\n        onKeyDown: (0, _helpers.compose)(_this.handleInputKeyDown, options.onKeyDown),\n        onBlur: (0, _helpers.compose)(_this.handleInputOnBlur, options.onBlur),\n        value: _this.props.value,\n        onChange: function onChange(event) {\n          _this.handleInputChange(event);\n        }\n      });\n    };\n\n    _this.getSuggestionItemProps = function (suggestion) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var handleSuggestionMouseEnter = _this.handleSuggestionMouseEnter.bind(_this, suggestion.index);\n      var handleSuggestionClick = _this.handleSuggestionClick.bind(_this, suggestion);\n\n      return _extends({}, options, {\n        key: suggestion.id,\n        id: _this.getActiveSuggestionId(),\n        role: 'option',\n        onMouseEnter: (0, _helpers.compose)(handleSuggestionMouseEnter, options.onMouseEnter),\n        onMouseLeave: (0, _helpers.compose)(_this.handleSuggestionMouseLeave, options.onMouseLeave),\n        onMouseDown: (0, _helpers.compose)(_this.handleSuggestionMouseDown, options.onMouseDown),\n        onMouseUp: (0, _helpers.compose)(_this.handleSuggestionMouseUp, options.onMouseUp),\n        onTouchStart: (0, _helpers.compose)(_this.handleSuggestionTouchStart, options.onTouchStart),\n        onTouchEnd: (0, _helpers.compose)(_this.handleSuggestionMouseUp, options.onTouchEnd),\n        onClick: (0, _helpers.compose)(handleSuggestionClick, options.onClick)\n      });\n    };\n\n    _this.handleSuggestionMouseEnter = function (index) {\n      _this.setActiveAtIndex(index);\n    };\n\n    _this.handleSuggestionMouseLeave = function () {\n      _this.mousedownOnSuggestion = false;\n      _this.clearActive();\n    };\n\n    _this.handleSuggestionMouseDown = function (event) {\n      event.preventDefault();\n      _this.mousedownOnSuggestion = true;\n    };\n\n    _this.handleSuggestionTouchStart = function () {\n      _this.mousedownOnSuggestion = true;\n    };\n\n    _this.handleSuggestionMouseUp = function () {\n      _this.mousedownOnSuggestion = false;\n    };\n\n    _this.handleSuggestionClick = function (suggestion, event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      var description = suggestion.description,\n          placeId = suggestion.placeId;\n\n      _this.handleSelect(description, placeId, suggestion);\n      setTimeout(function () {\n        _this.mousedownOnSuggestion = false;\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      suggestions: [],\n      userInputValue: props.value,\n      ready: !props.googleCallbackName\n    };\n\n    _this.debouncedFetchPredictions = (0, _lodash2.default)(_this.fetchPredictions, props.debounce);\n    return _this;\n  }\n\n  _createClass(PlacesAutocomplete, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var googleCallbackName = this.props.googleCallbackName;\n\n      if (googleCallbackName) {\n        var isPlacesLoaded = window.google && window.google.maps && window.google.maps.places;\n        if (!isPlacesLoaded) {\n          window[googleCallbackName] = this.init;\n        } else {\n          this.init();\n        }\n      } else {\n        this.init();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var googleCallbackName = this.props.googleCallbackName;\n\n      if (googleCallbackName && window[googleCallbackName]) {\n        delete window[googleCallbackName];\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children({\n        getInputProps: this.getInputProps,\n        getSuggestionItemProps: this.getSuggestionItemProps,\n        loading: this.state.loading,\n        suggestions: this.state.suggestions\n      });\n    }\n  }]);\n\n  return PlacesAutocomplete;\n}(_react2.default.Component);\n\nPlacesAutocomplete.propTypes = {\n  onChange: _propTypes2.default.func.isRequired,\n  value: _propTypes2.default.string.isRequired,\n  children: _propTypes2.default.func.isRequired,\n  onError: _propTypes2.default.func,\n  onSelect: _propTypes2.default.func,\n  searchOptions: _propTypes2.default.shape({\n    bounds: _propTypes2.default.object,\n    componentRestrictions: _propTypes2.default.object,\n    location: _propTypes2.default.object,\n    offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    radius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    types: _propTypes2.default.array\n  }),\n  debounce: _propTypes2.default.number,\n  highlightFirstSuggestion: _propTypes2.default.bool,\n  shouldFetchSuggestions: _propTypes2.default.bool,\n  googleCallbackName: _propTypes2.default.string\n};\n\nPlacesAutocomplete.defaultProps = {\n  /* eslint-disable no-unused-vars, no-console */\n  onError: function onError(status, _clearSuggestions) {\n    return console.error('[react-places-autocomplete]: error happened when fetching data from Google Maps API.\\nPlease check the docs here (https://developers.google.com/maps/documentation/javascript/places#place_details_responses)\\nStatus: ', status);\n  },\n  /* eslint-enable no-unused-vars, no-console */\n  searchOptions: {},\n  debounce: 200,\n  highlightFirstSuggestion: false,\n  shouldFetchSuggestions: true\n};\n\nexports.default = PlacesAutocomplete;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar compose = exports.compose = function compose() {\n  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    fns.forEach(function (fn) {\n      return fn && fn.apply(undefined, args);\n    });\n  };\n};\n\nvar pick = exports.pick = function pick(obj) {\n  for (var _len3 = arguments.length, props = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    props[_key3 - 1] = arguments[_key3];\n  }\n\n  return props.reduce(function (newObj, prop) {\n    if (obj && obj.hasOwnProperty(prop)) {\n      newObj[prop] = obj[prop];\n    }\n    return newObj;\n  }, {});\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLatLng = exports.geocodeByPlaceId = exports.geocodeByAddress = undefined;\n\nvar _PlacesAutocomplete = require('./PlacesAutocomplete');\n\nvar _PlacesAutocomplete2 = _interopRequireDefault(_PlacesAutocomplete);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.geocodeByAddress = _utils.geocodeByAddress;\nexports.geocodeByPlaceId = _utils.geocodeByPlaceId;\nexports.getLatLng = _utils.getLatLng;\nexports.default = _PlacesAutocomplete2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar geocodeByAddress = exports.geocodeByAddress = function geocodeByAddress(address) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ address: address }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};\n\nvar getLatLng = exports.getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var latLng = {\n        lat: result.geometry.location.lat(),\n        lng: result.geometry.location.lng()\n      };\n      resolve(latLng);\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nvar geocodeByPlaceId = exports.geocodeByPlaceId = function geocodeByPlaceId(placeId) {\n  var geocoder = new window.google.maps.Geocoder();\n  var OK = window.google.maps.GeocoderStatus.OK;\n\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode({ placeId: placeId }, function (results, status) {\n      if (status !== OK) {\n        reject(status);\n      }\n      resolve(results);\n    });\n  });\n};"],"names":["SubmitFeedRequest","this","props","supportUrl","videoUrl","cancelFeed","sumbitFeed","loading","hideBtn","className","Suspense","fallback","content","type","onClick","Component","InputField","value","onChangeHandler","placeholder","name","autoComplete","onChange","CheckBoxField","isChecked","checked","children","Airbnb","changeTab","filterId","feedtype","setState","selectedFilterId","selectedFilterTab","event","target","onCheckHandler","onSubmit","state","pageUrl","moderation","collection","networkId","history","error","obj","filter","airbnb_page_review","createFeedAction","getAllfeeds","closeAddFeed","filterTabs","Tab","id","defaultActiveKey","Object","keys","length","Nav","variant","map","filterTab","index","feedName","eventKey","xmlns","viewBox","width","height","d","fill","capitalizeFirstLetter","onBack","connect","accountId","addFeed","selectedAccount","connectedAccountList","connectedAcc","dispatch","getFeedsData","Flickr","onManuallyApproveChange","hashtag","handle","handleError","collectionId","iCollection","push","isCollection","join","field1","field2","feedIcon","iconId","style","zIndex","Tumblr","Pinterest","userBoard","errorMsg","field12boardurl","includes","url","split","replace","isAuthRequired","Giphy","search","sticker","stickerError","Rss","feedUrl","urlError","fieldtitle","onClickToDwonloadSample","isRequest","saveAs","baseUrl","setTimeout","sampleXml","Collapse","in","maxWidth","src","alt","download","transform","SearchPlace","useState","address","setAddress","list","setList","spinnerActive","spinnerActiveFun","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","onLatlanChange","lat","lng","catch","console","e","onFieldTextChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","top","Dropdown","show","options","wheelPropagation","suggestion","v1","v2","description","placeId","whiteSpace","Yelp","debounce","HttpClient","post","AUTOCOMPLETE","Latlng","latlng","response","result","data","response_code","keywordList","responseData","ex","handleOnChange","locationApiCall","perv","keywordSelected","item","prev","keyword","data_handle_playlistName","isSelectedFromList","slug","data_slug_alias","onTextFieldChange","location","locationError","businessUrl","businessUrlError","keywordError","businessPageUrl27","businessName28","businessKeywordfield28","businessKeyword28","autoClose","image_url","InfoSection","text","opacity","x","y","rx","BulkDropzone","uppyOne","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","params","auth","key","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","on","stepName","onUploadSuccess","original_name","cancelAll","file","toast","size","close","reason","fileName","proudlyDisplayPoweredByUppy","hideUploadButton","showProgressDetails","disableThumbnailGenerator","showSelectedFiles","showRemoveButtonAfterComplete","disableInformer","uppy","LinkedIn","imageUrl","postUrl","href","YoutubeTabs","query","youtubeAutoComplete","res","items","onYoutubeChange","onValueChange","tab","onListClick","onChannelIdChange","snippet","title","channelTitle","playlistId","channelId","document","getElementById","onKeywordChange","checkBox","onCheckBoxChange","shortError","playListError","locationKeywordError","class","thumbnails","default","YoutubeFeed","textField","clearValues","feedText","keywords","AccountPicker","disconnectAccount","account","accounts","ConnectedAccounts","updateAccountsList","acc","onConnectedAccountChange","selectAccount","deleteAccount","Swal","icon","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonAriaLabel","dismiss","onAccountChange","personalAccount","personal","ProfileImage","imageSize","symbolClass","accountName","profileUrl","profilePicture","Network","callback","disconnectUser","channel","BroadcastChannel","YammerFeed","addYammerAccount","networkData","showAddAccountAlert","createFeed","connectAccountId","groupId","topicId","connetedAccount","topicError","readAuthenticationCode","JSON","parse","addUserAccount","addEventListener","removeEventListener","AccountSelect","accountList","formatedOptions","label","classNamePrefix","TiktokFeed","addTiktokAccount","onSelectedChildAccountChange","selectedChildAccount","onPersonalAccChange","personalAcc","hashtagPost","hashtagCaption","isLoading","getPersonalAccounts","formatedOption","formatOption","personalAccountList","allPersonalAcc","selectPersonal","getInfo","getAccounts","allAccounts","child","formatedList","allConnectAcc","selectValue","display","VimeoFeed","addVimeoAccount","TwitterTabs","showList","lists","handleAutoComplete","onSelectList","onListNameChange","onListIdChange","owner_id","userName","showListError","listNameError","listName","advanced","mentionError","advanceError","multiPhoto","excludeRetweets","listname","excludeReplies","mentions","favorites","favoriteError","Twitter","listId","userId","addTwitterAccount","excludeRetweet","multiplePhoto","authRequire","connectedAccount","TwitterTab","onExcRetweetChange","PlaceDropDown","v3","formattedSuggestion","mainText","GoogleTab","accountOption","parentOption","getChildAccountData","f","i","onAccountIdChange","childAcc","onAccountChildChange","mainAccountId","parent","onParentSelected","childAcccounts","selectedAcc","value2","nextProps","otherAccount","accountChild","onotherAccount","onAddAccount","defaultValue","GoogleFeed","placeName","addGoogleAccount","getConnectedAccount","fetchConnectedAccounts","SlackTab","handleInput","channelError","menuPlacement","findIndex","SlackFeed","addSlackAccount","parentAcc","connectedAccounts","FacebookTab","handles","openSelect","showHandle","handleTextChange","onTextChange","onSelectHandle","link","querySelector","onAccChange","selectedOption","find","onAlbumFieldChange","albumUrl","albumUrlError","album","onAlbumChange","authenticate","onAuthenticateChange","ConnectAccount","createFeedFromPage","backgroundImage","GET_NETWORK_ICON","toUpperCase","minWidth","FacebookFeed","addFacebookAccount","feedObj","createFeedPostData","parseInt","field","onlyReels","hashtagIGTV","accId","parentId","InstagramTab","isPersonal","excludeVideo","InstagramFeed","addInstaAccount","connectedAccId","hanldeError","CreateFeed","selectedNetwork","editMediaHandleCallback","useEffect","Instagram","Facebook","Youtube","Google","Vimeo","Tiktok","Yammer","Slack","AddFeedByNetwork","defineProperty","exports","_extends","assign","arguments","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","require","_propTypes2","_lodash2","_helpers","__esModule","PlacesAutocomplete","_React$Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","init","window","google","Error","maps","places","autocompleteService","AutocompleteService","autocompleteOK","PlacesServiceStatus","OK","ready","autocompleteCallback","predictions","status","highlightFirstSuggestion","p","idx","place_id","active","structured_formatting","main_text","secondaryText","secondary_text","matchedSubstrings","matched_substrings","terms","types","onError","clearSuggestions","fetchPredictions","getPlacePredictions","searchOptions","input","clearActive","getActiveSuggestion","selectActiveAtIndex","activeName","setActiveAtIndex","selectUserInputValue","userInputValue","handleEnterKey","activeSuggestion","undefined","handleDownKey","handleUpKey","handleInputKeyDown","preventDefault","handleInputChange","shouldFetchSuggestions","debouncedFetchPredictions","handleInputOnBlur","mousedownOnSuggestion","getActiveSuggestionId","getIsExpanded","defaultInputProps","role","disabled","onKeyDown","compose","onBlur","handleSuggestionMouseEnter","bind","handleSuggestionClick","onMouseEnter","onMouseLeave","handleSuggestionMouseLeave","onMouseDown","handleSuggestionMouseDown","onMouseUp","handleSuggestionMouseUp","onTouchStart","handleSuggestionTouchStart","onTouchEnd","googleCallbackName","subClass","superClass","create","constructor","setPrototypeOf","_inherits","propTypes","func","isRequired","string","shape","bounds","object","componentRestrictions","offset","oneOfType","number","radius","array","bool","defaultProps","_clearSuggestions","_len","fns","Array","_key","_len2","args","_key2","forEach","fn","apply","pick","_len3","_key3","reduce","newObj","prop","_PlacesAutocomplete","_PlacesAutocomplete2","_utils","geocodeByPlaceId","geocoder","Geocoder","GeocoderStatus","Promise","resolve","reject","geocode","geometry"],"sourceRoot":""}