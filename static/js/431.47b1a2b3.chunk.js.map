{"version":3,"file":"static/js/431.47b1a2b3.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Swal from 'sweetalert2';\nimport { Cookies } from \"react-cookie\";\nimport { HOST_DOMAIN, INSTA_CLIENT_ID } from '../../../../../../Services/Api'\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport ProfileImage from \"../../../../CommonComponents/ProfileImage/ProfileImage\";\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\nimport { GET_NETWORK_ICON, CAPITALIZE_FIRST_LETTER, GET_NETWORK_NAME } from '../../../../../../Services/Utils/utils'\nimport { flickrConnect, tumblerConnect } from '../../../../SocialLogin/auth'\nimport { getFbAuthUrl, getYammerAuthUrl, getVimeoAuthUrl, tiktokAuthentication } from '../../../../../../Layouts/Main/AuthCallback/AuthSocialAcc'\nimport { addFacebookAccount, addInstaAccount } from '../../../../../../Layouts/Main/AuthCallback/connectSocialAcc'\nimport { addUserRights } from '../../../../../../Services/Actions/addFeedAction'\nimport { getRightsInstagramDetails, getFacebookDetails } from '../../../../../../Services/Actions/publishActions'\nimport { getTwitterCode } from '../../../../../../Services/Actions/loginActions'\nconst channel = new BroadcastChannel('connect');\nconst cookies = new Cookies();\nclass GetRightsSocialAccount extends Component {\n    state = {\n        connected: null,\n        showConfirm: false\n    }\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n        this.onLoadSocialAccount()\n    }\n    onLoadSocialAccount = () => {\n        try {\n            const { modalAssetData } = this.props\n            if (cookies.get(`ugcRights${modalAssetData.networkId}`)) {\n                const accountsData = cookies.get(`ugcRights${modalAssetData.networkId}`)\n                if (accountsData && accountsData.length > 0) {\n                    this.setState({ access_token: \"\", socialData: null, accountsData }, () => this.props.onUpdateData(String(GET_NETWORK_ICON(modalAssetData.networkId)).toLowerCase(), accountsData))\n                }\n\n            }\n        }\n        catch (ex) {\n\n        }\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId, type } = response;\n\n        var self = this\n        if (type == \"get-rights\") {\n            const responseToken = JSON.parse(event.data);\n            const { modalAssetData } = this.props\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\n                addInstaAccount(data, (data) => {\n                    getRightsInstagramDetails({ access_token: data.token }).then((response) => {\n\n                        const { data } = response\n                        var accountsData = [];\n                        if (data && Object.keys(data).length > 0) {\n                            accountsData.push({ id: data.id, name: data.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        }\n                        cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 3) {\n                addFacebookAccount(data, networkId, (data) => {\n                    getFacebookDetails({ access_token: data.token }).then((response) => {\n                        const { pages } = response.data\n                        var accountsData = [];\n                        if (pages && pages.length > 0) {\n                            pages.map((item) => {\n                                accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                            })\n                        }\n                        cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 1) {\n                var accountsData = [];\n                if (data && Object.keys(data).length > 0) {\n                    accountsData.push({ id: data.id_str, name: data.name, picture: data.picture ? data.picture : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                }\n                cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                self.setState({ access_token: localStorage.getItem(\"tokenSecret\"), socialData: data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\n            }\n            else if (modalAssetData.networkId == 28) {\n                var accountsData = [];\n                if (data && Object.keys(data).length > 0) {\n                    accountsData.push({ id: data.display_name, name: data.display_name, picture: data.avatar ? data.avatar : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                }\n                cookies.set(`ugcRights${modalAssetData.networkId}`, JSON.stringify(accountsData), { path: '/' })\n                self.setState({ access_token: data.client_key, socialData: data, accountsData }, () => this.props.onUpdateData(\"tiktok\", accountsData))\n            }\n            else {\n                addUserRights(data, networkId, (data) => {\n\n                })\n            }\n\n        }\n    }\n\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    handleYes = event => {\n        this.setState({ showConfirm: true })\n    }\n    handleNo = event => {\n        this.setState({ showConfirm: true })\n    }\n    onClickSocialConnect = (data) => event => {\n        if (data && Object.keys(data).length > 0) {\n            Swal.fire({\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\n                imageHeight: 40,\n                imageWidth: 40,\n                title: `<strong>${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}</strong>`,\n                html: `Connect to ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))} and start collecting assets.`,\n                showCloseButton: true,\n                showCancelButton: false,\n                focusConfirm: true,\n                confirmButtonText: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n                confirmButtonAriaLabel: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    localStorage.setItem(\"networkId\", data.networkId);\n                    localStorage.setItem(\"connectionType\", \"get-rights\");\n                    switch (data.networkId) {\n                        case 1:\n                            getTwitterCode();\n                            break;\n                        case 6:\n                            flickrConnect(6);\n                            break;\n                        case 21:\n                            getYammerAuthUrl()\n                            break;\n                        case 11:\n                            tumblerConnect(11);\n                            break;\n                        case 8:\n                            getVimeoAuthUrl()\n                            break;\n                        case 3:\n                            getFbAuthUrl(3);\n                            break;\n                        case 28:\n                            tiktokAuthentication();\n                            break;\n\n                        case 2:\n                            const url1 = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url1, '_blank', \"width=786,height=786\");\n                            break;\n                        case 18:\n                            const url = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url, '_blank', \"width=786,height=786\");\n                            break;\n                        // case 18:\n                        //     getFbAuthUrl(18)\n                        //     break;\n                        default:\n                            break;\n                    }\n                }\n            });\n        }\n    }\n\n\n    render() {\n        const { showConfirm } = this.state\n        const { modalAssetData, connectedAccount } = this.props;\n        return <><div className=\"p-lg-6 p-3\">\n            <div className=\"m-auto\">\n                {\n                    connectedAccount && connectedAccount.data.length > 0 ? <><h3 className=\"mb-2 pb-2 fs-7 pt-1\">\n                        <span className=\"fw-medium\">Connect Account</span>\n                    </h3>\n                        <div className=\"mb-3\">\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\">\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                        imageSize={40}\n                                        symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\n                                        name={connectedAccount.data[0].name} profileUrl={''} networkId={modalAssetData.networkId} />\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(connectedAccount.provider)} />\n                                    </span>\n                                </div>\n                            </button>\n                            <span className=\"fw-medium\">You are logged in with this account</span>\n                        </div>\n                        <div className=\"d-flex align-items-center w-75 mb-3 mx-auto\">\n                            <span className=\"border-bottom d-flex flex-grow-1\"></span>\n                            <span className=\"d-flex flex-shrink-0 mx-5 fs-6 fw-semibold text-gray-400\">Or</span>\n                            <span className=\"border-bottom d-flex flex-grow-1\"></span>\n                        </div>\n                    </> : null\n                }\n\n                <>{\n                    modalAssetData.networkId == 7 ?\n                        <SocialGoogleLogin onUpdateData={this.props.onUpdateData} />\n                        :\n                        <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\n                            <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                                <div className=\"w-75 overflow-hidden\">\n                                    <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                                </div>\n                            </div>\n                            {modalAssetData.networkId ?\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(modalAssetData.networkId)} style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                                    </span>\n                                </div>\n                                : null}\n                        </button>\n                }\n\n\n                </>\n\n            </div>\n        </div>\n\n\n        </>\n    }\n}\n\nexport default GetRightsSocialAccount;"],"names":["channel","BroadcastChannel","cookies","Cookies","GetRightsSocialAccount","state","connected","showConfirm","onLoadSocialAccount","modalAssetData","props","get","networkId","accountsData","length","setState","access_token","socialData","onUpdateData","String","GET_NETWORK_ICON","toLowerCase","ex","readAuthenticationCode","event","response","JSON","parse","data","type","self","addInstaAccount","getRightsInstagramDetails","token","then","Object","keys","push","id","name","username","picture","baseUrl","set","stringify","path","addFacebookAccount","getFacebookDetails","pages","map","item","id_str","localStorage","getItem","display_name","avatar","client_key","addUserRights","handleYes","handleNo","onClickSocialConnect","Swal","imageUrl","imageHeight","imageWidth","title","CAPITALIZE_FIRST_LETTER","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","result","isConfirmed","setItem","getTwitterCode","flickrConnect","getYammerAuthUrl","tumblerConnect","getVimeoAuthUrl","getFbAuthUrl","tiktokAuthentication","url1","INSTA_CLIENT_ID","HOST_DOMAIN","window","open","url","addEventListener","this","removeEventListener","connectedAccount","className","imageSize","symbolClass","profileUrl","src","provider","height","width","alt","GET_NETWORK_NAME","onClick","style","filter","opacity","Component"],"sourceRoot":""}