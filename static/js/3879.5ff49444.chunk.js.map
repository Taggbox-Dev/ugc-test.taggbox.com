{"version":3,"file":"static/js/3879.5ff49444.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/ShareEmbedModal.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { VALIDATE_EMAIL } from '../../../Services/Utils/utils';\nclass ShareEmbedModal extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        emailId: \"\",\n        emails:[],\n        emailError: false\n    };\n\n    onSelectEmail = () => {\n        const { emailId, emails} = this.state\n        if(emailId.length > 0 && !emails.includes(emailId) && VALIDATE_EMAIL(emailId)){\n            emails.push(emailId)\n            this.setState({emails, emailId:\"\", emailError:false})\n        }\n        else this.setState({emailError: true})\n    }\n\n    onRemoveEmail = (index) => {\n        let { emails } = this.state;\n        emails.splice(index, 1)\n        this.setState({ emails })\n    }\n\n    handleClose = event => this.props.shareEmbedCallback(false)\n\n    onChangeEmail = event => this.setState({ emailId: event.target.value })\n\n    render() {\n        const { shareEmbedModal, isLoading, text, heading, btnSendText } = this.props\n        const { emailId, emails, emailError } = this.state\n        return <Modal show={shareEmbedModal} onHide={this.handleClose}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{heading}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0 pt-4\" style={{ minHeight: 320 }}>\n                    <p className=\"text-center mb-4\">{text}</p>\n                    <div className=\"mb-3 mb-xl-4 d-flex align-items-start\">\n                        <div className='d-flex flex-column w-100 pe-2'>\n                            <Form.Control className={`position-relative d-flex flex-grow-1 flex-column ${emailError ? 'is-invalid' : ''}`} placeholder= \"example@example.com\" type=\"text\" value={emailId} onChange={this.onChangeEmail} onKeyDown={event=> event.key == \"Enter\" ? this.onSelectEmail() : null}></Form.Control>\n                            {emailError && <div className=\"invalid-feedback d-block\">Enter valid email.</div>}\n                        </div>\n                        <Button variant=\"primary\" onClick={this.onSelectEmail}>Add</Button>\n                    </div>\n                    \n                    <div className=\"mb-3 mb-xl-4\">\n                            <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                                {emails.length>0 ? emails.map((email,index)=>{\n                                    return <div key={email.toString()} className=\"badge bg-secondary text-gray-800 px-3 py-2  border me-2 mb-2\">\n                                    <span className=\"text-break\" style={{ whiteSpace: 'normal' }}>{email}</span>\n                                    <button className=\"btn btn-sm p-0 ms-1\" onClick={()=>this.onRemoveEmail(index)}>\n                                        <i className=\"ri-close-line icon-7\"></i>\n                                    </button>\n                                </div>\n                                }):null}\n                            </div>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer className=\"p-3\">\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0\">\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm btn-min-w me-3\" onClick={this.handleClose}>Cancel</button>\n                    <button type=\"button\" className={`btn btn-primary btn-sm btn-min-w ${isLoading ? `spinner` : ``}`} onClick={this.props.onClickToShare(emails.toString())}>{btnSendText ? btnSendText : `Share Code`}</button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    }\n}\n\nexport default ShareEmbedModal;\n"],"names":["ShareEmbedModal","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","emailId","emails","emailError","onSelectEmail","_this$state","length","includes","VALIDATE_EMAIL","push","setState","onRemoveEmail","index","splice","handleClose","event","shareEmbedCallback","onChangeEmail","target","value","_createClass","key","_this2","_this$props","this","shareEmbedModal","isLoading","text","heading","btnSendText","_this$state2","_jsxs","Modal","show","onHide","centered","children","_jsx","closeButton","className","style","minHeight","Form","concat","placeholder","type","onChange","onKeyDown","Button","variant","onClick","map","email","whiteSpace","toString","onClickToShare","Component"],"sourceRoot":""}