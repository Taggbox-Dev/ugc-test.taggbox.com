{"version":3,"file":"static/js/2644.113824d4.chunk.js","mappings":"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","sources":["Layouts/Main/WebEmbed/Components/EmbedList/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap';\r\nimport SVG from 'react-inlinesvg';\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\n\r\nimport { getAssetsCount } from '../../../../../Services/Actions/assetsActions'\r\nimport { toast } from 'react-toastify';\r\n\r\nclass EmbedList extends Component {\r\n    state = {\r\n        active: null,\r\n        activeAction: null\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { state } = nextProps\r\n        const { activeAction } = this.state\r\n        if (state.collectionList.length > 0 && state.publishList.length > 0 && activeAction == null) this.onUpdate(state.publishList[0], 0)\r\n        else if (state.publishList.length != this.props.state.publishList.length && state.publishList.length>0) this.onUpdate(state.publishList[0],0)\r\n    }\r\n    componentDidMount(){\r\n        const { state } = this.props\r\n        const { activeAction } = this.state\r\n        if (state.collectionList.length > 0 && state.publishList.length > 0 && activeAction == null) this.onUpdate(state.publishList[0], 0)\r\n    }\r\n    changeFilter = (key) => event => this.setState({\r\n        activeAction: key\r\n    })\r\n    onClickToEdit = (item, key) => event => this.onUpdate(item, key)\r\n    onUpdate = (item, key) => {\r\n        var self = this\r\n        this.setState({ activeAction: key })\r\n        getAssetsCount(item.id).then((response) => {\r\n            const { publishCode, assetsCount } = response.data\r\n            self.props.onUpdateReponseData({ assetsCount: assetsCount, publishCode: publishCode })\r\n        }).catch((ex) => {\r\n            self.props.onUpdateReponseData({ assestCount: 0, publishCode: item },()=>toast.error(\"Oops! Something went wrong. Please try again later.\"))\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { state, isListRequesting } = this.props\r\n        const { activeAction } = this.state\r\n\r\n        const counts = Array.from({ length: 8 }, (_, i) => i + 1);\r\n        return <div className='filter_list_wrapper' onChange={e => this.embedCodeCallback(e)}>\r\n            <div className='filter_list'>\r\n                {isListRequesting ? counts.map((count, index) => (\r\n                    <div key={index} className=\"sk_rect h-54px mb-3\">\r\n                    </div>\r\n                )) : state.collectionList.length > 0 && state.publishList.length > 0 ?\r\n                    state.publishList.map((item, pIndex) => {\r\n                        return <div className={`d-flex rounded-1 mb-3 overflow-hidden border ${activeAction == pIndex ? 'border-dark' : 'bg-light border-light'}`} key={pIndex} onClick={this.onClickToEdit(item, pIndex)}>\r\n                            <div className=\"d-flex p-3 pe-0 cursor-pointer overflow-hidden flex-grow-1\">\r\n                                <span className=\"svg-icon svg-icon-2 flex-shrink-0 me-2 block-center d-flex text-gray-700\">\r\n                                    <SVG src={baseUrl('media/icons/svg-icons/widget.svg')} height={32} width={32} />\r\n                                </span>\r\n                                <div className='d-flex flex-column flex-grow-1 overflow-hidden'>\r\n                                    <p className='fs-9 mb-0 fw-medium text-ellipsis'>{item.name}</p>\r\n                                    <span className='text-muted fs-9'>Wall :{item.wallId}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block-center flex-shrink-0 p-3 ps-0\">\r\n                                <Link className=\"btn btn-icon btn-active-light p-0 w-26px h-26px transition-none border-0\" to={`/web-embed/edit/${item.id}`} onClick={e => e.stopPropagation()}>\r\n                                    {/* onClick={this.onClickToEdit(item, pIndex)} */}\r\n                                    <i className=\"ri-edit-box-line icon-7\"></i>\r\n                                </Link>\r\n                                <Button variant='icon' className=\"btn-active-light p-0 w-26px h-26px transition-none border-0\" onClick={this.props.onClickToDelete({ \"id\": item.id })}>\r\n                                    <i className=\"ri-delete-bin-line icon-7\"></i>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                    : null\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\nexport default EmbedList\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\r\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\r\n                return <Accordion.Item eventKey={pIndex}>\r\n                    <div className=\"menu-item\" key={pIndex}>\r\n                        <Accordion.Header className=\"w-100 disable_arrow\">\r\n                            <div className=\"d-flex justify-content-between align-items-center w-100\" onClick={this.onClickToEdit(item)}>\r\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px me-2\">\r\n                                            <i className=\"ri-edit-box-line me-0 icon-7\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\r\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-26px w-26px\"\r\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id })}>\r\n                                            <i className=\"ri-delete-bin-6-line me-0 icon-7\"></i>\r\n                                        </button>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Header>\r\n                    </div>\r\n                    <Accordion.Body className=\"p-0 pt-3\">\r\n                        <EditWebEmbed history={history} item={item} {...this.props} />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n\r\n            })\r\n            }\r\n        </Accordion>\r\n*/"],"names":["EmbedList","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","active","activeAction","changeFilter","key","event","setState","onClickToEdit","item","onUpdate","self","_assertThisInitialized","getAssetsCount","id","then","response","_response$data","data","publishCode","assetsCount","props","onUpdateReponseData","catch","ex","assestCount","toast","_createClass","value","nextProps","this","collectionList","publishList","_this2","_this$props","isListRequesting","counts","from","_","i","_jsx","className","onChange","e","embedCodeCallback","children","map","count","index","pIndex","_jsxs","onClick","SVG","src","baseUrl","height","width","name","wallId","Link","to","stopPropagation","Button","variant","onClickToDelete","Component"],"sourceRoot":""}