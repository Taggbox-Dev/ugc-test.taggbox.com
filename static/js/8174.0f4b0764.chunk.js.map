{"version":3,"file":"static/js/8174.0f4b0764.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/Components/FilterAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport Select from 'react-select';\nimport { Accordion, Offcanvas, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { feedsFilter, tagsFilter, ugcStatusFilter, textFilter, postTypeFilter, resetFilter, collectionsFilter, networkFilter, postStatusFilter } from '../../../../Services/Actions/assetsActions'\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\n\n\nclass FilterAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        isActiveAside: false,\n        feedData: [],\n        listTags: [],\n        tagString: [],\n        selectedOption: null\n    };\n    onLoadFeedList = () => {\n        const { filterList } = this.props.feedData;\n        this.setState((prevState) => ({ ...prevState, feedData: filterList }));\n    }\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n    }\n    componentDidMount() {\n        var filterAside = document.getElementById(\"filter_aside\");\n        if (filterAside) {\n            filterAside.addEventListener(\"click\", this.toogleFilter);\n        }\n        this.onLoadFeedList()\n    }\n    toogleFilter = () => {\n        this.setState({\n            isActiveAside: !this.state.isActiveAside,\n        })\n        setTimeout(() => {\n            var offcanvas = document.querySelector(\".offcanvas-backdrop\");\n            if (offcanvas) {\n                offcanvas.classList.add('filter-backdrop');\n            }\n        }, 100);\n    };\n    onClickToFeed = (feedId, name) => event => this.props.feedsFilter(feedId, name)\n    onClickToUgc = (status) => event => this.props.ugcStatusFilter(status)\n    onClickToPostType = (type) => event => this.props.postTypeFilter(type)\n    onClickToAssetType = (status) => event => this.props.postStatusFilter(status)\n    onClickToResetFilter = event => this.props.resetFilter()\n    onClickToCollection = (id, name) => event => this.props.collectionsFilter(id, name)\n    onClickToNetwork = (id, name) => event => this.props.networkFilter(id, name)\n    handleChange = (selectedOption) => {\n        if (selectedOption && Object.keys(selectedOption).length > 0) this.props.tagsFilter(selectedOption.value)\n    }\n    componentWillReceiveProps(nextProps) {\n        const { filterList } = nextProps.feedData;\n        if (filterList != this.state.feedData) this.setState((prevState) => ({ ...prevState, feedData: filterList }));\n    }\n\n    render() {\n        const { isActiveAside, feedData, listTags } = this.state\n        const { filterBody, collections, networks, isCollection } = this.props\n\n        return <Offcanvas show={isActiveAside} placement={'end'} name={'end'} onHide={this.toogleFilter} className=\"filter_aside\">\n            <Offcanvas.Body>\n                <div className=\"d-flex align-items-center justify-content-between px-3 px-xxl-4 py-3 border-bottom\">\n                    <div className=\"fs-5 fw-medium\">Add Filter</div>\n                    <Button variant='link' className=\"text-decoration-none btn-icon btn-active-light btn-active-color-primary p-0 w-30px h-30px border-0\" onClick={this.toogleFilter}>\n                        <i className=\"ri-close-line icon-6\"></i>\n                    </Button>\n                </div>\n                {!isCollection ? <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Collections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                collections && collections.length > 0 ? collections.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between mb-xxl-3 mb-3\">\n                                        <label className=\"form-check flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.collection ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.collection).includes(String(item.id))} onClick={this.onClickToCollection(item.id, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{item.name}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <div className=\"symbol symbol-18 d-flex align-items-center justify-content-center flex-shrink-0 bg-light me-1\" style={{ borderRadius: 2 }}>\n                                                        {item.thumbnails ?\n                                                            <img className=\"object-center-cover\" src={item.thumbnails} height={20} width={20} alt={item.name} style={{ borderRadius: 2 }} />\n                                                            : <i className=\"ri-folder-open-line me-0\"></i>}\n                                                    </div>\n                                                    <span className=\"text-ellipsis\">{item.name}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.assets}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion> : null}\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Connections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                feedData && Object.keys(feedData).length > 0 && feedData.feeds.length > 0 ? feedData.feeds.map((item) => {\n                                    return item.name ? <div key={item.feedId} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.socialFeed ? <input className=\"form-check-input\" type=\"checkbox\" name={item.feedId} checked={Object.keys(filterBody.socialFeed).includes(String(item.feedId))} onClick={this.onClickToFeed(item.feedId, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{ReactHtmlParser(item.name)}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.networkId)} icon-data={GET_NETWORK_NAME(item.networkId)} />\n                                                    <span className=\"text-ellipsis\">{ReactHtmlParser(item.name)}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.count}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Networks</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                networks && networks.length > 0 ? networks.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                            {filterBody.networks ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.networks).includes(String(item.id))} onClick={this.onClickToNetwork(item.id, item.name)} /> : null}\n                                            <span className=\"form-check-label d-flex fw-medium me-2\">\n                                                <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.id)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.id)} icon-data={GET_NETWORK_NAME(item.id)} />\n                                                {item.name}</span>\n                                        </label>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Tags</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 pt-1 pb-3\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <Select className='selectpicker selectpicker-sm w-100'\n                                    classNamePrefix=\"selectpicker\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}\n                                    options={listTags}\n                                />\n                            </div>\n                            {filterBody.postTags && Object.keys(filterBody.postTags).length > 0 ? <div className=\"d-flex w-100 flex-wrap w-100 pt-2 \">\n                                {\n                                    Object.keys(filterBody.postTags).map((tagItem, tagIndex) => <div key={tagItem} className=\"badge bg-secondary rounded-pill text-gray-800 border me-1 mb-1 px-2 d-flex align-items-center\" style={{ top: 0, maxWidth: '100%' }}>\n                                        <span className=\"text-break\" style={{ whiteSpace: 'normal' }}>{tagItem}</span>\n                                        <button className=\"btn btn-sm p-0 ms-1\" onClick={event => this.props.tagsFilter(tagItem)}>\n                                            <i className=\"ri-close-line icon-7\"></i>\n                                        </button>\n                                    </div>)\n                                }\n                            </div> : null}\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Post Type</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"image_type\" onClick={this.onClickToPostType(\"2,4\")} checked={Object.keys(filterBody.postType).includes(\"2,4\")} />\n                                    <span className=\"form-check-label fw-medium\">Image Only</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"video_type\" onClick={this.onClickToPostType(\"3,5\")} checked={Object.keys(filterBody.postType).includes(\"3,5\") ? true : false} />\n                                    <span className=\"form-check-label fw-medium\">Video Only</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Assets Type</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"visible_assets\" onClick={this.onClickToAssetType(\"1\")} checked={Object.keys(filterBody.status).includes(\"1\")} />\n                                    <span className=\"form-check-label fw-medium\"><i class=\"icon-6 me-1 ri-eye-line\"></i>Visible</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"hidden_assets\" onClick={this.onClickToAssetType(\"2\")} checked={Object.keys(filterBody.status).includes(\"2\")} />\n                                    <span className=\"form-check-label fw-medium\"><i class=\"icon-6 me-1 ri-eye-off-line\"></i>Hidden</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom d-none\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Other</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {/* <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label\">Highlight Post</span>\n                                </label>\n                            </div> */}\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Pinned to top</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Recent</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Retweets</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">UGC Rights</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"1\")} onClick={this.onClickToUgc(\"1\")} />\n                                    <span className=\"form-check-label fw-medium\">Pending Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"2\")} onClick={this.onClickToUgc(\"2\")} />\n                                    <span className=\"form-check-label fw-medium\">Approved Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"3\")} onClick={this.onClickToUgc(\"3\")} />\n                                    <span className=\"form-check-label fw-medium\">Rejected Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"4\")} onClick={this.onClickToUgc(\"4\")} />\n                                    <span className=\"form-check-label fw-medium\">Expired Post</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <div className=\"d-flex justify-content-center text-align-center flex-column w-100 px-4 pb-4\">\n                    {/* <button type=\"button\" className=\"btn btn-primary w-100 mb-1 d-none\">Filter</button> */}\n                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={this.onClickToResetFilter}>Reset results</button>\n                </div>\n            </Offcanvas.Body>\n        </Offcanvas>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        feedData: state.feedData,\n        filterBody: state.assets.filterBody,\n        networks: state.networks.networkData,\n        tagList: state.tags.tagList\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        feedsFilter: (refId, name) => dispatch(feedsFilter(refId, name)),\n        tagsFilter: (refId) => dispatch(tagsFilter(refId)),\n        ugcStatusFilter: (refId) => dispatch(ugcStatusFilter(refId)),\n        textFilter: (refId) => dispatch(textFilter(refId)),\n        postTypeFilter: (refId) => dispatch(postTypeFilter(refId)),\n        resetFilter: () => dispatch(resetFilter()),\n        collectionsFilter: (refId, name) => dispatch(collectionsFilter(refId, name)),\n        networkFilter: (refId, name) => dispatch(networkFilter(refId, name)),\n        postStatusFilter: (status) => dispatch(postStatusFilter(status))\n\n\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterAside);"],"names":["FilterAside","props","state","isActiveAside","feedData","listTags","tagString","selectedOption","onLoadFeedList","filterList","setState","prevState","toogleFilter","setTimeout","offcanvas","document","querySelector","classList","add","onClickToFeed","feedId","name","event","feedsFilter","onClickToUgc","status","ugcStatusFilter","onClickToPostType","type","postTypeFilter","onClickToAssetType","postStatusFilter","onClickToResetFilter","resetFilter","onClickToCollection","id","collectionsFilter","onClickToNetwork","networkFilter","handleChange","Object","keys","length","tagsFilter","value","tagList","this","map","item","push","label","filterAside","getElementById","addEventListener","nextProps","filterBody","collections","networks","isCollection","show","placement","onHide","className","variant","onClick","flush","defaultactivekey","collection","checked","includes","String","overlay","style","borderRadius","thumbnails","src","height","width","alt","assets","feeds","socialFeed","ReactHtmlParser","baseUrl","GET_NETWORK_ICON","networkId","GET_NETWORK_NAME","count","classNamePrefix","onChange","options","postTags","tagItem","tagIndex","top","maxWidth","whiteSpace","postType","class","ugcStatus","Component","connect","networkData","tags","dispatch","refId","textFilter"],"sourceRoot":""}