{"version":3,"file":"static/js/7713.0b90449b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","Layouts/Main/PublishCommonComponents/EmbedCode.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { Component, Suspense } from 'react';\nimport { toast } from \"react-toastify\";\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nimport { EmbedURL, EMBED_MIN } from '../../../Services/Api'\nimport { mailSendRequest } from '../../../Services/Actions/mailActions'\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\n\nclass EmbedCode extends Component {\n    constructor() {\n        super();\n        this.state = { showModal: false, codeCopied: false, isLoading: false, widthSign: \"%\", heightSign: \"%\", width: \"100\", height: \"100\", id: \"#embedCode_\" };\n    }\n    shareEmbedModal = (id) => event => this.setState({\n        showModal: true,\n        id: id\n    })\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent\n        })\n    }\n\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    onClickToShare = (mailId) => event => {\n        var self = this;\n        const { id } = this.state\n        this.setState({ isLoading: true })\n        if (mailId && String(mailId).length > 0) {\n            mailSendRequest({ htmlCode: document.querySelector(id ? id : \"#embedCode_\").innerText, email: mailId, type: 3 }).then((response) => {\n                toast.success(\"Tagbox widget code successfully sent.\")\n                self.setState({ showModal: false, isLoading: false })\n            })\n\n        }\n        else {\n            toast.error(\"Please enter email id.\")\n        }\n    }\n    onChangeWidth = event => {\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ width: event.target.value > 100 ? 100 : event.target.value })\n    }\n    onChangeHeight = event => {\n        if (event.target.value && parseInt(event.target.value) > 0) this.setState({ height: event.target.value > 100 ? 100 : event.target.value })\n    }\n    onClickToWidthSign = (value) => event => {\n        this.setState({ widthSign: value })\n    }\n    onClickToHeightSign = (value) => event => {\n        this.setState({ heightSign: value })\n    }\n    render() {\n        const { codeCopied, showModal, width, height, widthSign, heightSign } = this.state\n        const { copyText, data } = this.props\n\n        return <div className=\"embed_code\">\n            <div className=\"mb-5\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Width</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={width} value={width} onChange={this.onChangeWidth} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={widthSign}>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"%\")}>Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"px\")}>Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToWidthSign(\"vw\")} >Viewport Width (VW)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Height</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={height} value={height} onChange={this.onChangeHeight} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title={heightSign}>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"%\")}>Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"px\")}>Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\" onClick={this.onClickToHeightSign(\"vw\")}>Viewport Height (VH)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                </div>\n            </div>\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\n                    <Nav variant=\"underline\" className=\"mb-3 border-bottom\">\n                        <Nav.Item className=\"me-4\">\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Lite Code\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Iframe\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{ wordBreak: 'break-all' }}>\n                                    &lt;div class=\"taggbox\" data-widget-id=\"{data && Object.keys(data).length > 0 ? data.wallId : null}\" ugcSuite=\"1\" style=\"width:{width}{widthSign};height:{height}{heightSign};\"&gt;&lt;/div&gt;\n                                    &lt;script src=\"{EMBED_MIN}\" type=\"text/javascript\"&gt;&lt;/script&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\n                                            {!codeCopied ?\n                                                <i className=\"ri-file-copy-fill\"></i>\n                                                :\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCode_')}>\n                                            <i className=\"ri-mail-fill\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                    &lt;iframe src=\"{EmbedURL}{data && Object.keys(data).length > 0 ? data.wallId : null}\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-link text-decoration-none text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                            {!codeCopied ?\n                                                <i className=\"ri-file-copy-fill\"></i>\n                                                :\n                                                <i className=\"ri-check-line\" style={{ color: '#6AC259' }}></i>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn btn-link text-decoration-none text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal('#embedCodeIframe_')}>\n                                            <i className=\"ri-mail-fill\"></i>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n            <Suspense fallback={<></>}>\n                {showModal ? <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} onClickToShare={this.onClickToShare} isLoading={this.state.isLoading} text=\"Share this embed code with your team. Enter the email Id to send the code directly to them\" heading=\"Send code by email\" /> : null}\n            </Suspense>\n        </div>\n\n    }\n}\n\nexport default EmbedCode;"],"names":["alignDirection","PropTypes","alignPropType","sm","md","lg","xl","xxl","propTypes","id","href","onClick","title","disabled","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","bsPrefix","variant","size","DropdownButton","React","_ref","ref","children","props","_objectWithoutProperties","_excluded","_jsxs","Dropdown","_objectSpread","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","ShareEmbedModal","_Component","_inherits","EmbedCode","_super","_createSuper","_this","_classCallCheck","call","shareEmbedModal","event","setState","showModal","shareEmbedCallback","shareEmbedEvent","codeCopy","codeCopied","setTimeout","COPY_TO_CLIPBOARD","onClickToShare","mailId","self","_assertThisInitialized","state","isLoading","String","length","mailSendRequest","htmlCode","document","querySelector","innerText","email","type","then","response","toast","onChangeWidth","target","value","parseInt","width","onChangeHeight","height","onClickToWidthSign","widthSign","onClickToHeightSign","heightSign","_createClass","key","_this2","_this$state","this","_this$props","copyText","data","className","InputGroup","Form","defaultValue","onChange","Tab","defaultActiveKey","Nav","eventKey","style","wordBreak","Object","keys","wallId","EMBED_MIN","OverlayTrigger","placement","overlay","Tooltip","color","EmbedURL","Suspense","fallback","_Fragment","text","heading","Component"],"sourceRoot":""}