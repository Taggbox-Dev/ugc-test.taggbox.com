{"version":3,"file":"static/js/8306.162d7117.chunk.js","mappings":"sOAIMA,EAAQC,EAAAA,MAAW,kBAAM,uCAA+C,IACxEC,EAAaD,EAAAA,MAAW,kBAAM,+BAA6D,IAC3FE,EAAaF,EAAAA,MAAW,kBAAM,8BAA6D,IAG3FG,EAAU,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GACZ,SAAAA,EAAYK,GAAQ,IAADC,EAQb,OARaC,EAAAA,EAAAA,GAAA,KAAAP,IACfM,EAAAH,EAAAK,KAAA,KAAMH,IASVI,mBAAqB,SAAAC,GACjB,IAAQC,EAAmBL,EAAKD,MAAxBM,eACgB,GAApBL,EAAKM,MAAMC,OACXH,EAAMI,OAAOC,IAAMJ,EAAeK,SAClCV,EAAKW,SAAS,CACVJ,MAAO,MAIXH,EAAMI,OAAOC,KAAMG,EAAAA,EAAAA,GAAQ,gCAC3BZ,EAAKW,SAAS,CACVJ,MAAO,EACPM,KAAM,CACFC,OAAQ,IACRC,MAAO,OAIvB,EA1BIf,EAAKM,MAAQ,CACTC,MAAO,EACPM,KAAM,CACFC,OAAQd,EAAKD,MAAMM,eAAeW,YAClCD,MAAOf,EAAKD,MAAMM,eAAeY,aAEvCjB,CACN,CAmCC,OAnCAkB,EAAAA,EAAAA,GAAAxB,EAAA,EAAAyB,IAAA,SAAAC,MAoBD,WACI,IAAQf,EAAmBgB,KAAKtB,MAAxBM,eACAQ,EAASQ,KAAKf,MAAdO,KACR,OACIS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,4BAAAE,OAAkD,GAApBJ,KAAKf,MAAMC,MAAa,WAAa,IAAKiB,SACzD,GAAvBnB,EAAeqB,MAAoC,GAAvBrB,EAAeqB,MACzCJ,EAAAA,EAAAA,KAACK,EAAAA,EAAY,CAACC,SAAU,EAAGC,SAAU,GAAKC,KAAM,EAAGC,SAAU,SAAUC,aAAa,EAAOC,kBAAmB,QAAQT,UAClHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAuBd,IAAKJ,EAAe6B,aAAcpB,OAAQD,EAAKC,OAAQC,MAAOF,EAAKE,MAAOoB,KAAKC,EAAAA,EAAAA,GAAe/B,EAAeK,UAAW2B,QAAShB,KAAKlB,uBAGtJ,GAAvBE,EAAeqB,MAAaJ,EAAAA,EAAAA,KAAChC,EAAK,CAACgD,YAAajC,EAAekC,QAASC,UAAkC,GAAvBnC,EAAeqB,KAAWe,OAAQpC,EAAeoC,OAAQC,MAAOrC,EAAgBsC,UAAW,OAAQC,cAAevC,EAAewC,WAAU,aAAApB,OAAmBpB,EAAeyC,KAAmC,GAAvBzC,EAAeqB,MAAoC,GAAvBrB,EAAeqB,KAAyC,IAA5BrB,EAAewC,WAAkBvB,EAAAA,EAAAA,KAAC9B,EAAU,CAACuD,KAAM1C,KAAqBiB,EAAAA,EAAAA,KAAC7B,EAAU,CAACsD,KAAM1C,IAAqB,QAI1c,KAACX,CAAA,CA7CW,CAASsD,EAAAA,WAgDzB,W","sources":["Layouts/Main/MyAssets/AssetsModal/Elements/ModalMedia.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { GET_MEDIA_NAME } from \"../../../../../Services/Utils/utils\";\r\nimport PinchZoomPan from \"react-image-zoom-pan\";\r\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\r\nconst Media = React.lazy(() => import('../../../CommonComponents/Media/Media'));\r\nconst PopUpVideo = React.lazy(() => import('../../../CommonComponents/Media/Elements/PopUpVideo'));\r\nconst PopUpAudio = React.lazy(() => import('../../../CommonComponents/Media/Elements/PopUpAudio'));\r\n\r\n\r\nclass ModalMedia extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 1,\r\n            size: {\r\n                height: this.props.modalAssetData.mediaHeight,\r\n                width: this.props.modalAssetData.mediaWidth\r\n            }\r\n        };\r\n    }\r\n    onErrorImageUpdate = event => {\r\n        const { modalAssetData } = this.props\r\n        if (this.state.count == 1) {\r\n            event.target.src = modalAssetData.postFile\r\n            this.setState({\r\n                count: 2,\r\n            })\r\n\r\n        } else {\r\n            event.target.src = baseUrl(`media/images/error/image.svg`);\r\n            this.setState({\r\n                count: 3,\r\n                size: {\r\n                    height: 400,\r\n                    width: 400\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { modalAssetData } = this.props\r\n        const { size } = this.state\r\n        return (\r\n            <div className=\"assets_modal_img_outer\">\r\n                <div className={`assets_modal_img_wrapper ${this.state.count == 3 ? 'disabled' : ''}`}>\r\n                    {(modalAssetData.type == 2 || modalAssetData.type == 4) ?\r\n                        <PinchZoomPan maxScale={5} minScale={0.2} step={5} position={'center'} zoomButtons={false} doubleTapBehavior={'reset'}>\r\n                            <img className=\"assets_modal_media__\" src={modalAssetData.publishImage} height={size.height} width={size.width} alt={GET_MEDIA_NAME(modalAssetData.postFile)} onError={this.onErrorImageUpdate} />\r\n                        </PinchZoomPan>\r\n\r\n                        : (modalAssetData.type == 1) ? <Media textContent={modalAssetData.content} mediaType={modalAssetData.type == 1} rating={modalAssetData.rating} asset={modalAssetData} animation={'fade'} socialNetwork={modalAssetData.networkId} key={`post_image${modalAssetData.id}`} /> : (modalAssetData.type == 3 || modalAssetData.type == 5) ? modalAssetData.networkId != 12 ? <PopUpVideo data={modalAssetData} /> : <PopUpAudio data={modalAssetData} /> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalMedia;"],"names":["Media","React","PopUpVideo","PopUpAudio","ModalMedia","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onErrorImageUpdate","event","modalAssetData","state","count","target","src","postFile","setState","baseUrl","size","height","width","mediaHeight","mediaWidth","_createClass","key","value","this","_jsx","className","children","concat","type","PinchZoomPan","maxScale","minScale","step","position","zoomButtons","doubleTapBehavior","publishImage","alt","GET_MEDIA_NAME","onError","textContent","content","mediaType","rating","asset","animation","socialNetwork","networkId","id","data","Component"],"sourceRoot":""}