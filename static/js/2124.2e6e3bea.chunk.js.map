{"version":3,"file":"static/js/2124.2e6e3bea.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/CreateCollectionModal/RenameCollectionModal.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport { renameCollection } from '../../../../Services/Actions/homeActions'\r\nimport { connect } from \"react-redux\";\r\nclass RenameCollectionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collectioName: props.collectionRename.name\r\n        };\r\n    }\r\n    onClickCreate = event => {\r\n        const { collectionRename, collectionData } = this.props\r\n        var self = this\r\n        const { collectioName } = this.state;\r\n        if (collectioName && String(collectioName).trim().length > 0) {\r\n            var toastID = toast.loading(\"Loading...\")\r\n            if (collectionData && Object.keys(collectionData).length > 0 && collectionData.collectionList && collectionData.collectionList.length > 0){\r\n                const existsCollection = collectionData.collectionList.filter(collection => String(collection.name).toLowerCase() == String(collectioName).trim().toLowerCase());\r\n                if (existsCollection && existsCollection.length > 0) {\r\n                    toast.update(toastID, { render: \"Collection already exists.\", type: \"error\", isLoading: false, autoClose: 3000 })\r\n                    self.setState({ isRequesting: false });\r\n                }\r\n                else{\r\n                    renameCollection({ name: collectioName, id: collectionRename.id }).then((response) => {\r\n                        toast.update(toastID, { render: \"Collection name has been updated.\", type: \"success\", isLoading: false, autoClose: 3000 })\r\n                        self.props.addCollectionCallbackWithAPI(false)\r\n                    }).catch(ex=>{\r\n                        const responseData = ex.response.data\r\n                        toast.update(toastID, { render: responseData.message, type: \"error\", isLoading: false, autoClose: 3000 })\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            toast.error(\"Please enter valid collection name.\")\r\n        }\r\n    }\r\n    onChangeCollectionName = event => {\r\n        this.setState({ collectioName: event.target.value })\r\n    }\r\n\r\n    handleClose = event => this.props.addCollectionCallback(false)\r\n\r\n    render() {\r\n        const { addCollectionModal, collectionRename } = this.props\r\n        const { collectioName } = this.state\r\n        return <Modal show={addCollectionModal} onHide={this.handleClose}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Rename Collection</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0 pt-4\">\r\n                    <div className=\"row mb-4 mb-xl-5\">\r\n                        <label className=\"col-sm-3 text-muted mb-2\">Collection Name</label>\r\n                        <div className=\"col-sm-9\">\r\n                            <input type=\"text\" name=\"company\" className=\"form-control\" placeholder=\"Enter collection name...\" onChange={this.onChangeCollectionName} value={collectioName} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"p-3\">\r\n                <div className=\"mx-xl-4 px-2 px-lg-4 mx-0\">\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm btn-min-w me-3\" onClick={this.handleClose}>Cancel</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-sm btn-min-w\" onClick={this.onClickCreate}>Rename</button>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectionData: state.collection\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RenameCollectionModal);\r\n"],"names":["RenameCollectionModal","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onClickCreate","event","_this$props","collectionRename","collectionData","self","_assertThisInitialized","collectioName","state","String","trim","length","toastID","toast","Object","keys","collectionList","existsCollection","filter","collection","name","toLowerCase","render","type","isLoading","autoClose","setState","isRequesting","renameCollection","id","then","response","addCollectionCallbackWithAPI","catch","ex","responseData","data","message","onChangeCollectionName","target","value","handleClose","addCollectionCallback","_createClass","key","_this$props2","this","addCollectionModal","_jsxs","Modal","show","onHide","centered","children","_jsx","closeButton","className","placeholder","onChange","onClick","Component","connect"],"sourceRoot":""}