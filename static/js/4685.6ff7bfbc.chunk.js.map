{"version":3,"file":"static/js/4685.6ff7bfbc.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Swal from 'sweetalert2';\nimport { HOST_DOMAIN, INSTA_CLIENT_ID } from '../../../../../../Services/Api'\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport SocialLoginFacebook from '../../../../SocialLogin/Facebook';\nimport ProfileImage from \"../../../../CommonComponents/ProfileImage/ProfileImage\";\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\nimport LoginSocialTwitter from '../../../../SocialLogin/Twitter'\nimport { GET_NETWORK_ICON, CAPITALIZE_FIRST_LETTER, GET_NETWORK_NAME } from '../../../../../../Services/Utils/utils'\nimport { twitterConnect, flickrConnect, yammerConnect, tumblerConnect, vimeoConnect, facebookConnect } from '../../../../SocialLogin/auth'\nimport { getTwitterAuthUrl, getFbAuthUrl, getYammerAuthUrl, getVimeoAuthUrl, tiktokAuthentication } from '../../../../../../Layouts/Main/AuthCallback/AuthSocialAcc'\nimport { addFacebookAccount, addInstaAccount } from '../../../../../../Layouts/Main/AuthCallback/connectSocialAcc'\nimport { addUserRights } from '../../../../../../Services/Actions/addFeedAction'\nimport { sendPublishRequest, publishDeleteRequest, getRightsInstagramDetails, getInstagramDetails, InstagramPostPublish, getFacebookDetails, FacebookPublish } from '../../../../../../Services/Actions/publishActions'\nimport { getTwitterCode } from '../../../../../../Services/Actions/loginActions'\nconst channel = new BroadcastChannel('connect');\nclass GetRightsSocialAccount extends Component {\n    state = {\n        connected: null,\n        showConfirm: false\n    }\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId, type } = response;\n\n        var self = this\n        if (type == \"get-rights\") {\n            const responseToken = JSON.parse(event.data);\n            const { modalAssetData } = this.props\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\n                addInstaAccount(data, (data) => {\n                    getRightsInstagramDetails({ access_token: data.token }).then((response) => {\n\n                        const { data } = response\n                        var accountsData = [];\n                        if (data && Object.keys(data).length > 0) {\n                            accountsData.push({ id: data.id, name: data.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        }\n\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 3) {\n                addFacebookAccount(data, networkId, (data) => {\n                    getFacebookDetails({ access_token: data.token }).then((response) => {\n                        const { pages } = response.data\n                        var accountsData = [];\n                        if (pages && pages.length > 0) {\n                            pages.map((item) => {\n                                accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                            })\n                        }\n\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 1) {\n                var accountsData = [];\n                if (data && Object.keys(data).length > 0) {\n                    accountsData.push({ id: data.id_str, name: data.name, picture: data.picture ? data.picture : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                }\n                self.setState({ access_token: localStorage.getItem(\"tokenSecret\"), socialData: data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\n            }\n            else if (modalAssetData.networkId == 28) {\n                console.log(\"tik-tok\", data)\n                var accountsData = [];\n                if (data && Object.keys(data).length > 0) {\n                    accountsData.push({ id: data.display_name, name: data.display_name, picture: data.avatar ? data.avatar : baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                }\n                self.setState({ access_token: data.client_key, socialData: data, accountsData }, () => this.props.onUpdateData(\"tiktok\", accountsData))\n            }\n            else {\n                addUserRights(data, networkId, (data) => {\n\n                })\n            }\n\n        }\n    }\n\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    handleYes = event => {\n        this.setState({ showConfirm: true })\n    }\n    handleNo = event => {\n        this.setState({ showConfirm: true })\n    }\n    onClickSocialConnect = (data) => event => {\n        if (data && Object.keys(data).length > 0) {\n            Swal.fire({\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\n                imageHeight: 40,\n                imageWidth: 40,\n                title: `<strong>${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}</strong>`,\n                html: `Connect to ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))} and start collecting assets.`,\n                showCloseButton: true,\n                showCancelButton: false,\n                focusConfirm: true,\n                confirmButtonText: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n                confirmButtonAriaLabel: `Continue with ${CAPITALIZE_FIRST_LETTER(GET_NETWORK_ICON(data.networkId))}`,\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    localStorage.setItem(\"networkId\", data.networkId);\n                    localStorage.setItem(\"connectionType\", \"get-rights\");\n                    switch (data.networkId) {\n                        case 1:\n                            getTwitterCode();\n                            break;\n                        case 6:\n                            flickrConnect(6);\n                            break;\n                        case 21:\n                            getYammerAuthUrl()\n                            break;\n                        case 11:\n                            tumblerConnect(11);\n                            break;\n                        case 8:\n                            getVimeoAuthUrl()\n                            break;\n                        case 3:\n                            getFbAuthUrl(3);\n                            break;\n                        case 28:\n                            tiktokAuthentication();\n                            break;\n\n                        case 2:\n                            const url1 = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url1, '_blank', \"width=786,height=786\");\n                            break;\n                        case 18:\n                            const url = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                            window.open(url, '_blank', \"width=786,height=786\");\n                            break;\n                        // case 18:\n                        //     getFbAuthUrl(18)\n                        //     break;\n                        default:\n                            break;\n                    }\n                }\n            });\n        }\n    }\n\n\n    render() {\n        const { showConfirm } = this.state\n        const { modalAssetData, connectedAccount } = this.props;\n        return <><div className=\"p-lg-6 p-3\">\n            <div className=\"m-auto\">\n                {\n                    connectedAccount && connectedAccount.data.length > 0 ? <><h3 className=\"mb-2 pb-2 fs-7 pt-1\">\n                        <span className=\"fw-medium\">Connect Account</span>\n                    </h3>\n                        <div className=\"mb-8\">\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\">\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                        imageSize={40}\n                                        symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\n                                        name={connectedAccount.data[0].name} profileUrl={''} networkId={connectedAccount.provider} />\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(connectedAccount.provider)} />\n                                    </span>\n                                </div>\n                            </button>\n                            <span className=\"fw-medium\">You are logged in with this account</span>\n                        </div></> : <>{\n                            modalAssetData.networkId == 7 ?\n                                <SocialGoogleLogin onUpdateData={this.props.onUpdateData} />\n                                :\n                                <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\n                                    <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                        <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                                        <div className=\"w-75 overflow-hidden\">\n                                            <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                                        </div>\n                                    </div>\n                                    {modalAssetData.networkId ?\n                                        <div className=\"d-flex\">\n                                            <span className=\"h-20px w-20px\">\n                                                <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} height={20} width={20} alt={GET_NETWORK_NAME(modalAssetData.networkId)} style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                                            </span>\n                                        </div>\n                                        : null}\n                                </button>\n                        }\n\n\n                    </>\n                }\n\n            </div>\n        </div>\n\n\n        </>\n    }\n}\n\nexport default GetRightsSocialAccount;"],"names":["channel","BroadcastChannel","GetRightsSocialAccount","state","connected","showConfirm","readAuthenticationCode","event","response","JSON","parse","data","networkId","type","self","modalAssetData","props","addInstaAccount","getRightsInstagramDetails","access_token","token","then","accountsData","Object","keys","length","push","id","name","username","picture","baseUrl","GET_NETWORK_ICON","setState","socialData","onUpdateData","addFacebookAccount","getFacebookDetails","pages","map","item","id_str","localStorage","getItem","console","log","display_name","avatar","client_key","addUserRights","handleYes","handleNo","onClickSocialConnect","Swal","imageUrl","imageHeight","imageWidth","title","CAPITALIZE_FIRST_LETTER","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","result","isConfirmed","setItem","getTwitterCode","flickrConnect","getYammerAuthUrl","tumblerConnect","getVimeoAuthUrl","getFbAuthUrl","tiktokAuthentication","url1","INSTA_CLIENT_ID","HOST_DOMAIN","window","open","url","addEventListener","this","removeEventListener","connectedAccount","className","ProfileImage","imageSize","symbolClass","profileUrl","provider","src","height","width","alt","GET_NETWORK_NAME","onClick","style","filter","opacity","Component"],"sourceRoot":""}