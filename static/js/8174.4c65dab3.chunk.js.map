{"version":3,"file":"static/js/8174.4c65dab3.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/Components/FilterAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport Select from 'react-select';\nimport { Accordion, Offcanvas, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { feedsFilter, tagsFilter, ugcStatusFilter, textFilter, postTypeFilter, resetFilter, collectionsFilter, networkFilter, postStatusFilter } from '../../../../Services/Actions/assetsActions'\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../Services/Utils/utils';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport CollectionThumb from '../../CommonComponents/CollectionThumb';\n\n\nclass FilterAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        isActiveAside: false,\n        feedData: [],\n        listTags: [],\n        tagString: [],\n        selectedOption: null,\n        networkList: null\n    };\n    onLoadFeedList = () => {\n        const { filterList } = this.props.feedData;\n        this.setState((prevState) => ({ ...prevState, feedData: filterList }));\n    }\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n    }\n    componentDidMount() {\n        var filterAside = document.getElementById(\"filter_aside\");\n        if (filterAside) {\n            filterAside.addEventListener(\"click\", this.toogleFilter);\n        }\n        this.onLoadFeedList()\n        this.feedNetworkList()\n    }\n    feedNetworkList = () => {\n        const { filterList } = this.props.feedData\n        const { feeds } = filterList\n        const { networks } = this.props\n        let networkConnectionId = []\n        networkConnectionId = feeds.map((item) => item.networkId)\n        networkConnectionId = [...new Set(networkConnectionId)]\n        if (networkConnectionId.includes(18)) { networkConnectionId.splice(networkConnectionId.indexOf(18), 1, 2) }\n        const networksList = networks.filter(network => networkConnectionId.includes(network.id))\n        this.setState({ networkList: networksList })\n    }\n    toogleFilter = () => {\n        this.setState({\n            isActiveAside: !this.state.isActiveAside,\n        })\n        setTimeout(() => {\n            var offcanvas = document.querySelector(\".offcanvas-backdrop\");\n            if (offcanvas) {\n                offcanvas.classList.add('filter-backdrop');\n            }\n        }, 100);\n    };\n    onClickToFeed = (feedId, name) => event => this.props.feedsFilter(feedId, name)\n    onClickToUgc = (status) => event => this.props.ugcStatusFilter(status)\n    onClickToPostType = (type) => event => this.props.postTypeFilter(type)\n    onClickToAssetType = (status) => event => this.props.postStatusFilter(status)\n    onClickToResetFilter = event => this.props.resetFilter()\n    onClickToCollection = (id, name) => event => this.props.collectionsFilter(id, name)\n    onClickToNetwork = (id, name) => event => this.props.networkFilter(id, name)\n    handleChange = (selectedOption) => {\n        if (selectedOption && Object.keys(selectedOption).length > 0) this.props.tagsFilter(selectedOption.value)\n    }\n    componentWillReceiveProps(nextProps) {\n        const { filterList } = nextProps.feedData;\n        if (filterList != this.state.feedData) this.setState((prevState) => ({ ...prevState, feedData: filterList }), () => setTimeout(() => this.feedNetworkList(), 100))\n    }\n\n    render() {\n        const { isActiveAside, feedData, listTags, networkList } = this.state\n        const { filterBody, collections, isCollection } = this.props\n\n        return <Offcanvas show={isActiveAside} placement={'end'} name={'end'} onHide={this.toogleFilter} className=\"filter_aside\">\n            <Offcanvas.Body>\n                <div className=\"d-flex align-items-center justify-content-between px-3 px-xxl-4 py-3 border-bottom\">\n                    <div className=\"fs-5 fw-medium\">Add Filter</div>\n                    <Button variant='link' className=\"text-decoration-none btn-icon btn-active-light btn-active-color-primary p-0 w-30px h-30px border-0\" onClick={this.toogleFilter}>\n                        <i className=\"ri-close-line icon-6\"></i>\n                    </Button>\n                </div>\n                {!isCollection ? <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Collections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                collections && collections.length > 0 ? collections.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between mb-xxl-3 mb-3\">\n                                        <label className=\"form-check flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.collection ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.collection).includes(String(item.id))} onClick={this.onClickToCollection(item.id, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{item.name}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <CollectionThumb symbolClasses={'symbol symbol-18 d-flex align-items-center justify-content-center flex-shrink-0 bg-light me-1'} iconClass={'me-0'} thumb={item.thumbnails} thumbName={item.name} />\n                                                    <span className=\"text-ellipsis\">{item.name}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.assets}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion> : null}\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Connections</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                feedData && Object.keys(feedData).length > 0 && feedData.feeds.length > 0 ? feedData.feeds.map((item) => {\n                                    return item.name ? <div key={item.feedId} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1 w-100 overflow-hidden\">\n                                            {filterBody.socialFeed ? <input className=\"form-check-input\" type=\"checkbox\" name={item.feedId} checked={Object.keys(filterBody.socialFeed).includes(String(item.feedId))} onClick={this.onClickToFeed(item.feedId, item.name)} /> : null}\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{ReactHtmlParser(item.name)}</Tooltip>}>\n                                                <span className=\"form-check-label d-flex fw-medium me-2 w-100 overflow-hidden\">\n                                                    <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.networkId)} icon-data={GET_NETWORK_NAME(item.networkId)} />\n                                                    <span className=\"text-ellipsis\">{ReactHtmlParser(item.name)}</span>\n                                                </span>\n                                            </OverlayTrigger>\n                                        </label>\n                                        <span className=\"badge text-muted border rounded-4 min-w-30px\">{item.count}</span>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Networks</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {\n                                networkList && networkList.length > 0 ? networkList.map((item) => {\n                                    return item.name ? <div key={item.id} className=\"d-flex align-items-start justify-content-between\">\n                                        <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                            {filterBody.networks ? <input className=\"form-check-input\" type=\"checkbox\" name={item.id} checked={Object.keys(filterBody.networks).includes(String(item.id))} onClick={this.onClickToNetwork(item.id, item.name)} /> : null}\n                                            <span className=\"form-check-label d-flex fw-medium me-2\">\n                                                <img className=\"img-fluid me-1\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(item.id)}.svg`)} height={18} width={18} alt={GET_NETWORK_NAME(item.id)} icon-data={GET_NETWORK_NAME(item.id)} />\n                                                {item.name}</span>\n                                        </label>\n                                    </div> : null\n                                }) : null\n                            }\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Tags</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 pt-1 pb-3\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <Select className='selectpicker selectpicker-sm w-100'\n                                    classNamePrefix=\"selectpicker\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}\n                                    options={listTags}\n                                />\n                            </div>\n                            {filterBody.postTags && Object.keys(filterBody.postTags).length > 0 ? <div className=\"d-flex w-100 flex-wrap w-100 pt-2 \">\n                                {\n                                    Object.keys(filterBody.postTags).map((tagItem, tagIndex) => <div key={tagItem} className=\"badge bg-secondary rounded-pill text-gray-800 border me-1 mb-1 px-2 d-flex align-items-center\" style={{ top: 0, maxWidth: '100%' }}>\n                                        <span className=\"text-break\" style={{ whiteSpace: 'normal' }}>{tagItem}</span>\n                                        <button className=\"btn btn-sm p-0 ms-1\" onClick={event => this.props.tagsFilter(tagItem)}>\n                                            <i className=\"ri-close-line icon-7\"></i>\n                                        </button>\n                                    </div>)\n                                }\n                            </div> : null}\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Post Type</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"image_type\" onClick={this.onClickToPostType(\"2,4\")} checked={Object.keys(filterBody.postType).includes(\"2,4\")} />\n                                    <span className=\"form-check-label fw-medium\">Image Only</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"video_type\" onClick={this.onClickToPostType(\"3,5\")} checked={Object.keys(filterBody.postType).includes(\"3,5\") ? true : false} />\n                                    <span className=\"form-check-label fw-medium\">Video Only</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Assets Type</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"visible_assets\" onClick={this.onClickToAssetType(\"1\")} checked={Object.keys(filterBody.status).includes(\"1\")} />\n                                    <span className=\"form-check-label fw-medium\"><i className=\"icon-6 me-1 ri-eye-line\"></i>Visible</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" id=\"hidden_assets\" onClick={this.onClickToAssetType(\"2\")} checked={Object.keys(filterBody.status).includes(\"2\")} />\n                                    <span className=\"form-check-label fw-medium\"><i className=\"icon-6 me-1 ri-eye-off-line\"></i>Hidden</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion className=\"border-bottom d-none\" flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">Other</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            {/* <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label\">Highlight Post</span>\n                                </label>\n                            </div> */}\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Pinned to top</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Recent</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" />\n                                    <span className=\"form-check-label fw-medium\">Retweets</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <Accordion flush>\n                    <Accordion.Item defaultactivekey=\"0\">\n                        <Accordion.Header><span className=\"text-uppercase fs-8 fw-medium\">UGC Rights</span></Accordion.Header>\n                        <Accordion.Body className=\"px-5 py-1\">\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"1\")} onClick={this.onClickToUgc(\"1\")} />\n                                    <span className=\"form-check-label fw-medium\">Pending Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"2\")} onClick={this.onClickToUgc(\"2\")} />\n                                    <span className=\"form-check-label fw-medium\">Approved Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"3\")} onClick={this.onClickToUgc(\"3\")} />\n                                    <span className=\"form-check-label fw-medium\">Rejected Post</span>\n                                </label>\n                            </div>\n                            <div className=\"d-flex align-items-start justify-content-between\">\n                                <label className=\"form-check mb-xxl-3 mb-3 flex-grow-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" checked={Object.keys(filterBody.ugcStatus).includes(\"4\")} onClick={this.onClickToUgc(\"4\")} />\n                                    <span className=\"form-check-label fw-medium\">Expired Post</span>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <div className=\"d-flex justify-content-center text-align-center flex-column w-100 px-4 pb-4\">\n                    {/* <button type=\"button\" className=\"btn btn-primary w-100 mb-1 d-none\">Filter</button> */}\n                    <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={this.onClickToResetFilter}>Reset results</button>\n                </div>\n            </Offcanvas.Body>\n        </Offcanvas>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        feedData: state.feedData,\n        filterBody: state.assets.filterBody,\n        networks: state.networks.networkData,\n        tagList: state.tags.tagList\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        feedsFilter: (refId, name) => dispatch(feedsFilter(refId, name)),\n        tagsFilter: (refId) => dispatch(tagsFilter(refId)),\n        ugcStatusFilter: (refId) => dispatch(ugcStatusFilter(refId)),\n        textFilter: (refId) => dispatch(textFilter(refId)),\n        postTypeFilter: (refId) => dispatch(postTypeFilter(refId)),\n        resetFilter: () => dispatch(resetFilter()),\n        collectionsFilter: (refId, name) => dispatch(collectionsFilter(refId, name)),\n        networkFilter: (refId, name) => dispatch(networkFilter(refId, name)),\n        postStatusFilter: (status) => dispatch(postStatusFilter(status))\n\n\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterAside);"],"names":["FilterAside","props","state","isActiveAside","feedData","listTags","tagString","selectedOption","networkList","onLoadFeedList","filterList","setState","prevState","feedNetworkList","feeds","networks","networkConnectionId","map","item","networkId","Set","includes","splice","indexOf","networksList","filter","network","id","toogleFilter","setTimeout","offcanvas","document","querySelector","classList","add","onClickToFeed","feedId","name","event","feedsFilter","onClickToUgc","status","ugcStatusFilter","onClickToPostType","type","postTypeFilter","onClickToAssetType","postStatusFilter","onClickToResetFilter","resetFilter","onClickToCollection","collectionsFilter","onClickToNetwork","networkFilter","handleChange","Object","keys","length","tagsFilter","value","tagList","this","push","label","filterAside","getElementById","addEventListener","nextProps","filterBody","collections","isCollection","show","placement","onHide","className","variant","onClick","flush","defaultactivekey","collection","checked","String","overlay","symbolClasses","iconClass","thumb","thumbnails","thumbName","assets","socialFeed","ReactHtmlParser","src","baseUrl","GET_NETWORK_ICON","height","width","alt","GET_NETWORK_NAME","count","classNamePrefix","onChange","options","postTags","tagItem","tagIndex","style","top","maxWidth","whiteSpace","postType","ugcStatus","Component","connect","networkData","tags","dispatch","refId","textFilter"],"sourceRoot":""}