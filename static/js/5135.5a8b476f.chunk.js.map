{"version":3,"file":"static/js/5135.5a8b476f.chunk.js","mappings":"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","sources":["Layouts/Main/Templates/TemplateAside/Components/Elements/Background.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { Accordion, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport $ from 'jquery';\r\nimport { Uppy } from \"@uppy/core\";\r\nimport Transloadit from \"@uppy/transloadit\";\r\nimport GoogleDrive from '@uppy/google-drive';\r\nimport Url from '@uppy/url';\r\nimport { DashboardModal } from '@uppy/react';\r\nconst ColorPicker = React.lazy(() => import('../../../../CommonComponents/ColorPicker'));\r\n\r\nconst uppyConfig = {\r\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\r\n    uppyBucket: 'cloud.taggbox.com',\r\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\r\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\r\n    companionUrl: 'https://test.taggbox.com'\r\n}\r\nclass Background extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\r\n            .use(Transloadit, {\r\n                target: '#a',\r\n                params: {\r\n                    auth: {\r\n                        key: uppyConfig.uppyKey\r\n                    },\r\n                    steps: {\r\n                        store: {\r\n                            robot: \"/wasabi/store\",\r\n                            bucket_region: \"us-west-1\",\r\n                            bucket: uppyConfig.uppyBucket,\r\n                            key: uppyConfig.uppyAwsKey,\r\n                            secret: uppyConfig.uppyAwsSecret,\r\n                            path: 'postimage/${file.id}'\r\n                        }\r\n                    }\r\n                },\r\n                waitForEncoding: true\r\n            })\r\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\r\n    }\r\n    state = {\r\n        backgroundModal: false\r\n    }\r\n    componentDidMount() {\r\n        var self = this;\r\n        this.uppy.on('transloadit:result', (stepName, result) => {\r\n            self.props.onClickTouploadImage(`https://cloud.taggbox.com/postimage/${result.id}`, result.id, () => {\r\n                setTimeout(() => {\r\n                    this.uppy.cancelAll()\r\n                    this.setState({ backgroundModal: false })\r\n                }, 300)\r\n            })\r\n        })\r\n    }\r\n    onBackgroundClose = event => {\r\n        this.uppy.cancelAll()\r\n        this.setState({ backgroundModal: false })\r\n    }\r\n    onBackgroundOpen = event => {\r\n        this.setState({ backgroundModal: true }, () => {\r\n            $(\".uppy-Dashboard-close\").click(() => {\r\n                this.uppy.cancelAll()\r\n                this.setState({ backgroundModal: false })\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const { onClickEnableBackground, onClickBackgroundColor, background, backgroundImageRemove } = this.props\r\n        const { backgroundModal } = this.state\r\n        return <>\r\n\r\n            <Accordion.Item eventKey=\"2\" className=\"pb-3\">\r\n                <Accordion.Header className=\"w-100\">\r\n                    <span className=\"fs-9 fw-medium\">Background</span>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"border rounded-1 mt-1 p-2\">\r\n                    <label className=\"form-check form-switch py-2 align-items-center justify-content-between border-bottom h-40px py-1\">\r\n                        <span className=\"form-check-label ps-0 fs-9 fw-medium text-gray-800\">Enable Background</span>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" name=\"autoplayVideos\" checked={background.status} onChange={onClickEnableBackground} />\r\n                    </label>\r\n                    <label className=\"d-flex align-items-center justify-content-between border-bottom h-40px py-1\">\r\n                        <span className=\"ms-0 fs-9 fw-medium\">Background Color</span>\r\n                        <Suspense fallback={<></>}>\r\n                            <ColorPicker color={background.color} onChangeColor={onClickBackgroundColor} />\r\n                        </Suspense>\r\n                    </label>\r\n                    <div className=\"d-flex align-items-start justify-content-between flex-column py-1\">\r\n                        <p className=\"fs-9 fw-medium text-start mt-2\">Upload Background Image</p>\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm w-100 mb-2\" onClick={this.onBackgroundOpen}>Attach Image</button>\r\n                        {background.image ? <div className=\"card card-custom w-100 rounded-1\">\r\n                            <div className=\"card-body d-flex flex-column p-1\">\r\n                                <div className=\"position-relative d-flex align-items-center cursor-pointer\">\r\n                                    <div className=\"position-relative rounded-1 bg-light overflow-hidden w-100\" style={{ paddingBottom: '66%' }}>\r\n                                        <img className=\"object-center-contain position-absolute\" loading=\"lazy\" src={background.image} height={500} width={300} alt={'suit'} />\r\n                                    </div>\r\n                                    <div className=\"removeBanner position-absolute end-0 top-0 pt-2 pe-2\">\r\n                                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Edit</Tooltip>}>\r\n                                                <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px me-2\" onClick={this.onBackgroundOpen}>\r\n                                                    <span className=\"svg-icon svg-icon-6 me-0\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                            <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                </button>\r\n                                            </OverlayTrigger>\r\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Remove</Tooltip>}>\r\n                                                <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px\" onClick={backgroundImageRemove}>\r\n                                                    <span className=\"svg-icon svg-icon-6 me-0\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n                                                            <path d=\"M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5zM6 6v14h12V6H6zm3 3h2v8H9V9zm4 0h2v8h-2V9z\" fill=\"currentColor\" />\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                </button>\r\n                                            </OverlayTrigger>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> : null}\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n            {\r\n                backgroundModal ? <DashboardModal\r\n                    animateOpenClose={true}\r\n                    proudlyDisplayPoweredByUppy={false}\r\n                    inline={false}\r\n                    showProgressDetails={true}\r\n                    height={750}\r\n                    browserBackButtonClose={true}\r\n                    showRemoveButtonAfterComplete={false}\r\n                    uppy={this.uppy}\r\n                    open={true}\r\n                    onRequestCloseModal={this.onBackgroundClose}\r\n                    closeAfterFinish={true}\r\n                    plugins={[]}\r\n                /> : null\r\n            }\r\n        </>\r\n    }\r\n\r\n}\r\nexport default Background"],"names":["ColorPicker","React","uppyConfig","Background","props","state","backgroundModal","onBackgroundClose","event","uppy","cancelAll","setState","onBackgroundOpen","$","click","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","target","params","auth","key","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","GoogleDrive","companionUrl","Url","self","this","on","stepName","result","onClickTouploadImage","id","setTimeout","onClickEnableBackground","onClickBackgroundColor","background","backgroundImageRemove","eventKey","className","type","name","checked","status","onChange","Suspense","fallback","color","onChangeColor","onClick","image","style","paddingBottom","loading","src","height","width","alt","placement","overlay","xmlns","viewBox","fill","d","animateOpenClose","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","open","onRequestCloseModal","closeAfterFinish","plugins","Component"],"sourceRoot":""}